(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    316780,       6227]
NotebookOptionsPosition[    314563,       6182]
NotebookOutlinePosition[    314959,       6198]
CellTagsIndexPosition[    314916,       6195]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[{
 StyleBox["Goal: ",
  FontWeight->"Bold"],
 " Use the previously acquired universal indictor training data to infer pH \
in amphiphile solutions with unknown pH."
}], "Text",
 CellChangeTimes->{{3.899307587244104*^9, 
  3.8993076133366337`*^9}},ExpressionUUID->"6746b2db-ce59-4532-9ccb-\
7f41376af6ec"],

Cell[CellGroupData[{

Cell["Import Training Data", "Section",
 CellChangeTimes->{{3.8986865423033247`*^9, 3.898686544423237*^9}, {
  3.899307403570964*^9, 
  3.899307406088863*^9}},ExpressionUUID->"1b54fdaf-4917-4afa-b88f-\
b63e613a43b5"],

Cell["\<\

This is essentially identical to the data loading in 2023.07.20_ \
expanded_dataset.nb

Use a local copy of the data provided by Christelle Ekosso on 20 July 2023, \
via Slack/Google Drive;
\
\>", "Text",
 CellChangeTimes->{{3.8987016484618073`*^9, 3.898701653997036*^9}, {
  3.898701711198078*^9, 3.8987017340766897`*^9}, {3.898702092249419*^9, 
  3.898702093761853*^9}, {3.8989617414761353`*^9, 3.898961747658141*^9}, {
  3.899284622871222*^9, 3.899284623073865*^9}, {3.899367917611116*^9, 
  3.8993679441810493`*^9}},ExpressionUUID->"8d906bdd-6aa7-499b-ab22-\
da1ab19d8e53"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SeedRandom", "[", "1841", "]"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"set", " ", "a", " ", "random", " ", "seed", " ", "for", " ", 
    RowBox[{"training", "/", "test"}], " ", "set", " ", "generation", " ", 
    "for", " ", "replicability"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "@", 
   RowBox[{"NotebookDirectory", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "\"\<src/platereader.wl\>\""}]}], "Input",
 CellChangeTimes->{{3.898684411303891*^9, 3.898684432201079*^9}, {
  3.8987018813207407`*^9, 3.898701896012442*^9}},
 CellLabel->
  "In[305]:=",ExpressionUUID->"a08c56d9-79fa-41ab-a610-d1c4e9d9b8e7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "some", " ", "trickiness", " ", "to", " ", "merge", " ", "the", " ", 
     "files", " ", "provided", " ", "in", " ", "an", " ", "appropriate", " ", 
     "way"}], "..."}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"spectra", "=", 
     RowBox[{"With", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"sortedPlateFileNames", " ", "=", 
         RowBox[{
          RowBox[{"SortBy", "[", 
           RowBox[{
            RowBox[{"StringTake", "[", 
             RowBox[{"#", ",", 
              RowBox[{"-", "10"}]}], "]"}], "&"}], "]"}], "@", 
          RowBox[{
          "FileNames", "[", "\"\<data/2023_07_20_PH_Indicator/*.txt\>\"", 
           "]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Normal", "@", 
        RowBox[{
         RowBox[{"Map", "[", "Flatten", "]"}], "@", 
         RowBox[{
          RowBox[{"Merge", "[", "Join", "]"}], "@", 
          RowBox[{
           RowBox[{"Map", "[", "importPlateReaderFile", "]"}], "@", 
           "sortedPlateFileNames"}]}]}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"measuredpH", " ", "=", " ", 
     RowBox[{"With", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"dataRows", "=", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"4", ",", "11"}], "]"}], ",", 
           RowBox[{"Range", "[", 
            RowBox[{"16", ",", "23"}], "]"}], ",", 
           RowBox[{"Range", "[", 
            RowBox[{"27", ",", "34"}], "]"}], ",", 
           RowBox[{"Range", "[", 
            RowBox[{"38", ",", "45"}], "]"}], ",", 
           RowBox[{"Range", "[", 
            RowBox[{"49", ",", "56"}], "]"}], ",", 
           RowBox[{"Range", "[", 
            RowBox[{"61", ",", "68"}], "]"}]}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Import", "[", "\[IndentingNewLine]", 
         RowBox[{
         "\"\<data/2023_07_20_PH_Indicator/20230720 pH Indicator \
Plates.xlsx\>\"", ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"\"\<Data\>\"", ",", "2", ",", "dataRows", ",", 
            RowBox[{"2", ";;", "13"}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"\"\<EmptyField\>\"", "->", 
           RowBox[{"Missing", " ", "[", "]"}]}]}], "]"}], "//", "Flatten"}]}],
       "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "handle", " ", "an", " ", "extraneous", " ", "sample", " ", "in", " ", 
      "Plate", " ", "4"}], ",", " ", 
     RowBox[{
      RowBox[{
      "as", " ", "noted", " ", "in", " ", "the", " ", "data", " ", 
       "integrity", " ", "log"}], ";", " ", 
      RowBox[{
      "this", " ", "throws", " ", "off", " ", "our", " ", "analysis", " ", 
       "of", " ", "the", " ", "triplicate", " ", "measurement", " ", 
       "statistics"}], ";", " ", 
      RowBox[{
      "for", " ", "simplicity", " ", "we", " ", "will", " ", "exclude", " ", 
       "it", " ", "from", " ", "all", " ", "processes"}]}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"measuredpH", " ", "=", 
     RowBox[{"measuredpH", "//", " ", 
      RowBox[{"With", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"plate", " ", "=", " ", "4"}], ",", " ", 
          RowBox[{"row", " ", "=", " ", "6"}], ",", " ", 
          RowBox[{"col", " ", "=", " ", "10"}]}], " ", 
         RowBox[{"(*", 
          RowBox[{"4", ":", "F10"}], "*)"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"With", " ", "[", " ", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"position", " ", "=", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"plate", "-", "1"}], ")"}], "*", "96"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"row", "-", "1"}], ")"}], "*", "12"}], "+", "col"}]}], 
           "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"ReplacePart", "[", " ", 
           RowBox[{"position", "->", 
            RowBox[{"Missing", "[", "]"}]}], "]"}]}], "]"}]}], "]"}]}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"wavelengths", "=", 
     RowBox[{"spectra", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8989628919958467`*^9, 3.8989629181729603`*^9}, {
  3.898963198488193*^9, 3.8989632430499496`*^9}, {3.898963529810301*^9, 
  3.898963618379635*^9}, {3.898963720337926*^9, 3.89896375169909*^9}, {
  3.898965594718377*^9, 3.898965606950485*^9}, {3.898970421531712*^9, 
  3.8989704549909983`*^9}, {3.8992818870277987`*^9, 3.899281905263413*^9}, {
  3.899281950149136*^9, 3.899281954496604*^9}, {3.8992820005984793`*^9, 
  3.899282018441965*^9}, {3.899282896566366*^9, 3.89928291158316*^9}, {
  3.899284232131193*^9, 3.899284261869452*^9}, {3.8992843531135483`*^9, 
  3.8992844782763243`*^9}, {3.899284524782825*^9, 3.8992845794827957`*^9}},
 CellLabel->
  "In[358]:=",ExpressionUUID->"065998da-3c3a-42e8-acbb-c0c5b6d5ca80"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "get", " ", "data", " ", "into", " ", "a", " ", "list", " ", "of", " ", 
     RowBox[{"{", "spectra", "}"}]}], "->", " ", 
    RowBox[{"pH", " ", "values"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"normalizeSpectrum", "[", 
     RowBox[{"l_", "?", "VectorQ"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"Normalize", "[", 
       RowBox[{"#", ",", "Total"}], "]"}], "&"}], "@", 
     RowBox[{"(", 
      RowBox[{"l", "-", 
       RowBox[{"Min", "[", "l", "]"}]}], ")"}]}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"output", "[", 
      RowBox[{"spectrum_List", ",", 
       RowBox[{"pH_", "?", "NumericQ"}]}], "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"normalizeSpectrum", "[", "spectrum", "]"}], "->", "pH"}], 
      ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"output", "[", 
      RowBox[{"_", ",", "_"}], "]"}], ":=", "Nothing"}], ";"}], "  ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "if", " ", "there", " ", "is", " ", "not", " ", "a", " ", "Numeric", " ",
       "pH", " ", "value"}], ",", " ", 
     RowBox[{
     "then", " ", "drop", " ", "this", " ", "entry", " ", "from", " ", "both",
       " ", "sets"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
      "in", " ", "the", " ", "order", " ", "they", " ", "are", " ", 
       "presented"}], "..."}], "no", " ", "need", " ", "to", " ", "sort", " ",
      "by", " ", "pH"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"data", " ", "=", 
     RowBox[{"MapThread", "[", 
      RowBox[{"output", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"spectra", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2", ",", "All"}], "]"}], "]"}], "]"}], ",", 
         "measuredpH"}], "}"}]}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.898685343319233*^9, 3.898685366684609*^9}, {
   3.898685412222457*^9, 3.898685469798463*^9}, {3.898685503166106*^9, 
   3.898685614797386*^9}, {3.8986856500850067`*^9, 3.8986856618776627`*^9}, {
   3.8989636284228487`*^9, 3.898963703485956*^9}, {3.8989637589391937`*^9, 
   3.898963784135991*^9}, {3.898963855146412*^9, 3.8989640044688873`*^9}, {
   3.8989640534863462`*^9, 3.898964079677826*^9}, {3.898964214537806*^9, 
   3.898964226743764*^9}, {3.898964281145199*^9, 3.89896432878685*^9}, 
   3.898965591243697*^9, {3.898965637273336*^9, 3.8989656433779497`*^9}, {
   3.898970578178082*^9, 3.898970594838502*^9}, {3.899307499848876*^9, 
   3.899307513213685*^9}, 
   3.899367965754849*^9},ExpressionUUID->"1adbe0e0-378f-44dd-a6a3-\
4eb6c7d1c4c6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Train Model ", "Section",
 CellChangeTimes->{{3.899307435805265*^9, 
  3.899307437237192*^9}},ExpressionUUID->"15d4a5f6-3df4-4f63-8c2e-\
0a160eda9848"],

Cell["\<\
Based on previous work (2023.07.20_expanded_dataset.nb), Gradient Boosted \
Trees trained on the complete (non-dimensional reduced) dataset had the best \
performance for predicting pH.\
\>", "Text",
 CellChangeTimes->{{3.89930745098442*^9, 3.89930748085996*^9}, {
  3.89936797603583*^9, 
  3.899367984153681*^9}},ExpressionUUID->"7ec737a1-1cd5-4e33-b99a-\
cb79f98ec93d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"model", " ", "=", " ", 
    RowBox[{"Predict", "[", 
     RowBox[{"data", ",", "\[IndentingNewLine]", 
      RowBox[{"Method", "->", "\"\<GradientBoostedTrees\>\""}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PerformanceGoal", "->", "\"\<Quality\>\""}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Information", "[", "model", "]"}]}], "Input",
 CellChangeTimes->{{3.899307487180723*^9, 3.899307487948004*^9}, {
  3.899307527984346*^9, 3.899307544022747*^9}, {3.899307661614883*^9, 
  3.899307667448451*^9}, {3.8993077069452353`*^9, 3.899307714989511*^9}},
 CellLabel->
  "In[362]:=",ExpressionUUID->"9bd1c0db-2a58-41c1-99a5-89a003823eef"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   StyleBox[
    FrameBox[GridBox[{
       {
        ItemBox[
         FrameBox[
          StyleBox["\<\"Predictor information\"\>", "SuggestionsBarText",
           StripOnInput->False,
           FontSize->12],
          FrameMargins->{{10, 5}, {-4, 2}},
          FrameStyle->None,
          StripOnInput->False],
         Alignment->{Left, Bottom},
         Background->RGBColor[0.96, 0.96, 0.96],
         Frame->{{False, False}, {True, False}},
         FrameStyle->Opacity[0.1],
         ItemSize->{Automatic, 1},
         StripOnInput->False]},
       {
        ItemBox[
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Data type"], 
                   TextCell["Data type"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{
                 InterpretationBox[
                  Cell["NumericalVector"], 
                  TextCell["NumericalVector"]], 
                 StyleBox[
                  TemplateBox[{"\" (\"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "41"}, 
                    "RowWithSeparators"], "\")\""}, "RowDefault"], 
                  GrayLevel[0.5], StripOnInput -> False]},
                "RowDefault"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Standard deviation"], 
                   TextCell["Standard deviation"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 TemplateBox[{"0.6098750953682258169`3.", 
                   StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.3232910779044754768`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                  "RowDefault"],
                 TemplateBox[{"\"95% confidence interval: [\"", 
                   RowBox[{"-", "0.0367070604407251366`3."}], "\", \"", 
                   "1.2564572511771767704`3.", "\"]\""}, "RowDefault"],
                 TooltipStyle->{}],
                Annotation[#, 
                 
                 Row[{"95% confidence interval: [", -0.0367070604407251366`3.,
                    ", ", 1.2564572511771767704`3., "]"}], "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Method"], 
                   TextCell["Method"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 
                 InterpretationBox[Cell[
                  "GradientBoostedTrees",ExpressionUUID->
                   "76063603-fbe3-414f-9d0f-b9028240973a"],
                  TextCell["GradientBoostedTrees"]],
                 StyleBox[
                  TagBox[
                   
                   GridBox[{{"\"BoostingMethod\"", "\"Gradient\""}, {
                    "MaxTrainingRounds", "50"}, {
                    "\"LeavesNumber\"", "1023"}, {
                    "\"LearningRate\"", "0.1`"}, {"\"MaxDepth\"", "6"}, {
                    "\"LeafSize\"", "15"}, {"\"L1Regularization\"", "0"}, {
                    "\"L2Regularization\"", "0"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, "Rows" -> {{None}}}, 
                    GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{1}}}, 
                    FrameStyle -> GrayLevel[0.84]], "Grid"], FontFamily -> 
                  "Verdana", StripOnInput -> False]],
                Annotation[#, 
                 Style[
                  
                  Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 1023}, {
                    "LearningRate", 0.1}, {"MaxDepth", 6}, {"LeafSize", 15}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                   Alignment -> Left, Frame -> All, FrameStyle -> 
                   GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"], 
                 "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Single evaluation time"], 
                   TextCell["Single evaluation time"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{"5.95`", 
                 
                 RowBox[{
                  "\"ms\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]",
                    "\"example\""}], "milliseconds per example", 
                 FractionBox["\"Milliseconds\"", "\"Examples\""]},
                "Quantity"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Batch evaluation speed"], 
                   TextCell["Batch evaluation speed"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{"21.8`", 
                 
                 RowBox[{
                  "\"examples\"", "\[InvisibleSpace]", "\"/\"", 
                   "\[InvisibleSpace]", "\"ms\""}], 
                 "examples per millisecond", 
                 FractionBox["\"Examples\"", "\"Milliseconds\""]},
                "Quantity"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  TagBox[
                   TooltipBox[
                    InterpretationBox[
                    Cell["Loss"], 
                    TextCell["Loss"]], "\"Mean cross entropy\"", TooltipStyle -> 
                    "TextStyling"], 
                   Annotation[#, "Mean cross entropy", "Tooltip"]& ], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 TemplateBox[{"2.7384724544676988245`3.", 
                   StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "1.3706221126715629755`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                  "RowDefault"],
                 TemplateBox[{"\"95% confidence interval: [\"", 
                   RowBox[{"-", "0.0027717708754271264`3."}], "\", \"", 
                   "5.4797166798108243313`3.", "\"]\""}, "RowDefault"],
                 TooltipStyle->{}],
                Annotation[#, 
                 
                 Row[{"95% confidence interval: [", -0.0027717708754271264`3.,
                    ", ", 5.4797166798108243313`3., "]"}], "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Model memory"], 
                   TextCell["Model memory"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{"419.`", "\"kB\"", "kilobytes", "\"Kilobytes\""},
                "Quantity"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Training examples used"], 
                   TextCell["Training examples used"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{"393", "\"examples\"", "examples", "\"Examples\""},
                "Quantity"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Training time"], 
                   TextCell["Training time"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{"4.44`", "\"s\"", "seconds", "\"Seconds\""},
                "Quantity"]},
              {
               ItemBox[
                
                DynamicModuleBox[{
                 MachineLearning`file12Panel`PackagePrivate`pos$$ = 2}, 
                 DynamicBox[ToBoxes[
                   Show[
                    Part[{
                    Graphics[{{{{}, 
                    
                    GraphicsComplex[{{2.302585092994046, 
                    1.0863376844079995`}, {
                    4.0943445622221, -0.444856299666364}, {
                    5.749392985908253, -1.2497235311453136`}, {
                    2.302585092994046, 1.1529332739577185`}, {
                    4.0943445622221, -0.026944521285440705`}, {
                    5.749392985908253, -0.06917198759224628}, {
                    2.302585092994046, 1.0863376844079995`}, {
                    4.0943445622221, -0.444856299666364}, {
                    5.749392985908253, -1.2497235311453136`}, {
                    2.302585092994046, 1.1529332739577185`}, {
                    4.0943445622221, -0.026944521285440705`}, {
                    5.749392985908253, -0.06917198759224628}}, {{{}, {}, {}, \
{}, {}, {}, {
                    EdgeForm[], 
                    Directive[
                    Opacity[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    GraphicsGroup[{
                    
                    Polygon[{{1, 2, 3, 6, 5, 
                    4}}]}]}, {}, {}, {}}, {{}, {}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    Line[{1, 2, 3}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    Line[{4, 5, 6}]}}}], {{}, {}}}}, 
                    
                    GraphicsComplex[{{2.302585092994046, 
                    1.1201897483389598`}, {
                    4.0943445622221, -0.2142261713676338}, {
                    5.749392985908253, -0.4945011044727505}, {
                    2.302585092994046, 1.1201897483389598`}, {
                    4.0943445622221, -0.2142261713676338}, {
                    5.749392985908253, -0.4945011044727505}, {
                    2.302585092994046, 1.1201897483389598`}, {
                    4.0943445622221, -0.2142261713676338}, {
                    5.749392985908253, -0.4945011044727505}}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    Line[{4, 5, 6}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    Point[{1, 2, 3, 7, 8, 9}]}, {}}, {
                    Tooltip[{
                    Opacity[0.], 
                    Point[1]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 110}, {
                    "LearningRate", 0.01}, {"MaxDepth", 6}, {
                    "LeafSize", 15}, {"L1Regularization", 0}, {
                    "L2Regularization", 0}}, Alignment -> Left, Frame -> All, 
                    FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Opacity[0.], 
                    Point[2]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 110}, {
                    "LearningRate", 0.1}, {"MaxDepth", 6}, {"LeafSize", 15}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Opacity[0.], 
                    Point[3]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 1023}, {
                    "LearningRate", 0.1}, {"MaxDepth", 6}, {"LeafSize", 15}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Opacity[0.], 
                    Point[7]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 110}, {
                    "LearningRate", 0.01}, {"MaxDepth", 6}, {
                    "LeafSize", 15}, {"L1Regularization", 0}, {
                    "L2Regularization", 0}}, Alignment -> Left, Frame -> All, 
                    FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Opacity[0.], 
                    Point[8]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 110}, {
                    "LearningRate", 0.1}, {"MaxDepth", 6}, {"LeafSize", 15}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Opacity[0.], 
                    Point[9]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 1023}, {
                    "LearningRate", 0.1}, {"MaxDepth", 6}, {"LeafSize", 15}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]]}}], {{}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.1886558658671644`, -0.6208598271240837}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    HoldForm["training examples used"], None}}, 
                    FrameTicks -> {{
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], {}}, {
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> GrayLevel[0.5, 0.2], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "DefaultPlotStyle" -> {
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02],
                     "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
                    Scaled[0.05], "OptimizePlotMarkers" -> True, 
                    "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{2.2651236183116463`, 
                    5.973809611869261}, {-0.6208598271240837, 
                    1.1201897483389598`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.01], 
                    Scaled[0.01]}, {
                    Scaled[0.02], 
                    Scaled[0.08090169943749476]}}, Ticks -> {
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], 
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0]}}], 
                    Graphics[{{{{}, 
                    
                    GraphicsComplex[{{2.302585092994046, 
                    1.1481365880235637`}, {
                    4.0943445622221, -0.23836922890723453`}, {
                    5.749392985908253, 0.3132404139439917}, {
                    2.302585092994046, 1.1527232547005006`}, {4.0943445622221,
                     0.3089735224861318}, {5.749392985908253, 
                    1.4132027042724251`}, {2.302585092994046, 
                    1.1481365880235637`}, {
                    4.0943445622221, -0.23836922890723453`}, {
                    5.749392985908253, 0.3132404139439917}, {
                    2.302585092994046, 1.1527232547005006`}, {4.0943445622221,
                     0.3089735224861318}, {5.749392985908253, 
                    1.4132027042724251`}}, {{{}, {}, {}, {}, {}, {}, {
                    EdgeForm[], 
                    Directive[
                    Opacity[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    GraphicsGroup[{
                    
                    Polygon[{{1, 2, 3, 6, 5, 
                    4}}]}]}, {}, {}, {}}, {{}, {}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    Line[{1, 2, 3}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    Line[{4, 5, 6}]}}}], {{}, {}}}}, 
                    
                    GraphicsComplex[{{2.302585092994046, 
                    1.1504325510486277`}, {4.0943445622221, 
                    0.07229183537449632}, {5.749392985908253, 
                    1.0074002665705282`}, {2.302585092994046, 
                    1.1504325510486277`}, {4.0943445622221, 
                    0.07229183537449632}, {5.749392985908253, 
                    1.0074002665705282`}, {2.302585092994046, 
                    1.1504325510486277`}, {4.0943445622221, 
                    0.07229183537449632}, {5.749392985908253, 
                    1.0074002665705282`}}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    Line[{4, 5, 6}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    Point[{1, 2, 3, 7, 8, 9}]}, {}}, {
                    Tooltip[{
                    Opacity[0.], 
                    Point[1]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 110}, {
                    "LearningRate", 0.01}, {"MaxDepth", 6}, {
                    "LeafSize", 15}, {"L1Regularization", 0}, {
                    "L2Regularization", 0}}, Alignment -> Left, Frame -> All, 
                    FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Opacity[0.], 
                    Point[2]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 110}, {
                    "LearningRate", 0.1}, {"MaxDepth", 6}, {"LeafSize", 15}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Opacity[0.], 
                    Point[3]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 1023}, {
                    "LearningRate", 0.1}, {"MaxDepth", 6}, {"LeafSize", 15}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Opacity[0.], 
                    Point[7]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 110}, {
                    "LearningRate", 0.01}, {"MaxDepth", 6}, {
                    "LeafSize", 15}, {"L1Regularization", 0}, {
                    "L2Regularization", 0}}, Alignment -> Left, Frame -> All, 
                    FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Opacity[0.], 
                    Point[8]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 110}, {
                    "LearningRate", 0.1}, {"MaxDepth", 6}, {"LeafSize", 15}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Opacity[0.], 
                    Point[9]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 1023}, {
                    "LearningRate", 0.1}, {"MaxDepth", 6}, {"LeafSize", 15}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]]}}], {{}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {
                    2.1886558658671644`, -0.012078794107768423`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    HoldForm["training examples used"], None}}, 
                    FrameTicks -> {{
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], {}}, {
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> GrayLevel[0.5, 0.2], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "DefaultPlotStyle" -> {
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02],
                     "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
                    Scaled[0.05], "OptimizePlotMarkers" -> True, 
                    "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{2.2651236183116463`, 
                    5.973809611869261}, {-0.012078794107768423`, 
                    1.1504325510486277`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.01], 
                    Scaled[0.01]}, {
                    Scaled[0.02], 
                    Scaled[0.08090169943749476]}}, Ticks -> {
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], 
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0]}}], 
                    Graphics[{{{{{Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.657406865064797, -0.38016129257105685`, 
                    0.2500353494848524], 
                    Opacity[0.21465251111098735`]], {}, {
                    
                    Line[{{2.302585092994046, 1.1481365880235637`}, {
                    2.302585092994046, 1.1504325510486277`}}], 
                    
                    Line[{{2.302585092994046, 1.1504325510486277`}, {
                    2.302585092994046, 1.1527232547005006`}}]}}}, {{
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.6524488022956049, -0.36879846403874234`, 
                    0.17851453096733916`], 
                    Opacity[0.22415790673785482`]], {}, {
                    
                    Line[{{2.302585092994046, 1.1483628871251303`}, {
                    2.302585092994046, 1.150429776717835}}], 
                    
                    Line[{{2.302585092994046, 1.150429776717835}, {
                    2.302585092994046, 1.152492403088047}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.6524488022956049, -0.36879846403874234`, 
                    0.17851453096733916`], 
                    Opacity[0.22415790673785482`]], {}, {
                    
                    Line[{{4.0943445622221, 1.0156545269568344`}, {
                    4.0943445622221, 1.0203246612562846`}}], 
                    
                    Line[{{4.0943445622221, 1.0203246612562846`}, {
                    4.0943445622221, 1.024973086745148}}]}}}, {{
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.6400536453726247, -0.340391392707956, \
-0.000287515326443874], 
                    Opacity[0.20888719723059385`]], {}, {
                    
                    Line[{{2.302585092994046, 1.1481365880235637`}, {
                    2.302585092994046, 1.1504325510486277`}}], 
                    
                    Line[{{2.302585092994046, 1.1504325510486277`}, {
                    2.302585092994046, 1.1527232547005006`}}]}}}, {{
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.6673229906031811, -0.40288694963568594`, 
                    0.39307698651987877`], 
                    Opacity[0.23982965469429118`]], {}, {
                    
                    Line[{{2.302585092994046, 1.1481365880235637`}, {
                    2.302585092994046, 1.1504325510486277`}}], 
                    
                    Line[{{2.302585092994046, 1.1504325510486277`}, {
                    2.302585092994046, 1.1527232547005006`}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.6673229906031811, -0.40288694963568594`, 
                    0.39307698651987877`], 
                    Opacity[0.23982965469429118`]], {}, {
                    
                    Line[{{4.0943445622221, 1.0133346742074938`}, {
                    4.0943445622221, 1.0199471250065018`}}], 
                    
                    Line[{{4.0943445622221, 1.0199471250065018`}, {
                    4.0943445622221, 1.0265161383706083`}}]}}}, {{
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.6474907395264128, -0.3574356355064278, 
                    0.10699371244982595`], 
                    Opacity[0.2656679988991191]], {}, {
                    
                    Line[{{2.302585092994046, 1.1481365880235637`}, {
                    2.302585092994046, 1.1504325510486277`}}], 
                    
                    Line[{{2.302585092994046, 1.1504325510486277`}, {
                    2.302585092994046, 1.1527232547005006`}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.6474907395264128, -0.3574356355064278, 
                    0.10699371244982595`], 
                    Opacity[0.2656679988991191]], {}, {
                    
                    Line[{{4.0943445622221, 1.0161608142707812`}, {
                    4.0943445622221, 1.0197593287688662`}}], 
                    
                    Line[{{4.0943445622221, 1.0197593287688662`}, {
                    4.0943445622221, 1.0233449403777186`}}]}}}, {{
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.6425326767572207, -0.34607280697411325`, 
                    0.03547289393231273], 
                    Opacity[0.3082682265892902]], {}, {
                    Line[{{2.302585092994046, 1.1481365880235637`}, {
                    2.302585092994046, 1.1504325510486277`}}], 
                    
                    Line[{{2.302585092994046, 1.1504325510486277`}, {
                    2.302585092994046, 1.1527232547005006`}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.6425326767572207, -0.34607280697411325`, 
                    0.03547289393231273], 
                    Opacity[0.3082682265892902]], {}, {
                    
                    Line[{{4.0943445622221, 0.8470135383312342}, {
                    4.0943445622221, 0.8526304565949052}}], 
                    
                    Line[{{4.0943445622221, 0.8526304565949052}, {
                    4.0943445622221, 0.8582160012288841}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.6425326767572207, -0.34607280697411325`, 
                    0.03547289393231273], 
                    Opacity[0.3082682265892902]], {}, {
                    
                    Line[{{5.749392985908253, 0.6975816887825004}, {
                    5.749392985908253, 0.7256071754652762}}], 
                    
                    Line[{{5.749392985908253, 0.7256071754652762}, {
                    5.749392985908253, 0.7528685988457119}}]}}}, {{
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.6375746139880286, -0.33470997844179873`, \
-0.03604792458520048], 
                    Opacity[0.3785041281187439]], {}, {
                    
                    Line[{{4.0943445622221, 1.0161807534763774`}, {
                    4.0943445622221, 1.0199406243462728`}}], 
                    
                    Line[{{4.0943445622221, 1.0199406243462728`}, {
                    4.0943445622221, 1.0236864115235464`}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.6375746139880286, -0.33470997844179873`, \
-0.03604792458520048], 
                    Opacity[0.3785041281187439]], {}, {
                    
                    Line[{{5.749392985908253, 0.44101976458780634`}, {
                    5.749392985908253, 0.48791371825089014`}}], 
                    
                    Line[{{5.749392985908253, 0.48791371825089014`}, {
                    5.749392985908253, 0.5327067804229835}}]}}}, {{
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.662364927833989, -0.3915241211033714, 
                    0.3215561680023656], 
                    Opacity[0.4943035529371539]], {}, {
                    
                    Line[{{4.0943445622221, 1.0156277021679012`}, {
                    4.0943445622221, 1.020298775466869}}], 
                    
                    Line[{{4.0943445622221, 1.020298775466869}, {
                    4.0943445622221, 1.0249481312449005`}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.662364927833989, -0.3915241211033714, 
                    0.3215561680023656], 
                    Opacity[0.4943035529371539]], {}, {
                    
                    Line[{{5.749392985908253, 0.05784039362287922}, {
                    5.749392985908253, 0.1969504403269583}}], 
                    
                    Line[{{5.749392985908253, 0.1969504403269583}, {
                    5.749392985908253, 0.3190510148717763}}]}}}, {{
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.6350955826034326, -0.32902856417564147`, \
-0.07180833384395709], 
                    Opacity[1.]], {}, {
                    
                    Line[{{2.302585092994046, 1.1481365880235637`}, {
                    2.302585092994046, 1.1504325510486277`}}], 
                    
                    Line[{{2.302585092994046, 1.1504325510486277`}, {
                    2.302585092994046, 1.1527232547005006`}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.6350955826034326, -0.32902856417564147`, \
-0.07180833384395709], 
                    Opacity[1.]], {}, {
                    
                    Line[{{4.0943445622221, -0.23836922890723453`}, {
                    4.0943445622221, 0.07229183537449632}}], 
                    
                    Line[{{4.0943445622221, 0.07229183537449632}, {
                    4.0943445622221, 0.3089735224861318}}]}}}, {{
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.6326165512188365, -0.3233471499094842, \
-0.1075687431027137], 
                    Opacity[0.6852245277701068]], {}, {
                    Line[{{2.302585092994046, 1.1477257603762818`}, {
                    2.302585092994046, 1.1505532821438782`}}], 
                    
                    Line[{{2.302585092994046, 1.1505532821438782`}, {
                    2.302585092994046, 1.153372831568804}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.6326165512188365, -0.3233471499094842, \
-0.1075687431027137], 
                    Opacity[0.6852245277701068]], {}, {
                    
                    Line[{{4.0943445622221, -0.3759284322252118}, {
                    4.0943445622221, 0.1443243853817727}}], 
                    
                    Line[{{4.0943445622221, 0.1443243853817727}, {
                    4.0943445622221, 0.4848098000590605}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.6326165512188365, -0.3233471499094842, \
-0.1075687431027137], 
                    Opacity[0.6852245277701068]], {}, {
                    
                    Line[{{5.749392985908253, 0.3132404139439917}, {
                    5.749392985908253, 1.0074002665705282`}}], 
                    
                    Line[{{5.749392985908253, 1.0074002665705282`}, {
                    5.749392985908253, 1.4132027042724251`}}]}}}}}, {{{}, {}, 
                    
                    Tooltip[{
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.657406865064797, -0.38016129257105685`, 
                    0.2500353494848524], 
                    Opacity[0.21465251111098735`]], 
                    
                    Line[{{2.302585092994046, 1.1504325510486277`}, {
                    2.302585092994046, 1.1504325510486277`}}]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 60}, {
                    "LearningRate", 0.1}, {"MaxDepth", 6}, {"LeafSize", 7}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6524488022956049, -0.36879846403874234`, 
                    0.17851453096733916`], 
                    Opacity[0.22415790673785482`]], 
                    
                    Line[{{2.302585092994046, 1.150429776717835}, {
                    4.0943445622221, 1.0203246612562846`}}]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 250}, {
                    "LearningRate", 0.02}, {"MaxDepth", 6}, {
                    "LeafSize", 35}, {"L1Regularization", 0}, {
                    "L2Regularization", 0}}, Alignment -> Left, Frame -> All, 
                    FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.1421359549995791, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6400536453726247, -0.340391392707956, \
-0.000287515326443874], 
                    Opacity[0.20888719723059385`]], 
                    
                    Line[{{2.302585092994046, 1.1504325510486277`}, {
                    2.302585092994046, 1.1504325510486277`}}]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 110}, {
                    "LearningRate", 0.2}, {"MaxDepth", 6}, {"LeafSize", 7}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.37820393249936934`, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6673229906031811, -0.40288694963568594`, 
                    0.39307698651987877`], 
                    Opacity[0.23982965469429118`]], 
                    
                    Line[{{2.302585092994046, 1.1504325510486277`}, {
                    4.0943445622221, 1.0199471250065018`}}]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 13}, {
                    "LearningRate", 0.1}, {"MaxDepth", 6}, {"LeafSize", 35}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.6142719099991583, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6474907395264128, -0.3574356355064278, 
                    0.10699371244982595`], 
                    Opacity[0.2656679988991191]], 
                    
                    Line[{{2.302585092994046, 1.1504325510486277`}, {
                    4.0943445622221, 1.0197593287688662`}}]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 25}, {
                    "LearningRate", 0.01}, {"MaxDepth", 6}, {
                    "LeafSize", 90}, {"L1Regularization", 0}, {
                    "L2Regularization", 0}}, Alignment -> Left, Frame -> All, 
                    FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.8503398874989481, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6425326767572207, -0.34607280697411325`, 
                    0.03547289393231273], 
                    Opacity[0.3082682265892902]], 
                    
                    Line[{{2.302585092994046, 1.1504325510486277`}, {
                    4.0943445622221, 0.8526304565949052}, {5.749392985908253, 
                    0.7256071754652762}}]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 110}, {
                    "LearningRate", 0.01}, {"MaxDepth", 6}, {
                    "LeafSize", 15}, {"L1Regularization", 0}, {
                    "L2Regularization", 0}}, Alignment -> Left, Frame -> All, 
                    FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.08640786499873876, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6375746139880286, -0.33470997844179873`, \
-0.03604792458520048], 
                    Opacity[0.3785041281187439]], 
                    
                    Line[{{4.0943445622221, 1.0199406243462728`}, {
                    5.749392985908253, 0.48791371825089014`}}]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 6}, {
                    "LearningRate", 0.02}, {"MaxDepth", 6}, {
                    "LeafSize", 35}, {"L1Regularization", 0}, {
                    "L2Regularization", 0}}, Alignment -> Left, Frame -> All, 
                    FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.3224758424985268, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.662364927833989, -0.3915241211033714, 
                    0.3215561680023656], 
                    Opacity[0.4943035529371539]], 
                    
                    Line[{{4.0943445622221, 1.020298775466869}, {
                    5.749392985908253, 0.1969504403269583}}]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 60}, {
                    "LearningRate", 0.04}, {"MaxDepth", 6}, {
                    "LeafSize", 90}, {"L1Regularization", 0}, {
                    "L2Regularization", 0}}, Alignment -> Left, Frame -> All, 
                    FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.5585438199983166, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6350955826034326, -0.32902856417564147`, \
-0.07180833384395709], 
                    Opacity[1.]], 
                    
                    Line[{{2.302585092994046, 1.1504325510486277`}, {
                    4.0943445622221, 0.07229183537449632}}]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 110}, {
                    "LearningRate", 0.1}, {"MaxDepth", 6}, {"LeafSize", 15}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.7946117974981064, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6326165512188365, -0.3233471499094842, \
-0.1075687431027137], 
                    Opacity[0.6852245277701068]], 
                    
                    Line[{{2.302585092994046, 1.1505532821438782`}, {
                    4.0943445622221, 0.1443243853817727}, {5.749392985908253, 
                    1.0074002665705282`}}]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 1023}, {
                    "LearningRate", 0.1}, {"MaxDepth", 6}, {"LeafSize", 15}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]]}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.657406865064797, -0.38016129257105685`, 
                    0.2500353494848524], 
                    Opacity[0.21465251111098735`]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, 1.1504325510486277`}}, {{
                    2.302585092994046, 1.1504325510486277`}}, {{
                    2.302585092994046, 1.1504325510486277`}}, {{
                    2.302585092994046, 1.1504325510486277`}}}]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 60}, {
                    "LearningRate", 0.1}, {"MaxDepth", 6}, {"LeafSize", 7}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6524488022956049, -0.36879846403874234`, 
                    0.17851453096733916`], 
                    Opacity[0.22415790673785482`]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, 1.150429776717835}}, {{4.0943445622221,
                     1.0203246612562846`}}, {{2.302585092994046, 
                    1.150429776717835}}, {{4.0943445622221, 
                    1.0203246612562846`}}}]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 250}, {
                    "LearningRate", 0.02}, {"MaxDepth", 6}, {
                    "LeafSize", 35}, {"L1Regularization", 0}, {
                    "L2Regularization", 0}}, Alignment -> Left, Frame -> All, 
                    FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6400536453726247, -0.340391392707956, \
-0.000287515326443874], 
                    Opacity[0.20888719723059385`]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, 1.1504325510486277`}}, {{
                    2.302585092994046, 1.1504325510486277`}}, {{
                    2.302585092994046, 1.1504325510486277`}}, {{
                    2.302585092994046, 1.1504325510486277`}}}]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 110}, {
                    "LearningRate", 0.2}, {"MaxDepth", 6}, {"LeafSize", 7}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6673229906031811, -0.40288694963568594`, 
                    0.39307698651987877`], 
                    Opacity[0.23982965469429118`]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, 1.1504325510486277`}}, {{
                    4.0943445622221, 1.0199471250065018`}}, {{
                    2.302585092994046, 1.1504325510486277`}}, {{
                    4.0943445622221, 1.0199471250065018`}}}]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 13}, {
                    "LearningRate", 0.1}, {"MaxDepth", 6}, {"LeafSize", 35}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6474907395264128, -0.3574356355064278, 
                    0.10699371244982595`], 
                    Opacity[0.2656679988991191]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, 1.1504325510486277`}}, {{
                    4.0943445622221, 1.0197593287688662`}}, {{
                    2.302585092994046, 1.1504325510486277`}}, {{
                    4.0943445622221, 1.0197593287688662`}}}]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 25}, {
                    "LearningRate", 0.01}, {"MaxDepth", 6}, {
                    "LeafSize", 90}, {"L1Regularization", 0}, {
                    "L2Regularization", 0}}, Alignment -> Left, Frame -> All, 
                    FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6425326767572207, -0.34607280697411325`, 
                    0.03547289393231273], 
                    Opacity[0.3082682265892902]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, 1.1504325510486277`}}, {{
                    4.0943445622221, 0.8526304565949052}}, {{
                    5.749392985908253, 0.7256071754652762}}, {{
                    2.302585092994046, 1.1504325510486277`}}, {{
                    4.0943445622221, 0.8526304565949052}}, {{
                    5.749392985908253, 0.7256071754652762}}}]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 110}, {
                    "LearningRate", 0.01}, {"MaxDepth", 6}, {
                    "LeafSize", 15}, {"L1Regularization", 0}, {
                    "L2Regularization", 0}}, Alignment -> Left, Frame -> All, 
                    FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6375746139880286, -0.33470997844179873`, \
-0.03604792458520048], 
                    Opacity[0.3785041281187439]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    4.0943445622221, 1.0199406243462728`}}, {{
                    5.749392985908253, 0.48791371825089014`}}, {{
                    4.0943445622221, 1.0199406243462728`}}, {{
                    5.749392985908253, 0.48791371825089014`}}}]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 6}, {
                    "LearningRate", 0.02}, {"MaxDepth", 6}, {
                    "LeafSize", 35}, {"L1Regularization", 0}, {
                    "L2Regularization", 0}}, Alignment -> Left, Frame -> All, 
                    FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.662364927833989, -0.3915241211033714, 
                    0.3215561680023656], 
                    Opacity[0.4943035529371539]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    4.0943445622221, 1.020298775466869}}, {{5.749392985908253,
                     0.1969504403269583}}, {{4.0943445622221, 
                    1.020298775466869}}, {{5.749392985908253, 
                    0.1969504403269583}}}]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 60}, {
                    "LearningRate", 0.04}, {"MaxDepth", 6}, {
                    "LeafSize", 90}, {"L1Regularization", 0}, {
                    "L2Regularization", 0}}, Alignment -> Left, Frame -> All, 
                    FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6350955826034326, -0.32902856417564147`, \
-0.07180833384395709], 
                    Opacity[1.]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, 1.1504325510486277`}}, {{
                    4.0943445622221, 0.07229183537449632}}, {{
                    2.302585092994046, 1.1504325510486277`}}, {{
                    4.0943445622221, 0.07229183537449632}}}]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 110}, {
                    "LearningRate", 0.1}, {"MaxDepth", 6}, {"LeafSize", 15}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6326165512188365, -0.3233471499094842, \
-0.1075687431027137], 
                    Opacity[0.6852245277701068]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.302585092994046, 1.1505532821438782`}}, {{
                    4.0943445622221, 0.1443243853817727}}, {{
                    5.749392985908253, 1.0074002665705282`}}, {{
                    2.302585092994046, 1.1505532821438782`}}, {{
                    4.0943445622221, 0.1443243853817727}}, {{
                    5.749392985908253, 1.0074002665705282`}}}]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 1023}, {
                    "LearningRate", 0.1}, {"MaxDepth", 6}, {"LeafSize", 15}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]]}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.657406865064797, -0.38016129257105685`, 
                    0.2500353494848524], 
                    Opacity[0.21465251111098735`]], {
                    Point[{2.302585092994046, 1.1504325510486277`}], 
                    Point[{2.302585092994046, 1.1504325510486277`}], 
                    Point[{2.302585092994046, 1.1504325510486277`}], 
                    Point[{2.302585092994046, 1.1504325510486277`}]}}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 60}, {
                    "LearningRate", 0.1}, {"MaxDepth", 6}, {"LeafSize", 7}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6524488022956049, -0.36879846403874234`, 
                    0.17851453096733916`], 
                    Opacity[0.22415790673785482`]], {
                    Point[{2.302585092994046, 1.150429776717835}], 
                    Point[{4.0943445622221, 1.0203246612562846`}], 
                    Point[{2.302585092994046, 1.150429776717835}], 
                    Point[{4.0943445622221, 1.0203246612562846`}]}}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 250}, {
                    "LearningRate", 0.02}, {"MaxDepth", 6}, {
                    "LeafSize", 35}, {"L1Regularization", 0}, {
                    "L2Regularization", 0}}, Alignment -> Left, Frame -> All, 
                    FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6400536453726247, -0.340391392707956, \
-0.000287515326443874], 
                    Opacity[0.20888719723059385`]], {
                    Point[{2.302585092994046, 1.1504325510486277`}], 
                    Point[{2.302585092994046, 1.1504325510486277`}], 
                    Point[{2.302585092994046, 1.1504325510486277`}], 
                    Point[{2.302585092994046, 1.1504325510486277`}]}}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 110}, {
                    "LearningRate", 0.2}, {"MaxDepth", 6}, {"LeafSize", 7}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6673229906031811, -0.40288694963568594`, 
                    0.39307698651987877`], 
                    Opacity[0.23982965469429118`]], {
                    Point[{2.302585092994046, 1.1504325510486277`}], 
                    Point[{4.0943445622221, 1.0199471250065018`}], 
                    Point[{2.302585092994046, 1.1504325510486277`}], 
                    Point[{4.0943445622221, 1.0199471250065018`}]}}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 13}, {
                    "LearningRate", 0.1}, {"MaxDepth", 6}, {"LeafSize", 35}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6474907395264128, -0.3574356355064278, 
                    0.10699371244982595`], 
                    Opacity[0.2656679988991191]], {
                    Point[{2.302585092994046, 1.1504325510486277`}], 
                    Point[{4.0943445622221, 1.0197593287688662`}], 
                    Point[{2.302585092994046, 1.1504325510486277`}], 
                    Point[{4.0943445622221, 1.0197593287688662`}]}}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 25}, {
                    "LearningRate", 0.01}, {"MaxDepth", 6}, {
                    "LeafSize", 90}, {"L1Regularization", 0}, {
                    "L2Regularization", 0}}, Alignment -> Left, Frame -> All, 
                    FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6425326767572207, -0.34607280697411325`, 
                    0.03547289393231273], 
                    Opacity[0.3082682265892902]], {
                    Point[{2.302585092994046, 1.1504325510486277`}], 
                    Point[{4.0943445622221, 0.8526304565949052}], 
                    Point[{5.749392985908253, 0.7256071754652762}], 
                    Point[{2.302585092994046, 1.1504325510486277`}], 
                    Point[{4.0943445622221, 0.8526304565949052}], 
                    Point[{5.749392985908253, 0.7256071754652762}]}}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 110}, {
                    "LearningRate", 0.01}, {"MaxDepth", 6}, {
                    "LeafSize", 15}, {"L1Regularization", 0}, {
                    "L2Regularization", 0}}, Alignment -> Left, Frame -> All, 
                    FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6375746139880286, -0.33470997844179873`, \
-0.03604792458520048], 
                    Opacity[0.3785041281187439]], {
                    Point[{4.0943445622221, 1.0199406243462728`}], 
                    Point[{5.749392985908253, 0.48791371825089014`}], 
                    Point[{4.0943445622221, 1.0199406243462728`}], 
                    Point[{5.749392985908253, 0.48791371825089014`}]}}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 6}, {
                    "LearningRate", 0.02}, {"MaxDepth", 6}, {
                    "LeafSize", 35}, {"L1Regularization", 0}, {
                    "L2Regularization", 0}}, Alignment -> Left, Frame -> All, 
                    FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.662364927833989, -0.3915241211033714, 
                    0.3215561680023656], 
                    Opacity[0.4943035529371539]], {
                    Point[{4.0943445622221, 1.020298775466869}], 
                    Point[{5.749392985908253, 0.1969504403269583}], 
                    Point[{4.0943445622221, 1.020298775466869}], 
                    Point[{5.749392985908253, 0.1969504403269583}]}}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 60}, {
                    "LearningRate", 0.04}, {"MaxDepth", 6}, {
                    "LeafSize", 90}, {"L1Regularization", 0}, {
                    "L2Regularization", 0}}, Alignment -> Left, Frame -> All, 
                    FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6350955826034326, -0.32902856417564147`, \
-0.07180833384395709], 
                    Opacity[1.]], {
                    Point[{2.302585092994046, 1.1504325510486277`}], 
                    Point[{4.0943445622221, 0.07229183537449632}], 
                    Point[{2.302585092994046, 1.1504325510486277`}], 
                    Point[{4.0943445622221, 0.07229183537449632}]}}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 110}, {
                    "LearningRate", 0.1}, {"MaxDepth", 6}, {"LeafSize", 15}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6326165512188365, -0.3233471499094842, \
-0.1075687431027137], 
                    Opacity[0.6852245277701068]], {
                    Point[{2.302585092994046, 1.1505532821438782`}], 
                    Point[{4.0943445622221, 0.1443243853817727}], 
                    Point[{5.749392985908253, 1.0074002665705282`}], 
                    Point[{2.302585092994046, 1.1505532821438782`}], 
                    Point[{4.0943445622221, 0.1443243853817727}], 
                    Point[{5.749392985908253, 1.0074002665705282`}]}}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 1023}, {
                    "LearningRate", 0.1}, {"MaxDepth", 6}, {"LeafSize", 15}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}}, {{}, {}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {
                    2.1886558658671644`, -0.033068680283329904`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    HoldForm["training examples used"], None}}, 
                    FrameTicks -> {{
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], {}}, {
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> GrayLevel[0.5, 0.2], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "DefaultPlotStyle" -> {
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02],
                     "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
                    Scaled[0.05], "OptimizePlotMarkers" -> True, 
                    "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{2.2651236183116463`, 
                    5.973809611869261}, {-0.03306868028332998, 
                    1.2458634619482032`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.01], 
                    Scaled[0.01]}, {0, 0}}, Ticks -> {
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], 
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0]}}]}, 
                    MachineLearning`file12Panel`PackagePrivate`pos$$], 
                    PlotLabel -> Grid[{{
                    Button[
                    Deploy[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.25], 
                    Line[{{0, 0.8}, {-1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]], 
                    Graphics[{
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], 
                    Line[{{0, 0.8}, {-1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]]], "LinkHand"]], 
                    MachineLearning`file12Panel`PackagePrivate`pos$$ = (1 + 
                    Mod[-1 + # + #2, 3]& )[
                    MachineLearning`file12Panel`PackagePrivate`pos$$, -1], 
                    Appearance -> "Frameless"], 
                    Part[{"Standard deviation", 
                    Tooltip[
                    "Learning curve", 
                    "mean cross entropy for best algorithm at each training \
size"], 
                    Tooltip[
                    "Learning curves for all algorithms", 
                    "mean cross entropy at each training size"]}, 
                    MachineLearning`file12Panel`PackagePrivate`pos$$], 
                    Button[
                    Deploy[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.25], 
                    Line[{{0, 0.8}, {1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]], 
                    Graphics[{
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], 
                    Line[{{0, 0.8}, {1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]]], "LinkHand"]], 
                    MachineLearning`file12Panel`PackagePrivate`pos$$ = (1 + 
                    Mod[-1 + # + #2, 3]& )[
                    MachineLearning`file12Panel`PackagePrivate`pos$$, 
                    Plus[1]], Appearance -> "Frameless"]}}, 
                    Alignment -> {Center, Baseline}, 
                    ItemSize -> {{3, 20, 3}, {2}}]], StandardForm],
                  ImageSizeCache->{330., {124., 130.}}],
                 DynamicModuleValues:>{}],
                Alignment->Center,
                StripOnInput->False], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             ColumnsEqual->False,
             
             GridBoxAlignment->{
              "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
             GridBoxDividers->{"Columns" -> {False, {
                  Opacity[0.15]}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {Automatic, {Automatic}}, "Rows" -> {{1.}}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], 
                 Offset[1.1199999999999999`], {
                  Offset[1.75]}, 
                 Offset[0.27999999999999997`]}, "Rows" -> {
                 Offset[0.2], {
                  Offset[0.8]}, 
                 Offset[0.2]}}],
            "Grid"],
           FrameMargins->{{10, 10}, {10, 5}},
           FrameStyle->None,
           StripOnInput->False],
          Deploy,
          DefaultBaseStyle->"Deploy"],
         Alignment->Center,
         BaseStyle->{
          FontWeight -> "Light", FontSize -> 11, FontFamily -> 
           ".AppleSystemUIFont", NumberMarks -> False, Deployed -> False},
         StripOnInput->False]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], 
          Offset[0.8], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[0.85],
     RoundingRadius->5,
     StripOnInput->False],
    StripOnInput->False,
    LineBreakWithin->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  MachineLearning`MLInformationObject[
   PredictorFunction[<|
    "ExampleNumber" -> 393, 
     "Input" -> <|
      "Preprocessor" -> 
       MachineLearning`MLProcessor[
        "ToMLDataset", <|
         "Input" -> <|
           "f1" -> <|"Type" -> "NumericalVector", "Length" -> 41|>|>, 
          "Output" -> <|
           "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
          "Preprocessor" -> 
          MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
               MachineLearning`MLProcessor["List"], 
               MachineLearning`MLProcessor[
               "WrapMLDataset", <|
                "FeatureTypes" -> {"NumericalVector"}, 
                 "FeatureKeys" -> {"f1"}, "FeatureWeights" -> Automatic, 
                 "ExampleWeights" -> Automatic, "RawExample" -> 
                 Missing["KeyAbsent", "RawExample"], "StructurePreserving" -> 
                 False|>]}|>], "ScalarFeature" -> True, "Invertibility" -> 
          "Perfect", "StructurePreserving" -> False, "Missing" -> 
          "Allowed"|>], "Processor" -> 
       MachineLearning`MLProcessor[
        "Sequence", <|
         "Input" -> <|
           "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
          "Output" -> <|
           "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
          "Processors" -> {
            MachineLearning`MLProcessor[
            "SynthesizeMissingValues", <|
             "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
              "StructurePreserving" -> True, 
              "Input" -> <|
               "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
              "Distribution" -> 
              LearnedDistribution[<|
                "ExampleNumber" -> 393, "Preprocessor" -> 
                 MachineLearning`MLProcessor[
                  "ToMLDataset", <|
                   "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Length" -> 41|>|>,
                     "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Preprocessor" -> MachineLearning`MLProcessor["Identity"],
                     "ScalarFeature" -> True, "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
                  "Processor" -> 
                 MachineLearning`MLProcessor[
                  "Sequence", <|
                   "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Processors" -> {
                    MachineLearning`MLProcessor[
                    "LogRescaleNumericalVector", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Indices" -> {14}, "Centers" -> {0.019989108861491987`}, 
                    "Cutoffs" -> {0.00024758645219650696`}, 
                    "Version" -> {13.2, 1}, "ID" -> 1758109800256407757, 
                    "Output" -> <|
                    "f1" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 1|>|>|>], 
                    MachineLearning`MLProcessor[
                    "Standardize", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAADr+IyaQvaYP1B+Ikr8lJo/w2I+p0a8nD9T
KCIOwg+fPy3MMC5n96A/rvbdFiLOoT9Y7Bja73miP2VhZiOi0KI/P/DBjHzW
oj/dKJRSR9GiP6tarVipqKI/Auxm5308oj/lkwd8GpyhP9Vliz5PVAVAmSbe
ypEKoD/ptng3AF2fP/kJdKWF4p8/pXUTsbGloD+R2RDbmKShP7VSGMZ0W6M/
NJcl1XkRpT/rsDQr0O2kP0dpEGqcH6I/T0unHTEJnz8C5iu6DracP+zdoQgi
BJ0/UAIwa9KrnT/yICTddeCcP2HqbfFCs5k/Kfbdr4xPlD+T8pY5DpKMP1HY
isDPrYE/JcjDfcPcdD8Gw3pl00hmP26252fcZFg/iKooC/5YST9XPMXSBIs6
P5cVBwjrVSw/5a4WO29PGz+lkPWN5pwoP051NsgpmSU/snycLQ==
                    "], "StandardDeviation" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAADyVTEhWeN8P3Zqd1tEenQ/d+gRzFEDdD+F
jYyo7uF4PzMpZdXHTIA/amoNK3r+gz++939qi/2HP1Bo3QD4dos/H2oG/+GU
jT+t1KsTwtyOP4vzCcVgjY4/CTUvue4sjT+chZC4QqyLP1KBqLdhVQBAgTnC
VpBHiz/mw3IXVlOMP7Ex0lRDZY0/GEmND+h/jT8H7VdXXNuMP+fO9n9J/44/
IENoYb8Mkj9u8Dx0r7SRP4x56DSAd4s/s3S+dItWiT/0Q/UzcciNP9d72HjN
hJE/ygA1MJ9qkz+TCABahOyTP6XQZUodIZI/eV31i+SvjD8y9la0r8WDPyq2
ZBkvdXc/ituX0SftaT+mXngm5wJaP+cAodzvLU8/5Mr7hCPYRT+b3yWdjDtC
P6o2roggdTo/8pY9hYV5Mj/y+WNFMQkxPzJkoMV61C0/NL6cjg==
                    "], 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Version" -> {13.2, 1}, "ID" -> 64935607783415987|>]}, 
                    "Invertibility" -> "Perfect", "StructurePreserving" -> 
                    True, "Missing" -> "Allowed"|>], "PerformanceGoal" -> 
                 "DirectTraining", "BatchProcessing" -> Automatic, 
                 "Model" -> <|"RotationMatrix" -> CompressedData["
1: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
                    "], "Precisions" -> CompressedData["
1:eJwBTQGy/iFib1JlAQAAACgAAADsaw2fEROnP4fJLP4ZTrc/paQaUBAXzT+C
eE7/yFDvP+2zT5KcLfM/i1VIRsc3+T90DH3oC4oDQA4mPIifbhNAv8WflnFQ
JEDtL5hz3I8nQH+gcEA6LjZAJ6QZWGbWQkDCGUn5UPhQQI1iMjzk31RAVi2d
kuBhXkAwbBZbuvpjQEvNhcr3L2tARKLn28ABcUAmou0AMIB7QGqzzC/HMnxA
KslJ3SHugkDOiblRDTmIQLBHkscANZBADtRrMxKukkBRqL2XgYuUQJIVcTZn
EplA4nzAPKa7mkA84A157gWfQNMTJsPm0qVARhdIXD8iqECdfnGFbrGrQDLg
0J5Ou65AX8Af2JXur0DBwlIkZha2QO+1BJ2xebZAPCyk6csQuUDAUaxfrjHA
QNmcHBO958JAZMVXZw8OyEAMT9fZQ4vQQA7fk/M=
                    "], "NoisePrecision" -> 28720.601595239208`, "Processor" -> 
                   MachineLearning`MLProcessor[
                    "Center", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAACfJXNAjTMxP9jlkdkTUzK//wkO96jAMT9Y
4XNx84xDPwy3+NOzIi0/L+GiwvheKj/LodbIQNwfP3pdiOip6ki/IiVA/ktS
BD+2sifQakE0vxtf2jz4dg+/3YU1MyIGFD9VDmxk7LM9v8R0ZHzL+yQ/w2aP
5ofbF7/sT1ZSLBEqP9ugBqxUgBe/WrgXYkfOML/KRyKd5E4wv499i3T/JS0/
lsr9d8E65T6Lg5jIQWg+v3NJQKV+zh6/7HdJb/c0OT/zLN9dVRAFvxtf7MAY
df++cA2EpC0eOL8JW/hgNcE2v4EL2gbXbTc/PH2M8nF7OD/31g9W3Xcqv1o+
VZD9liw/6snWR4+oNT9zmkI19dVAv6UYdvBXjSQ/Ku1u9NFyGr+CBsOhKNcx
vyzNrM9lajC/QjNA810JQT/uW+S+feA4v4Dl2hmEyiu/EImgIQ==
                    "], 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Version" -> {13.2, 1}, "ID" -> 7340144392152275359|>], 
                   "PostProcessor" -> 
                   MachineLearning`MLProcessor[
                    "FirstValues", <|
                    "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, 
                    "Key" -> "f1", "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
                    "Method" -> "Multinormal", 
                   "Options" -> <|
                    "CovarianceType" -> <|
                    "Value" -> "Full", "Options" -> <||>|>, 
                    "IntrinsicDimension" -> <|
                    "Value" -> 40, "Options" -> <||>|>|>|>, 
                 "TrainingInformation" -> <|
                  "Configurations" -> 
                   Dataset[<|<|
                    "Value" -> "Multinormal", 
                    "Options" -> <|
                    "CovarianceType" -> <|"Value" -> "Full"|>, 
                    "IntrinsicDimension" -> <|"Value" -> "Heuristic"|>|>, 
                    "NaiveImputer" -> 
                    MachineLearning`MLProcessor[
                    "ImputeMissing", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAADmIHNAjTMxP1DmkdkTUzK/ZgwO96jAMT9e
4XNx84xDP065+NOzIi0/SdmiwvheKj8FqtbIQNwfP/9aiOip6ki/VEBA/ktS
BD/PsyfQakE0v4xa2jz4dg+/c5A1MyIGFD9UEGxk7LM9v0xsZHzL+yQ/PD2P
5ofbF79+YFZSLBEqP+OUBqxUgBe/5rkXYkfOML8oRSKd5E4wv5iIi3T/JS0/
P6D+d8E65T6ceZjIQWg+v7VTQKV+zh6/23BJb/c0OT+7md9dVRAFv+TL68AY
df++eAmEpC0eOL+pVfhgNcE2v78M2gbXbTc/T3+M8nF7OD/02g9W3Xcqv0Au
VZD9liw/4c/WR4+oNT/LlUI19dVAv+IedvBXjSQ/5tdu9NFyGr+fDcOhKNcx
v9nQrM9lajC/DTJA810JQT94WOS+feA4vzXg2hmEyiu/gPKhQw==
                    "], "StandardDeviation" -> CompressedData["
1:eJxTTMoPSmVkYGDQBOIJ1r8O7fr93t7NfVeBJcMH+1SGYGcFxg/2x5XNf83+
896+sEViy+r/7+2vc+86VgKUV89dznkIyK9dsf+lEFB+qd+SB2xA8fAH77mU
/763n/IgrcYdqP/P87jXIPWbVF2jfYG0S+k35xKg/J+pVwRU/r23/9XUJycF
5E9Y+NWvBSS/eUp3A9C8r9VnPwkA5S8ofKz9BxTvj7M79QUoPputdFM30J1n
qnc0HwPKn/Phq3MCymeJMteeBNnfGP/iOlB8toCf7kEgXyJA/Iwz0B16hfxq
AkA+m07CShGgfSsufFrVyfTBPr/VO2oVUNxvzmSR2UD/+Jw9FWMN5PcuEX/0
F0jPVK1mvgtUP+fTr9vxQHmLGUeLw4D6ZMR6azWB5haFnJgjCqQPCOx/vAuo
HgCFOaoI
                    "], "Method" -> "NaiveSampler", "VectorLength" -> 41, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Type" -> "NumericalVector", "Version" -> {13.2, 1}, "ID" -> 
                    2628110491450176983|>], "EMIterations" -> 1|> -> <||>|>, 
                    TypeSystem`Assoc[
                    
                    TypeSystem`Struct[{
                    "Value", "Options", "NaiveImputer", "EMIterations"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Struct[{"Value"}, {
                    TypeSystem`Atom[String]}], 2], TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer]}], 
                    TypeSystem`Assoc[
                    TypeSystem`UnknownType, TypeSystem`UnknownType, 
                    TypeSystem`AnyLength], 1], <||>], "BestModelInformation" -> 
                   Dataset[<|
                    "Configuration" -> {
                    "Multinormal", "CovarianceType" -> "Full", 
                    "IntrinsicDimension" -> "Heuristic"}, "ModelUtility" -> 
                    Missing[]|>, 
                    TypeSystem`Struct[{"Configuration", "ModelUtility"}, {
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[String], TypeSystem`AnyType, 
                    TypeSystem`AnyType}], TypeSystem`UnknownType}], <||>]|>, 
                 "NaiveImputer" -> 
                 MachineLearning`MLProcessor[
                  "ImputeMissing", <|
                   "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAADmIHNAjTMxP1DmkdkTUzK/ZgwO96jAMT9e
4XNx84xDP065+NOzIi0/SdmiwvheKj8FqtbIQNwfP/9aiOip6ki/VEBA/ktS
BD/PsyfQakE0v4xa2jz4dg+/c5A1MyIGFD9UEGxk7LM9v0xsZHzL+yQ/PD2P
5ofbF79+YFZSLBEqP+OUBqxUgBe/5rkXYkfOML8oRSKd5E4wv5iIi3T/JS0/
P6D+d8E65T6ceZjIQWg+v7VTQKV+zh6/23BJb/c0OT+7md9dVRAFv+TL68AY
df++eAmEpC0eOL+pVfhgNcE2v78M2gbXbTc/T3+M8nF7OD/02g9W3Xcqv0Au
VZD9liw/4c/WR4+oNT/LlUI19dVAv+IedvBXjSQ/5tdu9NFyGr+fDcOhKNcx
v9nQrM9lajC/DTJA810JQT94WOS+feA4vzXg2hmEyiu/gPKhQw==
                    "], "StandardDeviation" -> CompressedData["
1:eJxTTMoPSmVkYGDQBOIJ1r8O7fr93t7NfVeBJcMH+1SGYGcFxg/2x5XNf83+
896+sEViy+r/7+2vc+86VgKUV89dznkIyK9dsf+lEFB+qd+SB2xA8fAH77mU
/763n/IgrcYdqP/P87jXIPWbVF2jfYG0S+k35xKg/J+pVwRU/r23/9XUJycF
5E9Y+NWvBSS/eUp3A9C8r9VnPwkA5S8ofKz9BxTvj7M79QUoPputdFM30J1n
qnc0HwPKn/Phq3MCymeJMteeBNnfGP/iOlB8toCf7kEgXyJA/Iwz0B16hfxq
AkA+m07CShGgfSsufFrVyfTBPr/VO2oVUNxvzmSR2UD/+Jw9FWMN5PcuEX/0
F0jPVK1mvgtUP+fTr9vxQHmLGUeLw4D6ZMR6azWB5haFnJgjCqQPCOx/vAuo
HgCFOaoI
                    "], "Method" -> "NaiveSampler", "VectorLength" -> 41, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Type" -> "NumericalVector", "Version" -> {13.2, 1}, "ID" -> 
                    2628110491450176983|>], "InputDimension" -> 0, 
                 "OutputDimension" -> 41, 
                 "Log" -> <|
                  "Example" -> 
                   MachineLearning`MLDataset[<|
                    "f1" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 1, 
                    "Values" -> CompressedData["
1:eJxTTMoPSmViYGBgBGJNIL4f3KAwo2eK/akNjSWqsjPsfcQXXmKpmG1/vvaA
wZNL8+z7Sr57lnEutNe5pbJOZO5C+7jE3aaXShba7203jpOat8D+SmqpuHjk
fPu47SW5FybMtX/7QWPVHr859qttJX/7LJxlf26GWXTE4hn2LaJ77zW9nGpv
V/XD48HWyfape0/1y9lNsp+5Y3fX14hJ9vzpe0xsFKfYHz1xpvfTtOn2n27c
nfD+yhz7Q/kvXHxVFtovEDn9xFFpMVT/YvvVEf2qBwuX2CuyTzjPbrXMPnVR
SOqq3BX2y0NTRKSkV8HpCWdvT5KuWW4/W0fsH9+cRfZ28U1yOU9n2s/LapFx
sOu3P/LYaUdaeqN9zNuEQzsMC+27GeZeizmWANXnbs9g8vvDr2ta9gwEAAC0
IY8F
                    "], "ID" -> 6900269369450652421|>|>, <|
                    "ExampleNumber" -> 1, "ExampleWeights" -> 1, 
                    "LogDensityRatios" -> 0, "RawExample" -> False|>], 
                   "TrainingTime" -> 0.109006, "MaxTrainingMemory" -> 786336, 
                   "DataMemory" -> 130880, "FunctionMemory" -> 58352, 
                   "LanguageVersion" -> {13.2, 1}, "Date" -> 
                   DateObject[{
                    2023, 7, 25, 17, 1, 55.669896`8.498195384136785}, 
                    "Instant", "Gregorian", -4.], "ProcessorCount" -> 4, 
                   "ProcessorType" -> "x86-64", "OperatingSystem" -> "MacOSX",
                    "SystemWordLength" -> 64, "Evaluations" -> {}|>, 
                 "LogPDFDistribution" -> 
                 MachineLearning`TailedQuantileDistribution[<|
                   "Quantiles" -> {5.9583439238160025`, 5.9583439238160025`, 
                    6.103451974549627, 6.134931719590754, 6.228706515037732, 
                    6.323457459841486, 6.329753404677979, 6.387846854080055, 
                    6.411257679264022, 6.471655948162263, 6.558788626655047}, 
                    "LeftBoundary" -> 6.103451974549627, "LeftScale" -> 
                    0.07255402536681244, "LeftTailNorm" -> 0.2|>], "Entropy" -> 
                 Around[-257.92359583326737`, 2.3860592705848855`], 
                 "EntropySampleSize" -> 10|>], 
              "Output" -> <|
               "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
              "EvaluationStrategy" -> "ModeFinding", "Version" -> {13.2, 1}, 
              "ID" -> 895810465636885430|>], 
            MachineLearning`MLProcessor[
            "LogRescaleNumericalVector", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
              "StructurePreserving" -> True, 
              "Input" -> <|
               "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
              "Indices" -> {14}, "Centers" -> {0.019989108861491987`}, 
              "Cutoffs" -> {0.00024758645219650696`}, "Version" -> {13.2, 1}, 
              "ID" -> 1295242045016063173, 
              "Output" -> <|
               "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>|>], 
            MachineLearning`MLProcessor[
            "Standardize", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
              "StructurePreserving" -> True, 
              "Input" -> <|
               "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
              "Mean" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAADr+IyaQvaYP1B+Ikr8lJo/w2I+p0a8nD9T
KCIOwg+fPy3MMC5n96A/rvbdFiLOoT9Y7Bja73miP2VhZiOi0KI/P/DBjHzW
oj/dKJRSR9GiP6tarVipqKI/Auxm5308oj/lkwd8GpyhP9Vliz5PVAVAmSbe
ypEKoD/ptng3AF2fP/kJdKWF4p8/pXUTsbGloD+R2RDbmKShP7VSGMZ0W6M/
NJcl1XkRpT/rsDQr0O2kP0dpEGqcH6I/T0unHTEJnz8C5iu6DracP+zdoQgi
BJ0/UAIwa9KrnT/yICTddeCcP2HqbfFCs5k/Kfbdr4xPlD+T8pY5DpKMP1HY
isDPrYE/JcjDfcPcdD8Gw3pl00hmP26252fcZFg/iKooC/5YST9XPMXSBIs6
P5cVBwjrVSw/5a4WO29PGz+lkPWN5pwoP051NsgpmSU/snycLQ==
               "], "StandardDeviation" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAADyVTEhWeN8P3Zqd1tEenQ/d+gRzFEDdD+F
jYyo7uF4PzMpZdXHTIA/amoNK3r+gz++939qi/2HP1Bo3QD4dos/H2oG/+GU
jT+t1KsTwtyOP4vzCcVgjY4/CTUvue4sjT+chZC4QqyLP1KBqLdhVQBAgTnC
VpBHiz/mw3IXVlOMP7Ex0lRDZY0/GEmND+h/jT8H7VdXXNuMP+fO9n9J/44/
IENoYb8Mkj9u8Dx0r7SRP4x56DSAd4s/s3S+dItWiT/0Q/UzcciNP9d72HjN
hJE/ygA1MJ9qkz+TCABahOyTP6XQZUodIZI/eV31i+SvjD8y9la0r8WDPyq2
ZBkvdXc/ituX0SftaT+mXngm5wJaP+cAodzvLU8/5Mr7hCPYRT+b3yWdjDtC
P6o2roggdTo/8pY9hYV5Mj/y+WNFMQkxPzJkoMV61C0/NL6cjg==
               "], 
              "Output" -> <|
               "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
              "Version" -> {13.2, 1}, "ID" -> 3037891080026016735|>]}, 
          "Invertibility" -> "Perfect", "StructurePreserving" -> True, 
          "Missing" -> "Imputed"|>]|>, 
     "Output" -> <|
      "Preprocessor" -> 
       MachineLearning`MLProcessor[
        "ToMLDataset", <|
         "Input" -> <|"f1" -> <|"Type" -> "Numerical"|>|>, 
          "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
          "Preprocessor" -> 
          MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
               MachineLearning`MLProcessor["List"], 
               MachineLearning`MLProcessor[
               "WrapMLDataset", <|
                "FeatureTypes" -> {"Numerical"}, "FeatureKeys" -> {"f1"}, 
                 "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic,
                  "RawExample" -> Missing["KeyAbsent", "RawExample"], 
                 "StructurePreserving" -> False|>]}|>], "ScalarFeature" -> 
          True, "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
          "Missing" -> "Allowed"|>], "Processor" -> 
       MachineLearning`MLProcessor[
        "Sequence", <|
         "Input" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
          "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
          "Processors" -> {
            MachineLearning`MLProcessor[
            "ToVector", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
              "StructurePreserving" -> True, 
              "Input" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>,
               "Output" -> <|
               "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
              "Version" -> {13.2, 1}, "ID" -> 2315181629334253493|>], 
            MachineLearning`MLProcessor[
            "Standardize", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
              "StructurePreserving" -> True, 
              "Input" -> <|
               "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
              "Mean" -> {7.631272264631047}, 
              "StandardDeviation" -> {3.0453246039927664`}, 
              "Output" -> <|
               "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
              "Version" -> {13.2, 1}, "ID" -> 6597286237367883461|>], 
            MachineLearning`MLProcessor[
            "FromVector", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
              "StructurePreserving" -> True, 
              "Input" -> <|
               "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
              "Output" -> <|
               "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
              "Version" -> {13.2, 1}, "ID" -> 6570418014863473558|>], 
            MachineLearning`MLProcessor[
            "FirstValues", <|
             "Info" -> <|"Type" -> "Numerical", "Weight" -> 1|>, "Key" -> 
              "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> 
              False, "Missing" -> "Allowed"|>]}, "Invertibility" -> "Perfect",
           "StructurePreserving" -> False, "Missing" -> "Allowed"|>], 
       "ProbabilityPostprocessor" -> Identity, 
       "InverseProcessorFunction" -> (7.631272264631047 + 
        3.0453246039927664` #& ), 
       "ProcessorFunction" -> (-2.5058978128720937` + 0.3283722197262277 #& ),
        "Name" -> "value", 
       "Quantiles" -> {-1.671832374767475, 1.6775642664400476`}, "Mean" -> 
       7.631272264631043|>, "LabelSplitter" -> 
     MachineLearning`MLProcessor[
      "FeatureLabelSplit", <|
       "Processor" -> MachineLearning`MLProcessor["ListSplit"], 
        "PreferLabeled" -> True, "KeepLabelsFormat" -> False|>], 
     "RecalibrationFunction" -> None, "ImputationStrategy" -> Automatic, 
     "Prior" -> Automatic, "Utility" -> (DiracDelta[#2 - #]& ), "Threshold" -> 
     0, "PerformanceGoal" -> "Quality", "BatchProcessing" -> Automatic, 
     "Model" -> <|"Trees" -> {
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{15, 24, 11, 4, 15, 15, 12, 5, 1, 29, 21, 9, 
             15, 12, 24, 40}], 
           "NumericalThresholds" -> {-0.23386887460947034`, 
            0.9589562416076661, 0.7583751976490022, 0.2002881169319153, 
            0.5974713861942292, -0.8061957359313964, 
            0.6840899586677552, -0.36861526966094965`, 0.9966313838958741, 
            1.2156217098236086`, -1.185594320297241, 
            0.016297827009111646`, -0.7793494462966918, 0.7364032268524171, 
            0.9961005747318269, -0.5615665316581725}, "LeafValues" -> 
           RawArray["Real32",{0.060377344489097595`, -0.15763401985168457`, 
             0.1218361184000969, -0.03812992945313454, 
             0.0020564435981214046`, -0.0921025201678276, 
             0.1051405519247055, -0.13063357770442963`, 
             0.13974113762378693`, -0.07057120651006699, 0.04122982546687126, 
             0.021665088832378387`, -0.1422913670539856, 
             0.08528164774179459, -0.11579068750143051`, 0.09548855572938919, 
             0.11268524825572968`}], "Children" -> 
           RawArray["Integer16",{{2, 3}, {4, 6}, {7, 5}, {10, 11}, {-4, 9}, {
             8, 13}, {12, 14}, {
             16, -9}, {-6, -10}, {-1, -11}, {-5, -12}, {-2, -13}, {-7, 
             15}, {-8, -15}, {-14, -16}, {-3, -17}}], "NominalSplits" -> {}, 
           "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
           0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{14, 24, 11, 20, 16, 15, 12, 34, 16, 5, 4, 6, 
             15, 12, 13, 24, 39}], 
           "NumericalThresholds" -> {0.6912020146846772, 0.9589562416076661, 
            0.7583751976490022, -1.105591535568237, 
            1.0000000180025095`*^-35, -0.8061957359313964, 0.6840899586677552,
             0.7140295803546907, 0.6730017960071565, 0.09566425532102586, 
            0.5331093668937684, -0.8435083627700805, -0.7793494462966918, 
            0.7364032268524171, 0.7729409337043763, 
            0.9961005747318269, -0.3677475303411483}, "LeafValues" -> 
           RawArray["Real32",{0.021731240674853325`, -0.1416490525007248, 
             0.10272317379713058`, -0.030512480065226555`, 
             0.05609944462776184, -0.057638414204120636`, 
             0.09657926112413406, -0.11561745405197144`, 
             0.12845437228679657`, -0.07800088077783585, 
             0.038481660187244415`, 
             0.005708617623895407, -0.13329820334911346`, 
             0.07870624959468842, -0.10225885361433029`, -0.1211990937590599, 
             0.08789246529340744, 0.11155081540346146`}], "Children" -> 
           RawArray["Integer16",{{2, 3}, {4, 6}, {7, 5}, {11, 10}, {-4, 9}, {
             8, 13}, {12, 14}, {17, -9}, {-6, -10}, {-5, -11}, {-1, -12}, {-2,
              15}, {-7, 16}, {-8, -15}, {-13, -16}, {-14, -17}, {-3, -18}}], 
           "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{15, 24, 6, 4, 5, 12, 15, 11, 13, 26, 18, 15, 
             15, 1, 6, 24, 40}], 
           "NumericalThresholds" -> {-0.23386887460947034`, 
            0.9589562416076661, 0.3033973723649979, 
            0.2002881169319153, -0.5385422408580779, 0.7689864039421083, 
            0.5467736124992372, 0.4287055581808091, -0.9859244227409362, 
            1.0867720842361452`, -1.2207719087600706`, -0.7811749279499053, 
            0.8979452550411225, 0.8168986141681672, -0.8435083627700805, 
            1.001142203807831, -0.587079495191574}, "LeafValues" -> 
           RawArray["Real32",{0.05412738397717476, -0.12748415768146515`, 
             0.08896315097808838, -0.027417391538619995`, 
             0.0034531368874013424`, 
             0.10156860202550888`, -0.08649155497550964, \
-0.050888776779174805`, -0.09941928833723068, 0.11579244583845139`, 
             0.0371609590947628, 0.019289787858724594`, 
             0.07162796705961227, -0.0656740665435791, -0.11312612146139145`, \
-0.11743485927581787`, 0.07955649495124817, 0.09333311766386032}], "Children" -> 
           RawArray["Integer16",{{2, 3}, {4, 5}, {6, 7}, {10, 11}, {12, 9}, {
             8, -7}, {-4, 13}, {15, 14}, {17, -10}, {-1, -11}, {-5, -12}, {-3,
              16}, {-8, -14}, {-9, -15}, {-2, -16}, {-13, -17}, {-6, -18}}], 
           "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{15, 24, 11, 15, 5, 5, 12, 34, 3, 26, 5, 15, 
             9, 7, 41, 38}], 
           "NumericalThresholds" -> {-0.36554296314716334`, 
            0.9670104980468751, 0.7583751976490022, 0.5974713861942292, 
            0.2861070036888123, -0.5385422408580779, 0.6840899586677552, 
            0.7140295803546907, 0.9801187217235566, 1.0893343687057497`, 
            0.5347124934196473, -0.7811749279499053, 
            0.016297827009111646`, -0.1645000800490379, \
-0.47131058573722834`, -0.23597415536642072`}, "LeafValues" -> 
           RawArray["Real32",{0.0489998497068882, -0.11358293145895004`, 
             0.08006683737039566, -0.024774737656116486`, \
-0.06628873944282532, 0.022075705230236053`, 
             0.08367849141359329, -0.0946468934416771, 
             0.10421934723854065`, -0.049934640526771545`, 
             0.03433610871434212, 0.008102206513285637, 
             0.06450217217206955, -0.10204517841339111`, -0.08276643604040146,
              0.07179999351501465, 0.09043906629085541}], "Children" -> 
           RawArray["Integer16",{{2, 3}, {5, 6}, {7, 4}, {-4, 9}, {10, 11}, {
             12, 8}, {13, 14}, {16, -9}, {-5, -10}, {-1, -11}, {-6, -12}, {-3,
              15}, {-2, -14}, {-8, -15}, {-13, -16}, {-7, -17}}], 
           "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{14, 24, 11, 5, 25, 4, 11, 1, 13, 17, 21, 15, 
             14, 6}], 
           "NumericalThresholds" -> {0.7746406793594361, 0.9589562416076661, 
            0.7583751976490022, 0.35633292794227606`, 0.7710483372211457, 
            1.9954104423522951`, 0.4287055581808091, 
            0.8168986141681672, -0.9859244227409362, -1.0374458432197569`, \
-1.233241021633148, -0.7659916877746581, -1.4158121943473814`, \
-0.8435083627700805}, "LeafValues" -> 
           RawArray["Real32",{0.024969570338726044`, -0.10337743908166885`, 
             0.06709957122802734, -0.055170364677906036`, \
-0.0012487483909353614`, 
             0.08247768133878708, -0.03120465576648712, -0.07435388118028641, \
-0.09207464754581451, 0.0940200686454773, 0.039693500846624374`, 
             0.014556792564690113`, 0.05916367471218109, 
             0.07479283958673477, -0.09527156502008438}], "Children" -> 
           RawArray["Integer16",{{2, 3}, {4, 5}, {7, 6}, {10, 11}, {12, 
             9}, {-4, -7}, {14, 8}, {-8, -9}, {
             13, -10}, {-1, -11}, {-5, -12}, {-3, -13}, {-6, -14}, {-2, \
-15}}], "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{15, 24, 6, 5, 14, 5, 12, 7, 3, 13, 28, 6, 5, 
             15, 24, 40}], 
           "NumericalThresholds" -> {-0.36554296314716334`, 
            0.9670104980468751, 0.3033973723649979, 0.2861070036888123, 
            0.9670754969120027, -0.5385422408580779, 
            0.7689864039421083, -0.47248618304729456`, -0.23216090351343152`, \
-0.9859244227409362, 1.1987521052360537`, 2.23828399181366, 
            0.550815910100937, -0.7811749279499053, 
            1.001142203807831, -0.587079495191574}, "LeafValues" -> 
           RawArray["Real32",{0.03757749870419502, -0.09169860184192657, 
             0.06491760909557343, -0.013800060376524925`, 
             0.017713693901896477`, -0.04618299379944801, 
             0.07453262805938721, -0.06284588575363159, -0.07209429144859314, \
-0.0894080400466919, 0.08461806923151016, 
             0.025345098227262497`, -0.033870548009872437`, 
             0.00627455348148942, 0.051934096962213516`, 0.05870860442519188, 
             0.06763360649347305}], "Children" -> 
           RawArray["Integer16",{{2, 3}, {4, 6}, {7, 5}, {11, 13}, {-4, 12}, {
             14, 10}, {8, -8}, {-2, 9}, {-9, -10}, {
             16, -11}, {-1, -12}, {-6, -13}, {-5, -14}, {-3, 
             15}, {-15, -16}, {-7, -17}}], "NominalSplits" -> {}, "RootIndex" -> 
           1, "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{30, 14, 11, 5, 21, 6, 11, 17, 1, 34, 21, 14, 
             15, 39, 5, 35}], 
           "NumericalThresholds" -> {-0.5344096422195433, -0.8770897686481475,
             0.7583751976490022, 0.5121456384658815, 1.0455096364021303`, 
            2.23828399181366, 0.4287055581808091, -1.0374458432197569`, 
            0.8168986141681672, 
            0.7140295803546907, -1.2428740859031675`, -1.4045128822326658`, \
-0.8806085884571074, -0.3707905858755111, -1.1897714138031004`, 
            0.31559394299983984`}, "LeafValues" -> 
           RawArray["Real32",{-0.0840146616101265, 0.06688322126865387, 
             0.01889742910861969, -0.044125963002443314`, \
-0.002883601700887084, 
             0.05777430534362793, -0.025776207447052002`, \
-0.05989250913262367, 0.028032902628183365`, -0.07489046454429626, 
             0.07627319544553757, 0.008936242200434208, 0.04616565257310867, 
             0.0367300845682621, 0.05326635390520096, -0.07720914483070374, 
             0.06058642640709877}], "Children" -> 
           RawArray["Integer16",{{3, 2}, {5, 4}, {7, 6}, {8, 11}, {10, 
             12}, {-4, -7}, {15, 9}, {-3, 13}, {-8, -10}, {
             16, -11}, {-5, -12}, {-6, 
             14}, {-9, -14}, {-13, -15}, {-1, -16}, {-2, -17}}], 
           "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{16, 4, 8, 5, 24, 20, 35, 11, 5, 1, 25, 24, 
             17, 39, 6, 35, 38}], 
           "NumericalThresholds" -> {-0.34189176559448237`, \
-0.18622988462448117`, 0.3839821666479111, 0.5121456384658815, 
            1.0041582584381106`, -0.3317135274410247, 0.480051800608635, 
            0.4287055581808091, 1.038109600543976, 1.0470181703567507`, 
            0.7710483372211457, 
            0.977063536643982, -1.0374458432197569`, -0.3677475303411483, 
            2.23828399181366, 0.31559394299983984`, -0.1436744853854179}, 
           "LeafValues" -> 
           RawArray["Real32",{0.03716954588890076, -0.07576793432235718, 
             0.01700768619775772, -0.03488815948367119, 0.007740688975900412, 
             0.04818376898765564, -0.04628697410225868, 
             0.06864982843399048, -0.05662551894783974, \
-0.005452217999845743, -0.06815523654222488, 0.06127342954277992, 
             0.042320720851421356`, 0.026166599243879318`, 
             0.05103389918804169, -0.026507990434765816`, 
             0.05383972451090813, -0.06935928016901016}], "Children" -> 
           RawArray["Integer16",{{2, 3}, {5, 4}, {8, 6}, {13, 9}, {12, 7}, {
             15, -7}, {11, -8}, {17, 10}, {-5, -10}, {-9, -11}, {-6, 16}, {-1,
              14}, {-3, -14}, {-13, -15}, {-4, -16}, {-12, -17}, {-2, -18}}], 
           "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{16, 14, 11, 5, 15, 16, 10, 1, 17, 5, 4, 15, 
             4, 6, 15, 41, 39}], 
           "NumericalThresholds" -> {-0.34189176559448237`, \
-0.8770897686481475, 0.7264223396778108, 
            0.5121456384658815, -0.8154746294021605, 0.85794734954834, 
            0.2865122854709626, 1.0470181703567507`, -1.0374458432197569`, 
            1.038109600543976, -0.2793003320693969, -0.7811749279499053, \
-1.4504510164260862`, 
            2.23828399181366, -0.8806085884571074, -0.47131058573722834`, \
-0.3673775196075439}, "LeafValues" -> 
           RawArray["Real32",{0.04865157976746559, -0.06849423050880432, 
             0.015306917019188404`, -0.03139934316277504, 
             0.006966619752347469, 
             0.04755635932087898, -0.041334234178066254`, \
-0.0451531819999218, -0.06360448151826859, 
             0.022612951695919037`, -0.00490699615329504, 0.06229616701602936,
              0.036674197763204575`, -0.06111038476228714, \
-0.02385719306766987, 0.029486753046512604`, 0.04287916049361229, 
             0.05430404469370842}], "Children" -> 
           RawArray["Integer16",{{2, 3}, {5, 4}, {7, 6}, {9, 10}, {11, 12}, {
             14, -7}, {13, 8}, {-8, -9}, {-3, 15}, {-5, -11}, {17, -12}, {-6, 
             16}, {-2, -14}, {-4, -15}, {-10, -16}, {-13, -17}, {-1, -18}}], 
           "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{15, 24, 6, 20, 14, 15, 12, 13, 7, 3, 5, 14, 
             1, 15, 33, 24}], 
           "NumericalThresholds" -> {-0.36554296314716334`, 
            0.9670104980468751, 0.3033973723649979, -1.105591535568237, 
            0.9670754969120027, -0.7811749279499053, 
            0.7689864039421083, -0.9859244227409362, -0.47248618304729456`, \
-0.23216090351343152`, 
            0.09566425532102586, -1.4260306954383848`, -0.9907668232917785, 
            0.8979452550411225, 1.088809370994568, 1.001142203807831}, 
           "LeafValues" -> 
           RawArray["Real32",{0.003211408853530884, -0.06063405051827431, 
             0.050614457577466965`, -0.008808008395135403, 
             0.02451777458190918, -0.023840615525841713`, 
             0.032963257282972336`, -0.04088444262742996, 
             0.05611041933298111, -0.04649282991886139, -0.05994435399770737, 
             0.016431760042905807`, 0.04744141176342964, 
             0.03898351266980171, -0.031318798661231995`, 
             0.009527510032057762, 0.03911544382572174}], "Children" -> 
           RawArray["Integer16",{{2, 3}, {4, 6}, {7, 5}, {15, 11}, {-4, 14}, {
             8, 16}, {9, -8}, {12, -9}, {-2, 10}, {-10, -11}, {-5, -12}, {-3, 
             13}, {-13, -14}, {-6, -15}, {-1, -16}, {-7, -17}}], 
           "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{16, 4, 9, 5, 24, 6, 24, 10, 5, 4, 17, 5, 40, 
             5, 38, 35}], 
           "NumericalThresholds" -> {-0.34189176559448237`, \
-0.18622988462448117`, 0.42209614813327795`, 0.5121456384658815, 
            1.0313109159469607`, 0.9914104342460633, 0.9949781298637391, 
            0.31618709862232214`, 
            1.038109600543976, -0.34787397086620325`, -1.0415491461753843`, \
-1.1897714138031004`, -0.4606254696846008, 
            2.2283465862274174`, -0.3381828963756561, 0.31559394299983984`}, 
           "LeafValues" -> 
           RawArray["Real32",{0.026254091411828995`, -0.05590306594967842, 
             0.012271313928067684`, -0.03399509936571121, 0.00564963323995471,
              0.050445202738046646`, -0.024997036904096603`, 
             0.03823922947049141, -0.04332183301448822, -0.003911102656275034,
              0.044791560620069504`, 
             0.018819579854607582`, -0.04932969808578491, 
             0.03321061283349991, -0.019036447629332542`, 
             0.032043956220149994`, 0.03877170756459236}], "Children" -> 
           RawArray["Integer16",{{2, 3}, {5, 4}, {8, 6}, {11, 9}, {
             7, -6}, {-4, 14}, {13, 10}, {12, -9}, {-5, -10}, {15, 
             16}, {-3, -12}, {-2, -13}, {-1, -14}, {-7, -15}, {-8, -16}, \
{-11, -17}}], "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 
           0, "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{16, 14, 13, 13, 4, 15, 41, 15, 14, 5, 17, 12,
              2, 41, 7, 11}], 
           "NumericalThresholds" -> {-0.34189176559448237`, \
-0.7800232172012328, 
            1.047372877597809, -0.45876853168010706`, -0.2793003320693969, 
            1.1659487485885622`, -0.7201627492904662, -0.7811749279499053, \
-1.4260306954383848`, 1.038109600543976, -1.0374458432197569`, 
            0.6857551634311677, -0.8971639275550841, -0.47131058573722834`, 
            2.2409479618072514`, 0.3741967678070069}, "LeafValues" -> 
           RawArray["Real32",{0.04139704629778862, -0.036096639931201935`, 
             0.011353093199431896`, -0.02279871702194214, 
             0.005151593126356602, 
             0.0462682768702507, -0.032163772732019424`, \
-0.046267032623291016`, 0.02597525157034397, 
             0.036505963653326035`, -0.003519992344081402, 
             0.01819906197488308, -0.04194405674934387, 0.03062363527715206, 
             0.03161091357469559, -0.01741553656756878, \
-0.050132960081100464`}], "Children" -> 
           RawArray["Integer16",{{2, 3}, {5, 4}, {7, 6}, {11, 10}, {8, -6}, {
             15, -7}, {-2, 12}, {9, 14}, {-1, 13}, {-5, -11}, {-3, -12}, {
             16, -13}, {-10, -14}, {-9, -15}, {-4, -16}, {-8, -17}}], 
           "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{14, 14, 6, 20, 4, 12, 14, 14, 3, 8, 14, 33, 
             36, 36, 3}], 
           "NumericalThresholds" -> {0.6912020146846772, -0.8770897686481475, 
            0.4413882344961167, -1.105591535568237, -0.3525408059358596, 
            0.7261087298393251, 
            0.9865587651729585, -1.3520826697349546`, -0.13516574352979657`, \
-0.1523298844695091, -1.3648080229759214`, 1.0754356384277346`, 
            0.1503616496920586, 0.014365941751748325`, 1.9363993406295779`}, 
           "LeafValues" -> 
           RawArray["Real32",{0.02991393208503723, -0.04376780986785889, 
             0.001743375207297504, -0.0077644591219723225`, 
             0.018483411520719528`, 
             0.04078155755996704, -0.030683331191539764`, \
-0.021901194006204605`, 
             0.0307544507086277, -0.04628278315067291, -0.031944260001182556`,
              0.023767344653606415`, 0.01279462967067957, 
             0.006844526156783104, 
             0.03578338399529457, -0.017634693533182144`}], "Children" -> 
           RawArray["Integer16",{{2, 3}, {5, 4}, {6, 7}, {13, 12}, {11, 8}, {
             9, -7}, {-4, 15}, {-6, 14}, {
             10, -10}, {-2, -11}, {-1, -12}, {-5, -13}, {-3, -14}, {-9, -15}, \
{-8, -16}}], "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0,
            "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{16, 24, 9, 8, 15, 6, 3, 6, 15, 17, 5, 24, 13,
              32, 35}], 
           "NumericalThresholds" -> {-0.34189176559448237`, 
            0.9589562416076661, 0.42209614813327795`, 
            0.12227478623390199`, -0.842630624771118, 
            0.9914104342460633, -0.23216090351343152`, -0.6955085992813109, \
-0.7811749279499053, -1.0529266595840452`, 0.09566425532102586, 
            1.001142203807831, -0.9859244227409362, -1.3392773270606992`, 
            0.22536954283714297`}, "LeafValues" -> 
           RawArray["Real32",{0.01569427363574505, -0.03838426247239113, 
             0.03191107511520386, -0.0243795495480299, 0.00468029547482729, 
             0.030689392238855362`, -0.01812002807855606, \
-0.04081892967224121, -0.027614902704954147`, 
             0.020782552659511566`, -0.0028096919413655996`, 
             0.01025389414280653, 0.026194250211119652`, 
             0.037760134786367416`, -0.013583279214799404`, 
             0.02682904526591301}], "Children" -> 
           RawArray["Integer16",{{2, 3}, {4, 5}, {7, 6}, {11, 10}, {13, 
             9}, {-4, 14}, {8, -8}, {-2, -9}, {15, 
             12}, {-5, -11}, {-1, -12}, {-10, -13}, {-3, -14}, {-7, -15}, \
{-6, -16}}], "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0,
            "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{16, 14, 11, 13, 4, 3, 8, 24, 17, 38, 17, 17, 
             14, 35, 15}], 
           "NumericalThresholds" -> {-0.34189176559448237`, \
-0.8770897686481475, 
            0.7264223396778108, -0.45876853168010706`, -0.3525408059358596, \
-0.23216090351343152`, -0.1523298844695091, 1.0302062034606936`, 
            0.4250469654798508, -0.1436744853854179, -1.0374458432197569`, \
-1.0529266595840452`, -1.3648080229759214`, 
            0.31559394299983984`, -0.8806085884571074}, "LeafValues" -> 
           RawArray["Real32",{0.024308959022164345`, -0.03559747710824013, 
             0.008228953927755356, -0.01371770165860653, 
             0.0037627844139933586`, 
             0.02908109501004219, -0.037653859704732895`, \
-0.028487777337431908`, 
             0.034692876040935516`, -0.020298857241868973`, \
-0.020460452884435654`, 0.011814330704510212`, -0.0025287228636443615`, 
             0.019015565514564514`, 0.024794379249215126`, 
             0.015445121563971043`}], "Children" -> 
           RawArray["Integer16",{{2, 3}, {5, 4}, {6, 9}, {11, 12}, {13, 8}, {
             7, -7}, {-2, 10}, {14, -9}, {-4, -10}, {-8, -11}, {-3, 
             15}, {-5, -13}, {-1, -14}, {-6, -15}, {-12, -16}}], 
           "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{14, 24, 11, 4, 15, 15, 3, 6, 15, 16, 36, 13, 
             24, 29, 35}], 
           "NumericalThresholds" -> {0.7746406793594361, 0.9589562416076661, 
            0.7264223396778108, 0.2002881169319153, -0.842630624771118, 
            0.5467736124992372, -0.23216090351343152`, -0.6955085992813109, \
-0.7811749279499053, 0.85794734954834, 
            0.04327379353344441, -0.9859244227409362, 1.001142203807831, 
            1.2156217098236086`, 0.22536954283714297`}, "LeafValues" -> 
           RawArray["Real32",{0.012796870432794094`, -0.031216228380799294`, 
             0.02576768957078457, -0.007338257972151041, \
-0.0006306496798060834, 
             0.02498035877943039, -0.014087395742535591`, \
-0.033888474106788635`, -0.021156730130314827`, 
             0.01658499799668789, -0.01953214779496193, 0.004854339640587568, 
             0.031042754650115967`, 0.02139909937977791, 0.008848154917359352,
              0.021457489579916}], "Children" -> 
           RawArray["Integer16",{{2, 3}, {4, 5}, {7, 6}, {14, 11}, {12, 
             9}, {-4, 10}, {8, -8}, {-2, -9}, {15, 
             13}, {-7, -11}, {-5, -12}, {-3, -13}, {-10, -14}, {-1, -15}, \
{-6, -16}}], "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0,
            "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{16, 24, 11, 5, 24, 20, 3, 7, 38, 40, 40, 3, 
             17, 38, 12}], 
           "NumericalThresholds" -> {-0.2683339267969131, 0.9503138661384584, 
            0.6164726018905641, 0.5121456384658815, 
            1.0313109159469607`, -0.3317135274410247, -0.22157962620258329`, \
-0.47248618304729456`, -0.21395087987184522`, -0.4619783759117126, \
-0.5915842652320861, 
            1.0085546374320986`, -1.0374458432197569`, -0.06561670452356337, 
            1.8790097236633303`}, "LeafValues" -> 
           RawArray["Real32",{0.006602592766284943, -0.029591264203190804`, 
             0.019290460273623466`, -0.013658075593411922`, 
             0.0027336094062775373`, 
             0.028364043682813644`, -0.01836075261235237, \
-0.031553562730550766`, -0.023890702053904533`, 0.02419458143413067, 
             0.02116492949426174, 
             0.01377836149185896, -0.0028280846308916807`, 
             0.010878447443246841`, -0.019719647243618965`, \
-0.010871302336454391`}], "Children" -> 
           RawArray["Integer16",{{2, 3}, {4, 5}, {7, 6}, {13, 12}, {9, -6}, {
             15, -7}, {8, -8}, {-2, 14}, {10, -10}, {
             11, -11}, {-3, -12}, {-5, -13}, {-1, -14}, {-9, -15}, {-4, \
-16}}], "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{16, 14, 11, 13, 4, 14, 5, 3, 38, 3, 29, 5, 1,
              12, 26}], 
           "NumericalThresholds" -> {-0.2683339267969131, -0.8770897686481475,
             0.6164726018905641, -0.45876853168010706`, -0.3525408059358596, \
-1.3520826697349546`, 
            0.09566425532102586, -0.23216090351343152`, -0.21180240064859387`,
             1.0085546374320986`, 0.4128358662128449, 
            0.09566425532102586, -0.9227855503559111, 1.8790097236633303`, 
            1.1317244172096255`}, "LeafValues" -> 
           RawArray["Real32",{0.01271145325154066, -0.02617514319717884, 
             0.010293805971741676`, -0.017098266631364822`, 
             0.002523428527638316, 0.025090642273426056`, 
             0.0214892216026783, -0.0125794792547822, -0.028216229751706123`, \
-0.019012480974197388`, -0.0025452759582549334`, 0.01741071790456772, 
             0.005457225255668163, 
             0.017107278108596802`, -0.009784172289073467, 
             0.007423812989145517}], "Children" -> 
           RawArray["Integer16",{{2, 3}, {5, 4}, {8, 7}, {12, 10}, {11, 
             6}, {-6, 13}, {-4, 14}, {
             9, -9}, {-2, -10}, {-5, -11}, {-1, -12}, {-3, 
             15}, {-7, -14}, {-8, -15}, {-13, -16}}], "NominalSplits" -> {}, 
           "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
           0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{16, 14, 12, 5, 16, 24, 29, 1, 9, 14, 5, 38, 
             3, 17, 34, 15}], 
           "NumericalThresholds" -> {-0.2683339267969131, -0.8770897686481475,
             0.7364032268524171, 0.5121456384658815, 1.1641564369201662`, 
            1.0302062034606936`, 0.4128358662128449, 1.3215551972389223`, 
            0.10815669596195222`, -1.3520826697349546`, \
-0.49946597218513483`, -0.21180240064859387`, 
            1.0085546374320986`, -1.0415491461753843`, -1.388644218444824, \
-0.8806085884571074}, "LeafValues" -> 
           RawArray["Real32",{0.01198523584753275, -0.02564472332596779, 
             0.005268567241728306, -0.010529535822570324`, 
             0.002194570144638419, -0.018146822229027748`, 
             0.023417484015226364`, 
             0.019347401335835457`, -0.02583768032491207, \
-0.015237392857670784`, 0.012475072406232357`, 
             0.017869044095277786`, -0.020106710493564606`, \
-0.0022907485254108906`, 0.007519522216171026, -0.007576339412480593, 
             0.010229111649096012`}], "Children" -> 
           RawArray["Integer16",{{2, 3}, {6, 4}, {8, 5}, {14, 13}, {15, -6}, {
             7, -7}, {-1, 10}, {9, -9}, {12, -10}, {-8, 
             11}, {-11, -12}, {-2, -13}, {-5, -14}, {-3, 
             16}, {-4, -16}, {-15, -17}}], "NominalSplits" -> {}, "RootIndex" -> 
           1, "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{16, 14, 12, 8, 16, 4, 38, 1, 10, 39, 20, 24, 
             5, 29}], 
           "NumericalThresholds" -> {-0.2683339267969131, -0.8770897686481475,
             0.7689864039421083, 0.12227478623390199`, 
            1.1641564369201662`, -0.2793003320693969, -0.21395087987184522`, 
            1.3960189223289492`, 
            0.2158572003245354, -0.3677475303411483, -1.3791003823280332`, 
            1.0031471252441408`, 0.09566425532102586, -1.2070509195327757`}, 
           "LeafValues" -> 
           RawArray["Real32",{0.009045072831213474, -0.022052904590964317`, 
             0.008343123830854893, -0.009642989374697208, \
-0.0014878286747261882`, -0.016437847167253494`, 0.021309586241841316`, 
             0.017798515036702156`, -0.023288436233997345`, \
-0.015596109442412853`, 0.015372962690889835`, 0.002716929418966174, 
             0.013298439793288708`, 
             0.005478912498801947, -0.006490334402769804}], "Children" -> 
           RawArray["Integer16",{{2, 3}, {6, 4}, {8, 5}, {13, 11}, {14, -6}, {
             7, -7}, {10, -8}, {9, -9}, {-2, -10}, {
             12, -11}, {-5, -12}, {-1, -13}, {-3, -14}, {-4, -15}}], 
           "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{15, 14, 9, 24, 17, 5, 3, 8, 29, 14, 38, 6, 
             15, 36}], 
           "NumericalThresholds" -> {-0.36554296314716334`, \
-0.8770897686481475, 0.38749937713146215`, 
            1.0302062034606936`, -0.5926614999771117, 
            0.2861070036888123, -0.23216090351343152`, -0.1523298844695091, 
            0.4128358662128449, -1.3520826697349546`, -0.2879918068647384, 
            0.747745305299759, -0.8815220296382903, 0.16051298379898074`}, 
           "LeafValues" -> 
           RawArray["Real32",{0.009540230967104435, -0.019427763298153877`, 
             0.005441585555672646, -0.003604837926104665, 
             0.01923820562660694, -0.011571572162210941`, 
             0.0007880163029767573, -0.021042954176664352`, \
-0.013021762482821941`, 0.015863245353102684`, 0.009524411521852016, 
             0.014261333271861076`, -0.008360235951840878, 
             0.008056499063968658, 0.0032431180588901043`}], "Children" -> 
           RawArray["Integer16",{{2, 3}, {4, 6}, {7, 5}, {9, -5}, {-4, 12}, {
             13, 14}, {8, -8}, {-2, -9}, {-1, 10}, {-10, 
             11}, {-11, -12}, {-6, -13}, {-3, -14}, {-7, -15}}], 
           "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{16, 24, 9, 4, 13, 14, 6, 5, 1, 6, 39, 36, 17,
              1, 12}], 
           "NumericalThresholds" -> {-0.2683339267969131, 0.9503138661384584, 
            0.298721730709076, -0.2721042186021804, -0.45876853168010706`, \
-1.4260306954383848`, 0.747745305299759, -1.1897714138031004`, 
            1.0278317928314211`, -0.6912169158458709, -0.3677475303411483, 
            0.04327379353344441, -1.0415491461753843`, -0.9788344800472258, 
            1.882127642631531}, "LeafValues" -> 
           RawArray["Real32",{0.00386016140691936, -0.01886480487883091, 
             0.014116262085735798`, -0.010742466896772385`, 
             0.017790181562304497`, -0.0009473123936913908, 
             0.010596889071166515`, -0.008375385776162148, \
-0.015306936576962471`, -0.01921878010034561, -0.010588472709059715`, 
             0.012133445590734482`, 0.0023854714818298817`, 
             0.006372601259499788, 
             0.007529843598604202, -0.0062677208334207535`}], "Children" -> 
           RawArray["Integer16",{{2, 3}, {5, 4}, {8, 7}, {6, -5}, {13, 
             12}, {-3, 11}, {-4, 15}, {-2, 9}, {10, -10}, {-9, -11}, {
             14, -12}, {-6, -13}, {-1, -14}, {-7, -15}, {-8, -16}}], 
           "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{16, 14, 12, 16, 4, 4, 24, 33, 31, 41, 39, 21,
              34, 26}], 
           "NumericalThresholds" -> {-0.34189176559448237`, \
-0.8770897686481475, 0.7364032268524171, 
            1.1641564369201662`, -0.3417965173721313, 
            0.2002881169319153, -0.7430124282836913, -1.454125106334686, \
-0.8878214359283446, -0.47131058573722834`, -0.36888509988784784`, \
-1.233241021633148, -1.388644218444824, 1.0867720842361452`}, "LeafValues" -> 
           RawArray["Real32",{0.006811557803303003, -0.012767026200890541`, 
             0.0065331123769283295`, -0.006988907232880592, \
-0.012138613499701023`, 
             0.015654906630516052`, -0.000755283806938678, \
-0.009511679410934448, -0.020298808813095093`, -0.01557316817343235, 
             0.01108268927782774, 0.011599498800933361`, 
             0.002372231101617217, -0.003966626711189747, 
             0.004493838641792536}], "Children" -> 
           RawArray["Integer16",{{2, 3}, {5, 6}, {7, 4}, {13, -5}, {10, 11}, {
             14, 12}, {8, 
             9}, {-2, -9}, {-8, -10}, {-1, -11}, {-6, -12}, {-7, -13}, {-4, \
-14}, {-3, -15}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{15, 14, 9, 16, 24, 38, 9, 38, 40, 2, 38, 1, 
             15, 39, 15, 16}], 
           "NumericalThresholds" -> {-0.4737448692321777, -0.8770897686481475,
             0.298721730709076, -0.2683339267969131, 
            1.0302062034606936`, -0.21395087987184522`, -0.1911138594150543, \
-0.5281474590301513, -0.4246988892555236, 
            0.16193128377199176`, -0.21180240064859387`, 1.5809736251831057`, 
            1.1659487485885622`, 
            0.22634004801511767`, -0.8815220296382903, -0.962229162454605}, 
           "LeafValues" -> 
           RawArray["Real32",{0.010858996771275997`, -0.014618230983614922`, 
             0.004090962465852499, -0.0013979008654132485`, \
-0.006532289087772369, 0.014552975073456764`, 0.012189478613436222`, 
             0.002968159969896078, 0.005859170109033585, 
             0.010344629175961018`, -0.014978807419538498`, \
-0.008453086018562317, -0.009732433594763279, -0.008931283839046955, \
-0.003586768638342619, 0.006170219276100397, 0.001356637105345726}], 
           "Children" -> 
           RawArray["Integer16",{{2, 3}, {5, 7}, {10, 4}, {-4, 12}, {6, -6}, {
             8, -7}, {15, 16}, {-1, 9}, {-9, -10}, {11, -11}, {-2, -12}, {
             13, -13}, {14, -14}, {-5, -15}, {-3, -16}, {-8, -17}}], 
           "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{15, 24, 9, 16, 9, 24, 35, 27, 40, 9, 23, 37, 
             1, 26, 39, 16}], 
           "NumericalThresholds" -> {-0.4737448692321777, 0.9943969547748567, 
            0.298721730709076, -0.2683339267969131, -0.1911138594150543, 
            1.0313109159469607`, 0.32206892967224127`, 
            0.45907542109489446`, -0.30323423445224756`, 
            0.15993577986955645`, -0.2182834297418594, -0.22582449018955228`, 
            1.5809736251831057`, -1.480274438858032, -0.3689055889844894, \
-0.962229162454605}, "LeafValues" -> 
           RawArray["Real32",{0.002439484465867281, -0.014488845132291317`, 
             0.0068078613840043545`, -0.0012581107439473271`, \
-0.007536119781434536, 0.0026713439729064703`, 0.01323716901242733, 
             0.006311158649623394, 0.01308710128068924, 
             0.007664392236620188, -0.009329970926046371, \
-0.011064865626394749`, 
             0.00944560207426548, -0.008759190328419209, \
-0.0041257236152887344`, 0.005602066405117512, 0.0012209734413772821`}], 
           "Children" -> 
           RawArray["Integer16",{{2, 3}, {5, 6}, {10, 4}, {-4, 13}, {9, 16}, {
             7, -7}, {8, -8}, {-3, 12}, {15, -10}, {
             11, -11}, {-2, -12}, {-9, -13}, {
             14, -14}, {-5, -15}, {-1, -16}, {-6, -17}}], 
           "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{27, 14, 18, 31, 9, 2, 15, 28, 34, 14, 2, 16, 
             38, 12, 25}], 
           "NumericalThresholds" -> {0.3482383936643601, -1.0577433705329893`,
             0.32815340161323553`, -0.8600965738296508, 0.11304024234414102`, 
            0.37287583947181707`, -0.7811749279499053, 0.8629501163959504, 
            0.7140295803546907, -1.4260306954383848`, -0.8597665429115294, \
-0.2683339267969131, -0.21180240064859387`, 1.882127642631531, 
            0.9992722868919374}, "LeafValues" -> 
           RawArray["Real32",{-0.0011568717891350389`, 0.010148318484425545`, 
             0.0077174087055027485`, -0.012865263968706131`, \
-0.013810466974973679`, -0.0031989836134016514`, -0.008975023403763771, 
             0.0007864398648962379, 0.0019318743143230677`, 
             0.012105991132557392`, 0.009017913602292538, 
             0.005001289304345846, -0.005976022221148014, \
-0.009358597919344902, -0.0036463921424001455`, 0.0037648167926818132`}], 
           "Children" -> 
           RawArray["Integer16",{{3, 2}, {9, 7}, {12, 4}, {5, -5}, {13, 
             6}, {-6, -7}, {8, -8}, {-3, 15}, {10, -10}, {-2, 
             11}, {-11, -12}, {-1, 14}, {-4, -14}, {-13, -15}, {-9, -16}}], 
           "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{15, 14, 6, 41, 25, 34, 14, 15, 28, 40, 35, 
             39, 14, 36, 25, 12}], 
           "NumericalThresholds" -> {-0.4737448692321777, \
-1.0577433705329893`, 
            0.747745305299759, -0.7241130173206328, -1.338809788227081, 
            0.1743104383349419, -1.4449416399002073`, -0.7811749279499053, 
            0.8629501163959504, 0.49622145295143133`, 
            0.22536954283714297`, -0.36977444589138025`, 
            0.9557385444641114, -0.5457324981689452, 0.9894485473632814, 
            1.8874574899673464`}, "LeafValues" -> 
           RawArray["Real32",{0.004643066320568323, -0.0037917322479188442`, 
             0.006945667788386345, -0.0010425233049318194`, \
-0.006150201428681612, -0.011129035614430904`, 0.011171229183673859`, 
             0.009638114832341671, 0.000840597553178668, 
             0.0016527061816304922`, -0.012850414030253887`, 
             0.00872894562780857, 
             0.004685454070568085, -0.004862850531935692, \
-0.008282981812953949, 0.0033275780733674765`, -0.0032106253784149885`}], 
           "Children" -> 
           RawArray["Integer16",{{2, 3}, {6, 8}, {4, 13}, {-2, 5}, {-5, 
             10}, {-1, 7}, {-7, 11}, {9, -9}, {-3, 15}, {14, -11}, {-8, 
             12}, {-12, -13}, {-4, 16}, {-6, -15}, {-10, -16}, {-14, -17}}], 
           "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{27, 24, 18, 39, 38, 4, 41, 39, 39, 36, 16, 5,
              3, 13, 40, 38}], 
           "NumericalThresholds" -> {0.3679134547710419, 0.9589562416076661, 
            0.32815340161323553`, 
            1.7336061000823977`, -0.3396416753530502, -0.2721042186021804, \
-0.7178665995597838, 
            0.1800322234630585, -0.3677475303411483, -0.10717839747667311`, \
-0.2683339267969131, 0.2861070036888123, -0.49388316273689264`, 
            1.5643631815910342`, -0.587079495191574, -0.1488295271992683}, 
           "LeafValues" -> 
           RawArray["Real32",{-0.0009913445683196187, 0.0020462593529373407`, 
             0.0033503915183246136`, -0.009404673241078854, \
-0.011654224246740341`, -0.006811959203332663, 0.010707742534577847`, 
             0.0074220378883183, -0.0027972166426479816`, 
             0.009453403763473034, 
             0.0034099637996405363`, -0.005034950096160173, 
             0.0006111395196057856, 
             0.007022650446742773, -0.0030954452231526375`, 
             0.003766910172998905, 0.0018791415495797992`}], "Children" -> 
           RawArray["Integer16",{{3, 2}, {12, 6}, {11, 4}, {5, -5}, {-4, 8}, {
             7, -7}, {-3, 9}, {-6, -9}, {10, 13}, {-8, -11}, {-1, 14}, {15, 
             16}, {-10, -14}, {-12, -15}, {-2, -16}, {-13, -17}}], 
           "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{27, 14, 18, 1, 8, 38, 35, 15, 28, 12, 35, 5, 
             16, 24, 12, 41}], 
           "NumericalThresholds" -> {0.3679134547710419, -1.0577433705329893`,
             0.32815340161323553`, 
            1.0278317928314211`, -0.03463419340550899, -0.1147903874516487, 
            0.480051800608635, -0.7811749279499053, 
            0.8629501163959504, -1.0376307368278501`, 
            1.0000000180025095`*^-35, -1.1897714138031004`, \
-0.2683339267969131, 1.0126264691352846`, 
            1.8874574899673464`, -0.21595355123281476`}, "LeafValues" -> 
           RawArray["Real32",{-0.0008922101114876568, 0.004321554210036993, 
             0.005702548660337925, -0.01015388686209917, \
-0.009843132458627224, -0.0055393497459590435`, -0.00024980161106213927`, 
             0.009184605441987514, 0.0005019772797822952, 
             0.0015161822084337473`, 0.003984793089330196, 
             0.006697624456137419, -0.007073254324495792, \
-0.00433671660721302, 0.008506369777023792, -0.002567088231444359, 
             0.0030144546180963516`}], "Children" -> 
           RawArray["Integer16",{{3, 2}, {7, 8}, {13, 4}, {5, -5}, {12, 
             6}, {-6, -7}, {10, -8}, {9, -9}, {-3, 16}, {11, -11}, {-2, 
             14}, {-4, -13}, {-1, 15}, {-12, -15}, {-14, -16}, {-10, -17}}], 
           "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{26, 14, 40, 17, 39, 38, 40, 1, 1, 5, 3, 41, 
             11, 39, 16}], 
           "NumericalThresholds" -> {0.395279735326767, -1.1293173432350156`, 
            1.6915439963340761`, 
            1.050943732261658, -0.37623719871044153`, -0.1436744853854179, \
-0.4619783759117126, 
            1.0922259688377383`, -1.0324591398239134`, -1.1062736511230467`, \
-0.2004914656281471, -0.7157281637191771, 
            1.854556739330292, -0.3677475303411483, -0.962229162454605}, 
           "LeafValues" -> 
           RawArray["Real32",{-0.0005886611761525273, 0.009107296355068684, 
             0.0013282012660056353`, -0.010315054096281528`, \
-0.009397380985319614, 0.006120315752923489, -0.004527680575847626, 
             0.006976655684411526, -0.00502576120197773, 
             0.0026016952469944954`, -0.006007542833685875, 
             0.0019321843283250928`, 
             0.003191894618794322, -0.0020174519158899784`, 
             0.005571932066231966, 0.0006209948915056884}], "Children" -> 
           RawArray["Integer16",{{3, 2}, {5, 11}, {4, -4}, {8, 6}, {-2, 7}, {
             10, -7}, {9, -8}, {-1, 13}, {-6, -10}, {-5, -11}, {12, 15}, {-3, 
             14}, {-9, -14}, {-13, -15}, {-12, -16}}], "NominalSplits" -> {}, 
           "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
           0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{27, 14, 40, 15, 39, 1, 33, 37, 3, 38, 36, 40,
              8, 1, 16, 41}], 
           "NumericalThresholds" -> {0.3679134547710419, -1.1293173432350156`,
             1.6915439963340761`, 1.1659487485885622`, -0.37623719871044153`, 
            1.0922259688377383`, -1.5297255516052244`, -0.3830467611551284, \
-0.2004914656281471, -0.2879918068647384, 
            0.19952673465013507`, -0.4619783759117126, 
            2.212304830551148, -0.9907668232917785, -0.9254826307296752, \
-0.17248731851577756`}, "LeafValues" -> 
           RawArray["Real32",{-0.00023114205396268517`, 0.008196566253900528, 
             0.0011113985674455762`, -0.009283548220992088, \
-0.003456743434071541, 
             0.00534208957105875, -0.004427499603480101, \
-0.007871976122260094, -0.0046111284755170345`, 0.000824286078568548, 
             0.005946021061390638, 0.0018429129850119352`, 
             0.006278989836573601, -0.001532759633846581, 
             0.0023489659652113914`, 0.00004199171598884277, 
             0.0019327386980876327`}], "Children" -> 
           RawArray["Integer16",{{3, 2}, {5, 9}, {4, -4}, {6, 7}, {-2, 
             12}, {-1, 13}, {-5, 8}, {-8, -9}, {10, 15}, {-3, 
             11}, {-11, -12}, {14, -13}, {-7, -14}, {-6, -15}, {
             16, -16}, {-10, -17}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{31, 24, 40, 15, 2, 24, 25, 17, 35, 15, 25, 
             23, 5, 39, 38, 41, 16}], 
           "NumericalThresholds" -> {-0.49653525650501246`, 
            0.9943969547748567, 1.5893217325210574`, 1.344653904438019, 
            0.7205554842948915, 1.0313109159469607`, -1.338809788227081, 
            0.4250469654798508, 0.32206892967224127`, -0.8154746294021605, 
            0.5832531154155732, -0.21281021088361737`, 
            0.09566425532102586, -0.37006631493568415`, -0.37020801007747645`,
             0.8696209490299226, -0.9766304492950438}, "LeafValues" -> 
           RawArray["Real32",{0.000495840038638562, -0.0001959308865480125, 
             0.006918216124176979, -0.008591115474700928, \
-0.0032843744847923517`, -0.0012337593361735344`, 
             0.007526833098381758, -0.008298797532916069, \
-0.0053422157652676105`, 0.0018057397101074457`, 0.0051498571410775185`, 
             0.0009142059134319425, -0.005092646926641464, 
             0.0019138422794640064`, 0.0036923473235219717`, 
             0.0031053272541612387`, -0.0027660406194627285`, 
             0.000776980712544173}], "Children" -> 
           RawArray["Integer16",{{3, 2}, {11, 6}, {4, -4}, {5, 7}, {-1, 8}, {
             9, -7}, {-5, 12}, {16, -9}, {10, -10}, {-3, 15}, {-2, 
             13}, {-8, -13}, {14, 
             17}, {-12, -15}, {-11, -16}, {-6, -17}, {-14, -18}}], 
           "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{16, 24, 39, 15, 2, 24, 33, 34, 25, 23, 15, 
             38, 40, 1, 40, 38}], 
           "NumericalThresholds" -> {-0.2683339267969131, 0.9943969547748567, 
            1.8576233983039858`, 1.344653904438019, 0.7205554842948915, 
            1.0313109159469607`, -1.5297255516052244`, 0.5271859169006349, 
            0.5832531154155732, -0.20786489546298978`, -0.8154746294021605, \
-0.0953429490327835, -0.5146058201789855, -0.604374200105667, \
-0.628180295228958, -0.37020801007747645`}, "LeafValues" -> 
           RawArray["Real32",{-0.00024383270647376776`, 
             0.00033130994415841997`, 
             0.0063065215945243835`, -0.007887049578130245, \
-0.002640193561092019, -0.0020894352346658707`, 
             0.006774149835109711, -0.00736629031598568, 
             0.0015544653870165348`, 
             0.002201189985498786, -0.004337936639785767, 
             0.0046348716132342815`, -0.004707094747573137, 
             0.003930128179490566, 
             0.0011702084448188543`, -0.0006909577059559524, 
             0.0027947945054620504`}], "Children" -> 
           RawArray["Integer16",{{2, 3}, {9, 6}, {4, -4}, {5, 7}, {-2, 12}, {
             8, -7}, {-5, 10}, {11, -9}, {-1, 13}, {-8, -11}, {-3, 
             16}, {-6, -13}, {15, 14}, {-14, -15}, {-10, -16}, {-12, -17}}], 
           "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{31, 24, 40, 15, 39, 1, 1, 38, 23, 17, 11, 2, 
             40, 39, 36, 41}], 
           "NumericalThresholds" -> {-0.49653525650501246`, 
            0.9943969547748567, 1.5893217325210574`, 
            1.1659487485885622`, -0.37623719871044153`, 
            1.0922259688377383`, -1.0801165103912351`, -0.3332642316818237, \
-0.3630635887384414, 1.8015257716178896`, 
            1.854556739330292, -0.45434278249740595`, -0.40928938984870905`, \
-0.3690641373395919, 0.04327379353344441, -0.2239430397748947}, "LeafValues" -> 
           RawArray["Real32",{0.00041652109939605, -0.00035536641371436417`, 
             0.006110257003456354, -0.007138988468796015, \
-0.0060886600986123085`, 0.005080845206975937, -0.0036803570110350847`, 
             0.004871025215834379, 
             0.00031198878423310816`, -0.001043426338583231, \
-0.004907469730824232, -0.0013112048618495464`, -0.00035604042932391167`, 
             0.003863900899887085, 0.002206460339948535, 
             0.0006902626482769847, 0.0015063565224409103`}], "Children" -> 
           RawArray["Integer16",{{3, 2}, {12, 5}, {4, -4}, {6, 9}, {-3, 
             7}, {-1, 11}, {-6, 8}, {-8, -9}, {-5, 
             10}, {-10, -11}, {-7, -12}, {13, 15}, {14, -14}, {-2, -15}, {-13,
              16}, {-16, -17}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{16, 14, 39, 17, 39, 2, 38, 40, 26, 29, 40, 
             39, 35, 37, 36}], 
           "NumericalThresholds" -> {-0.2683339267969131, \
-1.1990135908126829`, 1.8576233983039858`, 
            1.050943732261658, -0.37420795857906336`, 
            0.32949444651603704`, -0.16410545259714124`, -0.628180295228958, 
            0.6187754571437837, 0.8586676418781282, -0.4619783759117126, 
            0.3508730530738831, 
            0.32206892967224127`, -0.003249168512411415, \
-1.1539420485496519`}, "LeafValues" -> 
           RawArray["Real32",{0.0058051059022545815`, -0.001630692626349628, 
             0.004249716643244028, -0.006598645821213722, \
-0.004496954381465912, 
             0.001955867512151599, -0.005873674061149359, \
-0.0005351413856260478, -0.0010621827095746994`, 0.002635382814332843, 
             0.0008462833939120173, 0.0041737863793969154`, 
             0.0001310747320530936, 0.0005050157778896391, 
             0.0018629287369549274`, -0.0027615849394351244`}], "Children" -> 
           RawArray["Integer16",{{2, 3}, {5, 8}, {4, -4}, {12, 6}, {-1, 11}, {
             7, -7}, {-5, -8}, {10, 9}, {-9, 13}, {-3, -11}, {-6, -12}, {
             15, -13}, {-10, 14}, {-14, -15}, {-2, -16}}], 
           "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{31, 14, 40, 14, 25, 1, 15, 40, 26, 29, 2, 35,
              37, 37}], 
           "NumericalThresholds" -> {-0.49653525650501246`, \
-1.1990135908126829`, 1.5893217325210574`, 
            0.9955877661705018, -1.338809788227081, -0.8621631860733031, 
            1.713214993476868, -0.628180295228958, 0.6187754571437837, 
            0.8586676418781282, -0.8567311763763427, 
            0.32206892967224127`, -0.7248970568180083, -0.003249168512411415},
            "LeafValues" -> 
           RawArray["Real32",{-0.0004551323363557458, 0.003421615809202194, 
             0.0038247450720518827`, -0.005976560991257429, \
-0.0009549542446620762, -0.0033007601741701365`, 
             0.004986700136214495, -0.0057432078756392, -0.001036283909343183,
              0.0023718446027487516`, 0.0007616550428792834, 
             0.0012897552223876119`, 
             0.0004545142292045057, -0.002295133890584111, 
             0.001676635816693306}], "Children" -> 
           RawArray["Integer16",{{3, 2}, {6, 8}, {4, -4}, {-1, 5}, {13, 7}, {
             11, -7}, {-6, -8}, {10, 9}, {-9, 12}, {-3, -11}, {-2, -12}, {-10,
              14}, {-5, -14}, {-13, -15}}], "NominalSplits" -> {}, 
           "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
           0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{27, 14, 39, 17, 23, 17, 29, 26, 39, 14, 39, 
             28, 17, 41, 40}], 
           "NumericalThresholds" -> {0.3679134547710419, -1.273808181285858, 
            1.8576233983039858`, 1.050943732261658, -0.35839213430881495`, 
            1.8015257716178896`, 0.5264575481414796, 
            0.6805840432643891, -0.36888509988784784`, -1.4387847185134885`, 
            0.3508730530738831, 
            0.8494822382926942, -0.7504363059997557, -0.2239430397748947, 
            0.3535675257444382}, "LeafValues" -> 
           RawArray["Real32",{-0.00029893816099502146`, 0.004957008175551891, 
             0.002944166539236903, -0.0055542332120239735`, \
-0.005131762009114027, 
             0.00009865040192380548, -0.0036211481783539057`, \
-0.001305722980760038, 0.0022857484873384237`, 0.0041586849838495255`, 
             0.0010050603887066245`, 0.00034336280077695847`, 
             0.0003779336402658373, -0.0023457249626517296`, 
             0.001470811665058136, -0.0013586735585704446`}], "Children" -> 
           RawArray["Integer16",{{3, 2}, {9, 7}, {4, -4}, {11, 5}, {-5, 
             6}, {-6, -7}, {-3, 8}, {-8, 12}, {-2, 10}, {-10, -11}, {
             13, -12}, {-9, 14}, {-1, 15}, {-13, -15}, {-14, -16}}], 
           "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{31, 26, 19, 15, 13, 15, 33, 38, 3, 29, 34, 1,
              1, 7, 21}], 
           "NumericalThresholds" -> {-0.49653525650501246`, 
            1.1493549942970278`, -0.03566104918718337, -0.8382937312126159, 
            0.7998968958854676, 
            1.344653904438019, -1.4274257421493528`, -0.09720072150230406, \
-0.40819802880287165`, 0.5264575481414796, 0.21444669365882876`, 
            0.924844115972519, 0.28068979084491735`, 
            2.3163449764251713`, -1.233241021633148}, "LeafValues" -> 
           RawArray[
             "Real32",{-0.0046623023226857185`, -0.0018604760989546776`, 
             0.004724443424493074, 0.004992373753339052, 
             0.0010819860035553575`, 
             0.0005214037955738604, -0.0029677879065275192`, \
-0.005080781877040863, 0.002349402057006955, -0.0002753810549620539, 
             0.000526339455973357, 
             0.00452211732044816, -0.0018895305693149567`, \
-0.0008684928761795163, -0.00016934801533352584`, 0.000644834479317069}], 
           "Children" -> 
           RawArray["Integer16",{{5, 2}, {3, -3}, {8, 4}, {-4, 10}, {-1, 6}, {
             12, 7}, {13, -8}, {9, -9}, {-2, 15}, {11, -11}, {-5, -12}, {-6, 
             14}, {-7, -14}, {-13, -15}, {-10, -16}}], "NominalSplits" -> {}, 
           "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
           0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{27, 14, 39, 14, 25, 27, 39, 29, 15, 14, 2, 
             35, 37, 35}], 
           "NumericalThresholds" -> {0.3679134547710419, -1.273808181285858, 
            1.8576233983039858`, 
            0.9955877661705018, -1.338809788227081, -0.8151686787605285, \
-0.36888509988784784`, 
            0.5264575481414796, -0.7977517545223235, -1.4387847185134885`, \
-0.10916345193982123`, 
            0.32206892967224127`, -0.12173325195908545`, \
-1.5604633688926695`}, "LeafValues" -> 
           RawArray["Real32",{0.001057051937095821, 0.0041944109834730625`, 
             0.002394116949290037, -0.004656249191612005, \
-0.0005599471624009311, -0.004265454597771168, -0.001380756264552474, 
             0.003467598231509328, 
             0.0024622937198728323`, -0.0008390960865654051, 
             0.0008503569406457245, -0.002275865525007248, \
-0.00020378264889586717`, 0.0013841193867847323`, -0.0017590411007404327`}], 
           "Children" -> 
           RawArray["Integer16",{{3, 2}, {7, 8}, {4, -4}, {6, 5}, {14, 
             11}, {-1, -7}, {-2, 10}, {-3, 9}, {
             12, -10}, {-8, -11}, {-6, -12}, {-9, 
             13}, {-13, -14}, {-5, -15}}], "NominalSplits" -> {}, "RootIndex" -> 
           1, "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{31, 26, 40, 18, 15, 41, 25, 2, 36, 39, 15, 
             15, 33, 2, 41}], 
           "NumericalThresholds" -> {-0.49653525650501246`, 
            1.1493549942970278`, 
            1.5893217325210574`, -0.3288619220256805, -0.8390178680419921, \
-0.7172090113162993, -1.1322922110557554`, -0.6776936948299407, \
-0.9142017066478728, -0.3662014156579971, -0.7735228836536406, \
-0.8001334071159362, 
            0.29378156363964086`, -0.44224935770034784`, \
-0.24944838136434552`}, "LeafValues" -> 
           RawArray["Real32",{0.000767463818192482, -0.0016984469257295132`, 
             0.004005103837698698, -0.004326618742197752, 
             0.004266598727554083, 
             0.0016025947406888008`, -0.00285889464430511, \
-0.0034425780177116394`, 0.0020646387711167336`, 
             0.0004435986338648945, -0.000922954292036593, 
             0.000721799791790545, -0.0012288846774026752`, 
             0.0036032062489539385`, -0.0005053327768109739, 
             0.0006053184624761343}], "Children" -> 
           RawArray["Integer16",{{3, 2}, {4, -3}, {6, -4}, {8, 5}, {-5, 
             11}, {-1, 7}, {9, -8}, {-2, 14}, {10, -10}, {-7, -11}, {12, 
             13}, {-6, -13}, {-12, -14}, {-9, 15}, {-15, -16}}], 
           "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{31, 15, 27, 27, 25, 19, 4, 23, 2, 31, 20, 1, 
             2, 25, 41}], 
           "NumericalThresholds" -> {-0.49653525650501246`, \
-0.9133225083351134, -0.7804035544395446, -0.9392286241054534, \
-1.1322922110557554`, -0.03566104918718337, -0.3417965173721313, 
            1.3342642784118655`, -0.681814670562744, 0.38212083280086523`, 
            0.6439566910266877, 
            0.3751885443925858, -0.45434278249740595`, -1.4836288094520567`, \
-0.2599847465753555}, "LeafValues" -> 
           RawArray["Real32",{-0.0023149934131652117`, 
             0.0036897945683449507`, -0.0015629848930984735`, \
-0.003748853225260973, 
             0.0009301564423367381, -0.0037880779709666967`, \
-0.0016254826914519072`, 0.0038296834100037813`, 0.0006542600458487868, 
             0.001955099869519472, 0.0031061707995831966`, 
             0.0017457026988267899`, -0.0012477266136556864`, \
-0.0005731576238758862, 0.000545818533282727, 0.0005482719861902297}], 
           "Children" -> 
           RawArray["Integer16",{{3, 2}, {-2, 6}, {4, -4}, {5, -5}, {
             12, -6}, {9, 7}, {8, 11}, {-7, 10}, {-3, 
             13}, {-9, -11}, {-8, -12}, {-1, 14}, {-10, 
             15}, {-13, -15}, {-14, -16}}], "NominalSplits" -> {}, 
           "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
           0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{15, 1, 14, 41, 25, 34, 40, 37, 23, 33, 16, 
             39, 40, 41, 17, 39, 15}], 
           "NumericalThresholds" -> {0.7039268612861634, 
            1.3770432472229006`, -1.273808181285858, -0.7201627492904662, \
-1.1322922110557554`, 
            0.22039785981178286`, -0.4619783759117126, -0.18593378365039823`, 
            1.3342642784118655`, 
            0.6583255827426912, -0.5909834802150725, -0.3662014156579971, 
            1.0000000180025095`*^-35, -0.4632595926523208, \
-1.0654212236404417`, 0.16459400206804278`, -0.7894860208034514}, 
           "LeafValues" -> 
           RawArray["Real32",{0.0004826687218155712, 
             0.0005692458944395185, -0.0043156947940588, 
             0.000638773140963167, -0.0024008741602301598`, \
-0.0033077176194638014`, 0.0014253573026508093`, 0.0045101032592356205`, 
             0.002923368476331234, 
             0.001806727726943791, -0.00021463216398842633`, \
-0.0026851422153413296`, 0.0002669954265002161, -0.00044898971100337803`, 
             0.00043922525946982205`, 
             0.0019892423879355192`, -0.0012417995603755116`, \
-0.00011703739437507465`}], "Children" -> 
           RawArray["Integer16",{{3, 2}, {4, -3}, {6, 8}, {-2, 5}, {
             12, -6}, {-1, 7}, {-7, -8}, {9, 10}, {11, -10}, {-9, 14}, {17, 
             13}, {-5, 16}, {-12, -14}, {-11, 
             15}, {-15, -16}, {-13, -17}, {-4, -18}}], "NominalSplits" -> {}, 
           "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
           0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{15, 26, 40, 41, 18, 4, 23, 38, 25, 15, 3, 4, 
             39, 39, 3}], 
           "NumericalThresholds" -> {0.7039268612861634, 1.1493549942970278`, 
            1.3606503009796145`, -0.7201627492904662, -0.3288619220256805, \
-0.3417965173721313, 
            1.3342642784118655`, -0.14230394363403318`, -1.1322922110557554`, \
-0.8307329714298247, -0.40819802880287165`, -0.38447742164134974`, \
-0.3662014156579971, 0.16459400206804278`, 1.0085546374320986`}, "LeafValues" -> 
           RawArray["Real32",{-0.0018884954042732716`, 0.0008723135688342154, 
             0.003244732040911913, -0.003957177046686411, \
-0.0021366095170378685`, -0.0016080968780443072`, 0.0037293541245162487`, 
             0.00047873801668174565`, 
             0.0014747865498065948`, -0.0029390654526650906`, 
             0.0015052593080326915`, 0.0003420540306251496, 
             0.0026210646610707045`, 
             0.00019747977785300463`, -0.0012286418350413442`, \
-0.0005797422491014004}], "Children" -> 
           RawArray["Integer16",{{2, 3}, {5, -3}, {4, -4}, {-2, 9}, {8, 6}, {
             7, 10}, {-6, 12}, {11, -9}, {13, -10}, {-7, -11}, {-1, 
             15}, {-8, -13}, {-5, 14}, {-14, -15}, {-12, -16}}], 
           "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{15, 14, 1, 32, 25, 34, 40, 1, 37, 26, 23, 16,
              13, 25, 34, 27, 38}], 
           "NumericalThresholds" -> {0.7039268612861634, -1.2664236426353452`,
             1.3770432472229006`, -0.9670949280261992, -1.1322922110557554`, 
            0.22039785981178286`, -0.4619783759117126, 
            0.3751885443925858, -0.18593378365039823`, 0.7790645360946656, 
            1.3342642784118655`, -0.5909834802150725, 1.5191901326179507`, 
            0.9102175533771516, 
            1.1173943877220156`, -1.4367946386337278`, -0.41881284117698664`},
            "LeafValues" -> 
           RawArray["Real32",{
             0.00035974892671220005`, -0.0019065099768340588`, 
             0.0005252291448414326, -0.0036265726666897535`, 
             0.0005227514775469899, -0.00298894289880991, 
             0.001199947320856154, 
             0.0038308969233185053`, -0.0008866896387189627, 
             0.0022822082974016666`, -0.0007364210905507207, 
             0.0014274832792580128`, -0.0024149061646312475`, \
-0.00033153488766402006`, 0.0020930804312229156`, -0.0001909799757413566, 
             0.0003570991102606058, -0.0000857883642311208}], "Children" -> 
           RawArray["Integer16",{{2, 3}, {6, 9}, {4, -4}, {5, -5}, {
             8, -6}, {-1, 7}, {-7, -8}, {-2, 16}, {11, 10}, {-10, 14}, {
             12, -12}, {17, 13}, {-13, -14}, {-11, 
             15}, {-15, -16}, {-9, -17}, {-3, -18}}], "NominalSplits" -> {}, 
           "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
           0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{15, 26, 40, 13, 18, 4, 23, 38, 24, 3, 31, 15,
              34, 4}], 
           "NumericalThresholds" -> {0.7039268612861634, 1.1493549942970278`, 
            1.3606503009796145`, 
            0.9770527780056001, -0.3288619220256805, -0.3417965173721313, 
            1.3342642784118655`, -0.14230394363403318`, -0.9410939812660216, \
-0.40819802880287165`, 
            0.38212083280086523`, -0.8307329714298247, -1.6076864600181577`, 
            0.6871889233589173}, "LeafValues" -> 
           RawArray["Real32",{-0.0018947527278214693`, 
             0.00036059285048395395`, 
             0.0028082539793103933`, -0.003390438389033079, \
-0.0013398382579907775`, -0.001567317871376872, 0.003210656810551882, 
             0.0002848179719876498, 
             0.001312501379288733, -0.0025593871250748634`, 
             0.0003802452702075243, 0.002298271981999278, 
             0.0012852208456024528`, -0.00022975278261583298`, \
-0.00039325127727352083`}], "Children" -> 
           RawArray["Integer16",{{2, 3}, {5, -3}, {4, -4}, {-2, 9}, {8, 6}, {
             7, 12}, {-6, 11}, {10, -9}, {13, -10}, {-1, 
             14}, {-8, -12}, {-7, -13}, {-5, -14}, {-11, -15}}], 
           "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{15, 15, 14, 32, 25, 18, 4, 13, 2, 4, 38, 39, 
             15, 5, 39}], 
           "NumericalThresholds" -> {0.7039268612861634, -0.9133225083351134, 
            0.971350133419037, -0.9670949280261992, -1.1322922110557554`, \
-0.3288619220256805, -0.3417965173721313, -1.0719035267829893`, \
-0.6776936948299407, -0.3821148574352264, -0.14688143879175183`, \
-0.3662014156579971, -0.8307329714298247, -0.748421013355255, \
-0.37279133498668665`}, "LeafValues" -> 
           RawArray["Real32",{
             0.0026456518098711967`, -0.0031066800002008677`, \
-0.0016527464613318443`, -0.0017306475201621652`, 
             0.0010290921200066805`, -0.0025892029516398907`, 
             0.00013339849829208106`, 
             0.002889591036364436, -0.001532018301077187, \
-0.0007750576478429139, 0.002250861609354615, 0.0013112779706716537`, 
             0.0006016975385136902, 
             0.001156698795966804, -0.0007805884233675897, 
             0.0000191521285159979}], "Children" -> 
           RawArray["Integer16",{{2, 3}, {-1, 6}, {-2, 4}, {5, -5}, {
             12, -6}, {9, 7}, {8, 13}, {10, -9}, {-3, 11}, {-7, -11}, {
             15, -12}, {-4, 14}, {-8, -14}, {-13, -15}, {-10, -16}}], 
           "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{15, 14, 1, 24, 30, 36, 38, 1, 39, 36, 18, 39,
              16}], "NumericalThresholds" -> {
            0.7039268612861634, -1.2664236426353452`, 
            1.3770432472229006`, -0.7130187153816222, -1.3065827488899229`, 
            0.09156154468655588, -0.5281474590301513, 
            0.48950703442096716`, -0.37451361119747156`, \
-0.043835250660777085`, 
            0.03766647912561894, -0.22005317360162732`, -0.9454954862594603}, 
           "LeafValues" -> 
           RawArray["Real32",{
             0.00217186426743865, -0.0014187454944476485`, \
-0.0018644328229129314`, -0.0028488682582974434`, 
             0.00042878385283984244`, -0.0028507940005511045`, 
             0.002761766780167818, 0.00006171498534968123, 
             0.0003523007617332041, -0.00026209797943010926`, 
             0.0005214241682551801, 
             0.001690878183580935, -0.0007713633240200579, 
             0.0006734902272000909}], "Children" -> 
           RawArray["Integer16",{{2, 3}, {6, 9}, {4, -4}, {5, -5}, {8, -6}, {
             7, -7}, {-1, -8}, {-2, -9}, {10, 11}, {-3, -11}, {12, -12}, {
             13, -13}, {-10, -14}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{17, 14, 39, 37, 36, 39, 2, 15, 23, 41, 2, 41,
              1}], "NumericalThresholds" -> {-0.08055747672915457, \
-1.2664236426353452`, 1.8576233983039858`, 
            0.7527065873146058, -0.4765188246965408, -0.3694117367267608, \
-0.797689914703369, 
            1.7280868887901308`, -0.35839213430881495`, -0.724678486585617, \
-0.8776889443397521, -0.4800628870725631, -0.604374200105667}, "LeafValues" -> 
           RawArray["Real32",{
             0.0025852443650364876`, -0.0009748960728757083, \
-0.0011537964455783367`, -0.0027138066943734884`, 
             0.001132272183895111, -0.0024517523124814034`, 
             0.0018472840311005712`, -0.00041146916919387877`, \
-0.0018282748060300946`, 0.0013591295573860407`, 
             0.0017788860714063048`, -0.001305605168454349, 
             0.0013861848274245858`, 0.000032587151508778334`}], "Children" -> 
           RawArray["Integer16",{{2, 3}, {6, 10}, {4, -4}, {5, -5}, {
             8, -6}, {-1, 7}, {-7, -8}, {9, -9}, {-2, -10}, {-3, 11}, {-11, 
             12}, {-12, 13}, {-13, -14}}], "NominalSplits" -> {}, "RootIndex" -> 
           1, "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{15, 26, 40, 13, 39, 1, 14, 39, 39, 5, 37, 39,
              36, 24}], 
           "NumericalThresholds" -> {0.7039268612861634, 1.1493549942970278`, 
            1.3606503009796145`, 0.9770527780056001, -0.3678090721368789, 
            0.48950703442096716`, -1.288722515106201, -0.36532345414161677`, \
-0.36034519970417017`, -0.4027023166418075, -0.4542479664087295, \
-0.37086777389049524`, -0.043835250660777085`, 0.9845889508724214}, 
           "LeafValues" -> 
           RawArray["Real32",{-0.0017137003596872091`, 0.0005688571836799383, 
             0.0022681611590087414`, -0.0025808168575167656`, \
-0.00223360164090991, 0.001884025172330439, 
             0.00046466561616398394`, -0.0011658177245408297`, 
             0.0003702489484567195, 0.0019345636246725917`, 
             0.0003281286044511944, -0.0011309213005006313`, 
             0.0011683122720569372`, 
             0.0007495921454392374, -0.0011766939423978329`}], "Children" -> 
           RawArray["Integer16",{{2, 3}, {5, -3}, {4, -4}, {-2, 6}, {7, 
             8}, {-5, 11}, {-1, 12}, {-6, 9}, {14, 
             10}, {-10, -11}, {-7, -12}, {13, -13}, {-8, -14}, {-9, -15}}], 
           "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{23, 39, 15, 26, 15, 38, 37, 40, 36, 23, 17, 
             41, 40}], 
           "NumericalThresholds" -> {-0.12842633575201032`, 
            1.8576233983039858`, 1.7280868887901308`, 
            1.1437270045280459`, -0.8815220296382903, -0.19893720000982282`, \
-0.2426357641816139, -0.5915842652320861, -0.1916822791099548, \
-0.2182834297418594, 1.050943732261658, 0.6448177695274354, 
            0.43660438060760504`}, "LeafValues" -> 
           RawArray[
             "Real32",{-0.00022950669517740607`, -0.0010538509814068675`, \
-0.0023258922155946493`, -0.002104459097608924, 
             0.0023597143590450287`, -0.00005760677595390007, 
             0.0021814878564327955`, 
             0.0006272290484048426, -0.0017151185311377048`, 
             0.0020728979725390673`, 
             0.001312551903538406, -0.00032831664429977536`, \
-0.0029105839785188437`, 0.0006956789875403047}], "Children" -> 
           RawArray["Integer16",{{2, 4}, {3, -3}, {10, -4}, {5, -5}, {-2, 
             6}, {7, -7}, {9, 8}, {-8, -9}, {-6, -10}, {11, -11}, {13, 
             12}, {-12, -13}, {-1, -14}}], "NominalSplits" -> {}, "RootIndex" -> 
           1, "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>]}, 
       "ClassNumber" -> 1, "IterationsNumber" -> 50, "Processor" -> 
       MachineLearning`MLProcessor[
        "Sequence", <|
         "Input" -> <|
           "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
          "Output" -> <|
           "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
          "Processors" -> {
            MachineLearning`MLProcessor[
            "DensifyNumericalVector", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
              "StructurePreserving" -> True, 
              "Input" -> <|
               "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
              "Version" -> {13.2, 1}, "ID" -> 7738046826750305578, 
              "Output" -> <|
               "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>|>], 
            MachineLearning`MLProcessor[
            "FirstValues", <|
             "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, "Key" -> 
              "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> 
              False, "Missing" -> "Allowed"|>]}, "Invertibility" -> "Perfect",
           "StructurePreserving" -> False, "Missing" -> "Allowed"|>], 
       "DistributionData" -> {NormalDistribution, {0.03506358787874523}}, 
       "Calibrator" -> None, "Method" -> "GradientBoostedTrees", 
       "PostProcessor" -> MachineLearning`MLProcessor["Identity"], 
       "Options" -> <|
        "BoostingMethod" -> <|"Value" -> "Gradient", "Options" -> <||>|>, 
         MaxTrainingRounds -> <|"Value" -> 50, "Options" -> <||>|>, 
         "LeavesNumber" -> <|"Value" -> 1023, "Options" -> <||>|>, 
         "LearningRate" -> <|"Value" -> 0.1, "Options" -> <||>|>, 
         ValidationSet -> <|"Value" -> Automatic, "Options" -> <||>|>, 
         "MaxBinNumber" -> <|"Value" -> 255, "Options" -> <||>|>, 
         "ThreadNumber" -> <|"Value" -> 4, "Options" -> <||>|>, 
         "MaxDepth" -> <|"Value" -> 6, "Options" -> <||>|>, 
         "LeafSize" -> <|"Value" -> 15, "Options" -> <||>|>, 
         "FeatureFraction" -> <|"Value" -> 1, "Options" -> <||>|>, 
         "BaggingFraction" -> <|"Value" -> 1, "Options" -> <||>|>, 
         "BaggingFrequency" -> <|"Value" -> 0, "Options" -> <||>|>, 
         "MinGainToSplit" -> <|"Value" -> 0, "Options" -> <||>|>, 
         "L1Regularization" -> <|"Value" -> 0, "Options" -> <||>|>, 
         "L2Regularization" -> <|"Value" -> 0, "Options" -> <||>|>, 
         "LossFunction" -> <|
          "Value" -> "MeanSquaredError", "Options" -> <||>|>|>|>, 
     "TrainingInformation" -> <|
      "Reporting" -> None, "TrainingFunction" -> Predict, "EMIterations" -> 
       Missing["KeyAbsent", "EMIterations"], "ProcessorEntropyShift" -> 
       1.1136074977767143`, "PreprocessingTime" -> 
       0.283017`5.9033575165978265, "LossName" -> "StandardDeviation", 
       "BestModelInformation" -> 
       Dataset[<|
         "MeanCrossEntropy" -> Around[2.738472454467699, 1.370622112671563], 
          "StandardDeviation" -> 
          Around[0.6098750953682258, 0.3232910779044755], "EvaluationTime" -> 
          0.0007986801828863203, "TestSize" -> 79, "ModelMemory" -> 135032, 
          "ModelUtility" -> 0.09429600184054276, "Round" -> 3, "Iteration" -> 
          19, "TimeStamp" -> 3.899293318311297`16.343560894707696*^9, 
          "TrainingSize" -> 314, "TrainingTime" -> 0.19952623149688792`, 
          "TrainingMemory" -> 907024, "ExperimentCount" -> 1, 
          "MeanCrossEntropyHistory" -> {
            Around[2.738472454467699, 0.9691761903142943]}, 
          "StandardDeviationHistory" -> {
            Around[0.6098750953682258, 0.22860131348336302`]}, 
          "IterationHistory" -> {19}, 
          "TimeStampHistory" -> {3.899293318311297`16.343560894707696*^9}, 
          "Configuration" -> {
           "GradientBoostedTrees", "BoostingMethod" -> "Gradient", 
            MaxTrainingRounds -> 50, "LeavesNumber" -> 1023, "LearningRate" -> 
            0.1, ValidationSet -> Automatic, "MaxBinNumber" -> 255, 
            "ThreadNumber" -> 4, "MaxDepth" -> 6, "LeafSize" -> 15, 
            "FeatureFraction" -> 1, "BaggingFraction" -> 1, 
            "BaggingFrequency" -> 0, "MinGainToSplit" -> 0, 
            "L1Regularization" -> 0, "L2Regularization" -> 0, "LossFunction" -> 
            "MeanSquaredError"}|>, 
         TypeSystem`Assoc[
          TypeSystem`Atom[String], TypeSystem`AnyType, 18], <||>], 
       "Configurations" -> 
       Dataset[<|<|
           "Value" -> "GradientBoostedTrees", 
            "Options" -> <|
             "BoostingMethod" -> <|"Value" -> "Gradient"|>, 
              MaxTrainingRounds -> <|"Value" -> 50|>, 
              "LeavesNumber" -> <|"Value" -> 1023|>, 
              "LearningRate" -> <|"Value" -> 0.1|>, 
              ValidationSet -> <|"Value" -> Automatic|>, 
              "MaxBinNumber" -> <|"Value" -> 255|>, 
              "ThreadNumber" -> <|"Value" -> 4|>, 
              "MaxDepth" -> <|"Value" -> 6|>, "LeafSize" -> <|"Value" -> 15|>,
               "FeatureFraction" -> <|"Value" -> 1|>, 
              "BaggingFraction" -> <|"Value" -> 1|>, 
              "BaggingFrequency" -> <|"Value" -> 0|>, 
              "MinGainToSplit" -> <|"Value" -> 0|>, 
              "L1Regularization" -> <|"Value" -> 0|>, 
              "L2Regularization" -> <|"Value" -> 0|>, 
              "LossFunction" -> <|"Value" -> "MeanSquaredError"|>|>|> -> <|
           "Experiments" -> {<|
              "MeanCrossEntropy" -> 
               Around[3.1599407649175775`, 0.008922181521573017], 
               "StandardDeviation" -> 
               Around[3.074929660987146, 0.1265774467925951], 
               "EvaluationTime" -> 0.000028370820458389797`, "TestSize" -> 
               200, "ModelMemory" -> 20776, 
               "ModelUtility" -> -2.956120741777591, "Round" -> 1, 
               "Iteration" -> 1, "TimeStamp" -> 
               3.899293315877027`16.343560894436575*^9, "TrainingSize" -> 10, 
               "TrainingTime" -> 0.025118864315095794`, "TrainingMemory" -> 
               81784, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[3.1599407649175775`, 0.006308935056881589]}, 
               "StandardDeviationHistory" -> {
                 Around[3.074929660987146, 0.08950377097232341]}, 
               "IterationHistory" -> {1}, 
               "TimeStampHistory" -> {
                3.899293315877027`16.343560894436575*^9}|>, <|
              "MeanCrossEntropy" -> 
               Around[2.738472454467699, 1.370622112671563], 
               "StandardDeviation" -> 
               Around[0.6098750953682258, 0.3232910779044755], 
               "EvaluationTime" -> 0.0007986801828863203, "TestSize" -> 79, 
               "ModelMemory" -> 135032, "ModelUtility" -> 0.09429600184054276,
                "Round" -> 3, "Iteration" -> 19, "TimeStamp" -> 
               3.899293318311297`16.343560894707696*^9, "TrainingSize" -> 314,
                "TrainingTime" -> 0.19952623149688792`, "TrainingMemory" -> 
               907024, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[2.738472454467699, 0.9691761903142943]}, 
               "StandardDeviationHistory" -> {
                 Around[0.6098750953682258, 0.22860131348336302`]}, 
               "IterationHistory" -> {19}, 
               "TimeStampHistory" -> {
                3.899293318311297`16.343560894707696*^9}|>, <|
              "MeanCrossEntropy" -> 
               Around[1.1552587968157773`, 0.4686073234139238], 
               "StandardDeviation" -> 
               Around[0.831128834169285, 0.240801854567856], "EvaluationTime" -> 
               0.0006309573444801931, "TestSize" -> 100, "ModelMemory" -> 
               116712, "ModelUtility" -> -0.4358872957635124, "Round" -> 2, 
               "Iteration" -> 20, "TimeStamp" -> 
               3.899293319036792`16.3435608947885*^9, "TrainingSize" -> 60, 
               "TrainingTime" -> 0.1, "TrainingMemory" -> 364032, 
               "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[1.1552587968157773`, 0.3313554160996631]}, 
               "StandardDeviationHistory" -> {
                 Around[0.831128834169285, 0.17027262428722778`]}, 
               "IterationHistory" -> {20}, 
               "TimeStampHistory" -> {
                3.899293319036792`16.3435608947885*^9}|>}, 
            "PredictedPerformances" -> <|
             "EvaluationTime" -> 0.0006309573444801931, "ModelMemory" -> 
              116712, "StandardDeviation" -> 
              Around[0.831128834169285, 0.240801854567856], "TrainingMemory" -> 
              364032, "TrainingTime" -> 0.4181188643150958|>, "Index" -> 
            1|>, <|"Value" -> "GradientBoostedTrees", 
            "Options" -> <|
             "BoostingMethod" -> <|"Value" -> "Gradient"|>, 
              MaxTrainingRounds -> <|"Value" -> 50|>, 
              "LeavesNumber" -> <|"Value" -> 250|>, 
              "LearningRate" -> <|"Value" -> 0.02|>, 
              ValidationSet -> <|"Value" -> Automatic|>, 
              "MaxBinNumber" -> <|"Value" -> 255|>, 
              "ThreadNumber" -> <|"Value" -> 4|>, 
              "MaxDepth" -> <|"Value" -> 6|>, "LeafSize" -> <|"Value" -> 35|>,
               "FeatureFraction" -> <|"Value" -> 1|>, 
              "BaggingFraction" -> <|"Value" -> 1|>, 
              "BaggingFrequency" -> <|"Value" -> 0|>, 
              "MinGainToSplit" -> <|"Value" -> 0|>, 
              "L1Regularization" -> <|"Value" -> 0|>, 
              "L2Regularization" -> <|"Value" -> 0|>, 
              "LossFunction" -> <|"Value" -> "MeanSquaredError"|>|>|> -> <|
           "Experiments" -> {<|
              "MeanCrossEntropy" -> 
               Around[3.159550519186364, 0.006523697881648673], 
               "StandardDeviation" -> 
               Around[3.069256185431125, 0.09087840092271454], 
               "EvaluationTime" -> 0.00002793195027336062, "TestSize" -> 383, 
               "ModelMemory" -> 20776, "ModelUtility" -> -2.947837630884244, 
               "Round" -> 1, "Iteration" -> 3, "TimeStamp" -> 
               3.899293315956623`16.34356089444544*^9, "TrainingSize" -> 10, 
               "TrainingTime" -> 0.025118864315095794`, "TrainingMemory" -> 
               81848, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[3.159550519186364, 0.004612951010526091]}, 
               "StandardDeviationHistory" -> {
                 Around[3.069256185431125, 0.06426073355584125]}, 
               "IterationHistory" -> {3}, 
               "TimeStampHistory" -> {
                3.899293315956623`16.34356089444544*^9}|>, <|
              "MeanCrossEntropy" -> 
               Around[2.7740952590303083`, 0.012925192734485842`], 
               "StandardDeviation" -> 
               Around[3.063381956774579, 0.11779838309476065`], 
               "EvaluationTime" -> 0.0000658113883008419, "TestSize" -> 200, 
               "ModelMemory" -> 20776, "ModelUtility" -> -2.9475200772067436`,
                "Round" -> 2, "Iteration" -> 12, "TimeStamp" -> 
               3.899293317077892`16.343560894570327*^9, "TrainingSize" -> 60, 
               "TrainingTime" -> 0.03162277660168379, "TrainingMemory" -> 
               146448, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[2.7740952590303083`, 0.009139491430698034]}, 
               "StandardDeviationHistory" -> {
                 Around[3.063381956774579, 0.08329603549911602]}, 
               "IterationHistory" -> {12}, 
               "TimeStampHistory" -> {
                3.899293317077892`16.343560894570327*^9}|>}, 
            "PredictedPerformances" -> <|
             "EvaluationTime" -> 0.0000658113883008419, "ModelMemory" -> 
              20776, "StandardDeviation" -> 
              Around[3.063381956774579, 0.11779838309476065`], 
              "TrainingMemory" -> 146448, "TrainingTime" -> 
              0.14939637635971312`|>, "Index" -> 2|>, <|
           "Value" -> "GradientBoostedTrees", 
            "Options" -> <|
             "BoostingMethod" -> <|"Value" -> "Gradient"|>, 
              MaxTrainingRounds -> <|"Value" -> 50|>, 
              "LeavesNumber" -> <|"Value" -> 110|>, 
              "LearningRate" -> <|"Value" -> 0.01|>, 
              ValidationSet -> <|"Value" -> Automatic|>, 
              "MaxBinNumber" -> <|"Value" -> 255|>, 
              "ThreadNumber" -> <|"Value" -> 4|>, 
              "MaxDepth" -> <|"Value" -> 6|>, "LeafSize" -> <|"Value" -> 15|>,
               "FeatureFraction" -> <|"Value" -> 1|>, 
              "BaggingFraction" -> <|"Value" -> 1|>, 
              "BaggingFrequency" -> <|"Value" -> 0|>, 
              "MinGainToSplit" -> <|"Value" -> 0|>, 
              "L1Regularization" -> <|"Value" -> 0|>, 
              "L2Regularization" -> <|"Value" -> 0|>, 
              "LossFunction" -> <|"Value" -> "MeanSquaredError"|>|>|> -> <|
           "Experiments" -> {<|
              "MeanCrossEntropy" -> 
               Around[3.15955928483682, 0.007245909939795881], 
               "StandardDeviation" -> 
               Around[3.0654358094648884`, 0.10203454523223887`], 
               "EvaluationTime" -> 0.000027286835077291797`, "TestSize" -> 
               300, "ModelMemory" -> 20776, 
               "ModelUtility" -> -2.9468079354683687`, "Round" -> 1, 
               "Iteration" -> 6, "TimeStamp" -> 
               3.899293316103139`16.34356089446176*^9, "TrainingSize" -> 10, 
               "TrainingTime" -> 0.025118864315095794`, "TrainingMemory" -> 
               81888, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[3.15955928483682, 0.005123632054296675]}, 
               "StandardDeviationHistory" -> {
                 Around[3.0654358094648884`, 0.07214931884900161]}, 
               "IterationHistory" -> {6}, 
               "TimeStampHistory" -> {
                3.899293316103139`16.34356089446176*^9}|>, <|
              "MeanCrossEntropy" -> 
               Around[2.3458092928807988`, 0.013139283374795084`], 
               "StandardDeviation" -> 
               Around[2.024700203630821, 0.08279107689200503], 
               "EvaluationTime" -> 0.00010033929238885293`, "TestSize" -> 300,
                "ModelMemory" -> 116664, 
               "ModelUtility" -> -2.1203025778005613`, "Round" -> 2, 
               "Iteration" -> 16, "TimeStamp" -> 
               3.899293317996753`16.343560894672663*^9, "TrainingSize" -> 60, 
               "TrainingTime" -> 0.0630957344480193, "TrainingMemory" -> 
               371384, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[2.3458092928807988`, 0.009290876374249269]}, 
               "StandardDeviationHistory" -> {
                 Around[2.024700203630821, 0.05854213189207363]}, 
               "IterationHistory" -> {16}, 
               "TimeStampHistory" -> {
                3.899293317996753`16.343560894672663*^9}|>, <|
              "MeanCrossEntropy" -> 
               Around[2.065985134703815, 0.05709642429527604], 
               "StandardDeviation" -> 
               Around[1.898944329565482, 0.14056645600478707`], 
               "EvaluationTime" -> 0.00007986801828863203, "TestSize" -> 79, 
               "ModelMemory" -> 137576, "ModelUtility" -> -2.005160593910398, 
               "Round" -> 3, "Iteration" -> 17, "TimeStamp" -> 
               3.899293318102151`16.3435608946844*^9, "TrainingSize" -> 314, 
               "TrainingTime" -> 0.1, "TrainingMemory" -> 918848, 
               "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[2.065985134703815, 0.04037326880069403]}, 
               "StandardDeviationHistory" -> {
                 Around[1.898944329565482, 0.09939549424834543]}, 
               "IterationHistory" -> {17}, 
               "TimeStampHistory" -> {
                3.899293318102151`16.3435608946844*^9}|>}, 
            "PredictedPerformances" -> <|
             "EvaluationTime" -> 0.00007986801828863203, "ModelMemory" -> 
              137576, "StandardDeviation" -> 
              Around[1.898944329565482, 0.14056645600478707`], 
              "TrainingMemory" -> 918848, "TrainingTime" -> 
              0.15027809998388564`|>, "Index" -> 3|>, <|
           "Value" -> "GradientBoostedTrees", 
            "Options" -> <|
             "BoostingMethod" -> <|"Value" -> "Gradient"|>, 
              MaxTrainingRounds -> <|"Value" -> 50|>, 
              "LeavesNumber" -> <|"Value" -> 60|>, 
              "LearningRate" -> <|"Value" -> 0.04|>, 
              ValidationSet -> <|"Value" -> Automatic|>, 
              "MaxBinNumber" -> <|"Value" -> 255|>, 
              "ThreadNumber" -> <|"Value" -> 4|>, 
              "MaxDepth" -> <|"Value" -> 6|>, "LeafSize" -> <|"Value" -> 90|>,
               "FeatureFraction" -> <|"Value" -> 1|>, 
              "BaggingFraction" -> <|"Value" -> 1|>, 
              "BaggingFrequency" -> <|"Value" -> 0|>, 
              "MinGainToSplit" -> <|"Value" -> 0|>, 
              "L1Regularization" -> <|"Value" -> 0|>, 
              "L2Regularization" -> <|"Value" -> 0|>, 
              "LossFunction" -> <|"Value" -> "MeanSquaredError"|>|>|> -> <|
           "Experiments" -> {<|
              "MeanCrossEntropy" -> 
               Around[2.774023450314031, 0.01292745082902776], 
               "StandardDeviation" -> 
               Around[3.063381957047236, 0.11779744973361977`], 
               "EvaluationTime" -> 0.000028370820458389797`, "TestSize" -> 
               200, "ModelMemory" -> 20776, 
               "ModelUtility" -> -2.9475199189996704`, "Round" -> 2, 
               "Iteration" -> 7, "TimeStamp" -> 
               3.899293316147417`16.34356089446669*^9, "TrainingSize" -> 60, 
               "TrainingTime" -> 0.025118864315095794`, "TrainingMemory" -> 
               146384, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[2.774023450314031, 0.009141088144661184]}, 
               "StandardDeviationHistory" -> {
                 Around[3.063381957047236, 0.083295375513124]}, 
               "IterationHistory" -> {7}, 
               "TimeStampHistory" -> {
                3.899293316147417`16.34356089446669*^9}|>, <|
              "MeanCrossEntropy" -> 
               Around[1.2176836912048656`, 0.15813781926884862`], 
               "StandardDeviation" -> 
               Around[0.9391917626698305, 0.21353675470655792`], 
               "EvaluationTime" -> 0.00020061939145077384`, "TestSize" -> 79, 
               "ModelMemory" -> 116376, "ModelUtility" -> -0.6566362420177537,
                "Round" -> 3, "Iteration" -> 18, "TimeStamp" -> 
               3.899293318224344`16.34356089469801*^9, "TrainingSize" -> 314, 
               "TrainingTime" -> 0.0630957344480193, "TrainingMemory" -> 
               579016, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[1.2176836912048656`, 0.11182032436705554`]}, 
               "StandardDeviationHistory" -> {
                 Around[0.9391917626698305, 0.1509932872855755]}, 
               "IterationHistory" -> {18}, 
               "TimeStampHistory" -> {
                3.899293318224344`16.34356089469801*^9}|>}, 
            "PredictedPerformances" -> <|
             "EvaluationTime" -> 0.00020061939145077384`, "ModelMemory" -> 
              116376, "StandardDeviation" -> 
              Around[0.9391917626698305, 0.21353675470655792`], 
              "TrainingMemory" -> 579016, "TrainingTime" -> 
              0.10408900328984608`|>, "Index" -> 4|>, <|
           "Value" -> "GradientBoostedTrees", 
            "Options" -> <|
             "BoostingMethod" -> <|"Value" -> "Gradient"|>, 
              MaxTrainingRounds -> <|"Value" -> 50|>, 
              "LeavesNumber" -> <|"Value" -> 6|>, 
              "LearningRate" -> <|"Value" -> 0.02|>, 
              ValidationSet -> <|"Value" -> Automatic|>, 
              "MaxBinNumber" -> <|"Value" -> 255|>, 
              "ThreadNumber" -> <|"Value" -> 4|>, 
              "MaxDepth" -> <|"Value" -> 6|>, "LeafSize" -> <|"Value" -> 35|>,
               "FeatureFraction" -> <|"Value" -> 1|>, 
              "BaggingFraction" -> <|"Value" -> 1|>, 
              "BaggingFrequency" -> <|"Value" -> 0|>, 
              "MinGainToSplit" -> <|"Value" -> 0|>, 
              "L1Regularization" -> <|"Value" -> 0|>, 
              "L2Regularization" -> <|"Value" -> 0|>, 
              "LossFunction" -> <|"Value" -> "MeanSquaredError"|>|>|> -> <|
           "Experiments" -> {<|
              "MeanCrossEntropy" -> 
               Around[2.7730301086005826`, 0.010406659020031978`], 
               "StandardDeviation" -> 
               Around[3.0546478683196208`, 0.09505887970167716], 
               "EvaluationTime" -> 0.000027286835077291797`, "TestSize" -> 
               300, "ModelMemory" -> 20776, 
               "ModelUtility" -> -2.9388961988237674`, "Round" -> 2, 
               "Iteration" -> 8, "TimeStamp" -> 
               3.899293316188534`16.343560894471267*^9, "TrainingSize" -> 60, 
               "TrainingTime" -> 0.01995262314968879, "TrainingMemory" -> 
               146208, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[2.7730301086005826`, 0.007358619162560763]}, 
               "StandardDeviationHistory" -> {
                 Around[3.0546478683196208`, 0.06721677844905218]}, 
               "IterationHistory" -> {8}, 
               "TimeStampHistory" -> {
                3.899293316188534`16.343560894471267*^9}|>, <|
              "MeanCrossEntropy" -> 
               Around[1.6289142983343305`, 0.07462287636631984], 
               "StandardDeviation" -> 
               Around[1.2882815634483051`, 0.15797465306478428`], 
               "EvaluationTime" -> 0.00007986801828863203, "TestSize" -> 79, 
               "ModelMemory" -> 120632, 
               "ModelUtility" -> -1.2482463740324432`, "Round" -> 3, 
               "Iteration" -> 15, "TimeStamp" -> 
               3.899293317511272`16.343560894618587*^9, "TrainingSize" -> 314,
                "TrainingTime" -> 0.07943282347242814, "TrainingMemory" -> 
               647776, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[1.6289142983343305`, 0.052766341910270104`]}, 
               "StandardDeviationHistory" -> {
                 Around[1.2882815634483051`, 0.11170494843770118`]}, 
               "IterationHistory" -> {15}, 
               "TimeStampHistory" -> {
                3.899293317511272`16.343560894618587*^9}|>}, 
            "PredictedPerformances" -> <|
             "EvaluationTime" -> 0.00007986801828863203, "ModelMemory" -> 
              120632, "StandardDeviation" -> 
              Around[1.2882815634483051`, 0.15797465306478428`], 
              "TrainingMemory" -> 647776, "TrainingTime" -> 
              0.11937013787791892`|>, "Index" -> 5|>, <|
           "Value" -> "GradientBoostedTrees", 
            "Options" -> <|
             "BoostingMethod" -> <|"Value" -> "Gradient"|>, 
              MaxTrainingRounds -> <|"Value" -> 50|>, 
              "LeavesNumber" -> <|"Value" -> 25|>, 
              "LearningRate" -> <|"Value" -> 0.01|>, 
              ValidationSet -> <|"Value" -> Automatic|>, 
              "MaxBinNumber" -> <|"Value" -> 255|>, 
              "ThreadNumber" -> <|"Value" -> 4|>, 
              "MaxDepth" -> <|"Value" -> 6|>, "LeafSize" -> <|"Value" -> 90|>,
               "FeatureFraction" -> <|"Value" -> 1|>, 
              "BaggingFraction" -> <|"Value" -> 1|>, 
              "BaggingFrequency" -> <|"Value" -> 0|>, 
              "MinGainToSplit" -> <|"Value" -> 0|>, 
              "L1Regularization" -> <|"Value" -> 0|>, 
              "L2Regularization" -> <|"Value" -> 0|>, 
              "LossFunction" -> <|"Value" -> "MeanSquaredError"|>|>|> -> <|
           "Experiments" -> {<|
              "MeanCrossEntropy" -> 
               Around[3.15955928483682, 0.007245909939795881], 
               "StandardDeviation" -> 
               Around[3.0654358094648884`, 0.10203454523223887`], 
               "EvaluationTime" -> 0.0000294548058394878, "TestSize" -> 300, 
               "ModelMemory" -> 20776, "ModelUtility" -> -2.9468079376363394`,
                "Round" -> 1, "Iteration" -> 2, "TimeStamp" -> 
               3.899293315914236`16.34356089444072*^9, "TrainingSize" -> 10, 
               "TrainingTime" -> 0.025118864315095794`, "TrainingMemory" -> 
               81640, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[3.15955928483682, 0.005123632054296675]}, 
               "StandardDeviationHistory" -> {
                 Around[3.0654358094648884`, 0.07214931884900161]}, 
               "IterationHistory" -> {2}, 
               "TimeStampHistory" -> {
                3.899293315914236`16.34356089444072*^9}|>, <|
              "MeanCrossEntropy" -> 
               Around[2.772527416075221, 0.00995905046244938], 
               "StandardDeviation" -> 
               Around[3.052967640685949, 0.09037115811882959], 
               "EvaluationTime" -> 0.00007379276773099567, "TestSize" -> 333, 
               "ModelMemory" -> 20776, "ModelUtility" -> -2.937192161184, 
               "Round" -> 2, "Iteration" -> 14, "TimeStamp" -> 
               3.899293317446006`16.343560894611322*^9, "TrainingSize" -> 60, 
               "TrainingTime" -> 0.025118864315095794`, "TrainingMemory" -> 
               146272, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[2.772527416075221, 0.007042112116176978]}, 
               "StandardDeviationHistory" -> {
                 Around[3.052967640685949, 0.06390205872950612]}, 
               "IterationHistory" -> {14}, 
               "TimeStampHistory" -> {
                3.899293317446006`16.343560894611322*^9}|>}, 
            "PredictedPerformances" -> <|
             "EvaluationTime" -> 0.00007379276773099567, "ModelMemory" -> 
              20776, "StandardDeviation" -> 
              Around[3.052967640685949, 0.09037115811882959], 
              "TrainingMemory" -> 146272, "TrainingTime" -> 
              0.12383600107342227`|>, "Index" -> 6|>, <|
           "Value" -> "GradientBoostedTrees", 
            "Options" -> <|
             "BoostingMethod" -> <|"Value" -> "Gradient"|>, 
              MaxTrainingRounds -> <|"Value" -> 50|>, 
              "LeavesNumber" -> <|"Value" -> 60|>, 
              "LearningRate" -> <|"Value" -> 0.1|>, 
              ValidationSet -> <|"Value" -> Automatic|>, 
              "MaxBinNumber" -> <|"Value" -> 255|>, 
              "ThreadNumber" -> <|"Value" -> 4|>, 
              "MaxDepth" -> <|"Value" -> 6|>, "LeafSize" -> <|"Value" -> 7|>, 
              "FeatureFraction" -> <|"Value" -> 1|>, 
              "BaggingFraction" -> <|"Value" -> 1|>, 
              "BaggingFrequency" -> <|"Value" -> 0|>, 
              "MinGainToSplit" -> <|"Value" -> 0|>, 
              "L1Regularization" -> <|"Value" -> 0|>, 
              "L2Regularization" -> <|"Value" -> 0|>, 
              "LossFunction" -> <|"Value" -> "MeanSquaredError"|>|>|> -> <|
           "Experiments" -> {<|
              "MeanCrossEntropy" -> 
               Around[3.15955928483682, 0.007245909939795881], 
               "StandardDeviation" -> 
               Around[3.0654358094648884`, 0.10203454523223887`], 
               "EvaluationTime" -> 0.001345937782150584, "TestSize" -> 300, 
               "ModelMemory" -> 20776, "ModelUtility" -> -2.977047540656009, 
               "Round" -> 1, "Iteration" -> 11, "TimeStamp" -> 
               3.899293316343932`16.343560894488576*^9, "TrainingSize" -> 10, 
               "TrainingTime" -> 0.025118864315095794`, "TrainingMemory" -> 
               81704, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[3.15955928483682, 0.005123632054296675]}, 
               "StandardDeviationHistory" -> {
                 Around[3.0654358094648884`, 0.07214931884900161]}, 
               "IterationHistory" -> {11}, 
               "TimeStampHistory" -> {
                3.899293316343932`16.343560894488576*^9}|>}, 
            "PredictedPerformances" -> <|
             "EvaluationTime" -> 0.001345937782150584, "ModelMemory" -> 20776,
               "StandardDeviation" -> 
              Around[3.0654358094648884`, 0.10203454523223887`], 
              "TrainingMemory" -> 81704, "TrainingTime" -> 
              0.12383600107342227`|>, "Index" -> 7|>, <|
           "Value" -> "GradientBoostedTrees", 
            "Options" -> <|
             "BoostingMethod" -> <|"Value" -> "Gradient"|>, 
              MaxTrainingRounds -> <|"Value" -> 50|>, 
              "LeavesNumber" -> <|"Value" -> 13|>, 
              "LearningRate" -> <|"Value" -> 0.1|>, 
              ValidationSet -> <|"Value" -> Automatic|>, 
              "MaxBinNumber" -> <|"Value" -> 255|>, 
              "ThreadNumber" -> <|"Value" -> 4|>, 
              "MaxDepth" -> <|"Value" -> 6|>, "LeafSize" -> <|"Value" -> 35|>,
               "FeatureFraction" -> <|"Value" -> 1|>, 
              "BaggingFraction" -> <|"Value" -> 1|>, 
              "BaggingFrequency" -> <|"Value" -> 0|>, 
              "MinGainToSplit" -> <|"Value" -> 0|>, 
              "L1Regularization" -> <|"Value" -> 0|>, 
              "L2Regularization" -> <|"Value" -> 0|>, 
              "LossFunction" -> <|"Value" -> "MeanSquaredError"|>|>|> -> <|
           "Experiments" -> {<|
              "MeanCrossEntropy" -> 
               Around[3.15955928483682, 0.007245909939795881], 
               "StandardDeviation" -> 
               Around[3.0654358094648884`, 0.10203454523223887`], 
               "EvaluationTime" -> 0.00003491343280859839, "TestSize" -> 300, 
               "ModelMemory" -> 20776, "ModelUtility" -> -2.9468079430949663`,
                "Round" -> 1, "Iteration" -> 5, "TimeStamp" -> 
               3.899293316053274`16.343560894456203*^9, "TrainingSize" -> 10, 
               "TrainingTime" -> 0.025118864315095794`, "TrainingMemory" -> 
               81704, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[3.15955928483682, 0.005123632054296675]}, 
               "StandardDeviationHistory" -> {
                 Around[3.0654358094648884`, 0.07214931884900161]}, 
               "IterationHistory" -> {5}, 
               "TimeStampHistory" -> {
                3.899293316053274`16.343560894456203*^9}|>, <|
              "MeanCrossEntropy" -> 
               Around[2.7730481351857157`, 0.01827615268405778], 
               "StandardDeviation" -> 
               Around[3.0539776153322986`, 0.16700510138267205`], 
               "EvaluationTime" -> 0.0007943282347242814, "TestSize" -> 100, 
               "ModelMemory" -> 20776, "ModelUtility" -> -2.9478039152462534`,
                "Round" -> 2, "Iteration" -> 13, "TimeStamp" -> 
               3.899293317157351`16.343560894579173*^9, "TrainingSize" -> 60, 
               "TrainingTime" -> 0.19952623149688792`, "TrainingMemory" -> 
               194280, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[2.7730481351857157`, 0.012923191496897976`]}, 
               "StandardDeviationHistory" -> {
                 Around[3.0539776153322986`, 0.11809043968043426`]}, 
               "IterationHistory" -> {13}, 
               "TimeStampHistory" -> {
                3.899293317157351`16.343560894579173*^9}|>}, 
            "PredictedPerformances" -> <|
             "EvaluationTime" -> 0.0007943282347242814, "ModelMemory" -> 
              20776, "StandardDeviation" -> 
              Around[3.0539776153322986`, 0.16700510138267205`], 
              "TrainingMemory" -> 194280, "TrainingTime" -> 
              0.8092569540978654|>, "Index" -> 8|>, <|
           "Value" -> "GradientBoostedTrees", 
            "Options" -> <|
             "BoostingMethod" -> <|"Value" -> "Gradient"|>, 
              MaxTrainingRounds -> <|"Value" -> 50|>, 
              "LeavesNumber" -> <|"Value" -> 110|>, 
              "LearningRate" -> <|"Value" -> 0.1|>, 
              ValidationSet -> <|"Value" -> Automatic|>, 
              "MaxBinNumber" -> <|"Value" -> 255|>, 
              "ThreadNumber" -> <|"Value" -> 4|>, 
              "MaxDepth" -> <|"Value" -> 6|>, "LeafSize" -> <|"Value" -> 15|>,
               "FeatureFraction" -> <|"Value" -> 1|>, 
              "BaggingFraction" -> <|"Value" -> 1|>, 
              "BaggingFrequency" -> <|"Value" -> 0|>, 
              "MinGainToSplit" -> <|"Value" -> 0|>, 
              "L1Regularization" -> <|"Value" -> 0|>, 
              "L2Regularization" -> <|"Value" -> 0|>, 
              "LossFunction" -> <|"Value" -> "MeanSquaredError"|>|>|> -> <|
           "Experiments" -> {<|
              "MeanCrossEntropy" -> 
               Around[1.0749690122761169`, 0.28705729467943936`], 
               "StandardDeviation" -> 
               Around[0.80716580658207, 0.1662494372707244], "EvaluationTime" -> 
               0.00007126427896022372, "TestSize" -> 200, "ModelMemory" -> 
               116712, "ModelUtility" -> -0.34545230344562183`, "Round" -> 2, 
               "Iteration" -> 9, "TimeStamp" -> 
               3.899293316228454`16.34356089447571*^9, "TrainingSize" -> 60, 
               "TrainingTime" -> 0.05011872336272722, "TrainingMemory" -> 
               371520, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[1.0749690122761169`, 0.2029801596568966]}, 
               "StandardDeviationHistory" -> {
                 Around[0.80716580658207, 0.11755610446257676`]}, 
               "IterationHistory" -> {9}, 
               "TimeStampHistory" -> {
                3.899293316228454`16.34356089447571*^9}|>, <|
              "MeanCrossEntropy" -> 
               Around[3.15955928483682, 0.007245909939795881], 
               "StandardDeviation" -> 
               Around[3.0654358094648884`, 0.10203454523223887`], 
               "EvaluationTime" -> 0.000031622776601683795`, "TestSize" -> 
               300, "ModelMemory" -> 20776, 
               "ModelUtility" -> -2.9468079398043105`, "Round" -> 1, 
               "Iteration" -> 10, "TimeStamp" -> 
               3.899293316304608`16.343560894484195*^9, "TrainingSize" -> 10, 
               "TrainingTime" -> 0.01995262314968879, "TrainingMemory" -> 
               81584, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[3.15955928483682, 0.005123632054296675]}, 
               "StandardDeviationHistory" -> {
                 Around[3.0654358094648884`, 0.07214931884900161]}, 
               "IterationHistory" -> {10}, 
               "TimeStampHistory" -> {
                3.899293316304608`16.343560894484195*^9}|>}, 
            "PredictedPerformances" -> <|
             "EvaluationTime" -> 0.000031622776601683795`, "ModelMemory" -> 
              20776, "StandardDeviation" -> 
              Around[3.0654358094648884`, 0.10203454523223887`], 
              "TrainingMemory" -> 81584, "TrainingTime" -> 
              0.12853253234100415`|>, "Index" -> 9|>, <|
           "Value" -> "GradientBoostedTrees", 
            "Options" -> <|
             "BoostingMethod" -> <|"Value" -> "Gradient"|>, 
              MaxTrainingRounds -> <|"Value" -> 50|>, 
              "LeavesNumber" -> <|"Value" -> 110|>, 
              "LearningRate" -> <|"Value" -> 0.2|>, 
              ValidationSet -> <|"Value" -> Automatic|>, 
              "MaxBinNumber" -> <|"Value" -> 255|>, 
              "ThreadNumber" -> <|"Value" -> 4|>, 
              "MaxDepth" -> <|"Value" -> 6|>, "LeafSize" -> <|"Value" -> 7|>, 
              "FeatureFraction" -> <|"Value" -> 1|>, 
              "BaggingFraction" -> <|"Value" -> 1|>, 
              "BaggingFrequency" -> <|"Value" -> 0|>, 
              "MinGainToSplit" -> <|"Value" -> 0|>, 
              "L1Regularization" -> <|"Value" -> 0|>, 
              "L2Regularization" -> <|"Value" -> 0|>, 
              "LossFunction" -> <|"Value" -> "MeanSquaredError"|>|>|> -> <|
           "Experiments" -> {<|
              "MeanCrossEntropy" -> 
               Around[3.15955928483682, 0.007245909939795881], 
               "StandardDeviation" -> 
               Around[3.0654358094648884`, 0.10203454523223887`], 
               "EvaluationTime" -> 0.000035620121426502264`, "TestSize" -> 
               300, "ModelMemory" -> 20776, 
               "ModelUtility" -> -2.9468079438016552`, "Round" -> 1, 
               "Iteration" -> 4, "TimeStamp" -> 
               3.899293315999023`16.34356089445016*^9, "TrainingSize" -> 10, 
               "TrainingTime" -> 0.03162277660168379, "TrainingMemory" -> 
               81704, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[3.15955928483682, 0.005123632054296675]}, 
               "StandardDeviationHistory" -> {
                 Around[3.0654358094648884`, 0.07214931884900161]}, 
               "IterationHistory" -> {4}, 
               "TimeStampHistory" -> {
                3.899293315999023`16.34356089445016*^9}|>}, 
            "PredictedPerformances" -> <|
             "EvaluationTime" -> 0.000035620121426502264`, "ModelMemory" -> 
              20776, "StandardDeviation" -> 
              Around[3.0654358094648884`, 0.10203454523223887`], 
              "TrainingMemory" -> 81704, "TrainingTime" -> 
              0.15590028864630112`|>, "Index" -> 10|>|>, 
         TypeSystem`Assoc[
          TypeSystem`Struct[{"Value", "Options"}, {
            TypeSystem`Atom[
             TypeSystem`Enumeration["GradientBoostedTrees"]], 
            TypeSystem`Assoc[TypeSystem`AnyType, 
             TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 16]}], 
          
          TypeSystem`Struct[{
           "Experiments", "PredictedPerformances", "Index"}, {
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "MeanCrossEntropy", "StandardDeviation", "EvaluationTime", 
               "TestSize", "ModelMemory", "ModelUtility", "Round", 
               "Iteration", "TimeStamp", "TrainingSize", "TrainingTime", 
               "TrainingMemory", "ExperimentCount", "MeanCrossEntropyHistory",
                "StandardDeviationHistory", "IterationHistory", 
               "TimeStampHistory"}, {
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
               TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
               TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
               TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
               TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
               TypeSystem`AnyType, TypeSystem`AnyType}], 
             TypeSystem`AnyLength], 
            
            TypeSystem`Struct[{
             "EvaluationTime", "ModelMemory", "StandardDeviation", 
              "TrainingMemory", "TrainingTime"}, {
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], TypeSystem`AnyType, 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real]}], 
            TypeSystem`Atom[Integer]}], 10], <||>], 
       "TrainingSizes" -> {10, 60, 314}, "MaxTrainingSize" -> 393, 
       "PreprocessorEvaluationTime" -> 5.7421875*^-6, "PreprocessorMemory" -> 
       74992, "InputDimension" -> 41, "OutputDimension" -> 1, 
       "BaselineLogProbability" -> -1.4189385332046727`, "VariableBudget" -> 
       True, "CheckpointingInfo" -> <|"Checkpointing" -> False|>, "UserStop" -> 
       False, "NaturalStop" -> True, "AbortStop" -> False, 
       "LastReportingTime" -> 3.899293319033699`16.34356089478816*^9, 
       "RoundPartitioning" -> 
       Dataset[{<|
          "TrainingSizes" -> 10, "TimeBudgets" -> 0.5390000000000001, 
           "ElapsedTimes" -> 1.022413, "ExperimentCounts" -> 8|>, <|
          "TrainingSizes" -> 60, "TimeBudgets" -> 0.77, "ElapsedTimes" -> 
           0.8357619999999999, "ExperimentCounts" -> 8|>, <|
          "TrainingSizes" -> 314, "TimeBudgets" -> 1.1, "ElapsedTimes" -> 
           1.410096, "ExperimentCounts" -> 4|>}, 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
            "ExperimentCounts"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Integer]}], 3], <||>]|>, "AnomalyDetector" -> 
     None, "Log" -> <|
      "Example" -> 
       MachineLearning`MLDataset[<|
         "f1" -> <|
           "Type" -> "NumericalVector", "Weight" -> 1, 
            "Values" -> CompressedData["
1:eJxTTMoPSmViYGBgBGJNIL4f3KAwo2eK/akNjSWqsjPsfcQXXmKpmG1/vvaA
wZNL8+z7Sr57lnEutNe5pbJOZO5C+7jE3aaXShba7203jpOat8D+SmqpuHjk
fPu47SW5FybMtX/7QWPVHr859qttJX/7LJxlf26GWXTE4hn2LaJ77zW9nGpv
V/XD48HWyfape0/1y9lNsp+5Y3fX14hJ9vzpe0xsFKfYHz1xpvfTtOn2n27c
nfD+yhz7Q/kvXHxVFtovEDn9xFFpMVT/YvvVEf2qBwuX2CuyTzjPbrXMPnVR
SOqq3BX2y0NTRKSkV8HpCWdvT5KuWW4/W0fsH9+cRfZ28U1yOU9n2s/LapFx
sOu3P/LYaUdaeqN9zNuEQzsMC+27GeZeizmWANXnbs9g8vvDr2ta9gwEAAC0
IY8F
             "], "ID" -> 3923998625235966023|>|>, <|
         "ExampleNumber" -> 1, "ExampleWeights" -> 1, "LogDensityRatios" -> 0,
           "RawExample" -> False|>], "TrainingTime" -> 4.443258, 
       "MaxTrainingMemory" -> 1984096, "DataMemory" -> 223280, 
       "FunctionMemory" -> 417784, "LanguageVersion" -> {13.2, 1}, "Date" -> 
       DateObject[{2023, 7, 25, 17, 1, 59.992722`8.53067354033522}, "Instant",
          "Gregorian", -4.], "ProcessorCount" -> 4, "ProcessorType" -> 
       "x86-64", "OperatingSystem" -> "MacOSX", "SystemWordLength" -> 64, 
       "Evaluations" -> {}|>|>]]]], "Output",
 CellChangeTimes->{3.8993075519809504`*^9, 3.899307720899675*^9},
 CellLabel->
  "Out[363]=",ExpressionUUID->"5ee41023-84df-447d-956e-6e653e0d58ec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PredictorMeasurements", "[", 
  RowBox[{"model", ",", "data", ",", "\"\<ResidualPlot\>\""}], "]"}]], "Input",\

 CellChangeTimes->{{3.899369304322188*^9, 3.899369313830146*^9}, {
  3.8993693534561777`*^9, 3.899369365040697*^9}},
 CellLabel->
  "In[367]:=",ExpressionUUID->"acb143fe-5822-4449-887c-47145a2c4f20"],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJztm2k8VV0fsA9NyBQpkakQcVOKkmqtZpVKUqhIc1RKs1ROhiY0IKLkkDmV
OQrrGFMUUaq7bkl3oUFC8+Bdvc/6r+fL+3x8v7m+dF+/tc8+e5/7nLX3dv2W
zpptduslBQLB+b4CwZ9/5c83OYRE9ceC/S8b5aoT0WyzLeZbhvTHOOZR34HW
1UT4t6v+ra10XH3+7EFLEslFBYsX/6zqjzuSkrsdlcpIovt4W8cZ/bFQZ3l9
w4QcMr3xjVnAyf7YNflF2pj6ImTfnCRxi9DXp3u6f/kQSNYc/hplbDIA1zq7
jW48fYcIM67tuDt+AN6+tJ+kd6GYDE+a2yddIIVdB46/Fxl/m+QuXl289RDd
f6pt6yevDGT/IK3YU0T3t27eY8Omo6jBS6b49hIpLHix/sW2pBiSKOoacXiS
FN6ed1gxuKCYXHxmaRBqPwAL6l1rryoGIfu8G4dqE2Ww7biuat/DlcRCZ2QS
WSmNa20nz704uZQULBqauiJUBgsOteRqe4egE3cHD9k/RBYLYk7uT/P2Rbt2
37EbWCONxS89Vt17WYtUAp2Q0np5LLzV6bl+TQz6+mb094WaChiHnN6n9CuX
dHcLg237KGLB4Be1ro3Xycsdr4at7lTAov2fxqkV5SG7iu7k+zkKWFBu+Kgr
Ng+tC9WwLHGh20vZjMw5fQg1jStbe0hhEBa9K/W9FFpC9vVcGyipNAgL55fc
NXFOJuf26qmN1BmEBYUS3/ssIcTh7EXJk1sG4aadmRFn9IuR1O40neh+Klio
8WDb6E1pREK12OPpkcFYuFJ95JXwa6TEP+RtYaoSFq99MPRqcyFZatZ5/9Qw
On6t7/zY17FkdGLLRNOndNznvVucZxYy2ePmvOu7EhbuGzDtu04cKpfw2lUW
SPdvU1VimFiKZOtel+aeVsaCuN3fc52jkZrfC+MXe6i32Y4LikwidVc6O3fa
DaWfR2lMP3c/5HQXH3ntMxgLplU7KmdFotzsKP+X26jXWFwfZ3UWyd+10xnl
p4IFLz9tPlJwheRVnnu72p363RH51QVRaE78Yt2JI1Ww+OiYgNNV6Uhnlfrg
o0/o8aTYqe9MuU6GjBnpn9pDt/99UNe5Ngwdzrn8IbKJempbXveQTGS3dnTM
hxND6PdHT7tyfhRJnqMwx0+fHp+uzKkHRj5kjcM5r+nTh9Lvt1uDcnksGd/t
/rCxlY6L37vPM1uPPgYE1O5yoG43V2Vf8CkS339niLODKhZOefixZVwS+Tqk
ta7wiSoWSDf9cw8lo9EKy6t8b6piMVpyt3DlTTTZs2tmvzo6Pk95ep3/SeQ0
Pi7Z8pcaFlRkvdlqkUy4T6s8lzP0ElEjiudCeqibbHX0kgsj/kv+2qTVpY6F
45wmD8i6jj7vrZkyTXo4bopKfe7pWYnsD2iMy12qiQWqFrOmKAaRnx5aEhnL
qJN11s44kkw3yrldHE9dvORLu8MC4iSY7hG8kvogrVtOz8PIlLgKjVW/tXDT
/gHvhvSUkANRPX6d9VpYsNHwVN8PcWT+46Up+/dpYWFSk86+UyIU8CXF+Ml0
bSyQTZoRs8QPWZXntLUvo26zufBYRhhSMAxXyppJfcEG45e7k1Bmx0Granfq
cW/r1KRDybH26vYAN+rxVp9Ee4PQd8PS7Z/CqYdtifUfeAqJEtZssHtBXbWP
gsDWH6nOlpt2q5t6kKWf2qZjyGvjPBm9WuqTnXduyI4j2PqGQoyUDhaI3p2T
f+2GPuYn6rr/puMpzzt3mV5GY519nsb8oJ7ZZT3aKhrJyGi2d/nS7R8PjFm8
zBN1v0rLuR9J3cbo06oHRaT9i0rU1W3UG2qLfT5lo3TryX1m5lJvvWwtPLKP
uHa9+3kxj7pg9CenmTNIws54R/8/46f7nDA6vp941z/3MP+X+tRjkzpVT5MX
l+4ENM4agQWrT30YFppF9JQtK9VnU99b5bBgQDIJ/TVYbqU19aeNp3RkRORO
w7eR2Qup18bU7tjtQQbv+HCwwJi6tZPR09ERyFTiht37UOp9zbyaZl1DzrGz
vsVmUN+xWrHx7HkyAH9ubztD3WZDcGrRSWSFf+c+L6H+9dEFm4IA4rurbsHQ
CurGq9t+PDyB7B/+2qxiPxILFFu/WizyJEk2xwQTlUZivFgiaM6SCvRpsXy9
WwsdH3j1o3F4Mkpt3dgh70D98sDqo/uy0S+3bRoRUbpYKB+9uEOigqi9bZ0f
4auLBc//UjaakEW2HzwU6LaBjp+Ku7nQKxvlJgi+bZDSw4JZmz7rlCaRsBW2
9g421PftltbD2WR0zhn5aWX09bb91d7bn0c22j9eNZ/Sw64rhje+aKknAYN+
bGmcR7f3Puy0VSIPiXQyd7l4USeJ0RVDkslT2bris9L6WEiKBmzIzSVipcYD
H7rouOvaF6PGbkWpZjZDnfT06fVu+7L2nwmk//KDFbFO1H/ZFQ83zUJ5r06c
e+ZA3WSdi+6iIuT5Tv93zFLq/cJK40WZSDgz0Ox+CPUmE+es+VXopNGTnbn5
9P1SkjSiK7OQn2XmA9sqOv7SOPuMymUULWMdtqqRjkudtOzjXIuMuqPXdH/Q
x3iO1d4t7eVo253EI0Yf6XiXgs2cQaXotY6Lf4W+NN4ecPJLrHsxyu4JNVXR
ptc/TZOlVvvS0enqiWcmakphnPVpxoI3iWR/8tThHWtk8ekncc1H1CqJf5FF
0aIndNx3dFz0+SRS8qz15v4G6ufUDzrU3CDNP/zd/e/KY7G+dM0EtUbSYV0r
s8NEFnc0FVQl1JWRQ1pqAzo/ymDXtsdxwQYlyKRnZkLARzncZGQe8SWmBqW8
crsSeJlezxRsapU7D5PARvFFHRu6P/ufb45frUSTg6s3X1wyCLvW+47fv1WM
sP0SrWD5QVi8tcjzbUcpUl9eJT7vR69vC5tXqqxIRXumfzRW+5tef/Sq5f0W
lJAo1eXpq+Lo9UdBctl4comsDTtevVpVGePM3zdlMwkxjq3ZP3EInd/VC/I/
TRKRh+cnZchr0etBt+6022UpxNfz86ov5nR8ZIj+eLl00nl6y5NTNnT+7xnm
b5eVQ1wyQu91aNL5fHzZea2IeLJGz0DPRIu640L/7I4wYqLpnrczSJ3+/tQy
WqqqyL0F7WSQohoWZu6Iyz8di2b2s7F7bEjn5zhJfcN38SSov9KQiMHaGDdk
X//qWEmWn3CrL5HSwuJy41b8NR8V4F9qRR7qeIzGsedN0nUIjc2+dsuazkdD
Huq+v3+NNGYax2xTp35D8lvnlJtoY8UzlZ591PGLwRojPZBP5PmZlV3aWDhP
ZtlCp3SENmc/0lQbjpOHRNk01X1AuaM+m/aR08FC94YO8T85xCzr97+d2XT+
6ei5PvzHZlKSFO9gmkVd8oKUtPgiUgrZJ9qVQd1ikeQuy0Q0L7Lo689kOh9Y
vN0z1DeeRKSumu7lR71JXneVgzvdPmpySCR1xT3vI1IukkPH7t7pIzESC5+L
/bdYFCH1NcpbxxpR1/NNORBViKYmTPPRW0nnB1vfufcOh6GK1sVd+W709zxg
/es+2Xnk9fonS6uv0fkgJ1nl6O4bRMZK1vKUHx0XbHdpzDuBkh2O2+yz1cPC
tPnzt12pIKtjzz2zGU5/v//3P9JI2rRFhgtf6WLx6p/7pnuVIlWVUwHrjtLx
SRIl3v0jyZL+osBhB6i/Td2r7pGLujbOKuu6Rl2w3GPvDy9k2i75RNSf/j6L
0r9K/Eogvs7J7Z8W6GFR17pNNqp/I1Xlv6wTWvQwnhlyTtNejLbUP7yPdkhj
gZLXlUbrsyTo0/awoUPp/WR/B4PugBoi9WDLqZXPpbH1Xpl3Ov0aSNqZeimL
HQPxsTYj6cQbj8j0QUXmWvn092dQcv31yOvE6fUIQxNtBVzd81FGq+UNaZwl
l/SgTY5ej9+uLJWPJ1NvT/xn+XM5LDqeYzolr5QEpeUK3j6Ww65r+ibMNbhF
miK0nt7fNgBr93nVp0G9mowd22qhMlMOn/79QH9HRQ05oCCYO+89fb2nYfwL
44dkoenJI7NiZDG+nd3TEXqFCJ70d3VrVsST6+Tib9q2kRn3D9i98ZHH2zXj
q1Qml5Dtj900pXoG4Z+Pfk4asfMd6Xy2N+fZhYFYaHJfw2JsPpJ/0qjb3FcO
i2NmfT+0+grZR6w8pv5NPz8Lp+nNn+pIdHV3pF4i/f/nOOXiFNtCIvD0GC6s
pZ9/+dGt9OTIoMoJdw4UUy+WjLVVzCeiN+j9spnUp51+IO5IQw/V1zl+6zMS
i982O1m1PESjPFNU+w2j+yu6dXXyjWdkdP/5zguej8D4tfd1n9pKtGv+e7NL
8+n3rXXGw5IAEZpQFHjNtJ5+v40lcyYPKUI9N3oGbQ7Wxa7v+32xn/OaeIyv
ne7sTb9vxZbBTy/WkbLYmceUJOh8bDgnPDi8kqgWVc+6ZUn3Pwe9Odq3Hil+
dc3xldXH2kdlfstfayCT3oZ1SabQ4+08NdnHNQx9WKq1CZvS79PTpEdHylNJ
Z9u9ZbEeuhhf2dXYlf4PMkhW0CzAdPvRigobTWPRw5DuBznl9PvfPl9w1q0E
Ra5VMG/vT89PprN1RGgWakzMf91mQLfP/hAuXXsRPV0l3+XXSL/vmd4+P2fU
ocSu1hUNqvR6MX/gl5ELMlHYimXGao6jsHDSZvP36QVkuGtMwuV+o7Ag7+kg
4zm+SMPqZ6pV/ij6ete90g9uE49H7gcV6kZhxdQmaSP7JlK/YseHiqpRGG/e
+rittpmMXr3HVT6Avv9+hVsplVdRz9Xbs/fXUJdbrWbVXonaxz73/5f+PsQn
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
    "], {{{}, {}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
       LineBox[{395, 2}], LineBox[{396, 3}], LineBox[{397, 4}], 
       LineBox[{398, 5}], LineBox[{400, 7}], LineBox[{401, 8}], 
       LineBox[{402, 9}], LineBox[{403, 10}], LineBox[{406, 13}], 
       LineBox[{407, 14}], LineBox[{409, 16}], LineBox[{410, 17}], 
       LineBox[{415, 22}], LineBox[{416, 23}], LineBox[{420, 27}], 
       LineBox[{421, 28}], LineBox[{422, 29}], LineBox[{424, 31}], 
       LineBox[{425, 32}], LineBox[{426, 33}], LineBox[{427, 34}], 
       LineBox[{432, 39}], LineBox[{436, 43}], LineBox[{439, 46}], 
       LineBox[{442, 49}], LineBox[{443, 50}], LineBox[{444, 51}], 
       LineBox[{446, 53}], LineBox[{447, 54}], LineBox[{451, 58}], 
       LineBox[{452, 59}], LineBox[{453, 60}], LineBox[{456, 63}], 
       LineBox[{457, 64}], LineBox[{458, 65}], LineBox[{459, 66}], 
       LineBox[{460, 67}], LineBox[{461, 68}], LineBox[{466, 73}], 
       LineBox[{471, 78}], LineBox[{476, 83}], LineBox[{478, 85}], 
       LineBox[{479, 86}], LineBox[{480, 87}], LineBox[{481, 88}], 
       LineBox[{482, 89}], LineBox[{483, 90}], LineBox[{484, 91}], 
       LineBox[{485, 92}], LineBox[{488, 95}], LineBox[{490, 97}], 
       LineBox[{492, 99}], LineBox[{496, 103}], LineBox[{497, 104}], 
       LineBox[{499, 106}], LineBox[{500, 107}], LineBox[{502, 109}], 
       LineBox[{504, 111}], LineBox[{505, 112}], LineBox[{507, 114}], 
       LineBox[{519, 126}], LineBox[{520, 127}], LineBox[{521, 128}], 
       LineBox[{522, 129}], LineBox[{523, 130}], LineBox[{524, 131}], 
       LineBox[{527, 134}], LineBox[{532, 139}], LineBox[{533, 140}], 
       LineBox[{534, 141}], LineBox[{535, 142}], LineBox[{536, 143}], 
       LineBox[{537, 144}], LineBox[{538, 145}], LineBox[{539, 146}], 
       LineBox[{540, 147}], LineBox[{541, 148}], LineBox[{543, 150}], 
       LineBox[{544, 151}], LineBox[{547, 154}], LineBox[{552, 159}], 
       LineBox[{553, 160}], LineBox[{556, 163}], LineBox[{558, 165}], 
       LineBox[{562, 169}], LineBox[{563, 170}], LineBox[{565, 172}], 
       LineBox[{566, 173}], LineBox[{568, 175}], LineBox[{571, 178}], 
       LineBox[{574, 181}], LineBox[{575, 182}], LineBox[{576, 183}], 
       LineBox[{577, 184}], LineBox[{578, 185}], LineBox[{579, 186}], 
       LineBox[{580, 187}], LineBox[{581, 188}], LineBox[{582, 189}], 
       LineBox[{583, 190}], LineBox[{584, 191}], LineBox[{585, 192}], 
       LineBox[{586, 193}], LineBox[{587, 194}], LineBox[{588, 195}], 
       LineBox[{589, 196}], LineBox[{591, 198}], LineBox[{592, 199}], 
       LineBox[{593, 200}], LineBox[{594, 201}], LineBox[{595, 202}], 
       LineBox[{598, 205}], LineBox[{602, 209}], LineBox[{603, 210}], 
       LineBox[{604, 211}], LineBox[{606, 213}], LineBox[{608, 215}], 
       LineBox[{616, 223}], LineBox[{618, 225}], LineBox[{619, 226}], 
       LineBox[{620, 227}], LineBox[{624, 231}], LineBox[{625, 232}], 
       LineBox[{626, 233}], LineBox[{628, 235}], LineBox[{629, 236}], 
       LineBox[{635, 242}], LineBox[{637, 244}], LineBox[{638, 245}], 
       LineBox[{639, 246}], LineBox[{645, 252}], LineBox[{646, 253}], 
       LineBox[{648, 255}], LineBox[{649, 256}], LineBox[{650, 257}], 
       LineBox[{652, 259}], LineBox[{653, 260}], LineBox[{655, 262}], 
       LineBox[{658, 265}], LineBox[{661, 268}], LineBox[{662, 269}], 
       LineBox[{663, 270}], LineBox[{664, 271}], LineBox[{665, 272}], 
       LineBox[{667, 274}], LineBox[{668, 275}], LineBox[{670, 277}], 
       LineBox[{673, 280}], LineBox[{674, 281}], LineBox[{675, 282}], 
       LineBox[{676, 283}], LineBox[{679, 286}], LineBox[{681, 288}], 
       LineBox[{683, 290}], LineBox[{684, 291}], LineBox[{685, 292}], 
       LineBox[{686, 293}], LineBox[{688, 295}], LineBox[{690, 297}], 
       LineBox[{691, 298}], LineBox[{692, 299}], LineBox[{693, 300}], 
       LineBox[{695, 302}], LineBox[{696, 303}], LineBox[{697, 304}], 
       LineBox[{699, 306}], LineBox[{706, 313}], LineBox[{715, 322}], 
       LineBox[{716, 323}], LineBox[{717, 324}], LineBox[{718, 325}], 
       LineBox[{719, 326}], LineBox[{720, 327}], LineBox[{721, 328}], 
       LineBox[{722, 329}], LineBox[{724, 331}], LineBox[{727, 334}], 
       LineBox[{730, 337}], LineBox[{733, 340}], LineBox[{734, 341}], 
       LineBox[{736, 343}], LineBox[{738, 345}], LineBox[{739, 346}], 
       LineBox[{740, 347}], LineBox[{745, 352}], LineBox[{746, 353}], 
       LineBox[{748, 355}], LineBox[{751, 358}], LineBox[{752, 359}], 
       LineBox[{754, 361}], LineBox[{755, 362}], LineBox[{756, 363}], 
       LineBox[{757, 364}], LineBox[{758, 365}], LineBox[{759, 366}], 
       LineBox[{760, 367}], LineBox[{761, 368}], LineBox[{763, 370}], 
       LineBox[{764, 371}], LineBox[{765, 372}], LineBox[{766, 373}], 
       LineBox[{767, 374}], LineBox[{768, 375}], LineBox[{769, 376}], 
       LineBox[{780, 387}]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
       LineBox[{394, 1}], LineBox[{399, 6}], LineBox[{404, 11}], 
       LineBox[{405, 12}], LineBox[{408, 15}], LineBox[{411, 18}], 
       LineBox[{412, 19}], LineBox[{413, 20}], LineBox[{414, 21}], 
       LineBox[{417, 24}], LineBox[{418, 25}], LineBox[{419, 26}], 
       LineBox[{423, 30}], LineBox[{428, 35}], LineBox[{429, 36}], 
       LineBox[{430, 37}], LineBox[{431, 38}], LineBox[{433, 40}], 
       LineBox[{434, 41}], LineBox[{435, 42}], LineBox[{437, 44}], 
       LineBox[{438, 45}], LineBox[{440, 47}], LineBox[{441, 48}], 
       LineBox[{445, 52}], LineBox[{448, 55}], LineBox[{449, 56}], 
       LineBox[{450, 57}], LineBox[{454, 61}], LineBox[{455, 62}], 
       LineBox[{462, 69}], LineBox[{463, 70}], LineBox[{464, 71}], 
       LineBox[{465, 72}], LineBox[{467, 74}], LineBox[{468, 75}], 
       LineBox[{469, 76}], LineBox[{470, 77}], LineBox[{472, 79}], 
       LineBox[{473, 80}], LineBox[{474, 81}], LineBox[{475, 82}], 
       LineBox[{477, 84}], LineBox[{486, 93}], LineBox[{487, 94}], 
       LineBox[{489, 96}], LineBox[{491, 98}], LineBox[{493, 100}], 
       LineBox[{494, 101}], LineBox[{495, 102}], LineBox[{498, 105}], 
       LineBox[{501, 108}], LineBox[{503, 110}], LineBox[{506, 113}], 
       LineBox[{508, 115}], LineBox[{509, 116}], LineBox[{510, 117}], 
       LineBox[{511, 118}], LineBox[{512, 119}], LineBox[{513, 120}], 
       LineBox[{514, 121}], LineBox[{515, 122}], LineBox[{516, 123}], 
       LineBox[{517, 124}], LineBox[{518, 125}], LineBox[{525, 132}], 
       LineBox[{526, 133}], LineBox[{528, 135}], LineBox[{529, 136}], 
       LineBox[{530, 137}], LineBox[{531, 138}], LineBox[{542, 149}], 
       LineBox[{545, 152}], LineBox[{546, 153}], LineBox[{548, 155}], 
       LineBox[{549, 156}], LineBox[{550, 157}], LineBox[{551, 158}], 
       LineBox[{554, 161}], LineBox[{555, 162}], LineBox[{557, 164}], 
       LineBox[{559, 166}], LineBox[{560, 167}], LineBox[{561, 168}], 
       LineBox[{564, 171}], LineBox[{567, 174}], LineBox[{569, 176}], 
       LineBox[{570, 177}], LineBox[{572, 179}], LineBox[{573, 180}], 
       LineBox[{590, 197}], LineBox[{596, 203}], LineBox[{597, 204}], 
       LineBox[{599, 206}], LineBox[{600, 207}], LineBox[{601, 208}], 
       LineBox[{605, 212}], LineBox[{607, 214}], LineBox[{609, 216}], 
       LineBox[{610, 217}], LineBox[{611, 218}], LineBox[{612, 219}], 
       LineBox[{613, 220}], LineBox[{614, 221}], LineBox[{615, 222}], 
       LineBox[{617, 224}], LineBox[{621, 228}], LineBox[{622, 229}], 
       LineBox[{623, 230}], LineBox[{627, 234}], LineBox[{630, 237}], 
       LineBox[{631, 238}], LineBox[{632, 239}], LineBox[{633, 240}], 
       LineBox[{634, 241}], LineBox[{636, 243}], LineBox[{640, 247}], 
       LineBox[{641, 248}], LineBox[{642, 249}], LineBox[{643, 250}], 
       LineBox[{644, 251}], LineBox[{647, 254}], LineBox[{651, 258}], 
       LineBox[{654, 261}], LineBox[{656, 263}], LineBox[{657, 264}], 
       LineBox[{659, 266}], LineBox[{660, 267}], LineBox[{666, 273}], 
       LineBox[{669, 276}], LineBox[{671, 278}], LineBox[{672, 279}], 
       LineBox[{677, 284}], LineBox[{678, 285}], LineBox[{680, 287}], 
       LineBox[{682, 289}], LineBox[{687, 294}], LineBox[{689, 296}], 
       LineBox[{694, 301}], LineBox[{698, 305}], LineBox[{700, 307}], 
       LineBox[{701, 308}], LineBox[{702, 309}], LineBox[{703, 310}], 
       LineBox[{704, 311}], LineBox[{705, 312}], LineBox[{707, 314}], 
       LineBox[{708, 315}], LineBox[{709, 316}], LineBox[{710, 317}], 
       LineBox[{711, 318}], LineBox[{712, 319}], LineBox[{713, 320}], 
       LineBox[{714, 321}], LineBox[{723, 330}], LineBox[{725, 332}], 
       LineBox[{726, 333}], LineBox[{728, 335}], LineBox[{729, 336}], 
       LineBox[{731, 338}], LineBox[{732, 339}], LineBox[{735, 342}], 
       LineBox[{737, 344}], LineBox[{741, 348}], LineBox[{742, 349}], 
       LineBox[{743, 350}], LineBox[{744, 351}], LineBox[{747, 354}], 
       LineBox[{749, 356}], LineBox[{750, 357}], LineBox[{753, 360}], 
       LineBox[{762, 369}], LineBox[{770, 377}], LineBox[{771, 378}], 
       LineBox[{772, 379}], LineBox[{773, 380}], LineBox[{774, 381}], 
       LineBox[{775, 382}], LineBox[{776, 383}], LineBox[{777, 384}], 
       LineBox[{778, 385}], LineBox[{779, 386}], LineBox[{781, 388}], 
       LineBox[{782, 389}], LineBox[{783, 390}], LineBox[{784, 391}], 
       LineBox[{785, 392}], LineBox[{786, 393}]}}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334],
       AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwNxFVgFQQAAMBHS4N0M7o7x+gYHaMbRtdGDhjdjB6dCgomrXSDQbcSSiqh
oLQSCtzHXVB4ZFhEnEAgEKM08QKBtKQjPRnISCYyk4WsZCM7OchJELnITR7y
ko/8FKAghShMEYpSjOKUoCSlKE0ZylKO8lSgIsFUIoTKVKEq1ahODWpSi9rU
IZS61KM+DWhIIxrThKY0I4zmtKAlrWhNG9rSjvZ0oCOd6EwXuhJON7rTg570
ojd96Es/+jOACCIZyCAGM4ShDCOK4YxgJNGMYjRjGMs4xjOBiUxiMlOYyjSm
E8MMZjKL2cxhLvOIZT4LWMgiFrOEpSxjOStYySo+4mNWs4ZP+JS1rOMzPucL
vuQrvmY9G9jIJjazha18w7dsYzs72MkudrOHvexjPwc4yCEOc4Tv+J4f+JGj
HOM4JzjJKU5zhrOc4zwXuMhP/MwlLnOFq/zCr1zjOje4yS1u8xu/c4e73OM+
f/AnD3jIX/zNIx7zhKc84zkv+Id/eckrXvOG//ift7wjED8QiENc4hGfBCQk
ER+QmCQkJRnJSUFKUpGaD0lDWtKRngxkJBOZyUJWspGdHOQkiFzkJg95yUd+
ClCQQhSmCEUpRnFKUJJSlKYMZSlHeSpQkWAqEUJlqlCValSnBjWpRW3qEEpd
6lGfBjSkEY1pQlOaEUZzWtCSVrSmDW1pR3s60JFOdKYLXQmnG93pQU960Zs+
9KUf/RlABJEMZBCDGcJQhhHFcEYwkmhGMZoxjGUc45nARCYxmSlMZRrTiWEG
M5nFbOYwl3nEMp8FLGQRi1nCUpaxnBW8B8RptYQ=
       "]]}}], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, False},
  AxesLabel->{None, None},
  AxesOrigin->{2.5654226793970953`, 0.},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox[
      TagBox["\"actual value - predicted value\"", HoldForm], 
      TraditionalForm], None}, {
     FormBox[
      TagBox["\"predicted value\"", HoldForm], TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{2.5654226793970953`, 
   12.146191768859879`}, {-1.0442163058221408`, 1.0442163058221408`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.899369320050261*^9, 3.899369366293723*^9},
 CellLabel->
  "Out[367]=",ExpressionUUID->"718b2fbd-155c-43f6-b869-4449ff4103fe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PredictorMeasurements", "[", 
  RowBox[{"model", ",", "data", ",", "\"\<ResidualHistogram\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.899369380532564*^9, 3.8993693949400377`*^9}},
 CellLabel->
  "In[368]:=",ExpressionUUID->"8c6490f0-4622-4f5c-8c6e-5919cd524341"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.5459999999999999], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.5459999999999999], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{-0.9, 0}, {-0.85, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{-85.73199999999997, -69.60799999999995}, {
           79.32549679900923, 82.30746511292074}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{-0.85, 0}, {-0.8, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{-70.10799999999995, -53.98399999999998}, {
           79.32549679900923, 82.30746511292074}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{-0.8, 0}, {-0.75, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{-54.48399999999998, -38.35999999999996}, {
           79.32549679900923, 82.30746511292074}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{-0.7, 0}, {-0.65, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{-23.23599999999996, -7.111999999999995}, {
           79.32549679900923, 82.30746511292074}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{-0.6, 0}, {-0.55, 2.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{8.012000000000029, 24.135999999999996`}, {
           76.84352848509772, 82.30746511292074}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{-0.55, 0}, {-0.5, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{23.635999999999996`, 39.76000000000002}, {
           79.32549679900923, 82.30746511292074}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{-0.5, 0}, {-0.45, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{39.26000000000002, 55.384000000000015`}, {
           79.32549679900923, 82.30746511292074}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{-0.45, 0}, {-0.4, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{54.884000000000015`, 71.00800000000001}, {
           79.32549679900923, 82.30746511292074}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{-0.4, 0}, {-0.35, 2.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{70.50800000000001, 86.63200000000002}, {
           76.84352848509772, 82.30746511292074}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{-0.35, 0}, {-0.3, 4.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{86.13200000000002, 102.25600000000001`}, {
           71.8795918572747, 82.30746511292074}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 4]& ,
        TagBoxNote->"4"],
       StyleBox["4", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[4, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{-0.3, 0}, {-0.25, 4.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{101.75600000000001`, 117.88000000000001`}, {
           71.8795918572747, 82.30746511292074}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 4]& ,
        TagBoxNote->"4"],
       StyleBox["4", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[4, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{-0.25, 0}, {-0.2, 17.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{117.38000000000001`, 133.50400000000002`}, {
           39.61400377642509, 82.30746511292074}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 17]& ,
        TagBoxNote->"17"],
       StyleBox["17", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[17, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{-0.2, 0}, {-0.15, 19.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{133.00400000000002`, 149.12800000000001`}, {
           34.650067148602076`, 82.30746511292074}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 19]& ,
        TagBoxNote->"19"],
       StyleBox["19", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[19, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{-0.15, 0}, {-0.1, 30.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{148.62800000000001`, 164.752}, {7.348415695575483,
            82.30746511292074}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 30]& ,
        TagBoxNote->"30"],
       StyleBox["30", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[30, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{-0.1, 0}, {-0.05, 43.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{164.252, 180.376}, {-24.917172385274128`, 
           82.30746511292074}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 43]& ,
        TagBoxNote->"43"],
       StyleBox["43", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[43, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{-0.05, 0}, {0., 77.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{179.876, 196.}, {-109.30409505826543`, 
           82.30746511292074}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 77]& ,
        TagBoxNote->"77"],
       StyleBox["77", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[77, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0., 0}, {0.05, 68.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{195., 212.124}, {-87.46638023306184, 
           82.80746511292074}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 68]& ,
        TagBoxNote->"68"],
       StyleBox["68", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[68, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.05, 0}, {0.1, 46.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{211.124, 227.248}, {-32.363077327008654`, 
           82.30746511292074}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 46]& ,
        TagBoxNote->"46"],
       StyleBox["46", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[46, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.1, 0}, {0.15, 30.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{226.748, 242.87199999999999`}, {7.348415695575483,
            82.30746511292074}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 30]& ,
        TagBoxNote->"30"],
       StyleBox["30", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[30, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.15, 0}, {0.2, 16.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{242.37199999999999`, 258.496}, {42.0959720903366, 
           82.30746511292074}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 16]& ,
        TagBoxNote->"16"],
       StyleBox["16", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[16, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.2, 0}, {0.25, 10.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{257.996, 274.12}, {56.98778197380565, 
           82.30746511292074}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 10]& ,
        TagBoxNote->"10"],
       StyleBox["10", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[10, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.25, 0}, {0.3, 7.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{273.62, 289.74399999999997`}, {64.43368691554018, 
           82.30746511292074}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 7]& ,
        TagBoxNote->"7"],
       StyleBox["7", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[7, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.3, 0}, {0.35, 3.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{289.24399999999997`, 305.368}, {74.36156017118621,
            82.30746511292074}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.35, 0}, {0.4, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{304.868, 320.99199999999996`}, {79.32549679900923,
            82.30746511292074}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.4, 0}, {0.45, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{320.49199999999996`, 336.616}, {79.32549679900923,
            82.30746511292074}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.45, 0}, {0.5, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{336.116, 352.24}, {79.32549679900923, 
           82.30746511292074}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.6, 0}, {0.65, 2.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{382.98799999999994`, 399.11199999999997`}, {
           76.84352848509772, 82.30746511292074}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.65, 0}, {0.7, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{398.61199999999997`, 414.736}, {79.32549679900923,
            82.30746511292074}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.7, 0}, {0.75, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{414.236, 430.35999999999996`}, {79.32549679900923,
            82.30746511292074}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.95, 0}, {1., 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{492.35599999999994`, 508.47999999999996`}, {
           79.32549679900923, 82.30746511292074}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{-0.52, 0},
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox[
      TagBox["\"count\"", HoldForm], TraditionalForm], None}, {
     FormBox[
      TagBox["\"actual value - predicted value\"", HoldForm], 
      TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->NCache[{{
      Rational[-1, 2], 
      Rational[1, 2]}, {All, All}}, {{-0.5, 0.5}, {All, All}}],
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {None, 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.89936939646502*^9},
 CellLabel->
  "Out[368]=",ExpressionUUID->"6cfcecf7-1a67-4dcc-a61c-0b4276aacd17"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mean", "@", 
  RowBox[{"Abs", "@", 
   RowBox[{"PredictorMeasurements", "[", 
    RowBox[{"model", ",", "data", ",", "\"\<Residuals\>\""}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.899369406469686*^9, 3.899369415373745*^9}},
 CellLabel->
  "In[371]:=",ExpressionUUID->"c6f708ce-9b1b-4ca1-8c78-35f5078e4cce"],

Cell[BoxData["0.11890005166780328`"], "Output",
 CellChangeTimes->{{3.899369409001639*^9, 3.8993694160534487`*^9}},
 CellLabel->
  "Out[371]=",ExpressionUUID->"c937fd8f-228f-41a6-8447-febec9ba352f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Make Inferences", "Section",
 CellChangeTimes->{{3.899308025013163*^9, 
  3.899308031595471*^9}},ExpressionUUID->"f224a74d-312d-4470-983a-\
2a625ca9ea36"],

Cell["\<\
Load data
Apply model to data
Write outputs to XLSX file
???
Profit!\
\>", "Text",
 CellChangeTimes->{{3.899308154865097*^9, 
  3.899308202397292*^9}},ExpressionUUID->"722b9ce7-f24b-4fe6-9995-\
69e8b216b0ee"]
}, Open  ]]
},
WindowSize->{808, 747},
WindowMargins->{{Automatic, 93}, {34, Automatic}},
FrontEndVersion->"13.2 for Mac OS X x86 (64-bit) (January 30, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"250f769d-e285-41de-b729-47f8b6407efe"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 318, 8, 58, "Text",ExpressionUUID->"6746b2db-ce59-4532-9ccb-7f41376af6ec"],
Cell[CellGroupData[{
Cell[901, 32, 216, 4, 67, "Section",ExpressionUUID->"1b54fdaf-4917-4afa-b88f-b63e613a43b5"],
Cell[1120, 38, 588, 14, 127, "Text",ExpressionUUID->"8d906bdd-6aa7-499b-ab22-da1ab19d8e53"],
Cell[1711, 54, 706, 15, 95, "Input",ExpressionUUID->"a08c56d9-79fa-41ab-a610-d1c4e9d9b8e7"],
Cell[2420, 71, 5322, 126, 514, "Input",ExpressionUUID->"065998da-3c3a-42e8-acbb-c0c5b6d5ca80"],
Cell[7745, 199, 2833, 71, 199, "Input",ExpressionUUID->"1adbe0e0-378f-44dd-a6a3-4eb6c7d1c4c6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10615, 275, 157, 3, 67, "Section",ExpressionUUID->"15d4a5f6-3df4-4f63-8c2e-0a160eda9848"],
Cell[10775, 280, 381, 8, 58, "Text",ExpressionUUID->"7ec737a1-1cd5-4e33-b99a-cb79f98ec93d"],
Cell[CellGroupData[{
Cell[11181, 292, 731, 15, 115, "Input",ExpressionUUID->"9bd1c0db-2a58-41c1-99a5-89a003823eef"],
Cell[11915, 309, 255219, 4732, 534, "Output",ExpressionUUID->"5ee41023-84df-447d-956e-6e653e0d58ec"]
}, Open  ]],
Cell[CellGroupData[{
Cell[267171, 5046, 335, 7, 30, "Input",ExpressionUUID->"acb143fe-5822-4449-887c-47145a2c4f20"],
Cell[267509, 5055, 23887, 410, 251, "Output",ExpressionUUID->"718b2fbd-155c-43f6-b869-4449ff4103fe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[291433, 5470, 292, 6, 30, "Input",ExpressionUUID->"8c6490f0-4622-4f5c-8c6e-5919cd524341"],
Cell[291728, 5478, 21813, 663, 258, "Output",ExpressionUUID->"6cfcecf7-1a67-4dcc-a61c-0b4276aacd17"]
}, Open  ]],
Cell[CellGroupData[{
Cell[313578, 6146, 338, 8, 30, "Input",ExpressionUUID->"c6f708ce-9b1b-4ca1-8c78-35f5078e4cce"],
Cell[313919, 6156, 198, 3, 34, "Output",ExpressionUUID->"c937fd8f-228f-41a6-8447-febec9ba352f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[314166, 6165, 160, 3, 67, "Section",ExpressionUUID->"f224a74d-312d-4470-983a-2a625ca9ea36"],
Cell[314329, 6170, 218, 9, 127, "Text",ExpressionUUID->"722b9ce7-f24b-4fe6-9995-69e8b216b0ee"]
}, Open  ]]
}
]
*)

