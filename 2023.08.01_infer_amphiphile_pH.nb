(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   2474867,      43411]
NotebookOptionsPosition[   2469203,      43309]
NotebookOutlinePosition[   2469707,      43327]
CellTagsIndexPosition[   2469664,      43324]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Import Data", "Section",
 CellChangeTimes->{{3.899629319501137*^9, 
  3.899629320646085*^9}},ExpressionUUID->"072c0052-866e-40f7-aebf-\
ffcc8ee53163"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"set", " ", "a", " ", "random", " ", "seed", " ", "for", " ", 
    RowBox[{"training", "/", "test"}], " ", "set", " ", "generation", " ", 
    "for", " ", "replicability"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SeedRandom", "[", "1841", "]"}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SetDirectory", "@", 
     RowBox[{"NotebookDirectory", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Helper", " ", "functions"}], " ", "*)"}], "\[IndentingNewLine]", 
   
   RowBox[{"<<", "\"\<src/platereader.wl\>\""}], "\[IndentingNewLine]", 
   RowBox[{"<<", "\"\<src/import_scripting.wl\>\""}], "\[IndentingNewLine]", 
   RowBox[{"<<", "\"\<src/emd.wl\>\""}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"load", " ", "training", " ", "data"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"trainingData", " ", "=", " ", 
     RowBox[{"Flatten", "@", 
      RowBox[{
       RowBox[{"Map", "[", "importDirectory", "]"}], "@", 
       RowBox[{"{", 
        RowBox[{
        "\"\<data/2023_07_20_PH_Indicator\>\"", ",", 
         "\"\<data/2023_07_21_PH_Indicator\>\""}], "}"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Length", "[", "%", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8996275187039337`*^9, 3.899627518875863*^9}, {
  3.899629323236268*^9, 3.8996294370703897`*^9}, {3.899629483257566*^9, 
  3.8996295881609173`*^9}, {3.899629711018282*^9, 3.899629715278859*^9}, {
  3.8998858955256433`*^9, 3.8998859011537027`*^9}, {3.899885933980297*^9, 
  3.899885934380231*^9}, {3.899886929404688*^9, 3.8998869333008127`*^9}, {
  3.899889852487116*^9, 
  3.899889857045327*^9}},ExpressionUUID->"16750c00-72a1-4f18-888d-\
fc1bca90244a"],

Cell[BoxData["898"], "Output",
 CellChangeTimes->{3.89962958942381*^9, 3.899886048007144*^9, 
  3.899886773333596*^9},
 CellLabel->
  "Out[583]=",ExpressionUUID->"aead2989-49f1-4c10-8b16-f93340d09d1c"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Comments: ",
  FontWeight->"Bold"],
 " The formatting of the test data requires some manual handling; this should \
be discussed"
}], "Text",
 CellChangeTimes->{{3.899629629146616*^9, 3.899629655162458*^9}, {
  3.899639181685691*^9, 3.8996391847172403`*^9}, {3.899886559481553*^9, 
  3.899886570456599*^9}, {3.899886917968499*^9, 
  3.899886924855218*^9}},ExpressionUUID->"8cfaebc4-bfa1-4453-810b-\
d361e8923303"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"load", " ", "test", " ", "amphiphile", " ", "data"}], " ", "*)"}],
   "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"testData", "=", 
     RowBox[{"With", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"pH", " ", "=", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"Import", "[", "\[IndentingNewLine]", 
             RowBox[{
             "\"\<data/Amphiphile_Absorbance_test/07262023_10carbons_RealPH_\
Values.xlsx\>\"", ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"\"\<Data\>\"", ",", "1", ",", 
                RowBox[{"Join", "[", 
                 RowBox[{
                  RowBox[{"Range", "[", 
                   RowBox[{"5", ",", "12"}], "]"}], ",", 
                  RowBox[{"Range", "[", 
                   RowBox[{"17", ",", "24"}], "]"}]}], "]"}], ",", 
                RowBox[{"2", ";;", "13"}]}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"\"\<EmptyField\>\"", "->", 
               RowBox[{"Missing", "[", "]"}]}]}], "]"}], " ", "//", " ", 
            "Flatten"}], " ", "//", 
           RowBox[{"ReplaceAll", "[", " ", 
            RowBox[{"\"\<Empty\>\"", "->", 
             RowBox[{"Missing", "[", "]"}]}], "]"}]}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"spectra", " ", "=", " ", 
          RowBox[{
          "importPlateReaderFilesFromDirectory", "[", 
           "\"\<data/Amphiphile_Absorbance_test/\>\"", "]"}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"output", "[", 
        RowBox[{"spectra", ",", " ", "pH"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Length", "[", "%", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8998859265488863`*^9, 3.899885936328849*^9}, {
  3.899886051284622*^9, 3.89988624597192*^9}, {3.8998863475241137`*^9, 
  3.899886432516902*^9}, {3.899886492888941*^9, 3.899886552044962*^9}, {
  3.899886765346325*^9, 3.899886796622616*^9}, {3.899886934999357*^9, 
  3.899886940806621*^9}},
 CellLabel->
  "In[590]:=",ExpressionUUID->"ba05a7ba-82a7-4af6-a267-9255541e98db"],

Cell[BoxData["175"], "Output",
 CellChangeTimes->{3.899886797517407*^9, 3.899886944885682*^9},
 CellLabel->
  "Out[591]=",ExpressionUUID->"37f64380-c374-4346-bf7b-eac31ed71826"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Model Testing", "Section",
 CellChangeTimes->{{3.899307435805265*^9, 3.899307437237192*^9}, {
  3.899887080755357*^9, 3.8998870811035957`*^9}, {3.899887933607667*^9, 
  3.899887935230361*^9}},ExpressionUUID->"cf0c2d03-5026-49ff-accc-\
5606d8625b1a"],

Cell[CellGroupData[{

Cell["GBT:", "Subsection",
 CellChangeTimes->{{3.899887938001206*^9, 
  3.8998879394005537`*^9}},ExpressionUUID->"0b942686-0080-44b5-901c-\
3e831df8b1a9"],

Cell["\<\
Based on previous work (2023.07.20_expanded_dataset.nb), Gradient Boosted \
Trees trained on the complete (non-dimensional reduced) dataset had the best \
performance for predicting pH.\
\>", "Text",
 CellChangeTimes->{{3.89930745098442*^9, 3.89930748085996*^9}, {
  3.89936797603583*^9, 
  3.899367984153681*^9}},ExpressionUUID->"1b4e6334-8797-4736-8056-\
9f13cf0af188"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"gbt", " ", "=", " ", 
    RowBox[{"Predict", "[", 
     RowBox[{"trainingData", ",", 
      RowBox[{"Method", "->", "\"\<GradientBoostedTrees\>\""}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Information", "[", "gbt", "]"}]}], "Input",
 CellChangeTimes->{{3.899307487180723*^9, 3.899307487948004*^9}, {
  3.899307527984346*^9, 3.899307544022747*^9}, {3.899307661614883*^9, 
  3.899307667448451*^9}, {3.8993077069452353`*^9, 3.899307714989511*^9}, {
  3.899886833964293*^9, 3.899886835553475*^9}, {3.8998870042382812`*^9, 
  3.89988700464108*^9}, {3.899887943344026*^9, 3.899887947890669*^9}},
 CellLabel->
  "In[610]:=",ExpressionUUID->"066b0399-2fc8-413b-969e-3f3fb57e38c3"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   StyleBox[
    FrameBox[GridBox[{
       {
        ItemBox[
         FrameBox[
          StyleBox["\<\"Predictor information\"\>", "SuggestionsBarText",
           StripOnInput->False,
           FontSize->12],
          FrameMargins->{{10, 5}, {-4, 2}},
          FrameStyle->None,
          StripOnInput->False],
         Alignment->{Left, Bottom},
         Background->RGBColor[0.96, 0.96, 0.96],
         Frame->{{False, False}, {True, False}},
         FrameStyle->Opacity[0.1],
         ItemSize->{Automatic, 1},
         StripOnInput->False]},
       {
        ItemBox[
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Data type"], 
                   TextCell["Data type"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{
                 InterpretationBox[
                  Cell["NumericalVector"], 
                  TextCell["NumericalVector"]], 
                 StyleBox[
                  TemplateBox[{"\" (\"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "41"}, 
                    "RowWithSeparators"], "\")\""}, "RowDefault"], 
                  GrayLevel[0.5], StripOnInput -> False]},
                "RowDefault"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Standard deviation"], 
                   TextCell["Standard deviation"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 TemplateBox[{"0.6305619692276821509`3.", 
                   StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0730946730309393194`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                  "RowDefault"],
                 
                 TemplateBox[{
                  "\"95% confidence interval: [\"", 
                   "0.4843726231658035397`3.", "\", \"", 
                   "0.776751315289560762`3.", "\"]\""}, "RowDefault"],
                 TooltipStyle->{}],
                Annotation[#, 
                 
                 Row[{"95% confidence interval: [", 0.4843726231658035397`3., 
                   ", ", 0.776751315289560762`3., "]"}], "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Method"], 
                   TextCell["Method"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 
                 InterpretationBox[Cell[
                  "GradientBoostedTrees",ExpressionUUID->
                   "484edb64-ef01-408d-b2a8-35bf51284c20"],
                  TextCell["GradientBoostedTrees"]],
                 StyleBox[
                  TagBox[
                   
                   GridBox[{{"\"BoostingMethod\"", "\"Gradient\""}, {
                    "MaxTrainingRounds", "50"}, {"\"LeavesNumber\"", "500"}, {
                    "\"LearningRate\"", "0.2`"}, {"\"MaxDepth\"", "6"}, {
                    "\"LeafSize\"", "7"}, {"\"L1Regularization\"", "0"}, {
                    "\"L2Regularization\"", "0"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, "Rows" -> {{None}}}, 
                    GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{1}}}, 
                    FrameStyle -> GrayLevel[0.84]], "Grid"], FontFamily -> 
                  "Verdana", StripOnInput -> False]],
                Annotation[#, 
                 Style[
                  
                  Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 500}, {
                    "LearningRate", 0.2}, {"MaxDepth", 6}, {"LeafSize", 7}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                   Alignment -> Left, Frame -> All, FrameStyle -> 
                   GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"], 
                 "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Single evaluation time"], 
                   TextCell["Single evaluation time"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{"5.48`", 
                 
                 RowBox[{
                  "\"ms\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]",
                    "\"example\""}], "milliseconds per example", 
                 FractionBox["\"Milliseconds\"", "\"Examples\""]},
                "Quantity"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Batch evaluation speed"], 
                   TextCell["Batch evaluation speed"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{"12.2`", 
                 
                 RowBox[{
                  "\"examples\"", "\[InvisibleSpace]", "\"/\"", 
                   "\[InvisibleSpace]", "\"ms\""}], 
                 "examples per millisecond", 
                 FractionBox["\"Examples\"", "\"Milliseconds\""]},
                "Quantity"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  TagBox[
                   TooltipBox[
                    InterpretationBox[
                    Cell["Loss"], 
                    TextCell["Loss"]], "\"Mean cross entropy\"", TooltipStyle -> 
                    "TextStyling"], 
                   Annotation[#, "Mean cross entropy", "Tooltip"]& ], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 TemplateBox[{"166.7514637699592867648`3.", 
                   StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "20.4353011062296197053`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                  "RowDefault"],
                 
                 TemplateBox[{
                  "\"95% confidence interval: [\"", 
                   "125.8808615575000544595`3.", "\", \"", 
                   "207.6220659824185190701`3.", "\"]\""}, "RowDefault"],
                 TooltipStyle->{}],
                Annotation[#, 
                 
                 Row[{"95% confidence interval: [", 
                   125.8808615575000544595`3., ", ", 
                   207.6220659824185190701`3., "]"}], "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Model memory"], 
                   TextCell["Model memory"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{"465.`", "\"kB\"", "kilobytes", "\"Kilobytes\""},
                "Quantity"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Training examples used"], 
                   TextCell["Training examples used"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{"898", "\"examples\"", "examples", "\"Examples\""},
                "Quantity"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Training time"], 
                   TextCell["Training time"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{"6.68`", "\"s\"", "seconds", "\"Seconds\""},
                "Quantity"]},
              {
               ItemBox[
                
                DynamicModuleBox[{
                 MachineLearning`file12Panel`PackagePrivate`pos$$ = 1}, 
                 DynamicBox[ToBoxes[
                   Show[
                    Part[{
                    Graphics[{{{{}, 
                    
                    GraphicsComplex[{{2.1972245773362196`, 
                    0.49947700332725603`}, {
                    3.6888794541139363`, -0.29557235559063466`}, {
                    5.0106352940962555`, -0.5843514388990242}, {
                    6.576469569048224, -0.8167454009191941}, {
                    2.1972245773362196`, 0.6347146771653487}, {
                    3.6888794541139363`, -0.036330062440518576`}, {
                    5.0106352940962555`, -0.3514647658646209}, {
                    6.576469569048224, -0.183903324638109}, {
                    2.1972245773362196`, 0.49947700332725603`}, {
                    3.6888794541139363`, -0.29557235559063466`}, {
                    5.0106352940962555`, -0.5843514388990242}, {
                    6.576469569048224, -0.8167454009191941}, {
                    2.1972245773362196`, 0.6347146771653487}, {
                    3.6888794541139363`, -0.036330062440518576`}, {
                    5.0106352940962555`, -0.3514647658646209}, {
                    6.576469569048224, -0.183903324638109}}, {{{}, {}, {}, \
{}, {}, {}, {
                    EdgeForm[], 
                    Directive[
                    Opacity[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    GraphicsGroup[{
                    
                    Polygon[{{1, 2, 3, 4, 8, 7, 6, 
                    5}}]}]}, {}, {}, {}}, {{}, {}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    Line[{1, 2, 3, 4}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    Line[{5, 6, 7, 8}]}}}], {{}, {}}}}, 
                    
                    GraphicsComplex[{{2.1972245773362196`, 
                    0.5693802537546693}, {
                    3.6888794541139363`, -0.15757380792686657`}, {
                    5.0106352940962555`, -0.46114384255807855`}, {
                    6.576469569048224, -0.4510769513452254}, {
                    2.1972245773362196`, 0.5693802537546693}, {
                    3.6888794541139363`, -0.15757380792686657`}, {
                    5.0106352940962555`, -0.46114384255807855`}, {
                    6.576469569048224, -0.4510769513452254}, {
                    2.1972245773362196`, 0.5693802537546693}, {
                    3.6888794541139363`, -0.15757380792686657`}, {
                    5.0106352940962555`, -0.46114384255807855`}, {
                    6.576469569048224, -0.4510769513452254}}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    Line[{5, 6, 7, 8}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    Point[{1, 2, 3, 4, 9, 10, 11, 12}]}, {}}, {
                    Tooltip[{
                    Opacity[0.], 
                    Point[1]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 25}, {
                    "LearningRate", 0.1}, {"MaxDepth", 6}, {"LeafSize", 3}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Opacity[0.], 
                    Point[2]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 25}, {
                    "LearningRate", 0.1}, {"MaxDepth", 6}, {"LeafSize", 3}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Opacity[0.], 
                    Point[3]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 500}, {
                    "LearningRate", 0.2}, {"MaxDepth", 6}, {"LeafSize", 7}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Opacity[0.], 
                    Point[4]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 25}, {
                    "LearningRate", 0.1}, {"MaxDepth", 6}, {"LeafSize", 3}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Opacity[0.], 
                    Point[9]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 25}, {
                    "LearningRate", 0.1}, {"MaxDepth", 6}, {"LeafSize", 3}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Opacity[0.], 
                    Point[10]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 25}, {
                    "LearningRate", 0.1}, {"MaxDepth", 6}, {"LeafSize", 3}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Opacity[0.], 
                    Point[11]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 500}, {
                    "LearningRate", 0.2}, {"MaxDepth", 6}, {"LeafSize", 7}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Opacity[0.], 
                    Point[12]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 25}, {
                    "LearningRate", 0.1}, {"MaxDepth", 6}, {"LeafSize", 3}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]]}}], {{}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.05438122368222, -0.5417882013495768}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    HoldForm["training examples used"], None}}, 
                    FrameTicks -> {{
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], {}}, {
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> GrayLevel[0.5, 0.2], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "DefaultPlotStyle" -> {
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02],
                     "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
                    Scaled[0.05], "OptimizePlotMarkers" -> True, 
                    "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{2.1502557457957505`, 
                    6.8001700683022}, {-0.5417882013495768, 
                    0.5693802537546693}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.01], 
                    Scaled[0.01]}, {
                    Scaled[0.02], 
                    Scaled[0.08090169943749476]}}, Ticks -> {
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], 
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0]}}], 
                    Graphics[{{{{}, 
                    
                    GraphicsComplex[{{2.1972245773362196`, 
                    0.7946950838532616}, {3.6888794541139363`, 
                    0.976497872893919}, {5.0106352940962555`, 
                    4.985769778094437}, {6.576469569048224, 
                    0.9894027291886125}, {2.1972245773362196`, 
                    0.9532805730339698}, {3.6888794541139363`, 
                    1.3140293896821054`}, {5.0106352940962555`, 
                    5.232106861096389}, {6.576469569048224, 
                    1.6409220685268744`}, {2.1972245773362196`, 
                    0.7946950838532616}, {3.6888794541139363`, 
                    0.976497872893919}, {5.0106352940962555`, 
                    4.985769778094437}, {6.576469569048224, 
                    0.9894027291886125}, {2.1972245773362196`, 
                    0.9532805730339698}, {3.6888794541139363`, 
                    1.3140293896821054`}, {5.0106352940962555`, 
                    5.232106861096389}, {6.576469569048224, 
                    1.6409220685268744`}}, {{{}, {}, {}, {}, {}, {}, {
                    EdgeForm[], 
                    Directive[
                    Opacity[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    GraphicsGroup[{
                    
                    Polygon[{{1, 2, 3, 4, 8, 7, 6, 
                    5}}]}]}, {}, {}, {}}, {{}, {}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    Line[{1, 2, 3, 4}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    Line[{5, 6, 7, 8}]}}}], {{}, {}}}}, 
                    
                    GraphicsComplex[{{2.1972245773362196`, 
                    0.8771282094089285}, {3.6888794541139363`, 
                    1.1594374794737945`}, {5.0106352940962555`, 
                    5.116504462987845}, {6.576469569048224, 
                    1.3673093662270237`}, {2.1972245773362196`, 
                    0.8771282094089285}, {3.6888794541139363`, 
                    1.1594374794737945`}, {5.0106352940962555`, 
                    5.116504462987845}, {6.576469569048224, 
                    1.3673093662270237`}, {2.1972245773362196`, 
                    0.8771282094089285}, {3.6888794541139363`, 
                    1.1594374794737945`}, {5.0106352940962555`, 
                    5.116504462987845}, {6.576469569048224, 
                    1.3673093662270237`}}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    Line[{5, 6, 7, 8}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    Point[{1, 2, 3, 4, 9, 10, 11, 12}]}, {}}, {
                    Tooltip[{
                    Opacity[0.], 
                    Point[1]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 25}, {
                    "LearningRate", 0.1}, {"MaxDepth", 6}, {"LeafSize", 3}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Opacity[0.], 
                    Point[2]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 25}, {
                    "LearningRate", 0.1}, {"MaxDepth", 6}, {"LeafSize", 3}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Opacity[0.], 
                    Point[3]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 500}, {
                    "LearningRate", 0.2}, {"MaxDepth", 6}, {"LeafSize", 7}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Opacity[0.], 
                    Point[4]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 25}, {
                    "LearningRate", 0.1}, {"MaxDepth", 6}, {"LeafSize", 3}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Opacity[0.], 
                    Point[9]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 25}, {
                    "LearningRate", 0.1}, {"MaxDepth", 6}, {"LeafSize", 3}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Opacity[0.], 
                    Point[10]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 25}, {
                    "LearningRate", 0.1}, {"MaxDepth", 6}, {"LeafSize", 3}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Opacity[0.], 
                    Point[11]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 500}, {
                    "LearningRate", 0.2}, {"MaxDepth", 6}, {"LeafSize", 7}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Opacity[0.], 
                    Point[12]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 25}, {
                    "LearningRate", 0.1}, {"MaxDepth", 6}, {"LeafSize", 3}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]]}}], {{}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.05438122368222, 0.5453729589795164}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    HoldForm["training examples used"], None}}, 
                    FrameTicks -> {{
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], {}}, {
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> GrayLevel[0.5, 0.2], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "DefaultPlotStyle" -> {
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02],
                     "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
                    Scaled[0.05], "OptimizePlotMarkers" -> True, 
                    "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{2.1502557457957505`, 6.8001700683022}, {
                    0.5453729589795164, 5.116504462987845}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.01], 
                    Scaled[0.01]}, {
                    Scaled[0.02], 
                    Scaled[0.08090169943749476]}}, Ticks -> {
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], 
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0]}}], 
                    Graphics[{{{{{Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.662364927833989, -0.3915241211033714, 
                    0.3215561680023656], 
                    Opacity[0.2656679988991191]], {}, {
                    
                    Line[{{2.1972245773362196`, 1.21709456844961}, {
                    2.1972245773362196`, 1.2202935108092796`}}], 
                    Line[{{2.1972245773362196`, 1.2202935108092796`}, {
                    2.1972245773362196`, 1.2234822525592204`}}]}}}, {{
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.6326165512188365, -0.3233471499094842, \
-0.1075687431027137], 
                    Opacity[0.22415790673785482`]], {}, {
                    
                    Line[{{2.1972245773362196`, 1.2179200675990987`}, {
                    2.1972245773362196`, 1.2205413219785055`}}], 
                    
                    Line[{{2.1972245773362196`, 1.2205413219785055`}, {
                    2.1972245773362196`, 1.2231557233429724`}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.6326165512188365, -0.3233471499094842, \
-0.1075687431027137], 
                    Opacity[0.22415790673785482`]], {}, {
                    
                    Line[{{3.6888794541139363`, 1.3653034190078766`}, {
                    3.6888794541139363`, 1.3684060999287408`}}], 
                    
                    Line[{{3.6888794541139363`, 1.3684060999287408`}, {
                    3.6888794541139363`, 1.3714991839890296`}}]}}}, {{
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.6425326767572207, -0.34607280697411325`, 
                    0.03547289393231273], 
                    Opacity[0.21465251111098735`]], {}, {
                    
                    Line[{{3.6888794541139363`, 1.3660177370246507`}, {
                    3.6888794541139363`, 1.3684202812664423`}}], 
                    
                    Line[{{3.6888794541139363`, 1.3684202812664423`}, {
                    3.6888794541139363`, 1.370817067121416}}]}}}, {{
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.657406865064797, -0.38016129257105685`, 
                    0.2500353494848524], 
                    Opacity[0.20888719723059385`]], {}, {
                    
                    Line[{{3.6888794541139363`, 1.3660177370246507`}, {
                    3.6888794541139363`, 1.3684202812664423`}}], 
                    
                    Line[{{3.6888794541139363`, 1.3684202812664423`}, {
                    3.6888794541139363`, 1.370817067121416}}]}}}, {{
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.6400536453726247, -0.340391392707956, \
-0.000287515326443874], 
                    Opacity[0.3082682265892902]], {}, {
                    
                    Line[{{2.1972245773362196`, 1.218460367226829}, {
                    2.1972245773362196`, 1.2204897574228988`}}], 
                    
                    Line[{{2.1972245773362196`, 1.2204897574228988`}, {
                    2.1972245773362196`, 1.222515037533959}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.6400536453726247, -0.340391392707956, \
-0.000287515326443874], 
                    Opacity[0.3082682265892902]], {}, {
                    
                    Line[{{3.6888794541139363`, 1.3659982113425047`}, {
                    3.6888794541139363`, 1.3684006778575704`}}], 
                    
                    Line[{{3.6888794541139363`, 1.3684006778575704`}, {
                    3.6888794541139363`, 1.3707973863579548`}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.6400536453726247, -0.340391392707956, \
-0.000287515326443874], 
                    Opacity[0.3082682265892902]], {}, {
                    
                    Line[{{5.0106352940962555`, 0.9463856402180468}, {
                    5.0106352940962555`, 0.9529633385492872}}], 
                    
                    Line[{{5.0106352940962555`, 0.9529633385492872}, {
                    5.0106352940962555`, 0.959498053343963}}]}}}, {{
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.6474907395264128, -0.3574356355064278, 
                    0.10699371244982595`], 
                    Opacity[0.23982965469429118`]], {}, {
                    
                    Line[{{2.1972245773362196`, 1.218144922918775}, {
                    2.1972245773362196`, 1.2204123186478049`}}], 
                    
                    Line[{{2.1972245773362196`, 1.2204123186478049`}, {
                    2.1972245773362196`, 1.2226745849217546`}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.6474907395264128, -0.3574356355064278, 
                    0.10699371244982595`], 
                    Opacity[0.23982965469429118`]], {}, {
                    Line[{{3.6888794541139363`, 1.3645254326347116`}, {
                    3.6888794541139363`, 1.3683259847845597`}}], 
                    
                    Line[{{3.6888794541139363`, 1.3683259847845597`}, {
                    3.6888794541139363`, 1.3721121474086522`}}]}}}, {{
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.6673229906031811, -0.40288694963568594`, 
                    0.39307698651987877`], 
                    Opacity[0.4943035529371539]], {}, {
                    
                    Line[{{2.1972245773362196`, 1.218144922918775}, {
                    2.1972245773362196`, 1.2204123186478049`}}], 
                    
                    Line[{{2.1972245773362196`, 1.2204123186478049`}, {
                    2.1972245773362196`, 1.2226745849217546`}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.6673229906031811, -0.40288694963568594`, 
                    0.39307698651987877`], 
                    Opacity[0.4943035529371539]], {}, {
                    
                    Line[{{3.6888794541139363`, 1.3657194883909922`}, {
                    3.6888794541139363`, 1.3684058692051158`}}], 
                    
                    Line[{{3.6888794541139363`, 1.3684058692051158`}, {
                    3.6888794541139363`, 1.3710850527077634`}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.6673229906031811, -0.40288694963568594`, 
                    0.39307698651987877`], 
                    Opacity[0.4943035529371539]], {}, {
                    
                    Line[{{5.0106352940962555`, 0.5522056313227054}, {
                    5.0106352940962555`, 0.5677169595342773}}], 
                    
                    Line[{{5.0106352940962555`, 0.5677169595342773}, {
                    5.0106352940962555`, 0.5829913568775519}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.6673229906031811, -0.40288694963568594`, 
                    0.39307698651987877`], 
                    Opacity[0.4943035529371539]], {}, {
                    
                    Line[{{6.576469569048224, 0.4617835825944468}, {
                    6.576469569048224, 0.5009567519722353}}], 
                    
                    Line[{{6.576469569048224, 0.5009567519722353}, {
                    6.576469569048224, 0.5386530559251909}}]}}}, {{
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.6350955826034326, -0.32902856417564147`, \
-0.07180833384395709], 
                    Opacity[1.]], {}, {
                    
                    Line[{{3.6888794541139363`, 1.3659914000913604`}, {
                    3.6888794541139363`, 1.3683938382228846`}}], 
                    
                    Line[{{3.6888794541139363`, 1.3683938382228846`}, {
                    3.6888794541139363`, 1.3707905184756177`}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.6350955826034326, -0.32902856417564147`, \
-0.07180833384395709], 
                    Opacity[1.]], {}, {
                    
                    Line[{{5.0106352940962555`, 0.946397643405012}, {
                    5.0106352940962555`, 0.9529786510007587}}], 
                    
                    Line[{{5.0106352940962555`, 0.9529786510007587}, {
                    5.0106352940962555`, 0.9595166319400098}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.6350955826034326, -0.32902856417564147`, \
-0.07180833384395709], 
                    Opacity[1.]], {}, {
                    
                    Line[{{6.576469569048224, -0.20595245658069042`}, {
                    6.576469569048224, -0.09875829536161694}}], 
                    
                    Line[{{6.576469569048224, -0.09875829536161694}, {
                    6.576469569048224, -0.0019503569267992687`}}]}}}, {{
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.6524488022956049, -0.36879846403874234`, 
                    0.17851453096733916`], 
                    Opacity[0.3785041281187439]], {}, {
                    
                    Line[{{2.1972245773362196`, 0.7946950838532616}, {
                    2.1972245773362196`, 0.8771282094089285}}], 
                    
                    Line[{{2.1972245773362196`, 0.8771282094089285}, {
                    2.1972245773362196`, 0.9532805730339698}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.6524488022956049, -0.36879846403874234`, 
                    0.17851453096733916`], 
                    Opacity[0.3785041281187439]], {}, {
                    
                    Line[{{3.6888794541139363`, 0.976497872893919}, {
                    3.6888794541139363`, 1.1594374794737945`}}], 
                    
                    Line[{{3.6888794541139363`, 1.1594374794737945`}, {
                    3.6888794541139363`, 1.3140293896821054`}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.6524488022956049, -0.36879846403874234`, 
                    0.17851453096733916`], 
                    Opacity[0.3785041281187439]], {}, {
                    
                    Line[{{5.0106352940962555`, 4.557516192083286}, {
                    5.0106352940962555`, 4.987155469431838}}], 
                    
                    Line[{{5.0106352940962555`, 4.987155469431838}, {
                    5.0106352940962555`, 5.286708954186343}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.6524488022956049, -0.36879846403874234`, 
                    0.17851453096733916`], 
                    Opacity[0.3785041281187439]], {}, {
                    
                    Line[{{6.576469569048224, 0.9894027291886125}, {
                    6.576469569048224, 1.3673093662270237`}}], 
                    
                    Line[{{6.576469569048224, 1.3673093662270237`}, {
                    6.576469569048224, 1.6409220685268744`}}]}}}, {{
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.6375746139880286, -0.33470997844179873`, \
-0.03604792458520048], 
                    Opacity[0.6852245277701068]], {}, {
                    
                    Line[{{2.1972245773362196`, 1.218460367226829}, {
                    2.1972245773362196`, 1.2204897574228988`}}], 
                    
                    Line[{{2.1972245773362196`, 1.2204897574228988`}, {
                    2.1972245773362196`, 1.222515037533959}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.6375746139880286, -0.33470997844179873`, \
-0.03604792458520048], 
                    Opacity[0.6852245277701068]], {}, {
                    
                    Line[{{3.6888794541139363`, 0.24017832827190821`}, {
                    3.6888794541139363`, 0.4421841797640738}}], 
                    
                    Line[{{3.6888794541139363`, 0.4421841797640738}, {
                    3.6888794541139363`, 0.6101615600549118}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.6375746139880286, -0.33470997844179873`, \
-0.03604792458520048], 
                    Opacity[0.6852245277701068]], {}, {
                    
                    Line[{{5.0106352940962555`, 4.985769778094437}, {
                    5.0106352940962555`, 5.116504462987845}}], 
                    
                    Line[{{5.0106352940962555`, 5.116504462987845}, {
                    5.0106352940962555`, 5.232106861096389}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.6375746139880286, -0.33470997844179873`, \
-0.03604792458520048], 
                    Opacity[0.6852245277701068]], {}, {
                    
                    Line[{{6.576469569048224, 2.6677503756866106`}, {
                    6.576469569048224, 2.961936302515765}}], 
                    
                    Line[{{6.576469569048224, 2.961936302515765}, {
                    6.576469569048224, 3.188961958756745}}]}}}}}, {{{}, {}, 
                    Tooltip[{
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.662364927833989, -0.3915241211033714, 
                    0.3215561680023656], 
                    Opacity[0.2656679988991191]], 
                    
                    Line[{{2.1972245773362196`, 1.2202935108092796`}, {
                    2.1972245773362196`, 1.2202935108092796`}}]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 110}, {
                    "LearningRate", 0.2}, {"MaxDepth", 6}, {"LeafSize", 15}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6326165512188365, -0.3233471499094842, \
-0.1075687431027137], 
                    Opacity[0.22415790673785482`]], 
                    
                    Line[{{2.1972245773362196`, 1.2205413219785055`}, {
                    3.6888794541139363`, 1.3684060999287408`}}]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 13}, {
                    "LearningRate", 0.1}, {"MaxDepth", 6}, {
                    "LeafSize", 200}, {"L1Regularization", 0}, {
                    "L2Regularization", 0}}, Alignment -> Left, Frame -> All, 
                    FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.1421359549995791, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6425326767572207, -0.34607280697411325`, 
                    0.03547289393231273], 
                    Opacity[0.21465251111098735`]], 
                    
                    Line[{{3.6888794541139363`, 1.3684202812664423`}, {
                    3.6888794541139363`, 1.3684202812664423`}}]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 250}, {
                    "LearningRate", 0.1}, {"MaxDepth", 6}, {"LeafSize", 35}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.37820393249936934`, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.657406865064797, -0.38016129257105685`, 
                    0.2500353494848524], 
                    Opacity[0.20888719723059385`]], 
                    
                    Line[{{3.6888794541139363`, 1.3684202812664423`}, {
                    3.6888794541139363`, 1.3684202812664423`}}]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 13}, {
                    "LearningRate", 0.04}, {"MaxDepth", 6}, {
                    "LeafSize", 35}, {"L1Regularization", 0}, {
                    "L2Regularization", 0}}, Alignment -> Left, Frame -> All, 
                    FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.6142719099991583, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6400536453726247, -0.340391392707956, \
-0.000287515326443874], 
                    Opacity[0.3082682265892902]], 
                    
                    Line[{{2.1972245773362196`, 1.2204897574228988`}, {
                    3.6888794541139363`, 1.3684006778575704`}, {
                    5.0106352940962555`, 0.9529633385492872}}]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 60}, {
                    "LearningRate", 0.04}, {"MaxDepth", 6}, {
                    "LeafSize", 200}, {"L1Regularization", 0}, {
                    "L2Regularization", 0}}, Alignment -> Left, Frame -> All, 
                    FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.8503398874989481, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6474907395264128, -0.3574356355064278, 
                    0.10699371244982595`], 
                    Opacity[0.23982965469429118`]], 
                    
                    Line[{{2.1972245773362196`, 1.2204123186478049`}, {
                    3.6888794541139363`, 1.3683259847845597`}}]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 250}, {
                    "LearningRate", 0.004}, {"MaxDepth", 6}, {
                    "LeafSize", 35}, {"L1Regularization", 0}, {
                    "L2Regularization", 0}}, Alignment -> Left, Frame -> All, 
                    FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.08640786499873876, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6673229906031811, -0.40288694963568594`, 
                    0.39307698651987877`], 
                    Opacity[0.4943035529371539]], 
                    
                    Line[{{2.1972245773362196`, 1.2204123186478049`}, {
                    3.6888794541139363`, 1.3684058692051158`}, {
                    5.0106352940962555`, 0.5677169595342773}, {
                    6.576469569048224, 0.5009567519722353}}]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 60}, {
                    "LearningRate", 0.02}, {"MaxDepth", 6}, {
                    "LeafSize", 35}, {"L1Regularization", 0}, {
                    "L2Regularization", 0}}, Alignment -> Left, Frame -> All, 
                    FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.3224758424985268, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6350955826034326, -0.32902856417564147`, \
-0.07180833384395709], 
                    Opacity[1.]], 
                    
                    Line[{{3.6888794541139363`, 1.3683938382228846`}, {
                    5.0106352940962555`, 0.9529786510007587}, {
                    6.576469569048224, -0.09875829536161694}}]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 110}, {
                    "LearningRate", 0.1}, {"MaxDepth", 6}, {
                    "LeafSize", 200}, {"L1Regularization", 0}, {
                    "L2Regularization", 0}}, Alignment -> Left, Frame -> All, 
                    FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.5585438199983166, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6524488022956049, -0.36879846403874234`, 
                    0.17851453096733916`], 
                    Opacity[0.3785041281187439]], 
                    
                    Line[{{2.1972245773362196`, 0.8771282094089285}, {
                    3.6888794541139363`, 1.1594374794737945`}, {
                    5.0106352940962555`, 4.987155469431838}, {
                    6.576469569048224, 1.3673093662270237`}}]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 25}, {
                    "LearningRate", 0.1}, {"MaxDepth", 6}, {"LeafSize", 3}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.7946117974981064, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6375746139880286, -0.33470997844179873`, \
-0.03604792458520048], 
                    Opacity[0.6852245277701068]], 
                    
                    Line[{{2.1972245773362196`, 1.2204897574228988`}, {
                    3.6888794541139363`, 0.4421841797640738}, {
                    5.0106352940962555`, 5.116504462987845}, {
                    6.576469569048224, 2.961936302515765}}]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 500}, {
                    "LearningRate", 0.2}, {"MaxDepth", 6}, {"LeafSize", 7}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]]}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.662364927833989, -0.3915241211033714, 
                    0.3215561680023656], 
                    Opacity[0.2656679988991191]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.1972245773362196`, 1.2202935108092796`}}, {{
                    2.1972245773362196`, 1.2202935108092796`}}, {{
                    2.1972245773362196`, 1.2202935108092796`}}, {{
                    2.1972245773362196`, 1.2202935108092796`}}}]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 110}, {
                    "LearningRate", 0.2}, {"MaxDepth", 6}, {"LeafSize", 15}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6326165512188365, -0.3233471499094842, \
-0.1075687431027137], 
                    Opacity[0.22415790673785482`]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.1972245773362196`, 1.2205413219785055`}}, {{
                    3.6888794541139363`, 1.3684060999287408`}}, {{
                    2.1972245773362196`, 1.2205413219785055`}}, {{
                    3.6888794541139363`, 1.3684060999287408`}}}]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 13}, {
                    "LearningRate", 0.1}, {"MaxDepth", 6}, {
                    "LeafSize", 200}, {"L1Regularization", 0}, {
                    "L2Regularization", 0}}, Alignment -> Left, Frame -> All, 
                    FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6425326767572207, -0.34607280697411325`, 
                    0.03547289393231273], 
                    Opacity[0.21465251111098735`]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    3.6888794541139363`, 1.3684202812664423`}}, {{
                    3.6888794541139363`, 1.3684202812664423`}}, {{
                    3.6888794541139363`, 1.3684202812664423`}}, {{
                    3.6888794541139363`, 1.3684202812664423`}}}]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 250}, {
                    "LearningRate", 0.1}, {"MaxDepth", 6}, {"LeafSize", 35}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.657406865064797, -0.38016129257105685`, 
                    0.2500353494848524], 
                    Opacity[0.20888719723059385`]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    3.6888794541139363`, 1.3684202812664423`}}, {{
                    3.6888794541139363`, 1.3684202812664423`}}, {{
                    3.6888794541139363`, 1.3684202812664423`}}, {{
                    3.6888794541139363`, 1.3684202812664423`}}}]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 13}, {
                    "LearningRate", 0.04}, {"MaxDepth", 6}, {
                    "LeafSize", 35}, {"L1Regularization", 0}, {
                    "L2Regularization", 0}}, Alignment -> Left, Frame -> All, 
                    FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6400536453726247, -0.340391392707956, \
-0.000287515326443874], 
                    Opacity[0.3082682265892902]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.1972245773362196`, 1.2204897574228988`}}, {{
                    3.6888794541139363`, 1.3684006778575704`}}, {{
                    5.0106352940962555`, 0.9529633385492872}}, {{
                    2.1972245773362196`, 1.2204897574228988`}}, {{
                    3.6888794541139363`, 1.3684006778575704`}}, {{
                    5.0106352940962555`, 0.9529633385492872}}}]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 60}, {
                    "LearningRate", 0.04}, {"MaxDepth", 6}, {
                    "LeafSize", 200}, {"L1Regularization", 0}, {
                    "L2Regularization", 0}}, Alignment -> Left, Frame -> All, 
                    FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6474907395264128, -0.3574356355064278, 
                    0.10699371244982595`], 
                    Opacity[0.23982965469429118`]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.1972245773362196`, 1.2204123186478049`}}, {{
                    3.6888794541139363`, 1.3683259847845597`}}, {{
                    2.1972245773362196`, 1.2204123186478049`}}, {{
                    3.6888794541139363`, 1.3683259847845597`}}}]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 250}, {
                    "LearningRate", 0.004}, {"MaxDepth", 6}, {
                    "LeafSize", 35}, {"L1Regularization", 0}, {
                    "L2Regularization", 0}}, Alignment -> Left, Frame -> All, 
                    FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6673229906031811, -0.40288694963568594`, 
                    0.39307698651987877`], 
                    Opacity[0.4943035529371539]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.1972245773362196`, 1.2204123186478049`}}, {{
                    3.6888794541139363`, 1.3684058692051158`}}, {{
                    5.0106352940962555`, 0.5677169595342773}}, {{
                    6.576469569048224, 0.5009567519722353}}, {{
                    2.1972245773362196`, 1.2204123186478049`}}, {{
                    3.6888794541139363`, 1.3684058692051158`}}, {{
                    5.0106352940962555`, 0.5677169595342773}}, {{
                    6.576469569048224, 0.5009567519722353}}}]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 60}, {
                    "LearningRate", 0.02}, {"MaxDepth", 6}, {
                    "LeafSize", 35}, {"L1Regularization", 0}, {
                    "L2Regularization", 0}}, Alignment -> Left, Frame -> All, 
                    FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6350955826034326, -0.32902856417564147`, \
-0.07180833384395709], 
                    Opacity[1.]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    3.6888794541139363`, 1.3683938382228846`}}, {{
                    5.0106352940962555`, 0.9529786510007587}}, {{
                    6.576469569048224, -0.09875829536161694}}, {{
                    3.6888794541139363`, 1.3683938382228846`}}, {{
                    5.0106352940962555`, 0.9529786510007587}}, {{
                    6.576469569048224, -0.09875829536161694}}}]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 110}, {
                    "LearningRate", 0.1}, {"MaxDepth", 6}, {
                    "LeafSize", 200}, {"L1Regularization", 0}, {
                    "L2Regularization", 0}}, Alignment -> Left, Frame -> All, 
                    FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6524488022956049, -0.36879846403874234`, 
                    0.17851453096733916`], 
                    Opacity[0.3785041281187439]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.1972245773362196`, 0.8771282094089285}}, {{
                    3.6888794541139363`, 1.1594374794737945`}}, {{
                    5.0106352940962555`, 4.987155469431838}}, {{
                    6.576469569048224, 1.3673093662270237`}}, {{
                    2.1972245773362196`, 0.8771282094089285}}, {{
                    3.6888794541139363`, 1.1594374794737945`}}, {{
                    5.0106352940962555`, 4.987155469431838}}, {{
                    6.576469569048224, 1.3673093662270237`}}}]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 25}, {
                    "LearningRate", 0.1}, {"MaxDepth", 6}, {"LeafSize", 3}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6375746139880286, -0.33470997844179873`, \
-0.03604792458520048], 
                    Opacity[0.6852245277701068]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.1972245773362196`, 1.2204897574228988`}}, {{
                    3.6888794541139363`, 0.4421841797640738}}, {{
                    5.0106352940962555`, 5.116504462987845}}, {{
                    6.576469569048224, 2.961936302515765}}, {{
                    2.1972245773362196`, 1.2204897574228988`}}, {{
                    3.6888794541139363`, 0.4421841797640738}}, {{
                    5.0106352940962555`, 5.116504462987845}}, {{
                    6.576469569048224, 2.961936302515765}}}]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 500}, {
                    "LearningRate", 0.2}, {"MaxDepth", 6}, {"LeafSize", 7}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]]}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.662364927833989, -0.3915241211033714, 
                    0.3215561680023656], 
                    Opacity[0.2656679988991191]], {
                    Point[{2.1972245773362196`, 1.2202935108092796`}], 
                    Point[{2.1972245773362196`, 1.2202935108092796`}], 
                    Point[{2.1972245773362196`, 1.2202935108092796`}], 
                    Point[{2.1972245773362196`, 1.2202935108092796`}]}}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 110}, {
                    "LearningRate", 0.2}, {"MaxDepth", 6}, {"LeafSize", 15}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6326165512188365, -0.3233471499094842, \
-0.1075687431027137], 
                    Opacity[0.22415790673785482`]], {
                    Point[{2.1972245773362196`, 1.2205413219785055`}], 
                    Point[{3.6888794541139363`, 1.3684060999287408`}], 
                    Point[{2.1972245773362196`, 1.2205413219785055`}], 
                    Point[{3.6888794541139363`, 1.3684060999287408`}]}}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 13}, {
                    "LearningRate", 0.1}, {"MaxDepth", 6}, {
                    "LeafSize", 200}, {"L1Regularization", 0}, {
                    "L2Regularization", 0}}, Alignment -> Left, Frame -> All, 
                    FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6425326767572207, -0.34607280697411325`, 
                    0.03547289393231273], 
                    Opacity[0.21465251111098735`]], {
                    Point[{3.6888794541139363`, 1.3684202812664423`}], 
                    Point[{3.6888794541139363`, 1.3684202812664423`}], 
                    Point[{3.6888794541139363`, 1.3684202812664423`}], 
                    Point[{3.6888794541139363`, 1.3684202812664423`}]}}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 250}, {
                    "LearningRate", 0.1}, {"MaxDepth", 6}, {"LeafSize", 35}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.657406865064797, -0.38016129257105685`, 
                    0.2500353494848524], 
                    Opacity[0.20888719723059385`]], {
                    Point[{3.6888794541139363`, 1.3684202812664423`}], 
                    Point[{3.6888794541139363`, 1.3684202812664423`}], 
                    Point[{3.6888794541139363`, 1.3684202812664423`}], 
                    Point[{3.6888794541139363`, 1.3684202812664423`}]}}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 13}, {
                    "LearningRate", 0.04}, {"MaxDepth", 6}, {
                    "LeafSize", 35}, {"L1Regularization", 0}, {
                    "L2Regularization", 0}}, Alignment -> Left, Frame -> All, 
                    FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6400536453726247, -0.340391392707956, \
-0.000287515326443874], 
                    Opacity[0.3082682265892902]], {
                    Point[{2.1972245773362196`, 1.2204897574228988`}], 
                    Point[{3.6888794541139363`, 1.3684006778575704`}], 
                    Point[{5.0106352940962555`, 0.9529633385492872}], 
                    Point[{2.1972245773362196`, 1.2204897574228988`}], 
                    Point[{3.6888794541139363`, 1.3684006778575704`}], 
                    Point[{5.0106352940962555`, 0.9529633385492872}]}}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 60}, {
                    "LearningRate", 0.04}, {"MaxDepth", 6}, {
                    "LeafSize", 200}, {"L1Regularization", 0}, {
                    "L2Regularization", 0}}, Alignment -> Left, Frame -> All, 
                    FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6474907395264128, -0.3574356355064278, 
                    0.10699371244982595`], 
                    Opacity[0.23982965469429118`]], {
                    Point[{2.1972245773362196`, 1.2204123186478049`}], 
                    Point[{3.6888794541139363`, 1.3683259847845597`}], 
                    Point[{2.1972245773362196`, 1.2204123186478049`}], 
                    Point[{3.6888794541139363`, 1.3683259847845597`}]}}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 250}, {
                    "LearningRate", 0.004}, {"MaxDepth", 6}, {
                    "LeafSize", 35}, {"L1Regularization", 0}, {
                    "L2Regularization", 0}}, Alignment -> Left, Frame -> All, 
                    FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6673229906031811, -0.40288694963568594`, 
                    0.39307698651987877`], 
                    Opacity[0.4943035529371539]], {
                    Point[{2.1972245773362196`, 1.2204123186478049`}], 
                    Point[{3.6888794541139363`, 1.3684058692051158`}], 
                    Point[{5.0106352940962555`, 0.5677169595342773}], 
                    Point[{6.576469569048224, 0.5009567519722353}], 
                    Point[{2.1972245773362196`, 1.2204123186478049`}], 
                    Point[{3.6888794541139363`, 1.3684058692051158`}], 
                    Point[{5.0106352940962555`, 0.5677169595342773}], 
                    Point[{6.576469569048224, 0.5009567519722353}]}}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 60}, {
                    "LearningRate", 0.02}, {"MaxDepth", 6}, {
                    "LeafSize", 35}, {"L1Regularization", 0}, {
                    "L2Regularization", 0}}, Alignment -> Left, Frame -> All, 
                    FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6350955826034326, -0.32902856417564147`, \
-0.07180833384395709], 
                    Opacity[1.]], {
                    Point[{3.6888794541139363`, 1.3683938382228846`}], 
                    Point[{5.0106352940962555`, 0.9529786510007587}], 
                    Point[{6.576469569048224, -0.09875829536161694}], 
                    Point[{3.6888794541139363`, 1.3683938382228846`}], 
                    Point[{5.0106352940962555`, 0.9529786510007587}], 
                    Point[{6.576469569048224, -0.09875829536161694}]}}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 110}, {
                    "LearningRate", 0.1}, {"MaxDepth", 6}, {
                    "LeafSize", 200}, {"L1Regularization", 0}, {
                    "L2Regularization", 0}}, Alignment -> Left, Frame -> All, 
                    FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6524488022956049, -0.36879846403874234`, 
                    0.17851453096733916`], 
                    Opacity[0.3785041281187439]], {
                    Point[{2.1972245773362196`, 0.8771282094089285}], 
                    Point[{3.6888794541139363`, 1.1594374794737945`}], 
                    Point[{5.0106352940962555`, 4.987155469431838}], 
                    Point[{6.576469569048224, 1.3673093662270237`}], 
                    Point[{2.1972245773362196`, 0.8771282094089285}], 
                    Point[{3.6888794541139363`, 1.1594374794737945`}], 
                    Point[{5.0106352940962555`, 4.987155469431838}], 
                    Point[{6.576469569048224, 1.3673093662270237`}]}}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 25}, {
                    "LearningRate", 0.1}, {"MaxDepth", 6}, {"LeafSize", 3}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6375746139880286, -0.33470997844179873`, \
-0.03604792458520048], 
                    Opacity[0.6852245277701068]], {
                    Point[{2.1972245773362196`, 1.2204897574228988`}], 
                    Point[{3.6888794541139363`, 0.4421841797640738}], 
                    Point[{5.0106352940962555`, 5.116504462987845}], 
                    Point[{6.576469569048224, 2.961936302515765}], 
                    Point[{2.1972245773362196`, 1.2204897574228988`}], 
                    Point[{3.6888794541139363`, 0.4421841797640738}], 
                    Point[{5.0106352940962555`, 5.116504462987845}], 
                    Point[{6.576469569048224, 2.961936302515765}]}}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 500}, {
                    "LearningRate", 0.2}, {"MaxDepth", 6}, {"LeafSize", 7}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}}, {{}, {}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.05438122368222, -0.2041188110194427}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    HoldForm["training examples used"], None}}, 
                    FrameTicks -> {{
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], {}}, {
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> GrayLevel[0.5, 0.2], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "DefaultPlotStyle" -> {
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02],
                     "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
                    Scaled[0.05], "OptimizePlotMarkers" -> True, 
                    "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{2.1502557457957505`, 
                    6.8001700683022}, {-0.20411881101944315`, 
                    5.21181464279217}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.01], 
                    Scaled[0.01]}, {0, 0}}, Ticks -> {
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], 
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0]}}]}, 
                    MachineLearning`file12Panel`PackagePrivate`pos$$], 
                    PlotLabel -> Grid[{{
                    Button[
                    Deploy[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.25], 
                    Line[{{0, 0.8}, {-1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]], 
                    Graphics[{
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], 
                    Line[{{0, 0.8}, {-1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]]], "LinkHand"]], 
                    MachineLearning`file12Panel`PackagePrivate`pos$$ = (1 + 
                    Mod[-1 + # + #2, 3]& )[
                    MachineLearning`file12Panel`PackagePrivate`pos$$, -1], 
                    Appearance -> "Frameless"], 
                    Part[{"Standard deviation", 
                    Tooltip[
                    "Learning curve", 
                    "mean cross entropy for best algorithm at each training \
size"], 
                    Tooltip[
                    "Learning curves for all algorithms", 
                    "mean cross entropy at each training size"]}, 
                    MachineLearning`file12Panel`PackagePrivate`pos$$], 
                    Button[
                    Deploy[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.25], 
                    Line[{{0, 0.8}, {1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]], 
                    Graphics[{
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], 
                    Line[{{0, 0.8}, {1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]]], "LinkHand"]], 
                    MachineLearning`file12Panel`PackagePrivate`pos$$ = (1 + 
                    Mod[-1 + # + #2, 3]& )[
                    MachineLearning`file12Panel`PackagePrivate`pos$$, 
                    Plus[1]], Appearance -> "Frameless"]}}, 
                    Alignment -> {Center, Baseline}, 
                    ItemSize -> {{3, 20, 3}, {2}}]], StandardForm],
                  ImageSizeCache->{330., {122., 127.}}],
                 DynamicModuleValues:>{}],
                Alignment->Center,
                StripOnInput->False], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             ColumnsEqual->False,
             
             GridBoxAlignment->{
              "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
             GridBoxDividers->{"Columns" -> {False, {
                  Opacity[0.15]}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {Automatic, {Automatic}}, "Rows" -> {{1.}}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], 
                 Offset[1.1199999999999999`], {
                  Offset[1.75]}, 
                 Offset[0.27999999999999997`]}, "Rows" -> {
                 Offset[0.2], {
                  Offset[0.8]}, 
                 Offset[0.2]}}],
            "Grid"],
           FrameMargins->{{10, 10}, {10, 5}},
           FrameStyle->None,
           StripOnInput->False],
          Deploy,
          DefaultBaseStyle->"Deploy"],
         Alignment->Center,
         BaseStyle->{
          FontWeight -> "Light", FontSize -> 11, FontFamily -> 
           ".AppleSystemUIFont", NumberMarks -> False, Deployed -> False},
         StripOnInput->False]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], 
          Offset[0.8], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[0.85],
     RoundingRadius->5,
     StripOnInput->False],
    StripOnInput->False,
    LineBreakWithin->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  MachineLearning`MLInformationObject[
   PredictorFunction[<|
    "ExampleNumber" -> 898, 
     "Input" -> <|
      "Preprocessor" -> 
       MachineLearning`MLProcessor[
        "ToMLDataset", <|
         "Input" -> <|
           "f1" -> <|"Type" -> "NumericalVector", "Length" -> 41|>|>, 
          "Output" -> <|
           "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
          "Preprocessor" -> 
          MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
               MachineLearning`MLProcessor["List"], 
               MachineLearning`MLProcessor[
               "WrapMLDataset", <|
                "FeatureTypes" -> {"NumericalVector"}, 
                 "FeatureKeys" -> {"f1"}, "FeatureWeights" -> Automatic, 
                 "ExampleWeights" -> Automatic, "RawExample" -> 
                 Missing["KeyAbsent", "RawExample"], "StructurePreserving" -> 
                 False|>]}|>], "ScalarFeature" -> True, "Invertibility" -> 
          "Perfect", "StructurePreserving" -> False, "Missing" -> 
          "Allowed"|>], "Processor" -> 
       MachineLearning`MLProcessor[
        "Sequence", <|
         "Input" -> <|
           "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
          "Output" -> <|
           "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
          "Processors" -> {
            MachineLearning`MLProcessor[
            "SynthesizeMissingValues", <|
             "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
              "StructurePreserving" -> True, 
              "Input" -> <|
               "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
              "Distribution" -> 
              LearnedDistribution[<|
                "ExampleNumber" -> 898, "Preprocessor" -> 
                 MachineLearning`MLProcessor[
                  "ToMLDataset", <|
                   "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Length" -> 41|>|>,
                     "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Preprocessor" -> MachineLearning`MLProcessor["Identity"],
                     "ScalarFeature" -> True, "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
                  "Processor" -> 
                 MachineLearning`MLProcessor[
                  "Sequence", <|
                   "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Processors" -> {
                    MachineLearning`MLProcessor[
                    "LogRescaleNumericalVector", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Indices" -> {24}, "Centers" -> {0.04314593098342069}, 
                    "Cutoffs" -> {0.00033538463930567197`}, 
                    "Version" -> {13.2, 1}, "ID" -> 1758109800256407757, 
                    "Output" -> <|
                    "f1" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 1|>|>|>], 
                    MachineLearning`MLProcessor[
                    "Standardize", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAACzypZgfu+XP9BIt2NgL5o/FbGuiAa3nD+D
+clcUqGfPwkfZWf8W6E/yozpBxY0oj9X8bwxz8aiP8j/dbZD86I/WV0uoATd
oj+Gm9dmKKuiPw0y/Kn7W6I/UlpiP3HHoT8sKD3m/OCgP/3CySr7cJ8/W2aO
XlKdnT9ZHJM8zm6cPzQ/PK9SkZw/fZKae8zUnT/oCMg+4P2fP9uwnEML76E/
LzUTTaPioz9reOhNoyCkP1a4q+JTGqI/B1Ez/2hMA8AEiMCk+D+fP0BcLLMl
HqA/dT7ZFK2ioD/ozGQh40+gP5aWGrebJp0/9+MerbAhlz9xo4ZSyVaQP3Oo
KEEjU4Q/8XWPWSYyeD9wd9QjUdNpP5OdF1H/Al0/DtOG21IgTT8eoV6P8HxA
P429KDkWqjM/+F4AMmWAKT9/W2K81nsjP3eTQBIumxg/s8CZ+Q==
                    "], "StandardDeviation" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAAAIQ46QdQ+AP1A0Za9+/nc/YwHlmJnNcz8e
tU0hU3F3P4nTZmYcZH8/QOcuO1TEgz9GFFguRzCIP0/oTX65Bow/xcoK+5xw
jj+yhtenIcOPPz0JPmtTYY8/vayUQOTAjT+7o+6G9JiLP9W7S69WqYk/SwZj
iIbOiD9hmymwdqmIP9floHbyAYk/ESULVVZIiT+YaRZNW7aJP57HOgRuh40/
nDik6aakkT+gkUnvb12RP7kTLcbotYs/E4XLS93v/T/lnIgXLhqNP+cMNnvz
CZE/PK/VBXTukj/fFJA0GHSTP9YmLjoExpE/ys89UBAkjD8h6HUkaGODP7/s
bHjt+3Y/89BVz/KdaT/+OmLvXeJZP3IB+rRcMlA/4hXanuYaRj8QVTaAkh9C
P0dslVNaIUI/Gteieh37PT9o7vdEsD05PxFhqaNPXTY//nGWtQ==
                    "], 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Version" -> {13.2, 1}, "ID" -> 64935607783415987|>]}, 
                    "Invertibility" -> "Perfect", "StructurePreserving" -> 
                    True, "Missing" -> "Allowed"|>], "PerformanceGoal" -> 
                 "DirectTraining", "BatchProcessing" -> Automatic, 
                 "Model" -> <|"RotationMatrix" -> CompressedData["
1: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
J9l5Dd8JgKWM2sPHN2vxso9C2FGXEJSKSY1y8SBg7SbnUxOVONRq9Wu0lsrF
OH2eixfmSlFk7bF0Pr0DtM3mydeVj2LGpn7n4/B6mN/pWRo8mo7pH2jc0380
4MMq9WMnGRqwpr1Io1k+E7UNVyd/k+fhYesrUCSRisdtbSZWBnuw8p2WrU0I
EY1oRPUbNb8he321yzP1LnhCFvjp4HYD2MzRXT8sWo0z817CllOuqLNVsK74
2R5kO26qLLiXYedd+jTpnkTQlx56q5+ViNdl2IUawn3ggOYNn749DqJ5Xkn/
+UI2nKo69/y8SCRun1H9MrORi5vpv8k2j9TD8RyNw33D2RD9Tv7SO0qEK7pC
7N9sdXFlLcJ30DoR2gZqM5jGQuHYSrRUX2UHPDhzslmqohr1o775nfKvhi+u
q/Hz9pHQV1Dr3W9ajJ5idOHNH9KA7vJp30YdGzAJWaCYv1IEOXdI53R78jDo
0ef0uvgmEOy/cISaOx3pGWaUHqkWoHej2K5PYAVYj10ZGKxrwFmF6x9UvZug
cly8LLB+AGimldTz/vVCH+l58585eWi809DU0z4G9cw0scplXaAWwXAsOS8M
Un0vHv3FUwvX9TuZJlTr4I2G0Nr98QaI01EvHFOpxgiZG2xqklHIPUVXrH5G
G2rIyJf0S8uQl38hZdspGWYYGi4+I03A3h7Pnn6OQPjNZXKuwjUD7mu9vMlf
VgDXOk8XMMh8Ru23Mikih0Iw1Lo/PMavBd4XRReuTSXs4faGl1BGHajyd56Q
ORQNG5d+2JJnRgLPK7qMhUOFOFJHcevl03q49tvvoWlLJu482q3lSSfg2Yh/
1V+Um8C4rkw/8kIaKjd+rUnqqQCzntW242Wh+KKIgW400AHbQs3OaTY0grR0
Dwv7+xZoIrtiT8jswK40pUXpeyPg6XferbO2E5wfTeSUmfUBZ/jnqiNFCGev
t+GJinJoJRYxGyy3omH+e4uk/QTINjM9t3KpB69/M7qGp6rQsf/fS1L7WkSW
U9b75dLg14hrvKBVETjd+brZkdgAfT2ng9oZqvHuL+I2NRMBZfku2tKsWkCV
l1Lf9uUyzGDVFj7Xngo3Jrzpbz/LxcADV44L/HWAbnsecvfoGAixp2pivZsP
HLyiH2mFvOD5gm2+I00cJJ0lF3CXbISqJeb0VRpF7Ll3vXhrsx4ELKV6CAX5
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
1KFRLg==
                    "], "Precisions" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAADXPTPKV+emP0mYF6ERALo/0/FosOqsyj+v
dMPw/bfiP8eJI2PmzvE/4zcctxE3BEAJmyq7BkkLQKRG27tUMhNAG/FUq8qA
HECuglm4FswgQF25JMNAhCVAKDcef738OUAMmZeCPIpIQCPN6GINaklAXZlS
CX1JUUBiZraoVbBdQDjTujK0XGBArIRCNlVBaUAQ3c92D8puQMoCLpSaWXBA
D45svkdveECesgrbGAx7QLIiVrp1xn9A94wkE5tbhUDy+ynoV12IQAsN90TP
LolAEIDElHL8kkCRLKUFeNuTQAMFutJ2kplAYWkPBUMlnkDxUx66FkugQJpl
9eo2vqFAtvPl22JapED9a8StvaymQCCD4vL/kahAgLGfKqu1q0D9u0TCplOw
QBS+W+pL3rZAswHtb9IovUCziMOYVM/BQJ/qRwFrVNZAA6qbbA==
                    "], "NoisePrecision" -> None, "Processor" -> 
                   MachineLearning`MLProcessor[
                    "Center", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAABBFtZd2NwjP4SA0b9Xoia/caH8n9VEJT90
oH6furwxP7DKP5C3LiS/N3/OnlSyMr+ldkjEzb4jv/ZIB/u9Ijm/GdQSvIAl
8r6jKRkVHb0wv8p+1AeKeCe/PtLAANl5J7+asadF5QnuvuNm6AmvIT+/ncwG
VccBNL8b0AWfz6cLP0G6BFcXaCM/ALwf6xOXJj9eVqDtcC8jPwtMpWRsSxK/
edzXsQxjJT8DK/kXY3klv3zXyFtZjDE/lti/l7/HFz9yf9LXZQwrP6Jk5yJ/
1TQ/XpLv8+PqJD/Hot04VBLuvjXaEfsdaSw/JIgNrsvdGj85R++o2uslPwKr
73VnqQw/tTIc2Pf6IL9yj/XXc4ouP2oJNokIgCg//HJW+x0GQL8BXdaFRTBB
vxy2BABVyy8/x7v2i1/KFb98fg56PSMjv9UKRkisctK+BXKbKg==
                    "], 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Version" -> {13.2, 1}, "ID" -> 1210029810956485142|>], 
                   "PostProcessor" -> 
                   MachineLearning`MLProcessor[
                    "FirstValues", <|
                    "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, 
                    "Key" -> "f1", "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
                    "Method" -> "Multinormal", 
                   "Options" -> <|
                    "CovarianceType" -> <|
                    "Value" -> "Full", "Options" -> <||>|>, 
                    "IntrinsicDimension" -> <|
                    "Value" -> 41, "Options" -> <||>|>|>|>, 
                 "TrainingInformation" -> <|
                  "Configurations" -> 
                   Dataset[<|<|
                    "Value" -> "Multinormal", 
                    "Options" -> <|
                    "CovarianceType" -> <|"Value" -> "Full"|>, 
                    "IntrinsicDimension" -> <|"Value" -> "Heuristic"|>|>, 
                    "NaiveImputer" -> 
                    MachineLearning`MLProcessor[
                    "ImputeMissing", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAAAlB9Zd2NwjPxKA0b9Xoia/+5j8n9VEJT/r
o36furwxP0XHP5C3LiS/Bn3OnlSyMr8lfkjEzb4jv0lPB/u9Ijm/a8QSvIAl
8r4wMxkVHb0wv0uM1AeKeCe/JszAANl5J7+FFqhF5QnuvlFl6AmvIT+/sdEG
VccBNL+8hgWfz6cLP8WcBFcXaCM/48kf6xOXJj8bSaDtcC8jP45npWRsSxK/
i+zXsQxjJT+mHPkXY3klvy7XyFtZjDE/hvW/l7/HFz94fdLXZQwrP0Ft5yJ/
1TQ/d4vv8+PqJD8uLt04VBLuvr7iEfsdaSw/yqUNrsvdGj/lOu+o2uslPwHe
73VnqQw/tEYc2Pf6IL9BmfXXc4ouPxsANokIgCg/pHRW+x0GQL+iWdaFRTBB
vyG5BABVyy8/Edb2i1/KFb/5eg56PSMjv1+ZRkisctK+sUabCg==
                    "], "StandardDeviation" -> CompressedData["
1:eJxTTMoPSmVkYGDQBGK2nCNmTn/f2/N/8eSY++e9Pa/LmZwqhg/22wQbDiUD
6WOq76/o/Htvz62Xq5/C+MFeX2Xtka7/7+2/PnlakAikhV6UTeMH0v7np2V9
//3enrGa6dAOoL5X7wIuZAL1ydjV16sB6fDbH5inAOljvv8/dALln5+0dC8D
8kNnvbo9Bcg/L7TwwlQgnS2m9qUOaN7u4infnUHu2sFkuhwoHlcU9nEpUDzy
wzpDHaA7zW/ETv0E1G+ae/+aFlB+dfqr+I9AeqXUjJ2WQLq07sc+EN0yk0/S
C6iuVErquz+Q/uXUyyANFPeYyRpxE2hekZeZ2HQgvaol/SofUD7f9sFBayD/
wSz9E5ZAevujeSEOQPW5nHIf5gL5hvO6i1KB/KyYnReXA9XPuG67UAoYLgDp
Jq8g
                    "], "Method" -> "NaiveSampler", "VectorLength" -> 41, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Type" -> "NumericalVector", "Version" -> {13.2, 1}, "ID" -> 
                    2628110491450176983|>], "EMIterations" -> 1|> -> <||>|>, 
                    TypeSystem`Assoc[
                    
                    TypeSystem`Struct[{
                    "Value", "Options", "NaiveImputer", "EMIterations"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Struct[{"Value"}, {
                    TypeSystem`Atom[String]}], 2], TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer]}], 
                    TypeSystem`Assoc[
                    TypeSystem`UnknownType, TypeSystem`UnknownType, 
                    TypeSystem`AnyLength], 1], <||>], "BestModelInformation" -> 
                   Dataset[<|
                    "Configuration" -> {
                    "Multinormal", "CovarianceType" -> "Full", 
                    "IntrinsicDimension" -> "Heuristic"}, "ModelUtility" -> 
                    Missing[]|>, 
                    TypeSystem`Struct[{"Configuration", "ModelUtility"}, {
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[String], TypeSystem`AnyType, 
                    TypeSystem`AnyType}], TypeSystem`UnknownType}], <||>]|>, 
                 "NaiveImputer" -> 
                 MachineLearning`MLProcessor[
                  "ImputeMissing", <|
                   "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAAAlB9Zd2NwjPxKA0b9Xoia/+5j8n9VEJT/r
o36furwxP0XHP5C3LiS/Bn3OnlSyMr8lfkjEzb4jv0lPB/u9Ijm/a8QSvIAl
8r4wMxkVHb0wv0uM1AeKeCe/JszAANl5J7+FFqhF5QnuvlFl6AmvIT+/sdEG
VccBNL+8hgWfz6cLP8WcBFcXaCM/48kf6xOXJj8bSaDtcC8jP45npWRsSxK/
i+zXsQxjJT+mHPkXY3klvy7XyFtZjDE/hvW/l7/HFz94fdLXZQwrP0Ft5yJ/
1TQ/d4vv8+PqJD8uLt04VBLuvr7iEfsdaSw/yqUNrsvdGj/lOu+o2uslPwHe
73VnqQw/tEYc2Pf6IL9BmfXXc4ouPxsANokIgCg/pHRW+x0GQL+iWdaFRTBB
vyG5BABVyy8/Edb2i1/KFb/5eg56PSMjv1+ZRkisctK+sUabCg==
                    "], "StandardDeviation" -> CompressedData["
1:eJxTTMoPSmVkYGDQBGK2nCNmTn/f2/N/8eSY++e9Pa/LmZwqhg/22wQbDiUD
6WOq76/o/Htvz62Xq5/C+MFeX2Xtka7/7+2/PnlakAikhV6UTeMH0v7np2V9
//3enrGa6dAOoL5X7wIuZAL1ydjV16sB6fDbH5inAOljvv8/dALln5+0dC8D
8kNnvbo9Bcg/L7TwwlQgnS2m9qUOaN7u4infnUHu2sFkuhwoHlcU9nEpUDzy
wzpDHaA7zW/ETv0E1G+ae/+aFlB+dfqr+I9AeqXUjJ2WQLq07sc+EN0yk0/S
C6iuVErquz+Q/uXUyyANFPeYyRpxE2hekZeZ2HQgvaol/SofUD7f9sFBayD/
wSz9E5ZAevujeSEOQPW5nHIf5gL5hvO6i1KB/KyYnReXA9XPuG67UAoYLgDp
Jq8g
                    "], "Method" -> "NaiveSampler", "VectorLength" -> 41, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Type" -> "NumericalVector", "Version" -> {13.2, 1}, "ID" -> 
                    2628110491450176983|>], "InputDimension" -> 0, 
                 "OutputDimension" -> 41, 
                 "Log" -> <|
                  "Example" -> 
                   MachineLearning`MLDataset[<|
                    "f1" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 1, 
                    "Values" -> CompressedData["
1:eJxTTMoPSmViYGBgBGJNIK7Ist9ntWGCvemcK7WVOVPtDzoe9X9/dqb9dtXC
4F/v5thzyYT8+XJvjr1GearBxM2z7I8BZTNtZ9hfKk1UyXWfZh/BJmy5mnGq
fbrZ4pd7zKbYcytnWm8Sm2I/71b/ej6dKfaHPe9OPx42xR4k6nJmin2u64WC
oO9T7U+E/Pv14dIMe/loQZM5V+baN7VO2Chit8hes7Y8zXjWMvtU/b5V//+t
sb8360JhKMNGqDkb7BVTdFr71622///n25N1PMvsT8WIOZ+MXmwf/P3pRlHH
xfa225QyLFYutr89catCktpi+19vjgFtWmC/UdB0/t0Zs+zrKnOALphkX5qk
Xpak3ma/XSXP6/7cSnugZ641dWTaT92l37+WI8r+WkvfaiYOD3vTBQ8WPt1g
ZK8C9r+UPQMUdE/arlYS89UOxgcALneWhA==
                    "], "ID" -> 4635246341379078022|>|>, <|
                    "ExampleNumber" -> 1, "ExampleWeights" -> 1, 
                    "LogDensityRatios" -> 0, "RawExample" -> False|>], 
                   "TrainingTime" -> 0.177486, "MaxTrainingMemory" -> 1619016,
                    "DataMemory" -> 296520, "FunctionMemory" -> 59376, 
                   "LanguageVersion" -> {13.2, 1}, "Date" -> 
                   DateObject[{
                    2023, 8, 1, 10, 12, 28.594815`8.208862272657734}, 
                    "Instant", "Gregorian", -4.], "ProcessorCount" -> 4, 
                   "ProcessorType" -> "x86-64", "OperatingSystem" -> "MacOSX",
                    "SystemWordLength" -> 64, "Evaluations" -> {}|>, 
                 "LogPDFDistribution" -> 
                 MachineLearning`TailedQuantileDistribution[<|
                   "Quantiles" -> {6.07088734253851, 6.07088734253851, 
                    6.095422220961959, 6.139582333771467, 6.150821740348716, 
                    6.166772593140232, 6.176929859830782, 6.1923097388355615`,
                     6.20425963698722, 6.216873024332063, 6.318474894752949}, 
                    "LeftBoundary" -> 6.095422220961959, "LeftScale" -> 
                    0.012267439211724351`, "LeftTailNorm" -> 0.2|>], 
                 "Entropy" -> Around[-253.10256688054784`, 0.891433624356406],
                  "EntropySampleSize" -> 10|>], 
              "Output" -> <|
               "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
              "EvaluationStrategy" -> "ModeFinding", "Version" -> {13.2, 1}, 
              "ID" -> 895810465636885430|>], 
            MachineLearning`MLProcessor[
            "LogRescaleNumericalVector", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
              "StructurePreserving" -> True, 
              "Input" -> <|
               "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
              "Indices" -> {24}, "Centers" -> {0.04314593098342069}, 
              "Cutoffs" -> {0.00033538463930567197`}, "Version" -> {13.2, 1}, 
              "ID" -> 1295242045016063173, 
              "Output" -> <|
               "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>|>], 
            MachineLearning`MLProcessor[
            "Standardize", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
              "StructurePreserving" -> True, 
              "Input" -> <|
               "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
              "Mean" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAACzypZgfu+XP9BIt2NgL5o/FbGuiAa3nD+D
+clcUqGfPwkfZWf8W6E/yozpBxY0oj9X8bwxz8aiP8j/dbZD86I/WV0uoATd
oj+Gm9dmKKuiPw0y/Kn7W6I/UlpiP3HHoT8sKD3m/OCgP/3CySr7cJ8/W2aO
XlKdnT9ZHJM8zm6cPzQ/PK9SkZw/fZKae8zUnT/oCMg+4P2fP9uwnEML76E/
LzUTTaPioz9reOhNoyCkP1a4q+JTGqI/B1Ez/2hMA8AEiMCk+D+fP0BcLLMl
HqA/dT7ZFK2ioD/ozGQh40+gP5aWGrebJp0/9+MerbAhlz9xo4ZSyVaQP3Oo
KEEjU4Q/8XWPWSYyeD9wd9QjUdNpP5OdF1H/Al0/DtOG21IgTT8eoV6P8HxA
P429KDkWqjM/+F4AMmWAKT9/W2K81nsjP3eTQBIumxg/s8CZ+Q==
               "], "StandardDeviation" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAAAIQ46QdQ+AP1A0Za9+/nc/YwHlmJnNcz8e
tU0hU3F3P4nTZmYcZH8/QOcuO1TEgz9GFFguRzCIP0/oTX65Bow/xcoK+5xw
jj+yhtenIcOPPz0JPmtTYY8/vayUQOTAjT+7o+6G9JiLP9W7S69WqYk/SwZj
iIbOiD9hmymwdqmIP9floHbyAYk/ESULVVZIiT+YaRZNW7aJP57HOgRuh40/
nDik6aakkT+gkUnvb12RP7kTLcbotYs/E4XLS93v/T/lnIgXLhqNP+cMNnvz
CZE/PK/VBXTukj/fFJA0GHSTP9YmLjoExpE/ys89UBAkjD8h6HUkaGODP7/s
bHjt+3Y/89BVz/KdaT/+OmLvXeJZP3IB+rRcMlA/4hXanuYaRj8QVTaAkh9C
P0dslVNaIUI/Gteieh37PT9o7vdEsD05PxFhqaNPXTY//nGWtQ==
               "], 
              "Output" -> <|
               "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
              "Version" -> {13.2, 1}, "ID" -> 3037891080026016735|>]}, 
          "Invertibility" -> "Perfect", "StructurePreserving" -> True, 
          "Missing" -> "Imputed"|>]|>, 
     "Output" -> <|
      "Preprocessor" -> 
       MachineLearning`MLProcessor[
        "ToMLDataset", <|
         "Input" -> <|"f1" -> <|"Type" -> "Numerical"|>|>, 
          "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
          "Preprocessor" -> 
          MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
               MachineLearning`MLProcessor["List"], 
               MachineLearning`MLProcessor[
               "WrapMLDataset", <|
                "FeatureTypes" -> {"Numerical"}, "FeatureKeys" -> {"f1"}, 
                 "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic,
                  "RawExample" -> Missing["KeyAbsent", "RawExample"], 
                 "StructurePreserving" -> False|>]}|>], "ScalarFeature" -> 
          True, "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
          "Missing" -> "Allowed"|>], "Processor" -> 
       MachineLearning`MLProcessor[
        "Sequence", <|
         "Input" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
          "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
          "Processors" -> {
            MachineLearning`MLProcessor[
            "ToVector", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
              "StructurePreserving" -> True, 
              "Input" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>,
               "Output" -> <|
               "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
              "Version" -> {13.2, 1}, "ID" -> 2243861272990366060|>], 
            MachineLearning`MLProcessor[
            "Standardize", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
              "StructurePreserving" -> True, 
              "Input" -> <|
               "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
              "Mean" -> {8.396926503340762}, 
              "StandardDeviation" -> {3.100408284980153}, 
              "Output" -> <|
               "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
              "Version" -> {13.2, 1}, "ID" -> 9003256909179662445|>], 
            MachineLearning`MLProcessor[
            "FromVector", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
              "StructurePreserving" -> True, 
              "Input" -> <|
               "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
              "Output" -> <|
               "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
              "Version" -> {13.2, 1}, "ID" -> 5068397814240598494|>], 
            MachineLearning`MLProcessor[
            "FirstValues", <|
             "Info" -> <|"Type" -> "Numerical", "Weight" -> 1|>, "Key" -> 
              "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> 
              False, "Missing" -> "Allowed"|>]}, "Invertibility" -> "Perfect",
           "StructurePreserving" -> False, "Missing" -> "Allowed"|>], 
       "ProbabilityPostprocessor" -> Identity, 
       "InverseProcessorFunction" -> (8.396926503340762 + 
        3.100408284980153 #& ), 
       "ProcessorFunction" -> (-2.708329268767424 + 0.32253816532631324` #& ),
        "Name" -> "value", 
       "Quantiles" -> {-1.8890823288385883`, 1.6007806199921208`}, "Mean" -> 
       8.396926503340758|>, "LabelSplitter" -> 
     MachineLearning`MLProcessor[
      "FeatureLabelSplit", <|
       "Processor" -> MachineLearning`MLProcessor["ListSplit"], 
        "PreferLabeled" -> True, "KeepLabelsFormat" -> False|>], 
     "RecalibrationFunction" -> None, "ImputationStrategy" -> Automatic, 
     "Prior" -> Automatic, "Utility" -> (DiracDelta[#2 - #]& ), "Threshold" -> 
     0, "PerformanceGoal" -> Automatic, "BatchProcessing" -> Automatic, 
     "Model" -> <|"Trees" -> {
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{14, 24, 8, 33, 15, 14, 12, 26, 33, 4, 2, 15, 
             5, 3, 8, 4, 32, 1, 39, 3, 25, 13, 12, 32, 39, 40, 12, 11, 32, 29,
              26, 29, 9, 18, 16, 8, 41, 6, 37, 22, 39, 1, 41, 18, 1, 40, 17, 
             1, 31, 14, 38, 40, 39, 35, 27}], 
           "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGAwB+L////XK/5cth/Id5jb98geSBeESjwB0QfanR+DaIff
Ea/sger0ZR49Bqn7IBP4Aiz/8OA9sLym1RsQveCL8H8QbWDcAZafsGTCJxCd
wCBZA9Lvn133FKT/wqbUkyD++zWyv8D25m19D1L3gDP4L0g8X1Htyn4g/X9P
EVh9QHzeE5D4/EnS78DqX0U8BbuH8fUHsHs8Zl0G8fmZ7c+B9K2fJPYKrO/e
6o9g+7VajoHd02L+CaTuv0vzb5D8g4IpT8HyIiH3QeLn48Q/g/S/7294CaZv
/dwGovtd0i6CaHmVRW/B9hkuYnMA2bPI4zlYntH+LIiOV+t/A6L9u7L2gsUn
l30Cqd/gGPMZZP5+Z/sbIPH9zAUfwO6U0b8Dkl/Q+/k92N82mq9A4vXuUadA
9H11XjDtv8jjKkgdw6IHD8Dh29H52R4AAWrrgA==
            "], "LeafValues" -> 
           RawArray["Real32",{0.09453952312469482, -0.36053264141082764`, 
             0.18273426592350006`, -0.08295709639787674, 
             0.2137841284275055, -0.13463439047336578`, -0.01103232055902481, \
-0.28073635697364807`, 0.2512170970439911, 
             0.2851050794124603, -0.11962978541851044`, -0.3240218460559845, \
-0.22491297125816345`, 0.04049719497561455, 
             0.16838692128658295`, -0.24485351145267487`, -0.318375825881958, 
             0.009503146633505821, -0.3498126268386841, 0.22977577149868011`, 
             0.13170252740383148`, 0.1980624943971634, 
             0.272390216588974, -0.28718316555023193`, -0.11134996265172958`, \
-0.2473590224981308, -0.16619722545146942`, 
             0.25361984968185425`, -0.20731571316719055`, 
             0.14842768013477325`, 
             0.30771881341934204`, -0.18313418328762054`, 
             0.06795354932546616, -0.22162583470344543`, \
-0.043505989015102386`, -0.03423568978905678, 
             0.023907886818051338`, -0.0597071573138237, \
-0.33904463052749634`, -0.3290075659751892, 
             0.007726429961621761, -0.1536351889371872, 
             0.22953231632709503`, -0.13675403594970703`, \
-0.01806333102285862, -0.17865270376205444`, -0.09671582281589508, \
-0.0018295026384294033`, 0.05529254302382469, 0.29520183801651, 
             0.0814652070403099, 0.018713222816586494`, 0.04915831983089447, 
             0.032283227890729904`, -0.019901858642697334`, 
             0.3140699863433838}], "Children" -> 
           RawArray["Integer16",{{2, 3}, {6, 4}, {7, 5}, {8, 9}, {10, 12}, {
             13, 17}, {16, 11}, {20, 14}, {19, 30}, {34, 24}, {15, -12}, {26, 
             28}, {32, 36}, {42, 21}, {25, 33}, {38, 18}, {35, 40}, {23, 
             39}, {27, 22}, {-3, 29}, {-15, -22}, {-20, -23}, {-17, -24}, {43,
              46}, {-8, -26}, {41, 45}, {-5, -28}, {-13, 31}, {-21, -30}, {49,
              55}, {-29, -32}, {50, 48}, {-16, -34}, {37, -35}, {54, 44}, {52,
              53}, {-4, -38}, {-2, -39}, {-19, -40}, {47, 
             51}, {-6, -42}, {-9, -43}, {-11, -44}, {-36, -45}, {-27, -46}, \
{-25, -47}, {-18, -48}, {-33, -49}, {-10, -50}, {-1, -51}, {-41, -52}, {-14, \
-53}, {-37, -54}, {-7, -55}, {-31, -56}}], "NominalSplits" -> {}, "RootIndex" -> 
           1, "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{14, 24, 8, 15, 15, 14, 12, 33, 28, 2, 6, 23, 
             5, 41, 6, 32, 24, 13, 38, 24, 3, 11, 5, 29, 35, 3, 38, 41, 8, 5, 
             30, 39, 33, 3, 5, 13, 8, 26, 35, 37, 38, 22, 13, 17, 29, 4, 37, 
             17, 16, 12, 26, 38, 27, 2}], 
           "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGAwYwCDA0unrrIA8h3m9j2yB9Ibngs/tP///z//nUvP9wP5
EwJ+vAHx9WUePQbxDR79eQZSN8GX9yWIZtDceAtEGxh3vACpq//X/Xg/kM7P
T/kHUq/QMvErSHx9COtFkPj5S59WgcQd8ra+B9t37P97kPz964bvwOJaHRtB
fPs3t96B1P/fU/QUJM6w2PYjSP2Bd+v/gOgGPh4wX+BV7zyQev/suqcg9fNf
lZ8C0f2a3JfA7uWeehEk3z+F8wFInL+k+jvYXwu/HQLpL3h2+gFIPn/Fzxcg
efmsJTfA5tg+fgWi39/6uQ1E73fzugo2d1H2T7C6CT4nwPz3sWB/rV/kAQ6v
DfqJv8Hh8M7mOVg87ukXEO3/c/rN/bDwBpnHXPABrD9I4w1IX4GKIjg8DeoC
P4D9w3XkINidnh8+gMQd5C98tQcAGTT1UQ==
            "], "LeafValues" -> 
           RawArray["Real32",{0.07602059096097946, -0.29137298464775085`, 
             0.1812160611152649, -0.1194164976477623, 
             0.14749975502490997`, -0.18502794206142426`, \
-0.03560764342546463, -0.25046029686927795`, 0.22790507972240448`, 
             0.14258137345314026`, -0.2675180733203888, \
-0.20265796780586243`, -0.040741920471191406`, -0.14856918156147003`, 
             0.14376014471054077`, 0.031703200191259384`, 
             0.007620121352374554, 0.1912143975496292, 
             0.2105538696050644, -0.20450763404369354`, -0.22996139526367188`,
              0.1154528260231018, -0.16564495861530304`, -0.08538481593132019,
              0.24970126152038574`, 0.10540593415498734`, 0.1573527306318283, 
             0.08434713631868362, -0.2485707551240921, -0.18163585662841797`, 
             0.1728932112455368, -0.12471836060285568`, \
-0.14681807160377502`, -0.008987566456198692, -0.2673797309398651, 
             0.05571746081113815, 0.20688752830028534`, 
             0.025399837642908096`, -0.06004536151885986, \
-0.11159851402044296`, -0.02084176428616047, -0.2754777669906616, 
             0.007469664793461561, -0.13428272306919098`, \
-0.07338374108076096, -0.09963935613632202, 0.06360913068056107, 
             0.04594879969954491, -0.0014459979720413685`, 
             0.24030667543411255`, -0.25536036491394043`, 0.03888464719057083,
              0.017468882724642754`, 
             0.01818172261118889, -0.11742107570171356`}], "Children" -> 
           RawArray["Integer16",{{2, 3}, {6, 4}, {7, 5}, {8, 9}, {12, 13}, {
             15, 16}, {20, 10}, {14, 24}, {21, 17}, {11, 50}, {19, 29}, {39, 
             23}, {22, 31}, {18, 30}, {35, 37}, {33, 42}, {25, 
             26}, {-3, -19}, {-8, -20}, {41, 28}, {-5, 27}, {-6, 32}, {38, 
             44}, {36, 49}, {-10, -26}, {-18, -27}, {-22, -28}, {-21, 
             34}, {-12, -30}, {-15, -31}, {43, 54}, {-23, -33}, {-7, 
             40}, {-29, -35}, {46, 47}, {-9, -37}, {51, 53}, {-13, -39}, {-4, 
             45}, {-34, -41}, {-2, -42}, {48, 
             52}, {-14, -44}, {-24, -45}, {-40, -46}, {-1, -47}, {-36, -48}, \
{-17, -49}, {-25, -50}, {-11, -51}, {-16, -52}, {-43, -53}, {-38, -54}, {-32, \
-55}}], "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{1, 24, 6, 15, 16, 14, 12, 33, 26, 16, 2, 1, 
             5, 22, 7, 3, 21, 24, 12, 33, 35, 5, 29, 12, 30, 19, 27, 24, 27, 
             39, 3, 12, 32, 18, 27, 30, 40, 31, 41, 26, 35, 33, 17, 16, 34, 1,
              41, 27, 4, 40, 1, 8, 2, 38, 38}], 
           "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGAwB2IgXbAqcK89kHaY2/cIRCesKjpr////f/47l57vB9L7
t83fBqL1ZR493g+U/yAT+AKkbsIeTzDdwMh3F0Qr1HI+BdEGxh0vQPrnz7B4
AVKfwCBZAzbPUXU22Lzq9Acgmn+l80EQ7c/a+x2kzkHswDuQuvgdzh9A/AkK
BVtBfH+hnr0gdfOrA+6BxW3j34LVFZq/A5vfsOkDyN4HSdwfQeL/7y39ADb3
+6Z3IPq+ge0PsL6F3w6Bzcuuewr2h731Z7A5unq/QerOx4l/Bqs37QHbv+B1
6RWQ/H7n2edAfAOdHU9A/H6XtItgfl3gB7B9p32/gv0lbPYHrL/y/nsQvX5H
2DOw+45avQKpq5c58xDs77eKF8Hu4zD8CfbXFcOdINo+N+wGWJ+M/h0Q3Z98
8iFIf8G9hz/A+pemHgbr32F5Yz8AlKj/rg==
            "], "LeafValues" -> 
           RawArray["Real32",{0.061163280159235, -0.19535963237285614`, 
             0.14441511034965515`, -0.07306401431560516, 
             0.08148407936096191, -0.11137682944536209`, \
-0.011425517499446869`, -0.14389117062091827`, 0.18188367784023285`, 
             0.1296154111623764, -0.14234484732151031`, -0.20739834010601044`,
              0.10354545712471008`, 
             0.029809311032295227`, -0.16790585219860077`, \
-0.196774423122406, -0.2296302616596222, -0.055432528257369995`, 
             0.1529715210199356, 0.08413241803646088, 0.10426229983568192`, 
             0.09564273059368134, 0.1409272402524948, 0.012185512110590935`, 
             0.16775482892990112`, 
             0.18935132026672363`, -0.21786950528621674`, \
-0.16847631335258484`, -0.20164485275745392`, -0.08434277772903442, \
-0.1703759729862213, 
             0.12485865503549576`, -0.1357536017894745, \
-0.11437888443470001`, -0.024169735610485077`, -0.20778681337833405`, 
             0.05548178404569626, 0.1632159799337387, 
             0.0441407784819603, -0.03612228110432625, 
             0.024874625727534294`, -0.09882330149412155, \
-0.23196329176425934`, -0.020969228819012642`, -0.0071889059618115425`, 
             0.017809737473726273`, -0.002798032481223345, 
             0.006929553113877773, -0.09981705993413925, 
             0.037034522742033005`, -0.05767468363046646, 0.03366635739803314,
              0.19908680021762848`, -0.06764274090528488, \
-0.0023539564572274685`, 0.05239994078874588}], "Children" -> 
           RawArray["Integer16",{{2, 3}, {6, 4}, {7, 5}, {8, 9}, {17, 10}, {
             13, 23}, {15, 11}, {12, 25}, {19, 18}, {29, 32}, {14, -12}, {24, 
             22}, {38, 40}, {27, 28}, {26, 16}, {30, 35}, {50, 34}, {21, 
             31}, {20, 36}, {-5, -21}, {-10, -22}, {-13, -23}, {43, 
             46}, {-3, -25}, {37, 52}, {-2, 42}, {-8, -28}, {-15, -29}, {48, 
             41}, {-16, -31}, {-19, -32}, {-11, 33}, {-33, -34}, {
             39, -35}, {-17, -36}, {-20, -37}, {-9, -38}, {55, 
             51}, {-18, -40}, {45, 49}, {-30, -42}, {-27, -43}, {54, 
             44}, {-44, -45}, {-14, -46}, {-24, 
             47}, {-47, -48}, {-6, -49}, {-41, -50}, {-4, 
             53}, {-39, -52}, {-26, -53}, {-51, -54}, {-7, -55}, {-1, -56}}], 
           "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{1, 24, 6, 32, 17, 23, 12, 26, 33, 11, 1, 5, 
             1, 13, 3, 16, 39, 36, 21, 1, 19, 25, 2, 24, 40, 41, 6, 36, 29, 
             13, 9, 14, 18, 25, 5, 29, 41, 34, 29, 16, 41, 29, 40, 39, 38, 5, 
             41, 1, 23, 3, 41, 39, 10}], 
           "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGAwBWIgXbAqcK89kE6INXsGplcVnQXRBQ3NT+z///+//pz4
k/1Aml9nwu79QHGDR3/A6gRO73kEVn+/4TWIfnBD/g+IXsAR/wGkL77Y+SNI
3/1r8q9BdDyr3xuwOb29T0G0vHYOWDxfUe0KyNyA4oM7Qfr8WXu/g9Wr9b8B
iTPs5PkKEr9vYv0XJO6/5cJLEG3/5tY7sHveSbwB2ctw8fJFkLp830fHQOIN
H3m+gPj8HyJ+gvgPOpXegd299MN1sL8OxILtPx8n/hkkf+DepZdge1jnXwfx
J7SYfwKHw3KuKyB6Awc3JDzinn4B6Xvf3wB2R79L2kWw+1WlHoLk58da3wDL
d14+BpZ/HwuWT2CQrAHJ77fwuQgSr5c58xCs7vvUvyD5BfZPGB1A7o9gBMv7
L/K4CqLnVz16uh8AuKPv4A==
            "], "LeafValues" -> 
           RawArray["Real32",{0.009748409502208233, -0.18721821904182434`, 
             0.10471098870038986`, -0.060472726821899414`, 
             0.1056748554110527, -0.11616480350494385`, 
             0.059370990842580795`, -0.17122435569763184`, 
             0.11239166557788849`, 
             0.15000909566879272`, -0.08494727313518524, \
-0.17167462408542633`, -0.11327807605266571`, 0.10027116537094116`, 
             0.02937133051455021, 0.06522050499916077, -0.009019304066896439, 
             0.14040179550647736`, 
             0.10267334431409836`, -0.044346023350954056`, 
             0.08169952780008316, -0.1333034634590149, -0.07584529370069504, 
             0.13507720828056335`, -0.1476956158876419, \
-0.18494191765785217`, -0.1715904027223587, 
             0.029500575736165047`, -0.12126254290342331`, \
-0.0946478620171547, -0.1659674346446991, -0.1336827576160431, 
             0.0820392444729805, -0.019335787743330002`, 
             0.011753256432712078`, 0.12607704102993011`, 
             0.15668196976184845`, -0.1524989753961563, \
-0.16714465618133545`, -0.06495260447263718, -0.005751125048846006, \
-0.028897825628519058`, -0.01849459856748581, 0.04045623540878296, 
             0.0011071069166064262`, -0.17604976892471313`, 
             0.022024381905794144`, -0.045479536056518555`, 
             0.0014204339822754264`, -0.0966264009475708, \
-0.05421740561723709, 0.14228643476963043`, 0.0175054669380188, 
             0.16224336624145508`}], "Children" -> 
           RawArray["Integer16",{{2, 3}, {6, 4}, {7, 5}, {8, 9}, {19, 10}, {
             16, 14}, {24, 11}, {15, 13}, {17, 36}, {28, 22}, {12, 30}, {37, 
             21}, {23, 32}, {-7, 27}, {-3, 20}, {34, 40}, {35, 
             18}, {-18, -19}, {47, 33}, {-16, -21}, {-13, -22}, {49, 
             39}, {-9, -24}, {45, 25}, {26, 38}, {-25, -27}, {43, 46}, {
             29, -29}, {-6, -30}, {-12, 31}, {-31, -32}, {-14, -33}, {
             41, -34}, {48, 52}, {-5, -36}, {51, 
             53}, {-8, -38}, {-26, -39}, {-23, -40}, {44, 
             42}, {-20, -42}, {-41, -43}, {-15, -44}, {-17, -45}, {-2, -46}, \
{-28, -47}, {-4, 
             50}, {-1, -49}, {-11, -50}, {-48, -51}, {-10, -52}, {-35, -53}, \
{-37, -54}}], "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 
           0, "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{26, 24, 8, 30, 14, 15, 25, 12, 2, 3, 39, 6, 
             24, 2, 39, 39, 23, 11, 30, 12, 16, 6, 5, 24, 23, 41, 5, 41, 23, 
             4, 12, 9, 30, 41, 20, 23, 26, 17, 31, 9, 35, 16, 8, 16, 16, 15, 
             34, 38, 17, 36, 39, 1, 40, 37, 39}], 
           "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGAwB2IgvcDs8nZ7IJ0Qa/YMRG94LvwQRDfIrX1m//////lW
Bo/3A/kTAn68AYkHxOc9AdEGj/6A1ReEbrkFUseflfBkP5Bev23vLRCd7/vo
GEhfwI6jb0Hy9qwlL0Di84WZb4Do/n1LL4LV5af8A6kT6JT+BrZfMPomSL1+
+eHXIPn3/Q0vQfT/+xnPQXT8kgmvQLT852kfQHR9X9hTsHma3JfA9BTOByD6
/PeFR0DmHkiz/wAyr95r4jUQ/4O99WeQPQ+qc66B/Ses/gOknv+kzEaw+6dy
/QTb57BnL9i96lfB9t8PLHgH0p9wVxscPgbMpx6A6AkiTOfA4XIr8jXIvP7k
kw/B7uv/fQ9Ma+e8BunbEKTzBaSOYX7tQ7C6yYq3we5/Z/Mc7K5A3Tsg8fed
l8HhlrAh8RPY3TrNZ0D8BZ4zjoH412s8yvcDAH5t/PY=
            "], "LeafValues" -> 
           RawArray["Real32",{-0.11695600301027298`, 0.01780995912849903, 
             0.02325635403394699, -0.05260944366455078, 0.09486246854066849, 
             0.003893257351592183, -0.10885664820671082`, 
             0.06557495146989822, -0.12852908670902252`, \
-0.14557158946990967`, -0.07329977303743362, 0.11845996230840683`, 
             0.01029795128852129, 0.06623924523591995, 0.05870085209608078, 
             0.1077512875199318, 
             0.08323173969984055, -0.04523124173283577, -0.08206411451101303, 
             0.09532713145017624, 
             0.11933034658432007`, -0.022555159404873848`, \
-0.10710766911506653`, -0.13690975308418274`, -0.08237403631210327, \
-0.11021215468645096`, -0.1376267373561859, 0.09674043953418732, 
             0.03459645435214043, 0.061103593558073044`, 
             0.11086415499448776`, -0.08635394275188446, \
-0.09452734142541885, -0.06458383053541183, 
             0.08447962254285812, -0.033667612820863724`, \
-0.12286719679832458`, -0.15008294582366943`, 
             0.018671493977308273`, -0.015190457925200462`, 
             0.0033323816023766994`, 
             0.03170005604624748, -0.07746570557355881, 
             0.12720268964767456`, -0.019882138818502426`, \
-0.006983795203268528, -0.06756776571273804, 
             0.0814514085650444, -0.0481996014714241, -0.03492262214422226, 
             0.018917974084615707`, 
             0.0008856856147758663, -0.06146511062979698, 
             0.02471020817756653, -0.0034202432725578547`, \
-0.07662905007600784}], "Children" -> 
           RawArray["Integer16",{{3, 2}, {5, 4}, {8, 6}, {7, 11}, {12, 21}, {
             17, 18}, {13, 15}, {26, 9}, {10, 23}, {22, 32}, {30, 20}, {28, 
             38}, {14, 19}, {-3, -15}, {34, 16}, {-16, -17}, {48, 35}, {24, 
             33}, {-14, -20}, {27, 43}, {45, 39}, {-9, -23}, {-10, 25}, {31, 
             46}, {-24, -26}, {-1, 36}, {-12, -28}, {41, 29}, {-29, -30}, {
             47, -31}, {-7, -32}, {-11, -33}, {55, 42}, {-8, -35}, {49, 44}, {
             37, -37}, {-27, -38}, {50, 53}, {-22, 
             40}, {-40, -41}, {-2, -42}, {-34, -43}, {-21, -44}, {-36, -45}, {
             54, 51}, {-25, -47}, {-5, -48}, {
             52, -49}, {-18, -50}, {-13, -51}, {-46, -52}, {-4, -53}, {-39, \
-54}, {-6, -55}, {-19, -56}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{26, 24, 8, 18, 17, 14, 12, 33, 26, 2, 1, 5, 
             36, 23, 24, 40, 5, 27, 37, 19, 40, 33, 34, 38, 36, 8, 10, 5, 19, 
             36, 24, 39, 29, 16, 14, 41, 28, 12, 35, 16, 2, 37, 26, 28, 9, 41,
              4, 41, 37, 41, 11}], "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGAwBmIgvcDs8nZ7IO0wt+8RiN7wXPghiBbw6Vtt//////OG
4fv3A+n5VgaP9wPFDR79eQaSn7DH8wWIbmDkuwtSZ89a8gIkv4Aj/gOIH1/s
/BGkT37BjGkgOj8/5R9IvuHPxFcgeX25u6dB/AQGyRoQn3/J1l8gdfYaXw+A
xBl28nwFq7v/7TKIX/Ds9AMQv78h4jJIXfxjtQsgmn/insMgeYe//IfA7p/2
7CpI3fzqgHtgdzdteABWfz/nCYheb/j6DYjeP50PbO4E2/i3IH0BtyJfg/Ud
YXoFtm851xVwOHzNA4dLgYriS7D9i7J/gv3V//seSF2AiO5TsHjc9Tfg8KkL
/ABSb7DK9yNI3H/Ryor9QO8cWDp1lQXI/CuGO0H6+zdyXgT7V8//OYj+/3Eq
mK9/rf35fgCvhuJC
            "], "LeafValues" -> 
           RawArray["Real32",{-0.12516137957572937`, 0.03143971785902977, 
             0.07664873450994492, -0.0509251244366169, 
             0.02550525777041912, -0.0832466185092926, \
-0.017139514908194542`, -0.1108475998044014, 0.09924446791410446, 
             0.061470236629247665`, 
             0.05776214599609375, -0.11646003276109695`, -0.07209056615829468,
              0.03420213982462883, -0.039763301610946655`, 
             0.053833600133657455`, 0.049509137868881226`, 
             0.012889743782579899`, -0.05393525958061218, 
             0.08465991914272308, -0.0881410613656044, 0.09085866808891296, 
             0.0038987931329756975`, -0.07752492278814316, \
-0.10763080418109894`, 
             0.040538281202316284`, -0.12251421809196472`, \
-0.08320675045251846, 0.07253389060497284, 
             0.07867972552776337, -0.02693408913910389, -0.09406067430973053, 
             0.09390051662921906, -0.0015872911317273974`, \
-0.061387546360492706`, 
             0.01815100386738777, -0.09638093411922455, \
-0.007582333870232105, -0.10280290991067886`, -0.03477313369512558, \
-0.015143366530537605`, -0.069492407143116, -0.04592423886060715, 
             0.011797362938523293`, 
             0.005228012800216675, -0.1135164424777031, -0.11095552891492844`,
              0.021907009184360504`, 
             0.024825910106301308`, -0.031779445707798004`, 
             0.002877910854294896, 0.10431458801031113`}], "Children" -> 
           RawArray["Integer16",{{3, 2}, {6, 4}, {7, 5}, {8, 9}, {14, 18}, {
             17, 22}, {24, 11}, {10, 29}, {15, 13}, {21, 28}, {12, 31}, {36, 
             20}, {19, -14}, {39, 30}, {16, 25}, {-5, -17}, {35, 43}, {41, 
             23}, {-10, -20}, {-13, -21}, {-3, -22}, {-7, 33}, {34, -24}, {45,
              26}, {-16, -26}, {27, 46}, {-25, -28}, {-11, -29}, {51, 32}, {
             49, 40}, {38, -32}, {-30, -33}, {37, 50}, {-19, -35}, {-2, 
             48}, {-8, -37}, {-23, -38}, {-12, -39}, {-4, 
             42}, {-31, -41}, {-6, -42}, {-40, -43}, {44, 
             47}, {-18, -45}, {-1, -46}, {-27, -47}, {-44, -48}, {-36, -49}, \
{-15, -50}, {-34, -51}, {-9, -52}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{26, 24, 8, 18, 20, 15, 12, 33, 18, 3, 37, 2, 
             3, 41, 4, 21, 11, 24, 32, 36, 11, 9, 41, 15, 26, 40, 23, 1, 23, 
             7, 24, 41, 34, 35, 4, 40, 32, 1, 14, 38, 18, 24, 1, 37, 41, 1, 3,
              24, 9, 37}], "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGAwAmIgvcDs8nZ7IJ0Qa/YMRG94LvwQRAv49K22/////3ou
1vf7gfwL6p5vQOIGj/6A1U3Y4/kCRC/gdbkLUjff88/T/UA6f6bKaZD6A7lT
boDE+bMSnoDE32v/uACi42WiwfT/ifu/g9QpaMR/BqmrN739AcT/sPbxO7A9
v6wWgegG28VPQPQB3drTIHX9mtyXwPpbToLNPd+U+hukb8JTljsgeXuTFrA7
4h+zPQarc9izF0Tvr05/AFIX4JLwDaRO3mHXSpA4vy3LL7B+b+2HIPH/L47e
A4nrX9yxBCS+wPDJA7A/2DdfBZtnPv0Y2D8LfR9C3GHwGUTf37b3PYiulznz
EKRPYIvrPpC++xlqF8Hms7B9BPP33X8E4jeILv8B9mf/NCYHkD6+T4/2AwAy
8OKk
            "], "LeafValues" -> 
           RawArray["Real32",{-0.07312627881765366, -0.015526236034929752`, 
             0.0692407488822937, -0.0428759939968586, 0.07440955936908722, 
             0.025486566126346588`, -0.06912150233983994, \
-0.07901623845100403, 0.06912365555763245, 0.0466642864048481, 
             0.04988603666424751, 
             0.034575410187244415`, -0.09605852514505386, \
-0.048513371497392654`, 0.04288935288786888, 
             0.012507755309343338`, -0.02134932391345501, \
-0.05547579377889633, -0.053301308304071426`, 0.00032569796894676983`, 
             0.05618427321314812, -0.061774857342243195`, \
-0.08928085118532181, -0.0967261865735054, 
             0.02722247876226902, -0.04012873396277428, -0.06491629034280777, \
-0.07314694672822952, 
             0.05811000615358353, -0.07676760107278824, -0.08679477125406265, 
             0.08322043716907501, 0.03242897614836693, -0.033362627029418945`,
              0.07917860150337219, 0.03714718669652939, 
             0.02188262529671192, -0.00764997536316514, 
             0.0049518379382789135`, 
             0.0025956130120903254`, -0.025418417528271675`, \
-0.0110554164275527, -0.04264475032687187, -0.002219064859673381, 
             0.01074786763638258, 
             0.0034022685140371323`, -0.045689601451158524`, 
             0.01762024685740471, 
             0.07697723060846329, -0.035063453018665314`, \
-0.050100360065698624`}], "Children" -> 
           RawArray["Integer16",{{3, 2}, {5, 4}, {7, 6}, {8, 9}, {19, 15}, {
             16, 17}, {23, 12}, {14, 31}, {10, 24}, {-5, 11}, {-11, -12}, {13,
              22}, {21, 26}, {20, 28}, {32, 36}, {33, 41}, {18, 25}, {-7, 
             42}, {37, 43}, {-3, -21}, {-8, -22}, {-13, 27}, {-1, 29}, {-10, 
             35}, {50, 46}, {-14, -27}, {-23, -28}, {-15, -29}, {
             30, -30}, {-24, -31}, {34, 48}, {47, -33}, {49, 
             40}, {-9, -35}, {-25, -36}, {38, -37}, {-2, 
             39}, {-16, -39}, {-38, -40}, {-34, -41}, {-17, -42}, {-19, -43}, \
{44, 45}, {-20, -45}, {-44, -46}, {-26, -47}, {-6, -48}, {-32, -49}, {-4, \
-50}, {-18, -51}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{1, 24, 6, 30, 17, 17, 11, 16, 18, 3, 1, 32, 
             14, 21, 8, 11, 24, 25, 12, 40, 40, 3, 22, 11, 10, 1, 37, 4, 7, 
             37, 26, 37, 2, 17, 41, 38, 16, 39, 37, 41, 41, 33, 40, 37, 26, 
             40, 14, 17, 14, 7, 24}], "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGAwBmIgXbAqcK89kG74M/EViE5YVXQWzJdb+8z+/////Vwn
3uwH0ud5oi/vB8kXbboLkmdQSHwHohfwutwFqVs/c95TkLp4tf43IHUPTv56
CBLfX1vyGiTuz9r7Haw/uusySPx84ffTIP6CSzbfQfz8K7tfgdTpe/x6D6bl
7oLlL8xnPgKS/38v4gGIf8DL+xvI3gfHpn8Cid8PWfAcpL7eWAFs//yYejCd
7xAMdvf/pzpgfR8MF7E5AGmDbasug/QbGP2eB6IP5E65ATan8j7Y3n6XtIsg
er8ZN1hfwK3I1yD5+AnHzoHFJY5fB7svyQis7v5BaTDtX/LzN0h9gzT3BpB6
+TmPnoH4DoJeb8Hmq/OeAvvHMhzCDyx4B3bf0QywOoUktQv2sPAAAInY50I=

            "], "LeafValues" -> 
           RawArray["Real32",{-0.001004184945486486, -0.08092238008975983, 
             0.06565844267606735, -0.030371276661753654`, 0.05927393585443497,
              
             0.011248921975493431`, -0.027625618502497673`, \
-0.08153004944324493, -0.061497997492551804`, 0.017034364864230156`, 
             0.0242060124874115, 0.04166208207607269, 0.018315572291612625`, 
             0.04258187860250473, -0.01745138317346573, \
-0.039706453680992126`, -0.005661890842020512, 
             0.0422198586165905, -0.04937027022242546, 0.04679875075817108, 
             0.03178180381655693, -0.053665246814489365`, 
             0.028010454028844833`, 
             0.022581737488508224`, -0.0433434396982193, 0.06307423114776611, 
             0.045240823179483414`, -0.07175598293542862, \
-0.08746649324893951, -0.05165557563304901, -0.06741829961538315, 
             0.03622618690133095, 
             0.005220139864832163, -0.05129910260438919, \
-0.0037313399370759726`, -0.0127342464402318, -0.023813167586922646`, \
-0.04341183602809906, -0.012946941889822483`, -0.001589830033481121, \
-0.034953925758600235`, -0.013080671429634094`, -0.03658359497785568, \
-0.03317909315228462, -0.021812476217746735`, 0.012417447753250599`, 
             0.007148849777877331, -0.07208824902772903, 
             0.014564258977770805`, 0.00630791625007987, 
             0.0008850668091326952, 0.06753461062908173}], "Children" -> 
           RawArray["Integer16",{{2, 3}, {5, 4}, {7, 6}, {9, 13}, {16, 12}, {
             14, 21}, {27, 8}, {47, 15}, {10, 23}, {17, 11}, {-11, -12}, {19, 
             32}, {25, -14}, {36, 35}, {18, 33}, {46, 
             34}, {-3, -18}, {-9, -19}, {20, 22}, {-6, -21}, {37, 
             24}, {-20, -23}, {-10, 31}, {-22, 42}, {26, 51}, {-5, -27}, {-2, 
             28}, {29, 30}, {-28, -30}, {-29, -31}, {-24, -32}, {
             45, -33}, {-16, -34}, {50, 41}, {-15, 39}, {44, 38}, {40, 
             43}, {-37, -39}, {-36, -40}, {-7, -41}, {-35, -42}, {-25, -43}, \
{-38, -44}, {-4, -45}, {-13, -46}, {49, 
             48}, {-8, -48}, {-47, -49}, {-1, -50}, {-17, -51}, {-26, -52}}], 
           "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{1, 24, 6, 30, 17, 17, 12, 30, 19, 22, 11, 2, 
             3, 28, 41, 24, 15, 14, 28, 22, 3, 5, 26, 11, 9, 41, 28, 32, 15, 
             38, 35, 39, 32, 32, 27, 38, 18, 20, 40, 31, 41, 41, 39, 38, 25, 
             27, 17}], "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGDQB2IgXbAqcK89kG5ISXsJog+sXHACzJdb+8z+/////Vwn
3uwH0u+3693bDxQ3ePTnGUjeQe/lTRCdwP/7JIgOMND5ClLPf8PlA0jdgdwp
N8D8rIQnIP6DCX+ugM3byHkRxG+4/+IBiK//ifUpyPz9tSWvQXT/fOFPIHr9
Io/nIHUKAjxgc89r2jwHiZ9vSv0N1m+7+AnI3gesU86DzdXkvgQS33B93nuQ
+IZ/a5+D5Y+s+wyiL2x98Q1EF7SF/QGp31/4fy9Yvfj5x2B1J389BIm/3+MN
tuf9Qt+HYPvixD+DaPuNSz+D1H9w+HEBpF5A+Rk4fPIdb18Eyf+PXQ2m/Rd5
XAXzIw5fAptz5OsfcLh1dH4GqV9/TvzJfgA8f9N5
            "], "LeafValues" -> 
           RawArray["Real32",{-0.010357133112847805`, -0.04524294659495354, 
             0.02232876420021057, 0.0020838622003793716`, 0.05325205251574516,
              0.0015353619819507003`, -0.03319361433386803, \
-0.05093284323811531, 0.010539942421019077`, 0.03529977425932884, 
             0.0585799477994442, 
             0.00653468444943428, -0.06277521699666977, \
-0.020609447732567787`, 0.03305891156196594, 0.010366789065301418`, 
             0.03539513051509857, 0.012587379664182663`, 
             0.034065503627061844`, -0.04597596079111099, 
             0.010287567973136902`, -0.019050071015954018`, \
-0.03685801103711128, -0.023959733545780182`, -0.03765929490327835, \
-0.04544666036963463, -0.06813282519578934, 0.05005355924367905, 
             0.04167284443974495, -0.059085432440042496`, \
-0.043726108968257904`, -0.05788480490446091, -0.015651321038603783`, 
             0.0072511970065534115`, 
             0.005592426750808954, -0.05705934390425682, \
-0.021329158917069435`, -0.011103544384241104`, -0.028941091150045395`, \
-0.008360184729099274, -0.0019687055610120296`, -0.001792950090020895, 
             0.005308834835886955, 0.01417683344334364, 
             0.017591973766684532`, -0.03987846523523331, 
             0.05467812716960907, -0.02460566721856594}], "Children" -> 
           RawArray["Integer16",{{2, 3}, {5, 4}, {7, 6}, {8, 18}, {20, 15}, {
             21, 19}, {26, 12}, {11, 9}, {-9, 10}, {-10, -11}, {14, -12}, {13,
              25}, {24, 22}, {-3, -15}, {33, 16}, {44, 17}, {-17, -18}, {
             27, -19}, {23, -20}, {34, 41}, {32, 36}, {-14, -23}, {45, 
             38}, {-8, -25}, {-13, 31}, {-2, 29}, {28, 46}, {-5, -29}, {35, 
             30}, {-30, -31}, {-26, -32}, {39, -33}, {-6, 43}, {-1, 
             40}, {-27, -36}, {47, 
             37}, {-37, -38}, {-24, -39}, {-4, -40}, {-35, -41}, {-21, 
             42}, {-42, -43}, {-34, -44}, {-16, -45}, {-7, -46}, {-28, -47}, \
{-22, -48}}], "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 
           0, "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{14, 24, 8, 32, 17, 32, 7, 1, 37, 3, 39, 38, 
             26, 28, 40, 38, 12, 39, 39, 22, 40, 5, 11, 5, 5, 25, 39, 30, 19, 
             39, 20, 40, 3, 38, 16, 21, 38, 41, 13, 3, 18, 23, 24, 1, 27, 
             37}], "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGDQA+L////HK1md2w/kN/yZ+MoeSG94LvwQRAfcmfbUHiif
37vuKUj+gov3IxB/f3X6AxC/4LDCNxB/frDTgf1Amn8i93kQXb9X/yKI9o+Y
dhRM7zd/DqLXH+P+CqL3+6ndBNHv1+w8BjLH4P/N3yBz/qfevgUSP/93E5ie
31f3EUTb36s5AVbflgY2R77B5DWI7p/C+QBE32edfx1sP+e1PyBaf9eKxWD5
XKavIPMfJHF/BJnP/37mJbD9XYxgc/1D/98AySsI8HwFyfd3xlwB8Q8UiLE4
gOyXcngCNmf+vStge898Afurf9nSh2D9+dsfgej4jzc/gf233OssSH+ASwI4
XPhVFZ6A+BM8P3wAh9vH52/2AwAK7fL6
            "], "LeafValues" -> 
           RawArray["Real32",{0.00010446825763210654`, -0.0392044372856617, 
             0.03945670649409294, -0.0189535990357399, 
             0.021540045738220215`, -0.03925226256251335, 
             0.0010523536475375295`, -0.03816961497068405, \
-0.03887612372636795, 0.049474071711301804`, -0.0011425415286794305`, 
             0.041192296892404556`, 
             0.01632249541580677, -0.05092306435108185, -0.02848178707063198, 
             0.023622434586286545`, 
             0.011469418182969093`, -0.02189880795776844, 0.04093166068196297,
              0.030616726726293564`, -0.028289156034588814`, 
             0.024419723078608513`, 0.016301020979881287`, 
             0.03923530876636505, 0.025744765996932983`, 
             0.03597426041960716, -0.018862232565879822`, \
-0.010595256462693214`, -0.020049506798386574`, -0.050454284995794296`, 
             0.017121849581599236`, 0.004584609996527433, 
             0.0026005671825259924`, -0.014798307791352272`, \
-0.008970781229436398, -0.045410577207803726`, -0.05732201412320137, \
-0.009794306010007858, -0.047335781157016754`, 0.006332031451165676, 
             0.009700755588710308, -0.005363578908145428, \
-0.05973513796925545, 0.04339616000652313, 
             0.015843503177165985`, -0.000047816018195590004`, \
-0.026464393362402916`}], "Children" -> 
           RawArray["Integer16",{{2, 3}, {6, 4}, {7, 5}, {9, 18}, {32, 17}, {
             19, 10}, {29, 8}, {13, 36}, {15, 11}, {39, 27}, {-10, 
             12}, {-12, -13}, {14, -14}, {-8, -15}, {-3, 16}, {-16, -17}, {20,
              26}, {25, 23}, {21, 30}, {-6, 28}, {22, 44}, {-1, -23}, {24, 
             43}, {-19, -25}, {-5, -26}, {46, 37}, {31, -28}, {-21, -29}, {-2,
              35}, {-20, -31}, {-11, -32}, {-4, 33}, {34, 41}, {-33, -35}, {
             42, -36}, {-9, 38}, {-27, -38}, {-37, -39}, {40, 
             45}, {-7, -41}, {-34, -42}, {-30, -43}, {-24, -44}, {-22, -45}, \
{-40, -46}, {-18, -47}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{14, 24, 6, 35, 17, 13, 39, 25, 7, 2, 1, 24, 
             1, 3, 4, 40, 38, 1, 26, 39, 38, 31, 7, 14, 6, 16, 15, 6, 22, 41, 
             39, 11, 9, 18, 12, 5, 2, 41, 24, 40, 7, 19}], 
           "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGDQAuL////rz71xeT+QvyEg7p09kD6wcsEJe6C4vHzlgf1A
en/F+6cg+v51w3cg+n/q7Vsg9QZ5zY9B6vZXpz8A8Q/kTrkB4sfX3H0L4ie0
6HwH8fMXV78B6eOfyH0eRPvvvHsXJP8gccENkH0OcRs+g+gFbs2/wXxBr7cg
ffoi2edA6uunGTwEqZ8wdRbYPv+yL8dA4vrXfF6D3fcw4RFIPuBW5Guwvk+s
YPfWb59xCUTn3xB/AKLtN+6+CHYHI/tqsHvZ8m+B1St+Xwn217m6TyD6PMfj
lyD5DxVOZ8HhoNfwDOzurqy9IDp+reIHsHm/z9wA66txewyi5X1lvu8HAOHF
0mc=
            "], "LeafValues" -> 
           RawArray["Real32",{0.029836973175406456`, -0.036078449338674545`, 
             0.036897312849760056`, -0.013595308177173138`, \
-0.00962301716208458, -0.013083864003419876`, 0.020722124725580215`, 
             0.04245518893003464, 
             0.03534618392586708, -0.025231938809156418`, \
-0.048267513513565063`, 0.013664845377206802`, 0.0023054457269608974`, 
             0.0254146046936512, 0.005662083625793457, 
             
             0.012242929078638554`, -0.03680075705051422, \
-0.005564326886087656, -0.03248895704746246, 0.00495162745937705, 
             0.018559355288743973`, 0.01720237173140049, 
             0.02576667070388794, -0.025247151032090187`, 
             0.011831858195364475`, 
             0.03270271420478821, -0.022611839696764946`, 
             0.014614167623221874`, -0.039022237062454224`, \
-0.022175032645463943`, -0.036041829735040665`, -0.007923554629087448, \
-0.04564831778407097, -0.02780763991177082, 0.0016607519937679172`, 
             0.0306079238653183, 0.00006501736061181873, 
             0.008027958683669567, -0.01813090778887272, \
-0.015294975601136684`, -0.009218978695571423, -0.04569625481963158, \
-0.004803600255399942}], "Children" -> 
           RawArray["Integer16",{{2, 3}, {4, 6}, {9, 5}, {8, 14}, {34, 18}, {
             11, 7}, {24, 22}, {21, -9}, {32, 10}, {16, 28}, {-3, 12}, {13, 
             20}, {-12, -14}, {15, 31}, {-5, 19}, {17, 23}, {-10, -18}, {
             26, -19}, {-16, -20}, {-13, -21}, {27, 37}, {-8, 
             25}, {-17, -24}, {35, -25}, {-23, -26}, {38, 39}, {-1, -28}, {30,
              29}, {-29, -30}, {-11, -31}, {36, -32}, {33, -33}, {41, -34}, {
             40, -35}, {-7, -36}, {-15, -37}, {-22, -38}, {-6, -39}, {-27, \
-40}, {-4, 42}, {-2, -42}, {-41, -43}}], "NominalSplits" -> {}, "RootIndex" -> 
           1, "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{13, 14, 6, 32, 28, 39, 3, 13, 3, 1, 11, 16, 
             24, 13, 4, 11, 4, 14, 26, 41, 15, 36, 6, 37, 15, 9, 24, 6, 32, 
             35, 36, 35, 40, 32, 36, 41, 14, 19, 3, 27, 1}], 
           "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGDQBOL////X857dsR9Ix38Xfb0fKO4QpDjdHkhvOPDvqT1Q
fH6y0QeQ/PueHbtA9H7vnhsgdQ/i0z+B5NfPnPcUJL5eUfQNSDyhaNNdkH4G
hcR3IHrBJZvvIPrAq7MfQOr56569A6kLuFb3DMTPd1l0H6Q/30bzFYj+79L8
G0wHml0E0favP7wE0fqn550D0fIZFx6A6Pkx9WB776tvAcu/l/BcCjL3A8f7
r2Bz5c2ugM09uf8CWPxy3QGw/Vmcl8D8OxxnQO6awGG4EkR/uJT6BezeUx9u
gv2/KfMGmF+46iuIbvARfQOiDR4x/AfRCtscPoLlr3i+tQcAy4m3MQ==
            "], "LeafValues" -> 
           RawArray["Real32",{
             0.03304076939821243, -0.03629855439066887, \
-0.003654325846582651, -0.03172617405653, 
             0.022079605609178543`, -0.013559134677052498`, \
-0.0023381884675472975`, 0.0003066246572416276, -0.017125047743320465`, 
             0.009588105604052544, 
             0.018003903329372406`, -0.03488573059439659, \
-0.0035132786724716425`, 
             0.01664227992296219, -0.02874457836151123, \
-0.023089317604899406`, -0.01813877746462822, 0.007585442624986172, 
             0.006666900590062141, -0.010945710353553295`, 
             0.021979179233312607`, 0.012804833240807056`, 
             0.01603083871304989, -0.039371803402900696`, \
-0.03171325474977493, 0.033948346972465515`, -0.02385696768760681, 
             0.02833513170480728, 
             0.030533771961927414`, -0.004411723464727402, \
-0.013792301528155804`, 0.00815674290060997, -0.003997677471488714, 
             0.01197534054517746, -0.007464574184268713, 
             0.0068546864204108715`, 
             0.0009791136253625154, -0.014747977256774902`, \
-0.02469666674733162, -0.003608408384025097, 
             0.0016491005662828684`, -0.009419736452400684}], "Children" -> 
           RawArray["Integer16",{{2, 3}, {4, 7}, {11, 5}, {6, 20}, {8, 29}, {
             9, -7}, {17, 33}, {-4, 19}, {13, 10}, {-10, -11}, {23, 12}, {-12,
              14}, {-1, -14}, {15, 16}, {-13, -16}, {-15, -17}, {-3, 18}, {22,
              40}, {38, 37}, {25, 21}, {28, -22}, {-18, -23}, {24, -24}, {-2, 
             26}, {27, -26}, {-25, -27}, {-5, -28}, {-21, -29}, {39, 30}, {31,
              32}, {-30, -32}, {-31, -33}, {34, 36}, {
             35, -35}, {-8, -36}, {-34, -37}, {-20, -38}, {-9, -39}, {-6, 
             41}, {-19, -41}, {-40, -42}}], "NominalSplits" -> {}, 
           "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
           0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{1, 24, 6, 36, 6, 15, 15, 7, 36, 31, 15, 23, 
             2, 15, 39, 4, 1, 27, 39, 12, 2, 1, 38, 40, 39, 1, 38, 39, 40, 29,
              3, 23, 4, 33, 15, 41, 38, 22, 38, 33, 3, 14, 36, 10}], 
           "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGDQAWIgXbAqcK89kHYQO/AOTAcpTrf/////enXVq/uB9Hx7
h1f7geINfFUvQeL6n1ifgsTXuz97A5b/w3gEJG/g03oNJN//u+wZSPy/w569
YDpx8UsQzW/D9wSsj4f/AojeL1R0D6zfbfFrEG1vFPsRrE5q6VWweY/+PAO5
50DulBsgeoHCs+dg98Vt+Ax2h3fmQpD6+xt3bQHR/rmMz8Hm9rKDzb///vIt
kDkXHiveAqnn/xDxE8RfYO/F6gDiv8k/AbY3mu07mLb0eweSF3g+8RvYHw98
L4LE3y/0fQimpeb8BtH6n5/eBLsv/dw7kLp8a6F7YHMLV30F8c8n8r4H8wv2
nLAHANGt0/I=
            "], "LeafValues" -> 
           RawArray["Real32",{0.027167152613401413`, -0.031206704676151276`, 
             0.010211547836661339`, -0.012426506727933884`, 
             0.006193087436258793, 
             0.03144822642207146, -0.01779463328421116, \
-0.0007530477596446872, 0.005260495003312826, 0.006391187198460102, 
             0.004305983427911997, 
             0.024178238585591316`, -0.010249093174934387`, 
             0.0043644895777106285`, 0.006777673028409481, 
             0.030324622988700867`, 0.017096899449825287`, 
             0.019037429243326187`, -0.02534833922982216, 
             0.023922313004732132`, -0.016719508916139603`, \
-0.03168698400259018, -0.016063302755355835`, 0.0028341233264654875`, 
             0.013095644302666187`, -0.016503479331731796`, 
             0.014376590959727764`, -0.006724479142576456, 
             0.013831058517098427`, -0.024547599256038666`, \
-0.008953177370131016, -0.011932289227843285`, -0.025469541549682617`, \
-0.012612223625183105`, -0.02675933577120304, -0.01434321328997612, \
-0.025158395990729332`, 
             0.0024331456515938044`, -0.0050572664476931095`, \
-0.0032982558477669954`, 0.001023733289912343, 
             0.00730404257774353, -0.012132336385548115`, \
-0.006264718249440193, -0.021166034042835236`}], "Children" -> 
           RawArray["Integer16",{{2, 3}, {4, 5}, {20, 6}, {7, 12}, {9, 8}, {
             31, 18}, {26, 28}, {-6, 15}, {14, 10}, {27, 11}, {-11, -12}, {39,
              13}, {-13, 24}, {19, -15}, {16, 17}, {-9, -17}, {-16, -18}, {
             30, -19}, {-3, -20}, {32, 21}, {22, 25}, {29, 
             23}, {-23, -24}, {-14, -25}, {-22, 36}, {-1, -27}, {-10, -28}, {
             41, -29}, {-21, -30}, {-7, 42}, {37, -32}, {34, 33}, {
             44, -34}, {-2, 35}, {-35, -36}, {-26, -37}, {43, 
             38}, {-38, -39}, {-5, 
             40}, {-40, -41}, {-8, -42}, {-31, -43}, {-4, -44}, {-33, -45}}], 
           "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{1, 24, 6, 35, 6, 16, 40, 26, 1, 31, 20, 32, 
             39, 33, 13, 2, 11, 15, 14, 38, 39, 38, 14, 39, 14, 30, 39, 6, 32,
              3, 2, 39, 22, 27, 2, 33, 17, 41}], 
           "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGBQA2IgXbAqcK89kHYQO/AOTAcpTgfRHy7XHbD/////fHuH
V/tB6jaeuA/i2/8+cwPMf3r3EUhdwq83P0C0ANuLSyCaYb3Ud7A5fHGXwOp/
fL0GUr9hYc1dEP/+dcN3+4F0f2j4Q5C4w5OgV2B7zjU8A4nPP8L0CkSfF559
C0T7v+O8DaLts1efAqk/cOPkW5D5G64+3QmiFVKWfwHr1zj0E6ROX/TTLZC6
Bg79PyDx99fX7gGJ80/kPg+i13uIvwSbHycKNjde9cxvsLzQqV8gfQo/DvwE
mTshh3cnSL+8rMJ7sHp20Uv7AQZBqJk=
            "], "LeafValues" -> 
           RawArray["Real32",{0.018807318061590195`, -0.027026169002056122`, 
             0.03045591339468956, 
             0.005687664728611708, -0.0018684432143345475`, 
             0.010237263515591621`, -0.014637565240263939`, 
             0.004902088548988104, 
             0.011711935512721539`, -0.023303186520934105`, \
-0.005940000992268324, 0.00603363336995244, 0.002353907562792301, 
             0.03503338620066643, 0.00991731882095337, 0.016666555777192116`, 
             0.019129380583763123`, -0.006428506225347519, 
             0.011666645295917988`, 0.0032272872049361467`, 
             0.007191826123744249, 
             0.014483160339295864`, -0.015050912275910378`, \
-0.010416362434625626`, -0.01716628111898899, -0.009358623065054417, \
-0.020707737654447556`, 
             0.00009697805944597349, -0.0018779401434585452`, \
-0.0007302157464437187, -0.00011730023106792942`, 0.015200262889266014`, 
             0.002181034069508314, -0.006445694249123335, \
-0.013757607899606228`, -0.010303620249032974`, -0.019186820834875107`, \
-0.006444714963436127, -0.008843868970870972}], "Children" -> 
           RawArray["Integer16",{{2, 3}, {4, 5}, {17, 6}, {7, 8}, {10, 13}, {
             28, 9}, {-1, 20}, {22, 19}, {34, -10}, {11, 12}, {-3, 31}, {-11, 
             18}, {16, 14}, {-14, 15}, {-15, -16}, {32, -17}, {
             23, -18}, {-13, -19}, {-9, 30}, {21, 27}, {-8, -22}, {-5, -23}, {
             36, 24}, {26, 25}, {-25, -26}, {-24, -27}, {-21, -28}, {29, 
             33}, {-4, 37}, {-20, -31}, {-12, -32}, {-6, -33}, {-29, 35}, {-7,
              38}, {-34, -36}, {-2, -37}, {-30, -38}, {-35, -39}}], 
           "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{27, 14, 7, 2, 8, 36, 37, 3, 6, 2, 3, 36, 24, 
             39, 4, 14, 6, 25, 2, 6, 40, 22, 1, 27, 24, 32, 3, 39, 40, 5, 38, 
             12, 40, 37, 41}], 
           "NumericalThresholds" -> {0.196260541677475, -0.8464314341545104, 
            1.2627133727073672`, -0.8716202974319457, -0.7324393987655639, 
            0.10060806944966318`, -0.12702412903308866`, 
            2.388556599617005, -0.3092427849769592, 
            0.7886977493762971, -0.3835629820823669, 
            1.7436331510543825`, -0.8817518949508666, 
            1.4497092962265017`, -0.4726275354623794, -0.8231321275234221, \
-0.1509241312742233, -0.7985469996929168, -0.78089901804924, 
            1.0000000180025095`*^-35, -0.22739674150943753`, \
-1.7321141362190244`, -0.8476366400718688, 
            0.8522909879684449, -0.5220322012901305, 1.2748593688011172`, 
            0.12886169552803042`, -0.4196410179138183, -0.3890514820814132, \
-0.39814276993274683`, -0.17754136770963666`, -0.8152554929256438, \
-0.3833316564559936, -0.3647881299257278, 0.02350949496030808}, "LeafValues" -> 
           RawArray["Real32",{-0.0149846775457263, 0.02277655340731144, 
             0.002645397325977683, 0.006095083896070719, 0.007578996941447258,
              0.0050681717693805695`, -0.012499634176492691`, 
             0.015550636686384678`, -0.024943653494119644`, 
             0.0009265138651244342, 0.0036963270977139473`, 
             0.004415240604430437, -0.026139726862311363`, \
-0.006945877801626921, -0.014058485627174377`, 0.003227052977308631, 
             0.009008851833641529, -0.015758110210299492`, \
-0.010525878518819809`, 
             0.011347492225468159`, -0.00903921015560627, \
-0.01332329772412777, -0.008081164211034775, -0.006765223573893309, 
             0.00023590127239003778`, -0.006742606405168772, \
-0.004928589332848787, -0.00161351531278342, 0.01872393861413002, 
             0.002149381209164858, 0.013336939737200737`, 
             0.0035506251733750105`, 
             0.013148331083357334`, -0.00327748479321599, \
-0.0033592272084206343`, -0.007713100872933865}], "Children" -> 
           RawArray["Integer16",{{3, 2}, {4, 11}, {8, 10}, {-2, 5}, {6, 28}, {
             7, -7}, {-5, -8}, {9, -9}, {12, 17}, {-4, 21}, {15, 24}, {13, 
             14}, {-1, -14}, {-13, -15}, {23, 16}, {19, 29}, {18, 
             20}, {-10, -19}, {-16, -20}, {-18, -21}, {22, 34}, {-11, 
             33}, {-3, -24}, {25, 26}, {27, -26}, {31, -27}, {-12, -28}, {32, 
             30}, {-17, -30}, {-29, -31}, {-25, -32}, {-6, -33}, {-23, -34}, {
             35, -35}, {-22, -36}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{29, 24, 12, 17, 3, 6, 25, 31, 32, 36, 36, 1, 
             14, 22, 31, 1, 40, 40, 22, 1, 5, 26, 24, 18, 40, 40, 26, 35, 33, 
             12, 20, 38, 41, 18, 1, 1, 18, 39, 36, 18}], 
           "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGDQAOL////Xr1p+dj+Q7yB24J09kFZQOfvBHijuX5fyZj+Q
1j8X+AREz7d3eAVSx1Ak/AKkboFb4mMQvUFA/TFY/c7KVSB1/GZKR0C0/V35
tyD6/EPF1yB9AWdOfwSpL7jy/xpI/fzZa1+B5OtDl60Dq+O+cQNE9wcceIms
f7+x4FGwuXmdr8F8f/M3IPMmlHJ8BZkjHyZ9FmyO01SwfvkF93+A3Sue9wGk
ruDZ6QcgewPSks+C1Mcb7fsMks9nyL0NouO5lS+C1G2wYn0C9peH/iuQuv19
65+C3eW//yOIvu9zfSeIfj8zDcz/32LweT8AaErGPQ==
            "], "LeafValues" -> 
           RawArray["Real32",{-0.019757453352212906`, 0.0012671160511672497`, 
             0.019380295649170876`, -0.010575877502560616`, \
-0.00809706375002861, 0.00975503958761692, 
             0.019139349460601807`, -0.004830557852983475, 
             0.02049115113914013, 0.008751125074923038, 0.022631576284766197`,
              0.011267761699855328`, -0.007553728763014078, \
-0.002851189114153385, 0.005483857821673155, 0.003200700506567955, 
             0.006117180455476046, 0.012278863228857517`, 
             0.0020379386842250824`, -0.011391526088118553`, 
             0.008659088052809238, -0.001983386930078268, \
-0.012215077877044678`, -0.0016579772345721722`, -0.02263510599732399, \
-0.00019135908223688602`, -0.005727389361709356, 
             0.004085484892129898, -0.005107166711241007, \
-0.006184140220284462, 0.007474730256944895, 
             0.0003499548474792391, -0.008355614729225636, \
-0.0030785370618104935`, -0.012172571383416653`, -0.00232770387083292, 
             0.006644585635513067, -0.0069953459315001965`, \
-0.004787140060216188, -0.010797835886478424`, -0.003600927535444498}], 
           "Children" -> 
           RawArray["Integer16",{{3, 2}, {4, 6}, {19, 25}, {29, 5}, {-5, 
             17}, {11, 7}, {10, 8}, {-8, 9}, {-9, -10}, {14, -11}, {13, 
             12}, {-12, 15}, {16, 20}, {-7, -15}, {-13, -16}, {-3, -17}, {18, 
             36}, {-6, -19}, {-1, 21}, {-14, -21}, {22, -22}, {23, 
             24}, {-20, -24}, {-23, -25}, {26, 34}, {33, 27}, {-27, 
             28}, {-28, -29}, {32, 30}, {31, -31}, {-30, -32}, {-2, 
             40}, {-4, -34}, {35, 38}, {-26, 
             37}, {-18, -37}, {-36, -38}, {-35, 39}, {-39, -40}, {-33, -41}}],
            "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{15, 14, 12, 13, 36, 37, 39, 15, 15, 13, 40, 
             2, 22, 38, 36, 1, 38, 33, 24, 25, 24, 39, 38, 3, 17, 9, 40, 40, 
             40, 40, 41, 19, 1, 23, 20, 22}], 
           "NumericalThresholds" -> {0.04742746241390706, -0.8541001379489898,
             1.0500832796096804`, -0.943584382534027, 
            0.03560621105134488, -0.1351806968450546, -0.2658700346946716, \
-0.7777709960937499, -0.7844237387180327, -0.9240420758724212, \
-0.2824535965919494, -0.703146994113922, -0.8047259151935576, \
-0.17754136770963666`, -0.03189915418624877, -0.9101396799087523, 
            1.2305586338043215`, -0.7847993671894072, -0.9919084906578063, \
-0.6908848583698272, -0.9689250886440276, 
            0.06808219105005266, -0.35507249832153315`, -0.5306526124477385, \
-0.9512109160423278, -0.8231191039085387, -0.22739674150943753`, 
            0.284216195344925, -0.3841100931167602, -0.3802750706672668, \
-0.2677639424800872, 0.8775999546051027, 
            0.8182719349861146, -1.0207400321960447`, -0.1787738651037216, \
-1.6331443786621092`}, "LeafValues" -> 
           RawArray["Real32",{
             0.007989747449755669, -0.01806679740548134, \
-0.0008627226925455034, -0.008460702374577522, 
             0.003060905495658517, -0.008176613599061966, 0.00810296181589365,
              0.00020459451479837298`, 
             0.00229794648475945, -0.005877234041690826, 0.02369532361626625, 
             0.017305297777056694`, -0.0063867345452308655`, \
-0.0007990097510628402, -0.004774566274136305, 0.0183049738407135, 
             0.0015569874085485935`, 
             0.007496991194784641, -0.0050007039681077, -0.01705152541399002, \
-0.011450866237282753`, -0.010298393666744232`, -0.007518104277551174, 
             0.008283757604658604, -0.0003617981565184891, 
             0.0023879073560237885`, 0.009173430502414703, 
             0.00010461149213369936`, -0.007482860703021288, 
             0.003783142426982522, -0.00014017066860105842`, \
-0.0024628296960145235`, -0.00882419478148222, -0.0049326759763062, \
-0.010151504538953304`, -0.005553780123591423, -0.0031329847406595945`}], 
           "Children" -> 
           RawArray["Integer16",{{2, 3}, {4, 12}, {13, 27}, {5, 8}, {6, -6}, {
             7, 15}, {-1, -8}, {9, 10}, {26, -10}, {11, -11}, {-9, -12}, {14, 
             22}, {-2, 17}, {16, -15}, {-7, -16}, {-3, 23}, {19, 18}, {-18, 
             20}, {28, 21}, {-19, -21}, {-20, -22}, {
             24, -23}, {-17, -24}, {-13, 25}, {-25, -26}, {-5, -27}, {29, 
             32}, {-14, -29}, {31, 30}, {-30, 36}, {-4, -32}, {33, -33}, {35, 
             34}, {-34, -35}, {-28, -36}, {-31, -37}}], "NominalSplits" -> {},
            "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
           0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{13, 14, 16, 40, 13, 32, 15, 13, 11, 14, 30, 
             41, 6, 6, 38, 15, 32, 4, 32, 6, 40, 38, 14, 40, 13, 40, 38, 38, 
             41, 37, 1, 40, 17, 29, 37, 39, 15, 40}], 
           "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGBQA+L////vXzfzwn4gff5kyOv9QPEFb849tgfSCbNkvtkD
xe9fN3wHEm+4s+kRmH/j6XOQ+vqLmm9BtH/Jhdcgen9W9xuQuoStqQ9A6uav
unMRrG6//BsQnb/s8QuQfMCJMg4HIP/9jWlgfkOk4gWQev+dd++C9Wu1HAPx
89ddPg9Wr3PlDsg9D4S7foLE9SXDX4HM+9907AqIvj/zI5jvf6viKoieX1B8
CUzPX3oOROurMYP5+fZHLoPME6jkuwMyp36SOljcXj34Pdj/k3b8ANHylm0P
wOan3r4FovmXXXoMVrcwfN9+AEYGygY=
            "], "LeafValues" -> 
           RawArray["Real32",{0.017903707921504974`, 
             0.008127786219120026, -0.0012115524150431156`, \
-0.008119942620396614, -0.010245821438729763`, 0.0011944035068154335`, 
             0.0011048568412661552`, 
             0.00012539613817352802`, -0.013602117076516151`, 
             0.003976745530962944, 0.0052236225455999374`, 
             0.016780702397227287`, 0.005677315406501293, 
             0.0034820716828107834`, -0.00736378924921155, \
-0.004518976900726557, -0.011184792965650558`, -0.01196318306028843, 
             0.009014405310153961, 
             0.004531076177954674, -0.004035102669149637, \
-0.005006002262234688, -0.02026538737118244, -0.0066867610439658165`, \
-0.00013675908849108964`, 0.001089154276996851, 0.0123447235673666, 
             0.00120167201384902, 
             0.0039842319674789906`, -0.000960302073508501, \
-0.00804766546934843, -0.0027392017655074596`, -0.0016432765405625105`, \
-0.007210054900497198, -0.015584558248519897`, -0.00801155250519514, 
             0.007768657058477402, 0.004293357953429222, 
             0.006972699426114559}], "Children" -> 
           RawArray["Integer16",{{2, 3}, {5, 17}, {27, 4}, {13, 15}, {6, 8}, {
             7, 16}, {-1, 12}, {10, 9}, {-9, 36}, {-6, 
             11}, {-11, -12}, {-8, -13}, {21, 14}, {-14, 20}, {
             22, -16}, {-7, -17}, {19, 18}, {-18, 23}, {37, 26}, {-15, -21}, {
             34, -22}, {-5, -23}, {24, 
             25}, {-19, -25}, {-24, -26}, {-20, -27}, {30, 28}, {38, 
             29}, {-29, 33}, {31, -31}, {32, 
             35}, {-2, -33}, {-30, -34}, {-4, -35}, {-32, -36}, {-10, -37}, \
{-3, -38}, {-28, -39}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{15, 14, 16, 15, 4, 1, 41, 10, 2, 1, 24, 35, 
             24, 1, 1, 12, 24, 25, 18, 14, 15, 3, 1, 24, 18, 3, 35, 28, 40, 2,
              39, 26, 17}], 
           "NumericalThresholds" -> {-0.6267376244068145, -0.8541001379489898,
             0.6190093159675599, -0.6469912230968474, -0.4766022711992263, 
            1.3829988837242129`, -0.28056624531745905`, 
            0.22659664601087573`, -0.8716202974319457, -0.8853920400142669, 
            1.3899905085563662`, 0.033880956470966346`, 
            1.540791988372803, -0.863681137561798, -0.8304780721664428, 
            0.8134425878524781, -0.9037102162837981, -0.8354284465312957, 
            1.3145652413368227`, -0.8817181587219237, -0.619463950395584, 
            0.12886169552803042`, -0.7055000066757201, 0.5284268856048585, 
            2.598146796226502, -0.4949363470077514, 
            0.5112479627132417, -1.4540913105010984`, -0.33550126850605005`, 
            1.2389886379241946`, 1.9592557549476626`, 0.6541973650455476, 
            0.1299417540431023}, "LeafValues" -> 
           RawArray["Real32",{
             0.012486307881772518`, -0.007074964698404074, \
-0.010531269945204258`, -0.0011422333773225546`, 0.004121826030313969, 
             0.0008657922735437751, -0.015957539901137352`, \
-0.009266133420169353, -0.004155267961323261, 0.004968669731169939, 
             0.011547291651368141`, 
             0.0011820502113550901`, -0.006898963358253241, \
-0.009580845013260841, 0.004532619379460812, 
             0.006384904962033033, -0.003809971734881401, \
-0.01343055721372366, 0.002541004214435816, -0.01320173591375351, 
             0.011607933789491653`, 
             0.006019746884703636, -0.004582816734910011, \
-0.00526721216738224, 0.005655665881931782, -0.006293038371950388, 
             0.000720917945727706, -0.00675225118175149, \
-0.0010813853004947305`, 0.010662244632840157`, 
             0.0005694977007806301, -0.008660122752189636, \
-0.00019706533930730075`, 0.001046065124683082}], "Children" -> 
           RawArray["Integer16",{{2, 3}, {9, 4}, {21, 6}, {5, 29}, {-3, 23}, {
             8, 7}, {-7, 30}, {19, 16}, {-1, 10}, {11, 13}, {12, 
             20}, {-10, -13}, {14, 15}, {-11, -15}, {-14, -16}, {18, 
             17}, {-17, -18}, {-9, -19}, {-4, 25}, {-12, -21}, {-2, 22}, {32, 
             27}, {24, 26}, {-6, -25}, {-20, -26}, {-24, -27}, {
             28, -28}, {-23, -29}, {-5, -30}, {-8, 31}, {-31, -32}, {
             33, -33}, {-22, -34}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{14, 16, 39, 39, 39, 3, 2, 12, 36, 14, 4, 40, 
             40, 34, 40, 14, 41, 41, 29, 9, 36, 37, 34, 41, 37, 34}], 
           "NumericalThresholds" -> {-0.5952346920967101, 0.6190093159675599, 
            0.11658094078302385`, -0.3446925580501556, -0.27574123442173, \
-0.5848919451236724, -0.7943604588508605, -0.9442679286003112, 
            0.024799551814794544`, -0.8732585310935973, -0.4601698219776153, \
-0.19131067395210263`, -0.3410122692584991, 
            1.7661697864532473`, -0.3174462020397186, 1.6553927063941958`, 
            0.4193591177463532, -0.2760844230651855, -1.505104839801788, \
-0.02323129307478666, 
            0.4053217470645905, -0.2088380306959152, -1.7839461565017698`, \
-0.27279880642890925`, -0.9023933708667754, -1.7976981997489927`}, 
           "LeafValues" -> 
           RawArray["Real32",{
             0.009166020900011063, -0.006186991930007935, \
-0.004819158930331469, -0.007694368716329336, 0.008002037182450294, 
             0.0013269076589494944`, 0.007875924929976463, 
             0.01978505775332451, 
             0.010332761332392693`, -0.009394743479788303, 
             0.0015313195763155818`, 0.003327122190967202, 
             0.00234273262321949, -0.0012327396543696523`, \
-0.011583837680518627`, -0.0023139044642448425`, -0.005018269643187523, \
-0.0032007242552936077`, -0.0011182606685906649`, -0.00843118503689766, \
-0.0008312552236020565, 0.004392048344016075, 
             0.007732179015874863, -0.0023989956825971603`, \
-0.00038712838431820273`, -0.007063247263431549, -0.010980171151459217`}], 
           "Children" -> 
           RawArray["Integer16",{{3, 2}, {20, 14}, {4, -4}, {10, 5}, {6, 8}, {
             7, 13}, {-5, -8}, {9, 11}, {-6, -10}, {-1, 12}, {-9, -12}, {15, 
             22}, {-7, -14}, {16, -15}, {-11, -16}, {17, 26}, {18, 
             19}, {-3, -19}, {-18, -20}, {-2, 21}, {23, -22}, {-13, -23}, {25,
              24}, {-24, -25}, {-21, -26}, {-17, -27}}], 
           "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{1, 24, 6, 24, 28, 1, 1, 2, 3, 36, 5, 34, 18, 
             39, 4, 13, 12, 35, 40, 37, 24, 41, 24, 40, 37, 22, 40, 22, 11, 3,
              10, 6, 22, 1}], 
           "NumericalThresholds" -> {-0.41044953465461725`, 
            1.1654745340347292`, -0.32874651253223414`, 1.185003459453583, 
            0.33393210172653204`, -0.9185251593589782, -0.8924743533134459, \
-0.7102905511856078, -0.5329088568687438, -0.2885702103376388, \
-0.6761808991432189, 1.0271143913269045`, 
            0.3628345727920533, -0.20615184307098386`, -0.9656362831592559, 
            1.0502727031707766`, 
            0.6671038866043092, -1.1079444885253904`, -0.33303831517696375`, \
-0.5705182552337645, -1.0218052268028257`, -0.28107297420501703`, \
-0.9897786676883696, 0.11191239580512048`, 
            2.6066154241561894`, -0.17771308124065396`, \
-0.20924359560012815`, -0.010853626299649475`, 1.210731625556946, 
            0.18154252320528033`, 
            0.5328762531280519, -0.43656532466411585`, -1.7373403310775755`, \
-0.9185251593589782}, "LeafValues" -> 
           RawArray["Real32",{0.0014528892934322357`, 0.0004400460165925324, 
             0.01166816521435976, -0.003015075344592333, 
             0.0029512550681829453`, 0.013633912429213524`, 
             0.0016526860417798162`, 
             0.011902997270226479`, -0.007358000613749027, 
             9.979475180443842*^-6, 
             0.008214711211621761, -0.010758805088698864`, \
-0.013125286437571049`, -0.0014839895302429795`, 
             0.005154222249984741, -0.005207392852753401, \
-0.004408716689795256, 
             0.01252714078873396, -0.012345349416136742`, \
-0.007690946571528912, 0.0025164405815303326`, 0.009251009672880173, 
             0.0016570832813158631`, -0.000893221702426672, \
-0.00028127498808316886`, 0.005033711902797222, -0.012437635101377964`, 
             0.0023716152645647526`, -0.005900794640183449, 
             0.001372910221107304, -0.008725538849830627, \
-0.002148952567949891, -0.010570459999144077`, -0.002101362217217684, \
-0.0019763202872127295`}], "Children" -> 
           RawArray["Integer16",{{2, 3}, {7, 4}, {15, 12}, {-3, 5}, {19, 
             6}, {-6, 14}, {11, 8}, {10, 9}, {-9, 27}, {-8, 22}, {34, -12}, {
             21, 13}, {-13, -14}, {-7, -15}, {16, 26}, {17, 18}, {28, -18}, {
             20, -19}, {-5, -20}, {-17, -21}, {29, 23}, {-11, -23}, {24, 
             25}, {-22, -25}, {-24, -26}, {31, -27}, {-10, -28}, {-2, -29}, {
             30, 33}, {-4, -31}, {
             32, -32}, {-16, -33}, {-30, -34}, {-1, -35}}], 
           "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{27, 14, 40, 27, 5, 36, 1, 40, 4, 17, 3, 16, 
             35, 17, 39, 21, 22, 14, 35, 41, 38, 10, 41, 40, 37, 20, 4, 16, 1,
              10, 39, 40, 19}], 
           "NumericalThresholds" -> {0.196260541677475, -0.8128378987312316, 
            1.3819831609725954`, -0.9135341942310332, -0.37400619685649866`, 
            0.10060806944966318`, -0.7055000066757201, -0.2035264819860458, \
-0.4666579514741897, -0.5704314112663268, 0.27413408458232885`, 
            1.949878811836243, -1.1079444885253904`, 
            1.7815473079681399`, -0.023049568757414814`, 
            0.08256579563021661, -0.17771308124065396`, 
            1.6553927063941958`, -1.7849307656288145`, -0.27524794638156885`, \
-0.2832748889923095, 
            0.5042509436607362, -0.2780598551034927, -0.2836652994155883, 
            0.10547868162393571`, 0.6553959846496583, 
            0.18113346397876742`, -0.7729443013668059, -0.5577834844589232, \
-0.7383217215538024, -0.24897328019142148`, -0.11852462589740752`, 
            2.289122343063355}, "LeafValues" -> 
           RawArray["Real32",{-0.0017243684269487858`, 
             0.0012633077567443252`, -0.006655047181993723, \
-0.01012655720114708, -0.007317332550883293, 
             0.00013734318781644106`, -0.0002390862355241552, \
-0.004294436424970627, 0.0027771482709795237`, 
             0.00501933041960001, -0.010193747468292713`, 
             0.0019886221271008253`, 
             0.0031092411372810602`, -0.013688127510249615`, \
-0.0012868879130110145`, 0.011257072910666466`, -0.009060346521437168, 
             0.005857701413333416, -0.008488406427204609, \
-0.002533361781388521, -0.00013395704445429146`, -0.0008338821353390813, 
             0.00696226954460144, 
             0.0000868229108164087, -0.007368891965597868, 
             0.004119648598134518, -0.0027273548766970634`, \
-0.0026249641086906195`, 0.008529155515134335, 0.0024727266281843185`, 
             0.007651517633348703, 0.003391178557649255, 
             0.00038432664587162435`, -0.0033894299995154142`}], "Children" -> 
           RawArray["Integer16",{{3, 2}, {5, 20}, {12, 4}, {-4, 11}, {6, 
             28}, {7, 10}, {9, 
             8}, {-8, -9}, {-2, -10}, {-7, -11}, {-5, -12}, {14, 13}, {
             18, -14}, {16, 15}, {-15, -16}, {17, 26}, {-1, -18}, {19, 
             33}, {-13, -20}, {21, 22}, {-3, 23}, {27, -23}, {25, 
             24}, {-24, -25}, {-22, -26}, {-17, -27}, {29, 32}, {
             30, -29}, {-21, -30}, {-6, 
             31}, {-31, -32}, {-28, -33}, {-19, -34}}], "NominalSplits" -> {},
            "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
           0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{15, 3, 1, 4, 37, 1, 36, 22, 8, 26, 4, 39, 24,
              36, 37, 40, 15, 4, 26, 14, 20, 17, 16, 23, 23, 19, 20, 40, 4, 
             14}], "NumericalThresholds" -> {-0.6267376244068145, \
-0.6756103932857512, -0.8751384019851683, -0.49740645289421076`, \
-0.18113622069358823`, -0.6776803731918334, -0.06922437623143195, 
            1.0499042272567751`, -1.0732870101928709`, 
            0.48058360815048223`, -0.42185391485691065`, -0.2685388326644897, 
            1.4523493051528933`, 0.987236261367798, 
            1.3408477902412417`, -0.2726531773805618, -0.619463950395584, \
-0.44812810420989985`, 
            1.0198957324028017`, -0.8635278940200805, -0.38620749115943903`, 
            1.5181351304054262`, 
            1.5838478207588198`, -0.2773336619138717, -0.6091661751270293, 
            0.9089435636997224, 
            0.2354855537414551, -0.12101612985134123`, -0.29533091187477106`, \
-0.8914735615253447}, "LeafValues" -> 
           RawArray["Real32",{
             0.009961889125406742, -0.006417478434741497, \
-0.0006721277022734284, 0.012601634487509727`, 
             0.004854090977460146, -0.011706997640430927`, \
-0.004408621229231358, -0.0016909686382859945`, 
             0.0031345330644398928`, -0.0039357710629701614`, 
             0.008904991671442986, 0.00217510387301445, 
             0.008408164605498314, -0.00270856823772192, \
-0.008547643199563026, 
             0.006634891964495182, -0.0032781383488327265`, \
-0.0005222036270424724, 0.004672957584261894, 0.0013112840242683887`, 
             0.00016445087385363877`, -0.0013516346225515008`, \
-0.007504492532461882, -0.00592225743457675, -0.0012032696977257729`, 
             0.002679100725799799, 
             0.0025455309078097343`, -0.00795367918908596, \
-0.000620031903963536, 0.00543422345072031, 0.00461638392880559}], "Children" -> 
           RawArray["Integer16",{{2, 14}, {12, 3}, {4, 6}, {10, 5}, {9, -6}, {
             7, 19}, {8, 11}, {-4, -9}, {-5, -10}, {-3, -11}, {-8, -12}, {-1, 
             13}, {30, 18}, {15, 21}, {16, -16}, {17, 23}, {-2, 
             25}, {-14, -19}, {20, 29}, {-7, -21}, {-15, 22}, {26, -23}, {28, 
             24}, {-24, -25}, {-18, -26}, {
             27, -27}, {-22, -28}, {-17, -29}, {-20, -30}, {-13, -31}}], 
           "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{14, 6, 6, 34, 16, 23, 23, 25, 38, 35, 2, 1, 
             40, 39, 40, 39, 24, 40, 15, 38, 5, 38, 40, 5, 37, 4, 24, 2}], 
           "NumericalThresholds" -> {-0.8128378987312316, \
-0.3092427849769592, -0.17878120392560956`, 
            1.2134262919425967`, -0.8966434895992278, -0.3626967072486877, \
-0.3421987891197204, -1.5550842285156248`, 1.2804342508316042`, 
            0.5416589081287385, -0.8716202974319457, -0.8751384019851683, \
-0.32929769158363337`, -0.21593268215656278`, -0.37862339615821833`, \
-0.17562273144721982`, 
            1.1972860693931582`, -0.3808781653642654, -0.7426593899726867, \
-0.17754136770963666`, -0.8696566224098204, -0.24890209734439847`, \
-0.32392418384551996`, -0.28058463335037226`, 
            0.11031349748373033`, -0.2689693868160247, -0.9135218858718871, 
            0.5777630507946016}, "LeafValues" -> 
           RawArray["Real32",{0.00687293941155076, -0.009008325636386871, 
             0.006446704268455505, -0.004157722927629948, 
             0.0009449252393096685, -0.009699005633592606, 
             0.0074524483643472195`, 
             0.0029569007456302643`, -0.0035624683368951082`, 
             0.0013177276123315096`, -0.0027128886431455612`, \
-0.004810689948499203, 0.004031249321997166, -0.004374796058982611, 
             0.002371740061789751, 0.010176878422498703`, 
             0.00015072021051310003`, 0.007426644209772348, 
             0.006168309599161148, 
             0.0006653231685049832, -0.006696375086903572, \
-0.005609039682894945, -0.00278955465182662, 
             0.0008190416265279055, -0.0006988234235905111, 
             0.0014602632727473974`, 
             0.0036570054944604635`, -0.004036380909383297, 
             0.0015306384302675724`}], "Children" -> 
           RawArray["Integer16",{{11, 2}, {6, 3}, {10, 4}, {24, 
             5}, {-5, -6}, {21, 7}, {-7, 8}, {-8, 9}, {-9, -10}, {-3, 
             26}, {-1, 12}, {18, 13}, {14, 16}, {15, 22}, {-13, -16}, {23, 
             17}, {-17, -18}, {-12, 19}, {-19, 20}, {-20, -21}, {-2, 
             27}, {-15, -23}, {-14, -24}, {-4, 
             25}, {-25, -26}, {-11, -27}, {-22, 28}, {-28, -29}}], 
           "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{27, 36, 2, 5, 24, 5, 23, 12, 24, 1, 11, 40, 
             25, 3, 37, 3, 39, 35, 38, 25, 41, 2, 32, 6, 2}], 
           "NumericalThresholds" -> {
            0.26903182268142706`, -0.2885702103376388, -0.6570234894752501, \
-0.7513014972209929, 1.1654745340347292`, -0.6286626756191253, 
            1.2473477721214297`, -0.9585639536380767, 
            1.185003459453583, -0.9301235079765319, -1.0564407110214231`, 
            0.05637855082750321, 0.4968093186616898, 
            2.7212861776351933`, -0.8293245136737822, 
            2.58844268321991, -0.42269897460937494`, 0.08231753855943681, 
            1.2305586338043215`, -0.6908848583698272, -0.020199276506900784`, \
-0.7712931931018828, 0.3339768201112748, -1.0488838553428648`, 
            1.3031931519508364`}, "LeafValues" -> 
           RawArray["Real32",{0.0014446770073845983`, 
             0.004293830133974552, -0.004569448996335268, \
-0.00298897922039032, 0.01376622449606657, 0.007461225613951683, 
             0.0076202391646802425`, 
             0.0012912909733131528`, -0.00018591903790365905`, 
             0.006378228310495615, -0.003616390284150839, 
             0.0013668633764609694`, 0.003441074164584279, 
             0.005088829901069403, -0.00010625182039802894`, \
-0.009425891563296318, 
             0.003340755123645067, -0.0006238260539248586, \
-0.0006939270533621311, 
             0.0070762038230896, -0.0038949442096054554`, \
-0.0007180318934842944, -0.0031101719941943884`, -0.01058551948517561, \
-0.004107452463358641, 0.00014525896403938532`}], "Children" -> 
           RawArray["Integer16",{{14, 2}, {3, 5}, {4, 13}, {-2, -5}, {6, 9}, {
             7, 8}, {23, 22}, {-7, 12}, {-6, 10}, {-10, 
             11}, {-11, -12}, {-9, -13}, {-4, 21}, {16, 15}, {-15, -16}, {
             17, -17}, {24, 18}, {19, 
             20}, {-18, -20}, {-19, -21}, {-14, -22}, {-8, -23}, {-3, -24}, \
{-1, 25}, {-25, -26}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{16, 39, 36, 20, 38, 38, 39, 2, 40, 2, 41, 34,
              33, 29, 30, 39, 1, 14, 26, 40, 40, 7, 4}], 
           "NumericalThresholds" -> {-0.3429705053567886, 0.06808219105005266,
             0.04880123957991601, 
            0.552601844072342, -0.2494176849722862, -0.22111643850803372`, \
-0.26143732666969294`, -0.8067266047000884, -0.3174462020397186, \
-0.8416996896266936, -0.2759136855602264, 0.6113494634628297, 
            0.7590010464191438, 0.32030892372131353`, 
            0.19593778997659686`, -0.42187349498271937`, 1.8327730894088747`, 
            0.9479832351207734, -0.8605261147022246, -0.3071140050888061, 
            0.47568671405315405`, -1.1568204164505003`, -0.4652085602283477}, 
           "LeafValues" -> 
           RawArray["Real32",{0.003318299539387226, 
             0.00020523712737485766`, -0.003930287901312113, 
             0.005153390113264322, -0.006785445846617222, 0.01309223473072052,
              0.007207606919109821, -0.00046705559361726046`, 
             0.003312505781650543, -0.000028788648705813102`, \
-0.005068143829703331, 0.004995021969079971, -0.008061077445745468, 
             0.000272938545094803, -0.006066212896257639, 
             0.004655837547034025, -0.00017394927272107452`, \
-0.0003186032408848405, -0.008002959191799164, -0.0020982963033020496`, \
-0.0011027593864127994`, 0.0005440423265099525, -0.003760463558137417, 
             0.00071649847086519}], "Children" -> 
           RawArray["Integer16",{{2, 14}, {3, -3}, {5, 4}, {12, -5}, {8, 6}, {
             11, 7}, {-7, -8}, {10, 9}, {-9, -10}, {-1, -11}, {-6, -12}, {-4, 
             13}, {-13, -14}, {15, -15}, {16, 20}, {21, 17}, {19, 
             18}, {-18, -19}, {-17, -20}, {23, -21}, {
             22, -22}, {-2, -23}, {-16, -24}}], "NominalSplits" -> {}, 
           "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
           0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{24, 4, 24, 41, 38, 3, 36, 36, 31, 32, 40, 38,
              19, 6, 6, 34, 22, 37, 37, 15, 24, 14, 14, 19, 33, 2, 27, 14}], 
           "NumericalThresholds" -> {
            0.5284268856048585, -0.38677230477333063`, 
            1.5712198019027712`, -0.2815735042095184, -0.22726976126432416`, \
-0.6756103932857512, -0.16960833966732022`, -0.01942526269704103, 
            0.7698359787464143, 
            0.8459738790988923, -0.31091381609439844`, -0.12940517812967298`, \
-1.5279652476310728`, -0.2905710935592651, -0.17878120392560956`, 
            0.7149436473846437, -0.25974844396114344`, 1.099523425102234, 
            1.524767339229584, 1.4106207489967348`, -0.9919084906578063, 
            1.3541122674942019`, 1.314442276954651, -0.3985556215047836, 
            0.8778914809226991, 0.38405936956405645`, 1.2210771441459658`, 
            1.1046323180198672`}, "LeafValues" -> 
           RawArray["Real32",{-0.003912920132279396, 0.009454657323658466, 
             0.0067923348397016525`, -0.005751464050263166, 
             0.0043357671238482, -0.004759106785058975, 
             0.0010471743298694491`, -0.0016740773571655154`, 
             0.0012179072946310043`, -0.0036261873319745064`, 
             0.0005402130773290992, 
             0.002174538793042302, -0.0007485296810045838, \
-0.002922676270827651, 
             0.007506882306188345, -0.0001528118591522798, \
-0.0017365397652611136`, 0.0007663322030566633, 
             0.009286416694521904, -0.0009357890812680125, \
-0.007935256697237492, -0.0025278886314481497`, 0.0017707538791000843`, 
             0.0037569564301520586`, 0.0051780082285404205`, 
             0.0026896419003605843`, -0.0015560169704258442`, 
             0.003893377725034952, 0.00040658353827893734`}], "Children" -> 
           RawArray["Integer16",{{13, 2}, {3, 9}, {4, -4}, {5, 6}, {8, 11}, {
             12, 7}, {-7, -8}, {-2, -9}, {-3, 10}, {-10, 
             24}, {-6, -12}, {-5, -13}, {-1, 14}, {17, 15}, {16, 22}, {-15, 
             25}, {20, 18}, {21, 19}, {-19, -20}, {28, -21}, {-18, -22}, {23, 
             26}, {-16, -24}, {
             27, -25}, {-17, -26}, {-23, -27}, {-11, -28}, {-14, -29}}], 
           "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{16, 30, 31, 22, 22, 20, 11, 25, 15, 38, 41, 
             30, 22, 19, 39, 39, 32, 17, 6}], 
           "NumericalThresholds" -> {-0.350173071026802, 0.31969729065895086`,
             0.35188584029674536`, 1.3036426901817324`, 1.360818147659302, 
            1.004193961620331, -0.9786324501037597, 
            0.4968093186616898, -0.6935001015663146, -0.2554979175329208, \
-0.27495558559894556`, 
            0.3023126423358918, -1.7373403310775755`, -1.5279652476310728`, \
-0.42207509279251093`, -0.20469265431165692`, -0.11202764138579367`, \
-0.019381335936486718`, -1.0488838553428648`}, "LeafValues" -> 
           RawArray["Real32",{0.0030217047315090895`, 0.002396835247054696, 
             0.0013346822233870625`, 0.00569559819996357, 
             0.010417052544653416`, -0.002291578333824873, \
-0.005755479913204908, 0.00024662018404342234`, 0.0038958967197686434`, 
             0.006299989297986031, -0.007742126006633043, \
-0.005068059079349041, -0.005112722050398588, -0.006521308328956366, 
             0.0010528700659051538`, 
             0.0008709216490387917, -0.0007258888217620552, \
-0.001456006313674152, 0.008789723739027977, -0.002382205566391349}], 
           "Children" -> 
           RawArray["Integer16",{{2, 12}, {8, 3}, {10, 4}, {6, 5}, {-5, 9}, {
             7, -7}, {-4, -8}, {17, 18}, {-6, -10}, {11, -11}, {-3, -12}, {
             13, -13}, {-2, 14}, {-14, 15}, {19, 
             16}, {-16, -17}, {-1, -18}, {-9, -19}, {-15, -20}}], 
           "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{40, 38, 39, 38, 15, 40, 40, 21, 23, 17, 34, 
             33, 39, 39, 13, 16, 9, 37, 35, 35, 39}], 
           "NumericalThresholds" -> {0.35404099524021154`, 
            1.2305586338043215`, 1.2461745142936709`, 0.7768523991107942, 
            1.0442767739295962`, 1.6442610621452334`, 
            0.5710895955562593, -0.2028279900550842, -0.2605524659156799, 
            1.8775764703750613`, 
            1.2377530336380007`, -0.947048783302307, -0.3446925580501556, \
-0.32814535498619074`, 1.6201222538948061`, 0.9230184555053712, 
            0.7647812664508821, -0.5256382226943969, -1.1453253030776975`, 
            1.4147114753723147`, -0.07286714389920233}, "LeafValues" -> 
           RawArray["Real32",{-0.00010527957056183368`, -0.002747106831520796,
              0.01066107489168644, -0.0016779231373220682`, \
-0.007620044518262148, 
             0.002031702781096101, -0.006618004757910967, \
-0.0033483898732811213`, -0.005962643772363663, -0.0012357158120721579`, 
             0.0037179456558078527`, -0.003081123810261488, \
-0.0022069753613322973`, 0.0044472855515778065`, 
             0.0004532089806161821, -0.005628271959722042, 
             0.004164041951298714, 
             0.0006990658584982157, -0.00012572546256706119`, 
             0.0027063069865107536`, 
             0.0010132684838026762`, -0.0018705080728977919`}], "Children" -> 
           RawArray["Integer16",{{2, 5}, {4, 3}, {-3, 20}, {11, 12}, {16, 
             6}, {7, -7}, {8, 10}, {-6, 9}, {-9, -10}, {18, -11}, {
             13, -12}, {-5, -13}, {15, 14}, {-14, -15}, {-1, -16}, {
             17, -17}, {-2, 19}, {-8, -19}, {
             21, -20}, {-4, -21}, {-18, -22}}], "NominalSplits" -> {}, 
           "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
           0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{25, 14, 35, 35, 34, 35, 22, 3, 36, 7, 38, 24,
              41, 17, 10, 24, 24, 38}], 
           "NumericalThresholds" -> {1.0184965133666994`, 1.664364278316498, 
            0.1288704797625542, 0.16986312717199328`, 0.39116735756397253`, 
            0.05864662118256093, 1.4507028460502627`, -0.6284168064594268, 
            0.04880123957991601, -0.7613143622875213, -0.26565191149711603`, 
            1.507481932640076, -0.28384152054786677`, -0.6487552225589751, \
-0.6838963627815245, 1.3236786127090456`, 
            1.415653705596924, -0.2509500384330749}, "LeafValues" -> 
           RawArray["Real32",{0.0041821361519396305`, 
             0.0026280381716787815`, -0.0035882480442523956`, \
-0.008645819500088692, -0.0006766881560906768, 0.0026722836773842573`, 
             0.010616184212267399`, -0.003074596170336008, 
             0.0007068632403388619, -0.007228618487715721, \
-0.0005295100272633135, 0.002125566126778722, 
             0.005029724445194006, -0.0001952397869899869, 
             0.004418004769831896, 
             0.0034384906757622957`, -0.0015168972313404083`, 
             0.00009986354416469112, 0.0018399079563096166`}], "Children" -> 
           RawArray["Integer16",{{2, 14}, {3, -3}, {6, 4}, {5, 9}, {-4, -6}, {
             12, 7}, {8, -8}, {-7, -9}, {11, 10}, {-10, -11}, {-5, -12}, {
             13, -13}, {-1, -14}, {15, -15}, {16, -16}, {-2, 17}, {-17, 
             18}, {-18, -19}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{26, 3, 31, 41, 41, 40, 37, 41, 38, 38, 36, 3,
              36, 1, 34, 3, 40, 7, 40, 38, 14, 41, 13}], 
           "NumericalThresholds" -> {1.0198957324028017`, -0.4039557129144668,
             1.2062902450561526`, -0.2787817567586898, -0.2815735042095184, 
            0.7171173691749574, 
            0.07916230708360673, -0.2692563980817794, -0.32380823791027064`, \
-0.5398761332035064, -0.04629575088620185, -0.5643660724163054, 
            0.12703400850296023`, -0.7659050524234771, 
            0.021890616044402126`, -0.6645408272743224, -0.2651324570178985, \
-0.3650371432304382, -0.24556683748960492`, -0.18496949225664136`, \
-0.8635278940200805, -0.26546007394790644`, -0.8556583523750304}, 
           "LeafValues" -> 
           RawArray["Real32",{0.0019265060545876622`, 0.0007402717601507902, 
             0.007119214162230492, -0.00338375149294734, \
-0.0022927725221961737`, -0.002637449186295271, -0.007603035774081945, 
             0.0020907772704958916`, -0.0007648754981346428, \
-0.0015589518006891012`, 0.006154921371489763, 0.0013722252333536744`, 
             0.004005244001746178, -0.0058693415485322475`, \
-0.00004157722651143558, -0.002125580795109272, 
             0.0024034427478909492`, -0.0036807300057262182`, \
-0.0031509052496403456`, 0.002465765457600355, 0.004397330339998007, 
             0.0028914022259414196`, -0.0037490446120500565`, 
             0.0025552755687385798`}], "Children" -> 
           RawArray["Integer16",{{3, 2}, {18, -3}, {4, -4}, {5, 8}, {15, 6}, {
             7, -7}, {-6, -8}, {9, 12}, {10, 11}, {-5, -11}, {-10, -12}, {13, 
             14}, {-9, -14}, {-13, -15}, {17, 16}, {-16, -17}, {-1, -18}, {20,
              19}, {-19, -20}, {21, 23}, {22, -22}, {-2, -23}, {-21, -24}}], 
           "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{3, 37, 17, 17, 16, 37, 5, 4, 19, 8, 40, 36, 
             37}], "NumericalThresholds" -> {
            2.7212861776351933`, -0.8293245136737822, -1.0333310961723325`, \
-1.013282537460327, -0.88757586479187, 
            0.11031349748373033`, -1.3315238356590269`, -1.3981128334999082`, 
            1.5633189082145693`, -0.1279722489416599, -0.08959762006998061, \
-1.0772739648818968`, 0.2982232421636582}, "LeafValues" -> 
           RawArray["Real32",{0.003613055683672428, 
             0.0003446608898229897, -0.00613777432590723, \
-0.0078158900141716, -0.004160052165389061, -0.0046027954667806625`, 
             0.002118560718372464, 0.00047534494660794735`, 
             0.00017132048378698528`, -0.0027668974362313747`, 
             0.005363360047340393, -0.0007497108308598399, 
             0.0003084825293626636, -0.002296400023624301}], "Children" -> 
           RawArray["Integer16",{{3, 2}, {-2, -3}, {-1, 4}, {5, 7}, {-4, 6}, {
             11, -7}, {12, 8}, {10, 9}, {-9, -10}, {-8, -11}, {-6, -12}, {-5, 
             13}, {-13, -14}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{36, 41, 39, 23, 34, 19, 16, 12, 22, 37, 12, 
             39, 39, 36, 32, 25}], 
           "NumericalThresholds" -> {4.366788387298585, 
            0.5171810984611512, -0.07450431212782858, -0.36626571416854853`, \
-1.866535425186157, 1.5633189082145693`, 1.8612311482429507`, 
            0.7199347913265229, -1.7373403310775755`, -0.5705182552337645, 
            0.7273566126823426, -0.11129789054393767`, -0.41830053925514216`, \
-1.0585420131683347`, -1.6881804466247556`, -1.810002267360687}, "LeafValues" -> 
           RawArray["Real32",{
             0.0013734655221924186`, -0.0030260852072387934`, \
-0.0006290279561653733, -0.001181185245513916, -0.005750175099819899, 
             0.0037806557957082987`, -0.00016994174802675843`, 
             0.005072739906609058, -0.006879383698105812, 
             0.000053563657274935395`, -0.0003900091105606407, 
             0.005320272408425808, 
             0.0011908350279554725`, -0.0037419393192976713`, \
-0.002243215683847666, 0.004119778983294964, 0.0009530724491924047}], 
           "Children" -> 
           RawArray["Integer16",{{2, -2}, {5, 3}, {10, 4}, {14, -5}, {15, 
             6}, {7, 8}, {9, -8}, {-7, -9}, {-6, -10}, {12, 11}, {-11, -12}, {
             13, -13}, {-3, -14}, {16, -15}, {-1, -16}, {-4, -17}}], 
           "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{19, 38, 37, 35, 19, 40, 40, 1, 19, 41, 37, 
             36, 41, 15, 41}], 
           "NumericalThresholds" -> {-1.4444094896316526`, \
-0.4447551220655441, -0.7655255794525145, -0.7139588594436644, \
-1.331140637397766, -0.3855632990598678, 0.24255163222551349`, 
            0.4176099300384522, -1.3099079132080076`, -0.2822112143039703, \
-0.18983651697635648`, -0.063851710408926, -0.27747479081153864`, \
-0.7918472886085509, -0.2718669325113296}, "LeafValues" -> 
           RawArray[
             "Real32",{-0.002285821596160531, -0.0029696414712816477`, \
-0.0014636407140642405`, 
             0.0032530089374631643`, -0.007165791001170874, \
-0.003397432155907154, 0.0026999705005437136`, 0.0005055987276136875, 
             0.008825740776956081, 0.003892115317285061, 
             0.0019458080641925335`, -0.004438730422407389, 
             0.001231399830430746, 
             0.0011336968746036291`, -0.0014783934457227588`, \
-0.00018412286590319127`}], "Children" -> 
           RawArray["Integer16",{{2, 5}, {3, 4}, {-1, -4}, {-3, -5}, {6, 
             9}, {-2, 7}, {8, -8}, {-7, -9}, {-6, 10}, {11, 13}, {-10, 
             12}, {-12, -13}, {14, 15}, {-11, -15}, {-14, -16}}], 
           "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{2, 2, 37, 10, 11, 10, 2, 19, 15, 36, 23, 34, 
             23, 31, 37, 3, 13, 12}], 
           "NumericalThresholds" -> {1.5551437735557558`, 
            1.2642803192138674`, -0.4983051866292953, 1.5016268491744997`, 
            1.424072086811066, 1.699684262275696, 
            0.8978496491909028, -1.4200013875961301`, 
            0.9889931976795198, -1.3143351078033445`, -1.99558287858963, 
            0.008839827729389073, -1.9734844565391538`, -0.9996158182621001, \
-0.6978124380111693, 1.970981538295746, 1.5763114094734194`, 
            1.954950511455536}, "LeafValues" -> 
           RawArray["Real32",{0.004404920153319836, 
             0.002581222215667367, -0.0027442416176199913`, 
             0.006921845022588968, -0.005876805167645216, 
             0.004654161166399717, -0.000628364912699908, -0.0041209333576262,
              0.00003720058884937316, -0.004058204125612974, \
-0.0039313845336437225`, 
             0.0021623773500323296`, -0.00022931353305466473`, \
-0.00227979919873178, 0.00013583258260041475`, -0.0006814262014813721, 
             0.0044274101965129375`, 
             0.0024038786068558693`, -0.000011783215086325072`}], "Children" -> 
           RawArray["Integer16",{{2, 9}, {4, 3}, {15, -4}, {5, 6}, {
             7, -6}, {-5, -7}, {8, 12}, {-1, -9}, {10, -10}, {-2, 11}, {-11, 
             13}, {-8, -13}, {-12, 14}, {-14, -15}, {17, 16}, {-16, -17}, {-3,
              18}, {-18, -19}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{17, 17, 15, 11, 17, 17, 16, 3, 41, 38, 3, 2, 
             24, 41, 36}], 
           "NumericalThresholds" -> {-1.0333310961723325`, \
-1.013282537460327, -0.7213185131549834, -0.12464256957173346`, \
-1.0014047622680662`, -1.003959536552429, -0.8784277737140654, \
-0.6095209419727324, -0.27620421350002283`, -0.3181480318307876, \
-0.6349860131740569, -0.7367318272590636, 
            1.5712198019027712`, -0.2759136855602264, 0.3566607683897019}, 
           "LeafValues" -> 
           RawArray["Real32",{
             0.002919616876170039, -0.0066220443695783615`, \
-0.0027907718904316425`, 0.0030239804182201624`, -0.0002841866808012128, 
             0.00008847182471072301, 0.005376949440687895, 
             0.0018669861601665616`, 0.0009169664117507637, 
             0.00403535645455122, -0.0023144555743783712`, 
             0.0010366745991632342`, 
             0.007431314792484045, -0.005524962674826384, 
             0.00010358914005337283`, -0.004375516902655363}], "Children" -> 
           RawArray["Integer16",{{-1, 2}, {3, 5}, {-2, 4}, {-4, 15}, {6, 8}, {
             7, -7}, {-3, -8}, {11, 9}, {10, 14}, {-9, -11}, {13, 
             12}, {-12, -13}, {-6, -14}, {-10, -15}, {-5, -16}}], 
           "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{2, 1, 24, 36, 37, 8, 40, 1, 24, 1, 41, 1, 36,
              1, 20, 41, 38, 16}], 
           "NumericalThresholds" -> {-0.8716202974319457, -0.8795969486236571,
             1.370858132839203, -0.063851710408926, -0.18113622069358823`, \
-1.0604344010353086`, -0.3410122692584991, -0.863681137561798, 
            1.415653705596924, -0.8572868108749389, -0.2718669325113296, \
-0.8476366400718688, 0.024799551814794544`, -0.8442594110965728, 
            1.580346465110779, -0.27510897815227503`, -0.2042267322540283, \
-0.475246176123619}, "LeafValues" -> 
           RawArray["Real32",{0.0030324221588671207`, 0.00250330101698637, 
             0.007018610835075378, 0.002185471123084426, 
             0.006446170620620251, -0.00676222238689661, \
-0.007830443792045116, -0.0005420239758677781, -0.005462918896228075, \
-0.003035112516954541, 0.005944876465946436, 
             0.0028991736471652985`, -0.005278557538986206, \
-0.0011386951664462686`, 
             0.0000132703880808549, -0.0034918037708848715`, \
-0.0009638498304411769, -0.00457183038815856, -0.0010332466335967183`}], 
           "Children" -> 
           RawArray["Integer16",{{-1, 2}, {3, 8}, {6, 4}, {5, -5}, {-4, -6}, {
             15, 7}, {-7, 17}, {9, 10}, {11, -10}, {-9, 12}, {-3, 18}, {13, 
             14}, {-11, -14}, {-13, -15}, {
             16, -16}, {-2, -17}, {-8, -18}, {-12, -19}}], 
           "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{19, 23, 21, 10, 11, 13, 38, 22, 41, 20}], 
           "NumericalThresholds" -> {-1.5279652476310728`, 
            1.4262633919715884`, 
            1.646251440048218, -1.1163245439529417`, -1.0624305009841917`, \
-0.9803544878959655, -0.23942942917346952`, 
            1.523980259895325, -0.2693887650966644, 1.6299418210983279`}, 
           "LeafValues" -> 
           RawArray["Real32",{-0.0021928856149315834`, -0.002925620647147298, 
             0.0026620447169989347`, 
             0.004661961924284697, -0.0011390706058591604`, 
             0.006310250144451857, 0.00003585830199881457, 
             0.0002270630357088521, -0.0036885766312479973`, \
-0.005851936526596546, -0.0014718429883942008`}], "Children" -> 
           RawArray["Integer16",{{-1, 2}, {3, 4}, {5, -4}, {10, 9}, {-2, 6}, {
             7, 8}, {-6, -8}, {-7, -9}, {-5, -10}, {-3, -11}}], 
           "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{1, 1, 5, 1, 4, 24, 12, 5, 5, 15}], 
           "NumericalThresholds" -> {-0.9332868456840514, \
-0.9150777757167815, -0.7260941565036773, -0.9101396799087523, \
-0.4808294773101806, 
            1.4399781227111819`, -0.9621942341327666, -0.6286626756191253, \
-0.6013090312480925, -0.744489699602127}, "LeafValues" -> 
           RawArray["Real32",{0.002827927004545927, 0.0011573684168979526`, 
             0.003846100065857172, -0.007276630960404873, 
             0.003940438386052847, 
             0.0006113562267273664, -0.005504421889781952, \
-0.004274835344403982, 0.008023218251764774, 
             0.0000941103498917073, -0.00036132519016973674`}], "Children" -> 
           RawArray["Integer16",{{-1, 2}, {3, 4}, {-2, -4}, {-3, 5}, {6, 7}, {
             10, -7}, {8, 9}, {-6, -9}, {-8, -10}, {-5, -11}}], 
           "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{16, 29, 34, 17, 29, 30, 29, 14, 22, 2}], 
           "NumericalThresholds" -> {-0.8966434895992278, 1.1509497165679934`,
             1.2134262919425967`, 0.49048970639705664`, 1.125215291976929, 
            1.1553009748458865`, 
            1.173013210296631, -0.9025790989398955, -1.7373403310775755`, 
            1.6096116304397585`}, "LeafValues" -> 
           RawArray["Real32",{0.001164717716164887, 
             0.0024056395050138235`, -0.002672255039215088, \
-0.007148168049752712, 0.0002936301752924919, 0.005939210765063763, 
             0.003468315117061138, 0.0013869081158190966`, 
             0.0020101729314774275`, -0.000012809115105483215`, \
-0.0012739469530060887`}], "Children" -> 
           RawArray["Integer16",{{2, 3}, {5, 7}, {6, 4}, {-4, -5}, {-1, -6}, {
             8, -7}, {-3, -8}, {-2, 9}, {-9, 10}, {-10, -11}}], 
           "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{35, 29, 29, 41, 31, 31, 14, 39, 39, 40, 2, 
             35, 26, 38, 36, 39, 41, 38}], 
           "NumericalThresholds" -> {-1.7957092523574827`, \
-1.3278840184211729`, -1.2914980649948118`, -0.2663006633520126, \
-1.4381712675094602`, -1.2597877383232114`, 
            1.340961277484894, -0.08097373694181441, -0.43258252739906305`, 
            0.22967168688774112`, 
            0.4574568718671799, -1.3763164877891538`, -1.581758379936218, \
-0.5428965687751769, -1.1672496795654295`, 0.3461874127388001, 
            0.059595867991447456`, -0.2761630862951278}, "LeafValues" -> 
           RawArray["Real32",{0.0030063935555517673`, 0.0009073939872905612, 
             0.0068022022023797035`, -0.005322866141796112, \
-0.0002875445643439889, -0.005389660596847534, 0.0016432807315140963`, 
             0.0050924839451909065`, 
             0.0006242005038075149, -0.0000879147119121626, \
-0.0027291199658066034`, 0.0006750737084075809, 
             0.005352817475795746, -0.0034697516821324825`, \
-0.0012478913413360715`, 
             0.0015702275559306145`, -0.0032252527307718992`, \
-0.0013442045310512185`, 0.0004076585464645177}], "Children" -> 
           RawArray["Integer16",{{18, 2}, {5, 3}, {4, 6}, {-3, -5}, {10, 8}, {
             17, 7}, {9, -8}, {-6, 16}, {-7, -10}, {11, 14}, {12, 
             13}, {-2, -13}, {-12, -14}, {-11, 
             15}, {-15, -16}, {-9, -17}, {-4, -18}, {-1, -19}}], 
           "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{14, 3, 2, 35, 20, 21, 11, 39, 38, 36, 12, 41,
              1, 41, 3, 3, 20, 30, 21}], 
           "NumericalThresholds" -> {
            1.664364278316498, -0.6095209419727324, -0.78089901804924, 
            0.19708653539419177`, 0.6748562157154084, 
            0.47804430127143865`, -0.9591592252254485, -0.2509185522794723, \
-0.24890209734439847`, 
            0.09656087309122087, -0.8569453954696654, -0.2800270467996597, \
-0.7497666776180266, -0.27096971869468683`, -0.5677547454833983, \
-0.5643660724163054, 0.3661713749170304, 0.6702956259250642, 
            0.34571814537048345`}, "LeafValues" -> 
           RawArray["Real32",{
             0.00945562869310379, -0.002322662156075239, \
-0.004165175370872021, 
             0.00733538530766964, -0.008678476326167583, \
-0.004536360036581755, 0.00011304126383038238`, -0.0013476869789883494`, 
             0.0007399145979434252, 
             0.002379526849836111, -0.005852723028510809, \
-0.00011738803732441738`, 0.0018580325413495302`, 
             1.0751524541774415`*^-6, -0.002776855370029807, 
             0.0004244656884111464, 
             0.00172290054615587, -0.0006619651685468853, \
-0.007996045053005219, 0.0035900662187486887`}], "Children" -> 
           RawArray["Integer16",{{2, -2}, {4, 3}, {-3, 13}, {5, 7}, {-1, 
             6}, {-6, 9}, {8, 10}, {-5, -9}, {-7, -10}, {12, 
             11}, {-11, -12}, {-8, -13}, {14, 17}, {15, 
             16}, {-4, -16}, {-15, -17}, {19, 18}, {-18, -19}, {-14, -20}}], 
           "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{2, 1, 25, 36, 7, 27, 1, 1, 37, 14, 37, 1, 18,
              1}], "NumericalThresholds" -> {-0.8716202974319457, \
-0.8795969486236571, 
            0.7585017979145051, -0.05170992948114871, -1.0296221971511839`, 
            0.38250108063220983`, -0.863681137561798, -0.8572868108749389, \
-0.17129758745431897`, -0.8872027397155761, -0.286512479186058, \
-0.8476366400718688, -0.03347799181938171, -0.8442594110965728}, "LeafValues" -> 
           RawArray["Real32",{0.0022374754771590233`, -0.0012664105743169785`,
              0.0005383944953791797, -0.004272777121514082, 
             0.0026053518522530794`, -0.00459093926474452, 
             0.0015608826652169228`, -0.004357548896223307, \
-0.00036924442974850535`, 0.004146741237491369, -0.004639077465981245, 
             0.006288560573011637, -0.0035254224203526974`, 
             0.004313116427510977, 0.00001020182935462799}], "Children" -> 
           RawArray["Integer16",{{-1, 2}, {3, 7}, {4, -4}, {5, -5}, {
             6, -6}, {-2, -7}, {9, 8}, {-8, 12}, {11, 
             10}, {-10, -11}, {-3, -12}, {13, 14}, {-9, -14}, {-13, -15}}], 
           "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{37, 38, 38, 25, 1, 41, 34, 39, 38, 40, 19, 
             40, 20, 12, 39, 17, 23, 40, 40, 22, 38, 41, 36, 17, 2, 1}], 
           "NumericalThresholds" -> {-0.32701013982295984`, \
-0.2832748889923095, -0.2912656366825103, 
            0.8197647035121919, -0.744554430246353, -0.26570712029933924`, 
            0.12673533707857135`, -0.27574123442173, -0.2741171717643737, \
-0.3174462020397186, -1.5200285911560056`, -0.2921698093414306, 
            1.4138594865798952`, 2.0454624891281132`, 
            0.10116324946284296`, -0.8923043906688689, -1.318213105201721, \
-0.21639443188905713`, -0.2035264819860458, 
            0.9679554104804994, -0.2641990780830383, -0.10533052310347556`, \
-0.010859977919608353`, -0.3911206573247909, -0.6487660706043242, \
-0.8722262084484099}, "LeafValues" -> 
           RawArray["Real32",{-0.0031332012731581926`, 0.00220005982555449, 
             0.00522112101316452, -0.003871556371450424, 
             0.005698447115719318, -0.009442266076803207, 
             0.002199772512540221, -0.0016879905015230179`, \
-0.00653874734416604, -0.003272176021710038, -0.0036847933661192656`, 
             0.006463436409831047, 
             0.0045757838524878025`, -0.00344048161059618, \
-0.002256163163110614, -0.0024289481807500124`, 
             0.0018787480657920241`, -0.0026139970868825912`, \
-0.005937619134783745, -0.00370563636533916, -0.0001283445453736931, 
             0.0002628215297590941, 
             0.0000731481341063045, -0.0015855715610086918`, 
             0.0027744986582547426`, -0.0006299453671090305, \
-0.0007745096809230745}], "Children" -> 
           RawArray["Integer16",{{10, 2}, {3, 9}, {4, 5}, {7, 6}, {
             26, -6}, {-5, 23}, {-2, 8}, {-8, -9}, {20, 13}, {11, 12}, {-1, 
             14}, {-11, 18}, {17, -14}, {15, -15}, {
             16, -16}, {-12, -17}, {-10, 21}, {24, 19}, {-19, 
             22}, {-3, -21}, {-18, -22}, {-20, -23}, {-7, -24}, {-13, 
             25}, {-25, -26}, {-4, -27}}], "NominalSplits" -> {}, "RootIndex" -> 
           1, "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{1, 1, 7, 1, 4, 24, 9, 17, 9, 41}], 
           "NumericalThresholds" -> {-0.9332868456840514, \
-0.9150777757167815, -1.0658665299415586`, -0.9101396799087523, \
-0.4803836047649383, 
            1.4399781227111819`, -0.881374567747116, -0.28563019633293146`, \
-0.8231191039085387, -0.27970787882804865`}, "LeafValues" -> 
           RawArray["Real32",{0.0023503561969846487`, 0.001065602176822722, 
             0.003285210346803069, -0.005270382389426231, \
-0.001802442711777985, 
             0.006274891551584005, -0.004302770830690861, \
-0.0027613365091383457`, 0.0006758239469490945, 0.00006633845623582602, 
             0.00009837665129452944}], "Children" -> 
           RawArray["Integer16",{{-1, 2}, {3, 4}, {-2, -4}, {-3, 5}, {6, 7}, {
             10, -7}, {8, 9}, {-6, -9}, {-8, -10}, {-5, -11}}], 
           "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{19, 35, 19, 40, 18, 17, 38, 14, 3, 2, 22, 
             19}], "NumericalThresholds" -> {-1.4444094896316526`, \
-0.5316500365734099, -1.3779478669166563`, -0.38045606017112726`, \
-1.119767367839813, -0.7261879444122313, -0.5516225695610045, 
            1.664364278316498, -0.6095209419727324, -0.78089901804924, \
-0.25974844396114344`, -1.5200285911560056`}, "LeafValues" -> 
           RawArray[
             "Real32",{-0.0015149374958127737`, -0.0012023046147078276`, \
-0.0057390606962144375`, 0.002772638341411948, 
             0.005228285677731037, -0.0026342470664530993`, 
             0.003385978750884533, -0.003495265729725361, \
-0.0026375972665846348`, -0.0031579264905303717`, -0.00007682092837058008, 
             0.00043132336577400565`, 0.0010045351227745414`}], "Children" -> 
           RawArray["Integer16",{{2, 3}, {5, -3}, {4, 7}, {-2, -5}, {6, -6}, {
             12, -7}, {-4, 8}, {9, -9}, {11, 
             10}, {-10, -11}, {-8, -12}, {-1, -13}}], "NominalSplits" -> {}, 
           "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
           0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{3, 37, 3, 37, 4, 36, 34, 38, 4, 38, 10}], 
           "NumericalThresholds" -> {2.7212861776351933`, -0.9009022414684295,
             2.58844268321991, 2.6066154241561894`, -0.1843890994787216, 
            1.7436331510543825`, 0.39804632961750036`, 
            1.2305586338043215`, -0.8851625621318816, 0.8989427387714387, 
            0.5242724418640138}, "LeafValues" -> 
           RawArray["Real32",{0.00002282804598507937, 
             0.0008610979421064258, -0.003833207068964839, 
             0.0022538488265126944`, -0.0008810202707536519, 
             0.0034811487421393394`, -0.004544687457382679, 
             0.0003000109572894871, 
             0.005139730870723724, -0.0020974446088075638`, \
-0.0029309713281691074`, 0.001316133071668446}], "Children" -> 
           RawArray["Integer16",{{3, 2}, {-2, -3}, {4, -4}, {6, 5}, {
             11, -6}, {8, 7}, {-7, -8}, {10, 
             9}, {-9, -10}, {-1, -11}, {-5, -12}}], "NominalSplits" -> {}, 
           "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
           0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{36, 37, 6, 37, 37, 18, 22, 37, 38, 37, 8, 
             26}], "NumericalThresholds" -> {4.366788387298585, 
            2.6066154241561894`, -0.21953364461660382`, 1.4280104637145998`, 
            1.3408477902412417`, 1.2830932140350344`, -0.2914660274982452, 
            0.20448905974626544`, -0.005142623092979192, 0.16154240071773532`,
             0.26215225458145147`, -0.7409779429435729}, "LeafValues" -> 
           RawArray["Real32",{
             0.000013332338312466163`, -0.0020408194977790117`, \
-0.0010663754073902965`, 0.003666493808850646, -0.0034756711684167385`, 
             0.004644949920475483, -0.004970457870513201, 
             0.0033457125537097454`, -0.004556183237582445, \
-0.0003329843748360872, 0.0034566677641123533`, -0.00009124328789766878, 
             0.0006878022104501724}], "Children" -> 
           RawArray["Integer16",{{2, -2}, {4, 3}, {12, -4}, {5, 6}, {8, -6}, {
             7, -7}, {11, -8}, {10, 
             9}, {-9, -10}, {-1, -11}, {-5, -12}, {-3, -13}}], 
           "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{17, 17, 28, 37, 17, 8, 3, 16, 41, 34, 18, 34,
              16, 38}], 
           "NumericalThresholds" -> {-1.0333310961723325`, -1.008942902088165,
             1.0279076695442202`, 0.11031349748373033`, -1.0014047622680662`, 
            0.025991793721914295`, 
            0.12002993375062944`, -0.8835952877998351, -0.27264818549156183`, 
            0.762939751148224, -0.9689552783966063, 
            0.7432492971420289, -0.8988514244556426, -0.18496949225664136`}, 
           "LeafValues" -> 
           RawArray["Real32",{
             0.002196826273575425, -0.003150390228256583, \
-0.0005081719718873501, -0.005665493663400412, 
             0.00271430192515254, -0.003395254723727703, 
             0.0036859505344182253`, -0.00025306022143922746`, 
             0.000017325797671219334`, 
             0.0013210877077654004`, -0.0029651205986738205`, \
-0.00027583129121921957`, 0.0037272130139172077`, 0.0004481155192479491, 
             0.004916299134492874}], "Children" -> 
           RawArray["Integer16",{{-1, 2}, {3, 5}, {4, -4}, {7, -5}, {6, 
             8}, {-3, -7}, {-2, -8}, {9, 10}, {13, 14}, {12, 
             11}, {-11, -12}, {-9, -13}, {-6, -14}, {-10, -15}}], 
           "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> 
           RawArray["Integer16",{23, 11, 40, 11, 9, 25, 6, 6, 6, 40, 6, 40}], 
           "NumericalThresholds" -> {
            1.4262633919715884`, -1.0789577960968015`, -0.18022719770669934`, \
-1.0624305009841917`, -1.0712830424308775`, 
            0.5474854707717897, -0.9097796082496642, -0.7846683859825133, \
-0.9244163334369658, -0.31248815357685084`, -1.0488838553428648`, \
-0.37936525046825403`}, "LeafValues" -> 
           RawArray["Real32",{
             0.004082546103745699, -0.0012439717538654804`, \
-0.0020619190763682127`, 
             0.0015512637328356504`, -0.0002842580433934927, \
-0.00022087768593337387`, 0.0043848128989338875`, 
             0.0014423788525164127`, -0.00008148819324560463, \
-0.003544245148077607, -0.0016100978245958686`, -0.0043051172979176044`, 
             0.00040243196417577565`}], "Children" -> 
           RawArray["Integer16",{{2, 3}, {-1, 4}, {10, -4}, {-3, 5}, {6, 
             7}, {-5, -7}, {9, 8}, {-8, -9}, {-6, -10}, {12, 
             11}, {-11, -12}, {-2, -13}}], "NominalSplits" -> {}, "RootIndex" -> 
           1, "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>]}, 
       "ClassNumber" -> 1, "IterationsNumber" -> 50, "Processor" -> 
       MachineLearning`MLProcessor[
        "Sequence", <|
         "Input" -> <|
           "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
          "Output" -> <|
           "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
          "Processors" -> {
            MachineLearning`MLProcessor[
            "DensifyNumericalVector", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
              "StructurePreserving" -> True, 
              "Input" -> <|
               "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
              "Version" -> {13.2, 1}, "ID" -> 5473596142612864811, 
              "Output" -> <|
               "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>|>], 
            MachineLearning`MLProcessor[
            "FirstValues", <|
             "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, "Key" -> 
              "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> 
              False, "Missing" -> "Allowed"|>]}, "Invertibility" -> "Perfect",
           "StructurePreserving" -> False, "Missing" -> "Allowed"|>], 
       "DistributionData" -> {NormalDistribution, {0.025934725499407604`}}, 
       "Calibrator" -> None, "Method" -> "GradientBoostedTrees", 
       "PostProcessor" -> MachineLearning`MLProcessor["Identity"], 
       "Options" -> <|
        "BoostingMethod" -> <|"Value" -> "Gradient", "Options" -> <||>|>, 
         MaxTrainingRounds -> <|"Value" -> 50, "Options" -> <||>|>, 
         "LeavesNumber" -> <|"Value" -> 500, "Options" -> <||>|>, 
         "LearningRate" -> <|"Value" -> 0.2, "Options" -> <||>|>, 
         ValidationSet -> <|"Value" -> Automatic, "Options" -> <||>|>, 
         "MaxBinNumber" -> <|"Value" -> 255, "Options" -> <||>|>, 
         "ThreadNumber" -> <|"Value" -> 4, "Options" -> <||>|>, 
         "MaxDepth" -> <|"Value" -> 6, "Options" -> <||>|>, 
         "LeafSize" -> <|"Value" -> 7, "Options" -> <||>|>, 
         "FeatureFraction" -> <|"Value" -> 1, "Options" -> <||>|>, 
         "BaggingFraction" -> <|"Value" -> 1, "Options" -> <||>|>, 
         "BaggingFrequency" -> <|"Value" -> 0, "Options" -> <||>|>, 
         "MinGainToSplit" -> <|"Value" -> 0, "Options" -> <||>|>, 
         "L1Regularization" -> <|"Value" -> 0, "Options" -> <||>|>, 
         "L2Regularization" -> <|"Value" -> 0, "Options" -> <||>|>, 
         "LossFunction" -> <|
          "Value" -> "MeanSquaredError", "Options" -> <||>|>|>|>, 
     "TrainingInformation" -> <|
      "Reporting" -> None, "TrainingFunction" -> Predict, "EMIterations" -> 
       Missing["KeyAbsent", "EMIterations"], "ProcessorEntropyShift" -> 
       1.1315338076510881`, "PreprocessingTime" -> 0.526308`6.172784964937246,
        "LossName" -> "StandardDeviation", "BestModelInformation" -> 
       Dataset[<|
         "MeanCrossEntropy" -> Around[166.7514637699593, 20.43530110622962], 
          "StandardDeviation" -> 
          Around[0.6305619692276822, 0.07309467303093932], "EvaluationTime" -> 
          0.000057123896530042826`, "TestSize" -> 748, "ModelMemory" -> 
          130808, "ModelUtility" -> -0.25494691125302194`, "Round" -> 3, 
          "Iteration" -> 18, "TimeStamp" -> 
          3.899873552348434`16.3436255150563*^9, "TrainingSize" -> 150, 
          "TrainingTime" -> 0.15848931924611134`, "TrainingMemory" -> 728840, 
          "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
            Around[166.7514637699593, 14.44993998780392]}, 
          "StandardDeviationHistory" -> {
            Around[0.6305619692276822, 0.05168573896879064]}, 
          "IterationHistory" -> {18}, 
          "TimeStampHistory" -> {3.899873552348434`16.3436255150563*^9}, 
          "Configuration" -> {
           "GradientBoostedTrees", "BoostingMethod" -> "Gradient", 
            MaxTrainingRounds -> 50, "LeavesNumber" -> 500, "LearningRate" -> 
            0.2, ValidationSet -> Automatic, "MaxBinNumber" -> 255, 
            "ThreadNumber" -> 4, "MaxDepth" -> 6, "LeafSize" -> 7, 
            "FeatureFraction" -> 1, "BaggingFraction" -> 1, 
            "BaggingFrequency" -> 0, "MinGainToSplit" -> 0, 
            "L1Regularization" -> 0, "L2Regularization" -> 0, "LossFunction" -> 
            "MeanSquaredError"}, "FinalTrainingSize" -> 898|>, 
         TypeSystem`Assoc[
          TypeSystem`Atom[String], TypeSystem`AnyType, 19], <||>], 
       "Configurations" -> 
       Dataset[<|<|
           "Value" -> "GradientBoostedTrees", 
            "Options" -> <|
             "BoostingMethod" -> <|"Value" -> "Gradient"|>, 
              MaxTrainingRounds -> <|"Value" -> 50|>, 
              "LeavesNumber" -> <|"Value" -> 13|>, 
              "LearningRate" -> <|"Value" -> 0.1|>, 
              ValidationSet -> <|"Value" -> Automatic|>, 
              "MaxBinNumber" -> <|"Value" -> 255|>, 
              "ThreadNumber" -> <|"Value" -> 4|>, 
              "MaxDepth" -> <|"Value" -> 6|>, 
              "LeafSize" -> <|"Value" -> 200|>, 
              "FeatureFraction" -> <|"Value" -> 1|>, 
              "BaggingFraction" -> <|"Value" -> 1|>, 
              "BaggingFrequency" -> <|"Value" -> 0|>, 
              "MinGainToSplit" -> <|"Value" -> 0|>, 
              "L1Regularization" -> <|"Value" -> 0|>, 
              "L2Regularization" -> <|"Value" -> 0|>, 
              "LossFunction" -> <|"Value" -> "MeanSquaredError"|>|>|> -> <|
           "Experiments" -> {<|
              "MeanCrossEntropy" -> 
               Around[3.389021789149366, 0.008871855431902978], 
               "StandardDeviation" -> 
               Around[3.40271346380175, 0.16147900297776024`], 
               "EvaluationTime" -> 0.00003778809218869826, "TestSize" -> 300, 
               "ModelMemory" -> 20776, "ModelUtility" -> -1.9271782356868528`,
                "Round" -> 1, "Iteration" -> 1, "TimeStamp" -> 
               3.89987354891468`16.343625514673917*^9, "TrainingSize" -> 9, 
               "TrainingTime" -> 0.03981071705534971, "TrainingMemory" -> 
               80936, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[3.389021789149366, 0.006273349137605302]}, 
               "StandardDeviationHistory" -> {
                 Around[3.40271346380175, 0.11418289802481696`]}, 
               "IterationHistory" -> {1}, 
               "TimeStampHistory" -> {
                3.89987354891468`16.343625514673917*^9}|>, <|
              "MeanCrossEntropy" -> 
               Around[3.9290831359751994`, 0.012171798913900942`], 
               "StandardDeviation" -> 
               Around[3.1046025721123995`, 0.11685782928622997`], 
               "EvaluationTime" -> 0.00012649110640673515`, "TestSize" -> 300,
                "ModelMemory" -> 20776, 
               "ModelUtility" -> -1.8335442563966644`, "Round" -> 2, 
               "Iteration" -> 17, "TimeStamp" -> 
               3.899873551696285`16.343625514983678*^9, "TrainingSize" -> 40, 
               "TrainingTime" -> 0.25118864315095796`, "TrainingMemory" -> 
               147928, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[3.9290831359751994`, 0.00860676155125841]}, 
               "StandardDeviationHistory" -> {
                 Around[3.1046025721123995`, 0.08263096352303313]}, 
               "IterationHistory" -> {17}, 
               "TimeStampHistory" -> {
                3.899873551696285`16.343625514983678*^9}|>}, 
            "PredictedPerformances" -> <|
             "EvaluationTime" -> 0.00012649110640673515`, "ModelMemory" -> 
              20776, "StandardDeviation" -> 
              Around[3.1046025721123995`, 0.11685782928622997`], 
              "TrainingMemory" -> 147928, "TrainingTime" -> 
              2.2954847325509524`|>, "Index" -> 1|>, <|
           "Value" -> "GradientBoostedTrees", 
            "Options" -> <|
             "BoostingMethod" -> <|"Value" -> "Gradient"|>, 
              MaxTrainingRounds -> <|"Value" -> 50|>, 
              "LeavesNumber" -> <|"Value" -> 25|>, 
              "LearningRate" -> <|"Value" -> 0.1|>, 
              ValidationSet -> <|"Value" -> Automatic|>, 
              "MaxBinNumber" -> <|"Value" -> 255|>, 
              "ThreadNumber" -> <|"Value" -> 4|>, 
              "MaxDepth" -> <|"Value" -> 6|>, "LeafSize" -> <|"Value" -> 3|>, 
              "FeatureFraction" -> <|"Value" -> 1|>, 
              "BaggingFraction" -> <|"Value" -> 1|>, 
              "BaggingFrequency" -> <|"Value" -> 0|>, 
              "MinGainToSplit" -> <|"Value" -> 0|>, 
              "L1Regularization" -> <|"Value" -> 0|>, 
              "L2Regularization" -> <|"Value" -> 0|>, 
              "LossFunction" -> <|"Value" -> "MeanSquaredError"|>|>|> -> <|
           "Experiments" -> {<|
              "MeanCrossEntropy" -> 
               Around[2.403986039377802, 0.19022015845755527`], 
               "StandardDeviation" -> 
               Around[1.7671715140805127`, 0.11931229367487566`], 
               "EvaluationTime" -> 0.00007943282347242814, "TestSize" -> 200, 
               "ModelMemory" -> 116640, 
               "ModelUtility" -> -1.2759629061686275`, "Round" -> 1, 
               "Iteration" -> 4, "TimeStamp" -> 
               3.899873549081317`16.343625514692476*^9, "TrainingSize" -> 9, 
               "TrainingTime" -> 0.05011872336272722, "TrainingMemory" -> 
               321256, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[2.403986039377802, 0.13450596396371692`]}, 
               "StandardDeviationHistory" -> {
                 Around[1.7671715140805127`, 0.08436653193642539]}, 
               "IterationHistory" -> {4}, 
               "TimeStampHistory" -> {
                3.899873549081317`16.343625514692476*^9}|>, <|
              "MeanCrossEntropy" -> 
               Around[3.188139377770767, 0.5329980796899414], 
               "StandardDeviation" -> 
               Around[0.8542137635347231, 0.1101081909576724], 
               "EvaluationTime" -> 0.0000630957344480193, "TestSize" -> 300, 
               "ModelMemory" -> 126888, "ModelUtility" -> -0.5610504906139352,
                "Round" -> 2, "Iteration" -> 7, "TimeStamp" -> 
               3.899873549242335`16.3436255147104*^9, "TrainingSize" -> 40, 
               "TrainingTime" -> 0.07943282347242814, "TrainingMemory" -> 
               554576, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[3.188139377770767, 0.3768865565081654]}, 
               "StandardDeviationHistory" -> {
                 Around[0.8542137635347231, 0.07785824849035344]}, 
               "IterationHistory" -> {7}, 
               "TimeStampHistory" -> {
                3.899873549242335`16.3436255147104*^9}|>, <|
              "MeanCrossEntropy" -> 
               Around[146.51905224155507`, 51.17268881769074], 
               "StandardDeviation" -> 
               Around[0.7292891673921141, 0.2203761069809667], 
               "EvaluationTime" -> 0.001, "TestSize" -> 100, "ModelMemory" -> 
               149400, "ModelUtility" -> -0.43690225037355235`, "Round" -> 3, 
               "Iteration" -> 14, "TimeStamp" -> 
               3.899873550640882`16.343625514866147*^9, "TrainingSize" -> 150,
                "TrainingTime" -> 0.25118864315095796`, "TrainingMemory" -> 
               995416, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[146.51905224155507`, 36.184555274538134`]}, 
               "StandardDeviationHistory" -> {
                 Around[0.7292891673921141, 0.1558294396577336]}, 
               "IterationHistory" -> {14}, 
               "TimeStampHistory" -> {
                3.899873550640882`16.343625514866147*^9}|>, <|
              "MeanCrossEntropy" -> 
               Around[3.924776340218847, 1.2351487837367763`], 
               "StandardDeviation" -> 
               Around[0.636941826761706, 0.19507440864768436`], 
               "EvaluationTime" -> 0.00007010637160891033, "TestSize" -> 180, 
               "ModelMemory" -> 149464, 
               "ModelUtility" -> -0.30154738084720345`, "Round" -> 4, 
               "Iteration" -> 23, "TimeStamp" -> 
               3.899873553487607`16.343625515183163*^9, "TrainingSize" -> 718,
                "TrainingTime" -> 0.15848931924611134`, "TrainingMemory" -> 
               1445264, "ExperimentCount" -> 1, 
               "MeanCrossEntropyHistory" -> {
                 Around[3.924776340218847, 0.8733820807545909]}, 
               "StandardDeviationHistory" -> {
                 Around[0.636941826761706, 0.1379384371907333]}, 
               "IterationHistory" -> {23}, 
               "TimeStampHistory" -> {
                3.899873553487607`16.343625515183163*^9}|>}, 
            "PredictedPerformances" -> <|
             "EvaluationTime" -> 0.00007010637160891033, "ModelMemory" -> 
              149464, "StandardDeviation" -> 
              Around[0.636941826761706, 0.19507440864768436`], 
              "TrainingMemory" -> 1445264, "TrainingTime" -> 
              0.24834074102708373`|>, "Index" -> 2|>, <|
           "Value" -> "GradientBoostedTrees", 
            "Options" -> <|
             "BoostingMethod" -> <|"Value" -> "Gradient"|>, 
              MaxTrainingRounds -> <|"Value" -> 50|>, 
              "LeavesNumber" -> <|"Value" -> 250|>, 
              "LearningRate" -> <|"Value" -> 0.1|>, 
              ValidationSet -> <|"Value" -> Automatic|>, 
              "MaxBinNumber" -> <|"Value" -> 255|>, 
              "ThreadNumber" -> <|"Value" -> 4|>, 
              "MaxDepth" -> <|"Value" -> 6|>, "LeafSize" -> <|"Value" -> 35|>,
               "FeatureFraction" -> <|"Value" -> 1|>, 
              "BaggingFraction" -> <|"Value" -> 1|>, 
              "BaggingFrequency" -> <|"Value" -> 0|>, 
              "MinGainToSplit" -> <|"Value" -> 0|>, 
              "L1Regularization" -> <|"Value" -> 0|>, 
              "L2Regularization" -> <|"Value" -> 0|>, 
              "LossFunction" -> <|"Value" -> "MeanSquaredError"|>|>|> -> <|
           "Experiments" -> {<|
              "MeanCrossEntropy" -> 
               Around[3.9291388560250993`, 0.009428599085194403], 
               "StandardDeviation" -> 
               Around[3.101886545377339, 0.09060606443952793], 
               "EvaluationTime" -> 0.00004787516460259518, "TestSize" -> 500, 
               "ModelMemory" -> 20776, "ModelUtility" -> -1.83099411148613, 
               "Round" -> 2, "Iteration" -> 11, "TimeStamp" -> 
               3.899873550363522`16.343625514835264*^9, "TrainingSize" -> 40, 
               "TrainingTime" -> 0.03981071705534971, "TrainingMemory" -> 
               118048, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[3.9291388560250993`, 0.00666702635023024]}, 
               "StandardDeviationHistory" -> {
                 Around[3.101886545377339, 0.0640681625818155]}, 
               "IterationHistory" -> {11}, 
               "TimeStampHistory" -> {
                3.899873550363522`16.343625514835264*^9}|>}, 
            "PredictedPerformances" -> <|
             "EvaluationTime" -> 0.00004787516460259518, "ModelMemory" -> 
              20776, "StandardDeviation" -> 
              Around[3.101886545377339, 0.09060606443952793], 
              "TrainingMemory" -> 118048, "TrainingTime" -> 
              0.39731095621239015`|>, "Index" -> 3|>, <|
           "Value" -> "GradientBoostedTrees", 
            "Options" -> <|
             "BoostingMethod" -> <|"Value" -> "Gradient"|>, 
              MaxTrainingRounds -> <|"Value" -> 50|>, 
              "LeavesNumber" -> <|"Value" -> 110|>, 
              "LearningRate" -> <|"Value" -> 0.2|>, 
              ValidationSet -> <|"Value" -> Automatic|>, 
              "MaxBinNumber" -> <|"Value" -> 255|>, 
              "ThreadNumber" -> <|"Value" -> 4|>, 
              "MaxDepth" -> <|"Value" -> 6|>, "LeafSize" -> <|"Value" -> 15|>,
               "FeatureFraction" -> <|"Value" -> 1|>, 
              "BaggingFraction" -> <|"Value" -> 1|>, 
              "BaggingFrequency" -> <|"Value" -> 0|>, 
              "MinGainToSplit" -> <|"Value" -> 0|>, 
              "L1Regularization" -> <|"Value" -> 0|>, 
              "L2Regularization" -> <|"Value" -> 0|>, 
              "LossFunction" -> <|"Value" -> "MeanSquaredError"|>|>|> -> <|
           "Experiments" -> {<|
              "MeanCrossEntropy" -> 
               Around[3.3881820557492195`, 0.010821281544393855`], 
               "StandardDeviation" -> 
               Around[3.372911575958258, 0.19676345441568563`], 
               "EvaluationTime" -> 0.00017900777537149963`, "TestSize" -> 200,
                "ModelMemory" -> 20776, 
               "ModelUtility" -> -1.9205348329880811`, "Round" -> 1, 
               "Iteration" -> 9, "TimeStamp" -> 
               3.899873549396915`16.343625514727616*^9, "TrainingSize" -> 9, 
               "TrainingTime" -> 0.5011872336272722, "TrainingMemory" -> 
               268904, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[3.3881820557492195`, 0.00765180156116973]}, 
               "StandardDeviationHistory" -> {
                 Around[3.372911575958258, 0.13913277290702142`]}, 
               "IterationHistory" -> {9}, 
               "TimeStampHistory" -> {
                3.899873549396915`16.343625514727616*^9}|>}, 
            "PredictedPerformances" -> <|
             "EvaluationTime" -> 0.00017900777537149963`, "ModelMemory" -> 
              20776, "StandardDeviation" -> 
              Around[3.372911575958258, 0.19676345441568563`], 
              "TrainingMemory" -> 268904, "TrainingTime" -> 
              5.001848591600178|>, "Index" -> 4|>, <|
           "Value" -> "GradientBoostedTrees", 
            "Options" -> <|
             "BoostingMethod" -> <|"Value" -> "Gradient"|>, 
              MaxTrainingRounds -> <|"Value" -> 50|>, 
              "LeavesNumber" -> <|"Value" -> 500|>, 
              "LearningRate" -> <|"Value" -> 0.2|>, 
              ValidationSet -> <|"Value" -> Automatic|>, 
              "MaxBinNumber" -> <|"Value" -> 255|>, 
              "ThreadNumber" -> <|"Value" -> 4|>, 
              "MaxDepth" -> <|"Value" -> 6|>, "LeafSize" -> <|"Value" -> 7|>, 
              "FeatureFraction" -> <|"Value" -> 1|>, 
              "BaggingFraction" -> <|"Value" -> 1|>, 
              "BaggingFrequency" -> <|"Value" -> 0|>, 
              "MinGainToSplit" -> <|"Value" -> 0|>, 
              "L1Regularization" -> <|"Value" -> 0|>, 
              "L2Regularization" -> <|"Value" -> 0|>, 
              "LossFunction" -> <|"Value" -> "MeanSquaredError"|>|>|> -> <|
           "Experiments" -> {<|
              "MeanCrossEntropy" -> 
               Around[3.3888470402523296`, 0.006870319322222106], 
               "StandardDeviation" -> 
               Around[3.396586505948905, 0.1252530271176797], 
               "EvaluationTime" -> 0.000025118864315095795`, "TestSize" -> 
               500, "ModelMemory" -> 20776, 
               "ModelUtility" -> -1.9232777243640409`, "Round" -> 1, 
               "Iteration" -> 3, "TimeStamp" -> 
               3.899873549034487`16.34362551468726*^9, "TrainingSize" -> 9, 
               "TrainingTime" -> 0.025118864315095794`, "TrainingMemory" -> 
               80872, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[3.3888470402523296`, 0.004858049381660216]}, 
               "StandardDeviationHistory" -> {
                 Around[3.396586505948905, 0.08856726483905382]}, 
               "IterationHistory" -> {3}, 
               "TimeStampHistory" -> {
                3.899873549034487`16.34362551468726*^9}|>, <|
              "MeanCrossEntropy" -> 
               Around[1.5561023166000783`, 0.2846264463998506], 
               "StandardDeviation" -> 
               Around[0.8804783631457624, 0.134972247351009], 
               "EvaluationTime" -> 0.00011896107135926975`, "TestSize" -> 200,
                "ModelMemory" -> 118704, 
               "ModelUtility" -> -0.5960784226080982, "Round" -> 2, 
               "Iteration" -> 12, "TimeStamp" -> 
               3.899873550436276`16.343625514843364*^9, "TrainingSize" -> 40, 
               "TrainingTime" -> 0.12589254117941673`, "TrainingMemory" -> 
               403064, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[1.5561023166000783`, 0.20126129035436374`]}, 
               "StandardDeviationHistory" -> {
                 Around[0.8804783631457624, 0.09543979137388647]}, 
               "IterationHistory" -> {12}, 
               "TimeStampHistory" -> {
                3.899873550436276`16.343625514843364*^9}|>, <|
              "MeanCrossEntropy" -> 
               Around[166.7514637699593, 20.43530110622962], 
               "StandardDeviation" -> 
               Around[0.6305619692276822, 0.07309467303093932], 
               "EvaluationTime" -> 0.000057123896530042826`, "TestSize" -> 
               748, "ModelMemory" -> 130808, 
               "ModelUtility" -> -0.25494691125302194`, "Round" -> 3, 
               "Iteration" -> 18, "TimeStamp" -> 
               3.899873552348434`16.3436255150563*^9, "TrainingSize" -> 150, 
               "TrainingTime" -> 0.15848931924611134`, "TrainingMemory" -> 
               728840, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[166.7514637699593, 14.44993998780392]}, 
               "StandardDeviationHistory" -> {
                 Around[0.6305619692276822, 0.05168573896879064]}, 
               "IterationHistory" -> {18}, 
               "TimeStampHistory" -> {
                3.899873552348434`16.3436255150563*^9}|>, <|
              "MeanCrossEntropy" -> 
               Around[19.33537466675155, 4.9278534681466315`], 
               "StandardDeviation" -> 
               Around[0.6495942984803915, 0.19050923250899002`], 
               "EvaluationTime" -> 0.00009968490192912675, "TestSize" -> 180, 
               "ModelMemory" -> 158504, "ModelUtility" -> -0.3187665201635844,
                "Round" -> 4, "Iteration" -> 22, "TimeStamp" -> 
               3.899873552791987`16.3436255151057*^9, "TrainingSize" -> 718, 
               "TrainingTime" -> 0.19952623149688792`, "TrainingMemory" -> 
               1572960, "ExperimentCount" -> 1, 
               "MeanCrossEntropyHistory" -> {
                 Around[19.33537466675155, 3.4845186040201295`]}, 
               "StandardDeviationHistory" -> {
                 Around[0.6495942984803915, 0.1347103701857515]}, 
               "IterationHistory" -> {22}, 
               "TimeStampHistory" -> {
                3.899873552791987`16.3436255151057*^9}|>}, 
            "PredictedPerformances" -> <|
             "EvaluationTime" -> 0.00009968490192912675, "ModelMemory" -> 
              158504, "StandardDeviation" -> 
              Around[0.6495942984803915, 0.19050923250899002`], 
              "TrainingMemory" -> 1572960, "TrainingTime" -> 
              0.27466559952986647`|>, "Index" -> 5|>, <|
           "Value" -> "GradientBoostedTrees", 
            "Options" -> <|
             "BoostingMethod" -> <|"Value" -> "Gradient"|>, 
              MaxTrainingRounds -> <|"Value" -> 50|>, 
              "LeavesNumber" -> <|"Value" -> 250|>, 
              "LearningRate" -> <|"Value" -> 0.004|>, 
              ValidationSet -> <|"Value" -> Automatic|>, 
              "MaxBinNumber" -> <|"Value" -> 255|>, 
              "ThreadNumber" -> <|"Value" -> 4|>, 
              "MaxDepth" -> <|"Value" -> 6|>, "LeafSize" -> <|"Value" -> 35|>,
               "FeatureFraction" -> <|"Value" -> 1|>, 
              "BaggingFraction" -> <|"Value" -> 1|>, 
              "BaggingFrequency" -> <|"Value" -> 0|>, 
              "MinGainToSplit" -> <|"Value" -> 0|>, 
              "L1Regularization" -> <|"Value" -> 0|>, 
              "L2Regularization" -> <|"Value" -> 0|>, 
              "LossFunction" -> <|"Value" -> "MeanSquaredError"|>|>|> -> <|
           "Experiments" -> {<|
              "MeanCrossEntropy" -> 
               Around[3.3885846222493474`, 0.007674558381534099], 
               "StandardDeviation" -> 
               Around[3.38712621571961, 0.14002987564384972`], 
               "EvaluationTime" -> 0.00003204378364345327, "TestSize" -> 400, 
               "ModelMemory" -> 20776, "ModelUtility" -> -1.9213748083733453`,
                "Round" -> 1, "Iteration" -> 2, "TimeStamp" -> 
               3.899873548978886`16.343625514681065*^9, "TrainingSize" -> 9, 
               "TrainingTime" -> 0.03162277660168379, "TrainingMemory" -> 
               81000, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[3.3885846222493474`, 0.005426732274194816]}, 
               "StandardDeviationHistory" -> {
                 Around[3.38712621571961, 0.0990160746364751]}, 
               "IterationHistory" -> {2}, 
               "TimeStampHistory" -> {
                3.899873548978886`16.343625514681065*^9}|>, <|
              "MeanCrossEntropy" -> 
               Around[3.928768369522209, 0.014903151033027435`], 
               "StandardDeviation" -> 
               Around[3.065413459623383, 0.14309050765151765`], 
               "EvaluationTime" -> 0.00019783029474463302`, "TestSize" -> 200,
                "ModelMemory" -> 20776, 
               "ModelUtility" -> -1.8226337258590577`, "Round" -> 2, 
               "Iteration" -> 16, "TimeStamp" -> 
               3.89987355152474`16.34362551496457*^9, "TrainingSize" -> 40, 
               "TrainingTime" -> 0.1, "TrainingMemory" -> 263080, 
               "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[3.928768369522209, 0.010538119156501]}, 
               "StandardDeviationHistory" -> {
                 Around[3.065413459623383, 0.1011802682838137]}, 
               "IterationHistory" -> {16}, 
               "TimeStampHistory" -> {
                3.89987355152474`16.34362551496457*^9}|>}, 
            "PredictedPerformances" -> <|
             "EvaluationTime" -> 0.00019783029474463302`, "ModelMemory" -> 
              20776, "StandardDeviation" -> 
              Around[3.065413459623383, 0.14309050765151765`], 
              "TrainingMemory" -> 263080, "TrainingTime" -> 
              0.9296227766016838|>, "Index" -> 6|>, <|
           "Value" -> "GradientBoostedTrees", 
            "Options" -> <|
             "BoostingMethod" -> <|"Value" -> "Gradient"|>, 
              MaxTrainingRounds -> <|"Value" -> 50|>, 
              "LeavesNumber" -> <|"Value" -> 13|>, 
              "LearningRate" -> <|"Value" -> 0.04|>, 
              ValidationSet -> <|"Value" -> Automatic|>, 
              "MaxBinNumber" -> <|"Value" -> 255|>, 
              "ThreadNumber" -> <|"Value" -> 4|>, 
              "MaxDepth" -> <|"Value" -> 6|>, "LeafSize" -> <|"Value" -> 35|>,
               "FeatureFraction" -> <|"Value" -> 1|>, 
              "BaggingFraction" -> <|"Value" -> 1|>, 
              "BaggingFrequency" -> <|"Value" -> 0|>, 
              "MinGainToSplit" -> <|"Value" -> 0|>, 
              "L1Regularization" -> <|"Value" -> 0|>, 
              "L2Regularization" -> <|"Value" -> 0|>, 
              "LossFunction" -> <|"Value" -> "MeanSquaredError"|>|>|> -> <|
           "Experiments" -> {<|
              "MeanCrossEntropy" -> 
               Around[3.9291388560250993`, 0.009428599085194403], 
               "StandardDeviation" -> 
               Around[3.101886545377339, 0.09060606443952793], 
               "EvaluationTime" -> 0.000025118864315095795`, "TestSize" -> 
               500, "ModelMemory" -> 20776, 
               "ModelUtility" -> -1.8309940887298297`, "Round" -> 2, 
               "Iteration" -> 10, "TimeStamp" -> 
               3.899873550303281`16.34362551482855*^9, "TrainingSize" -> 40, 
               "TrainingTime" -> 0.03981071705534971, "TrainingMemory" -> 
               118176, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[3.9291388560250993`, 0.00666702635023024]}, 
               "StandardDeviationHistory" -> {
                 Around[3.101886545377339, 0.0640681625818155]}, 
               "IterationHistory" -> {10}, 
               "TimeStampHistory" -> {
                3.899873550303281`16.34362551482855*^9}|>}, 
            "PredictedPerformances" -> <|
             "EvaluationTime" -> 0.000025118864315095795`, "ModelMemory" -> 
              20776, "StandardDeviation" -> 
              Around[3.101886545377339, 0.09060606443952793], 
              "TrainingMemory" -> 118176, "TrainingTime" -> 
              0.39731095621239015`|>, "Index" -> 7|>, <|
           "Value" -> "GradientBoostedTrees", 
            "Options" -> <|
             "BoostingMethod" -> <|"Value" -> "Gradient"|>, 
              MaxTrainingRounds -> <|"Value" -> 50|>, 
              "LeavesNumber" -> <|"Value" -> 60|>, 
              "LearningRate" -> <|"Value" -> 0.02|>, 
              ValidationSet -> <|"Value" -> Automatic|>, 
              "MaxBinNumber" -> <|"Value" -> 255|>, 
              "ThreadNumber" -> <|"Value" -> 4|>, 
              "MaxDepth" -> <|"Value" -> 6|>, "LeafSize" -> <|"Value" -> 35|>,
               "FeatureFraction" -> <|"Value" -> 1|>, 
              "BaggingFraction" -> <|"Value" -> 1|>, 
              "BaggingFrequency" -> <|"Value" -> 0|>, 
              "MinGainToSplit" -> <|"Value" -> 0|>, 
              "L1Regularization" -> <|"Value" -> 0|>, 
              "L2Regularization" -> <|"Value" -> 0|>, 
              "LossFunction" -> <|"Value" -> "MeanSquaredError"|>|>|> -> <|
           "Experiments" -> {<|
              "MeanCrossEntropy" -> 
               Around[3.3885846222493474`, 0.007674558381534099], 
               "StandardDeviation" -> 
               Around[3.38712621571961, 0.14002987564384972`], 
               "EvaluationTime" -> 0.000025118864315095795`, "TestSize" -> 
               400, "ModelMemory" -> 20776, 
               "ModelUtility" -> -1.921374801448426, "Round" -> 1, 
               "Iteration" -> 5, "TimeStamp" -> 
               3.899873549155619`16.343625514700747*^9, "TrainingSize" -> 9, 
               "TrainingTime" -> 0.01995262314968879, "TrainingMemory" -> 
               80936, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[3.3885846222493474`, 0.005426732274194816]}, 
               "StandardDeviationHistory" -> {
                 Around[3.38712621571961, 0.0990160746364751]}, 
               "IterationHistory" -> {5}, 
               "TimeStampHistory" -> {
                3.899873549155619`16.343625514700747*^9}|>, <|
              "MeanCrossEntropy" -> 
               Around[3.929082229443, 0.010540846415376181`], 
               "StandardDeviation" -> 
               Around[3.094835618840155, 0.10111245581263303`], 
               "EvaluationTime" -> 0.00005519021774611702, "TestSize" -> 400, 
               "ModelMemory" -> 20776, "ModelUtility" -> -1.8294064373213508`,
                "Round" -> 2, "Iteration" -> 13, "TimeStamp" -> 
               3.899873550585644`16.343625514859998*^9, "TrainingSize" -> 40, 
               "TrainingTime" -> 0.025118864315095794`, "TrainingMemory" -> 
               118288, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[3.929082229443, 0.007453503979758408]}, 
               "StandardDeviationHistory" -> {
                 Around[3.094835618840155, 0.07149730316753795]}, 
               "IterationHistory" -> {13}, 
               "TimeStampHistory" -> {
                3.899873550585644`16.343625514859998*^9}|>, <|
              "MeanCrossEntropy" -> 
               Around[1.7642346310420787`, 0.027154476954063183`], 
               "StandardDeviation" -> 
               Around[1.387472766671596, 0.05605500976741385], 
               "EvaluationTime" -> 0.000048728601512476335`, "TestSize" -> 
               748, "ModelMemory" -> 116856, 
               "ModelUtility" -> -1.0287014382027566`, "Round" -> 3, 
               "Iteration" -> 19, "TimeStamp" -> 
               3.899873552558416`16.343625515079683*^9, "TrainingSize" -> 150,
                "TrainingTime" -> 0.0630957344480193, "TrainingMemory" -> 
               450864, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[1.7642346310420787`, 0.019201114793791902`]}, 
               "StandardDeviationHistory" -> {
                 Around[1.387472766671596, 0.03963687752601649]}, 
               "IterationHistory" -> {19}, 
               "TimeStampHistory" -> {
                3.899873552558416`16.343625515079683*^9}|>, <|
              "MeanCrossEntropy" -> 
               Around[1.6502994428668185`, 0.06339760998390247], 
               "StandardDeviation" -> 
               Around[1.3050100599010122`, 0.10807599252821228`], 
               "EvaluationTime" -> 0.00012310280760785037`, "TestSize" -> 180,
                "ModelMemory" -> 132200, 
               "ModelUtility" -> -0.9758099876176507, "Round" -> 4, 
               "Iteration" -> 24, "TimeStamp" -> 
               3.899873553672003`16.343625515203698*^9, "TrainingSize" -> 718,
                "TrainingTime" -> 0.12589254117941673`, "TrainingMemory" -> 
               1192680, "ExperimentCount" -> 1, 
               "MeanCrossEntropyHistory" -> {
                 Around[1.6502994428668185`, 0.044828879930637396`]}, 
               "StandardDeviationHistory" -> {
                 Around[1.3050100599010122`, 0.07642126720016554]}, 
               "IterationHistory" -> {24}, 
               "TimeStampHistory" -> {
                3.899873553672003`16.343625515203698*^9}|>}, 
            "PredictedPerformances" -> <|
             "EvaluationTime" -> 0.00012310280760785037`, "ModelMemory" -> 
              132200, "StandardDeviation" -> 
              Around[1.3050100599010122`, 0.10807599252821228`], 
              "TrainingMemory" -> 1192680, "TrainingTime" -> 
              0.17740596852450247`|>, "Index" -> 8|>, <|
           "Value" -> "GradientBoostedTrees", 
            "Options" -> <|
             "BoostingMethod" -> <|"Value" -> "Gradient"|>, 
              MaxTrainingRounds -> <|"Value" -> 50|>, 
              "LeavesNumber" -> <|"Value" -> 110|>, 
              "LearningRate" -> <|"Value" -> 0.1|>, 
              ValidationSet -> <|"Value" -> Automatic|>, 
              "MaxBinNumber" -> <|"Value" -> 255|>, 
              "ThreadNumber" -> <|"Value" -> 4|>, 
              "MaxDepth" -> <|"Value" -> 6|>, 
              "LeafSize" -> <|"Value" -> 200|>, 
              "FeatureFraction" -> <|"Value" -> 1|>, 
              "BaggingFraction" -> <|"Value" -> 1|>, 
              "BaggingFrequency" -> <|"Value" -> 0|>, 
              "MinGainToSplit" -> <|"Value" -> 0|>, 
              "L1Regularization" -> <|"Value" -> 0|>, 
              "L2Regularization" -> <|"Value" -> 0|>, 
              "LossFunction" -> <|"Value" -> "MeanSquaredError"|>|>|> -> <|
           "Experiments" -> {<|
              "MeanCrossEntropy" -> 
               Around[3.9290349590088676`, 0.009427933857107443], 
               "StandardDeviation" -> 
               Around[3.101856693546047, 0.09059456716138155], 
               "EvaluationTime" -> 0.000026419646772413396`, "TestSize" -> 
               500, "ModelMemory" -> 20776, 
               "ModelUtility" -> -1.8309837851034867`, "Round" -> 2, 
               "Iteration" -> 8, "TimeStamp" -> 
               3.899873549346175`16.343625514721964*^9, "TrainingSize" -> 40, 
               "TrainingTime" -> 0.025118864315095794`, "TrainingMemory" -> 
               118048, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[3.9290349590088676`, 0.0066665559629389155`]}, 
               "StandardDeviationHistory" -> {
                 Around[3.101856693546047, 0.064060032778473]}, 
               "IterationHistory" -> {8}, 
               "TimeStampHistory" -> {
                3.899873549346175`16.343625514721964*^9}|>, <|
              "MeanCrossEntropy" -> 
               Around[2.593423068053555, 0.017011299767263195`], 
               "StandardDeviation" -> 
               Around[3.099309344872487, 0.07266786712790146], 
               "EvaluationTime" -> 0.000014302054752268874`, "TestSize" -> 
               748, "ModelMemory" -> 20776, 
               "ModelUtility" -> -1.8290162179042597`, "Round" -> 3, 
               "Iteration" -> 20, "TimeStamp" -> 
               3.899873552672815`16.343625515092423*^9, "TrainingSize" -> 150,
                "TrainingTime" -> 0.025118864315095794`, "TrainingMemory" -> 
               270496, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[2.593423068053555, 0.012028805422228943`]}, 
               "StandardDeviationHistory" -> {
                 Around[3.099309344872487, 0.05138394162050213]}, 
               "IterationHistory" -> {20}, 
               "TimeStampHistory" -> {
                3.899873552672815`16.343625515092423*^9}|>, <|
              "MeanCrossEntropy" -> 
               Around[0.9059616566966484, 0.09208988708673475], 
               "StandardDeviation" -> 
               Around[0.759198574316312, 0.159338692297633], "EvaluationTime" -> 
               0.0009778403585674663, "TestSize" -> 180, "ModelMemory" -> 
               116496, "ModelUtility" -> -0.458797215659251, "Round" -> 4, 
               "Iteration" -> 25, "TimeStamp" -> 
               3.899873553818504`16.343625515220012*^9, "TrainingSize" -> 718,
                "TrainingTime" -> 0.1, "TrainingMemory" -> 1034632, 
               "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[0.9059616566966484, 0.06511738363773362]}, 
               "StandardDeviationHistory" -> {
                 Around[0.759198574316312, 0.112669469829053]}, 
               "IterationHistory" -> {25}, 
               "TimeStampHistory" -> {
                3.899873553818504`16.343625515220012*^9}|>}, 
            "PredictedPerformances" -> <|
             "EvaluationTime" -> 0.0009778403585674663, "ModelMemory" -> 
              116496, "StandardDeviation" -> 
              Around[0.759198574316312, 0.159338692297633], "TrainingMemory" -> 
              1034632, "TrainingTime" -> 0.15018850219810417`|>, "Index" -> 
            9|>, <|"Value" -> "GradientBoostedTrees", 
            "Options" -> <|
             "BoostingMethod" -> <|"Value" -> "Gradient"|>, 
              MaxTrainingRounds -> <|"Value" -> 50|>, 
              "LeavesNumber" -> <|"Value" -> 60|>, 
              "LearningRate" -> <|"Value" -> 0.04|>, 
              ValidationSet -> <|"Value" -> Automatic|>, 
              "MaxBinNumber" -> <|"Value" -> 255|>, 
              "ThreadNumber" -> <|"Value" -> 4|>, 
              "MaxDepth" -> <|"Value" -> 6|>, 
              "LeafSize" -> <|"Value" -> 200|>, 
              "FeatureFraction" -> <|"Value" -> 1|>, 
              "BaggingFraction" -> <|"Value" -> 1|>, 
              "BaggingFrequency" -> <|"Value" -> 0|>, 
              "MinGainToSplit" -> <|"Value" -> 0|>, 
              "L1Regularization" -> <|"Value" -> 0|>, 
              "L2Regularization" -> <|"Value" -> 0|>, 
              "LossFunction" -> <|"Value" -> "MeanSquaredError"|>|>|> -> <|
           "Experiments" -> {<|
              "MeanCrossEntropy" -> 
               Around[3.3888470402523296`, 0.006870319322222106], 
               "StandardDeviation" -> 
               Around[3.396586505948905, 0.1252530271176797], 
               "EvaluationTime" -> 0.000026419646772413396`, "TestSize" -> 
               500, "ModelMemory" -> 20776, 
               "ModelUtility" -> -1.9232777256648232`, "Round" -> 1, 
               "Iteration" -> 6, "TimeStamp" -> 
               3.899873549197646`16.34362551470543*^9, "TrainingSize" -> 9, 
               "TrainingTime" -> 0.01995262314968879, "TrainingMemory" -> 
               80936, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[3.3888470402523296`, 0.004858049381660216]}, 
               "StandardDeviationHistory" -> {
                 Around[3.396586505948905, 0.08856726483905382]}, 
               "IterationHistory" -> {6}, 
               "TimeStampHistory" -> {
                3.899873549197646`16.34362551470543*^9}|>, <|
              "MeanCrossEntropy" -> 
               Around[3.9290618322645563`, 0.00942810959403967], 
               "StandardDeviation" -> 
               Around[3.1018791463462554`, 0.09060321807203], 
               "EvaluationTime" -> 0.000045273599687959974`, "TestSize" -> 
               500, "ModelMemory" -> 20776, 
               "ModelUtility" -> -1.8309915549438776`, "Round" -> 2, 
               "Iteration" -> 15, "TimeStamp" -> 
               3.899873551469005`16.343625514958365*^9, "TrainingSize" -> 40, 
               "TrainingTime" -> 0.025118864315095794`, "TrainingMemory" -> 
               118048, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[3.9290618322645563`, 0.006666680227715398]}, 
               "StandardDeviationHistory" -> {
                 Around[3.1018791463462554`, 0.06406614989605597]}, 
               "IterationHistory" -> {15}, 
               "TimeStampHistory" -> {
                3.899873551469005`16.343625514958365*^9}|>, <|
              "MeanCrossEntropy" -> 
               Around[2.59338335669272, 0.017002513372983048`], 
               "StandardDeviation" -> 
               Around[3.1004362153614204`, 0.07262505647288782], 
               "EvaluationTime" -> 0.00004184619162171752, "TestSize" -> 748, 
               "ModelMemory" -> 20776, "ModelUtility" -> -1.8293753218758844`,
                "Round" -> 3, "Iteration" -> 21, "TimeStamp" -> 
               3.899873552721711`16.34362551509787*^9, "TrainingSize" -> 150, 
               "TrainingTime" -> 0.03162277660168379, "TrainingMemory" -> 
               270488, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[2.59338335669272, 0.01202259250325127]}, 
               "StandardDeviationHistory" -> {
                 Around[3.1004362153614204`, 0.05135366991603494]}, 
               "IterationHistory" -> {21}, 
               "TimeStampHistory" -> {
                3.899873552721711`16.34362551509787*^9}|>}, 
            "PredictedPerformances" -> <|
             "EvaluationTime" -> 0.00004184619162171752, "ModelMemory" -> 
              20776, "StandardDeviation" -> 
              Around[3.1004362153614204`, 0.07262505647288782], 
              "TrainingMemory" -> 270488, "TrainingTime" -> 
              0.2092676457384358|>, "Index" -> 10|>|>, 
         TypeSystem`Assoc[
          TypeSystem`Struct[{"Value", "Options"}, {
            TypeSystem`Atom[
             TypeSystem`Enumeration["GradientBoostedTrees"]], 
            TypeSystem`Assoc[TypeSystem`AnyType, 
             TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 16]}], 
          
          TypeSystem`Struct[{
           "Experiments", "PredictedPerformances", "Index"}, {
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "MeanCrossEntropy", "StandardDeviation", "EvaluationTime", 
               "TestSize", "ModelMemory", "ModelUtility", "Round", 
               "Iteration", "TimeStamp", "TrainingSize", "TrainingTime", 
               "TrainingMemory", "ExperimentCount", "MeanCrossEntropyHistory",
                "StandardDeviationHistory", "IterationHistory", 
               "TimeStampHistory"}, {
              TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
               TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
               TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
               TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
               TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
               TypeSystem`AnyType, TypeSystem`AnyType}], 
             TypeSystem`AnyLength], 
            
            TypeSystem`Struct[{
             "EvaluationTime", "ModelMemory", "StandardDeviation", 
              "TrainingMemory", "TrainingTime"}, {
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], TypeSystem`AnyType, 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real]}], 
            TypeSystem`Atom[Integer]}], 10], <||>], 
       "TrainingSizes" -> {9, 40, 150, 718}, "MaxTrainingSize" -> 898, 
       "PreprocessorEvaluationTime" -> 7.328125*^-6, "PreprocessorMemory" -> 
       77040, "InputDimension" -> 41, "OutputDimension" -> 1, 
       "BaselineLogProbability" -> -1.4189385332046727`, "VariableBudget" -> 
       True, "CheckpointingInfo" -> <|"Checkpointing" -> False|>, "UserStop" -> 
       False, "NaturalStop" -> True, "AbortStop" -> False, 
       "LastReportingTime" -> 3.899873554745434`16.343625515323232*^9, 
       "RoundPartitioning" -> 
       Dataset[{<|
          "TrainingSizes" -> 9, "TimeBudgets" -> 0.5594303142518577, 
           "ElapsedTimes" -> 1.217606, "ExperimentCounts" -> 7|>, <|
          "TrainingSizes" -> 40, "TimeBudgets" -> 0.7991861632169396, 
           "ElapsedTimes" -> 1.3489459999999998`, "ExperimentCounts" -> 9|>, <|
          "TrainingSizes" -> 150, "TimeBudgets" -> 1.141694518881343, 
           "ElapsedTimes" -> 1.258408, "ExperimentCounts" -> 5|>, <|
          "TrainingSizes" -> 718, "TimeBudgets" -> 1.6309921698304872`, 
           "ElapsedTimes" -> 1.9451239999999999`, "ExperimentCounts" -> 4|>}, 
         
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
            "ExperimentCounts"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Integer]}], 4], <||>]|>, "AnomalyDetector" -> 
     None, "Log" -> <|
      "Example" -> 
       MachineLearning`MLDataset[<|
         "f1" -> <|
           "Type" -> "NumericalVector", "Weight" -> 1, 
            "Values" -> CompressedData["
1:eJxTTMoPSmViYGBgBGJNIK7Ist9ntWGCvemcK7WVOVPtDzoe9X9/dqb9dtXC
4F/v5thzyYT8+XJvjr1GearBxM2z7I8BZTNtZ9hfKk1UyXWfZh/BJmy5mnGq
fbrZ4pd7zKbYcytnWm8Sm2I/71b/ej6dKfaHPe9OPx42xR4k6nJmin2u64WC
oO9T7U+E/Pv14dIMe/loQZM5V+baN7VO2Chit8hes7Y8zXjWMvtU/b5V//+t
sb8360JhKMNGqDkb7BVTdFr71622///n25N1PMvsT8WIOZ+MXmwf/P3pRlHH
xfa225QyLFYutr89catCktpi+19vjgFtWmC/UdB0/t0Zs+zrKnOALphkX5qk
Xpak3ma/XSXP6/7cSnugZ641dWTaT92l37+WI8r+WkvfaiYOD3vTBQ8WPt1g
ZK8C9r+UPQMUdE/arlYS89UOxgcALneWhA==
             "], "ID" -> 6515543852639189880|>|>, <|
         "ExampleNumber" -> 1, "ExampleWeights" -> 1, "LogDensityRatios" -> 0,
           "RawExample" -> False|>], "TrainingTime" -> 6.681868, 
       "MaxTrainingMemory" -> 2930784, "DataMemory" -> 510304, 
       "FunctionMemory" -> 463448, "LanguageVersion" -> {13.2, 1}, "Date" -> 
       DateObject[{2023, 8, 1, 10, 12, 34.987878`8.296492583391363}, 
         "Instant", "Gregorian", -4.], "ProcessorCount" -> 4, "ProcessorType" -> 
       "x86-64", "OperatingSystem" -> "MacOSX", "SystemWordLength" -> 64, 
       "Evaluations" -> {}|>|>]]]], "Output",
 CellChangeTimes->{3.8998868557283154`*^9, 3.8998870135270147`*^9, 
  3.89988795598925*^9},
 CellLabel->
  "Out[611]=",ExpressionUUID->"03a2f0a9-c2e5-4b8d-9897-d367da2b3673"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"reportGBT", "=", 
  RowBox[{"PredictorMeasurements", "[", 
   RowBox[{"gbt", ",", "testData"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.899886890103135*^9, 3.899886902222086*^9}, {
  3.899886972089232*^9, 3.8998869727440023`*^9}, {3.899887264947752*^9, 
  3.899887265165015*^9}, {3.899887973834075*^9, 3.899887974054278*^9}},
 CellLabel->
  "In[612]:=",ExpressionUUID->"b3bbb082-392e-4ad4-8b13-7cc1d526a6e9"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   StyleBox[
    FrameBox[GridBox[{
       {
        ItemBox[
         FrameBox[
          StyleBox["\<\"Predictor Measurements\"\>", "SuggestionsBarText",
           StripOnInput->False,
           FontSize->12],
          FrameMargins->{{10, 5}, {-4, 2}},
          FrameStyle->None,
          StripOnInput->False],
         Alignment->{Left, Bottom},
         Background->RGBColor[0.96, 0.96, 0.96],
         Frame->{{False, False}, {True, False}},
         FrameStyle->Opacity[0.1],
         ItemSize->{Automatic, 1},
         StripOnInput->False]},
       {
        ItemBox[
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Predictor method"], 
                   TextCell["Predictor method"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               
               InterpretationBox[Cell[
                "GradientBoostedTrees",ExpressionUUID->
                 "1b3005af-7b60-43fe-b20a-ce898442e080"],
                TextCell["GradientBoostedTrees"]]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Number of test examples"], 
                   TextCell["Number of test examples"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], "175"},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Standard deviation"], 
                   TextCell["Standard deviation"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 TemplateBox[{"0.729723331385074947`3.", 
                   StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0302012712497205515`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                  "RowDefault"],
                 
                 TemplateBox[{
                  "\"95% confidence interval: [\"", 
                   "0.6693207888856338439`3.", "\", \"", 
                   "0.7901258738845160501`3.", "\"]\""}, "RowDefault"],
                 TooltipStyle->{}],
                Annotation[#, 
                 
                 Row[{"95% confidence interval: [", 0.6693207888856338439`3., 
                   ", ", 0.7901258738845160501`3., "]"}], "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  TagBox[
                   TooltipBox[
                    InterpretationBox[
                    Cell["Standard deviation baseline"], 
                    TextCell["Standard deviation baseline"]], 
                    "\"Standard deviation of testset values\"", TooltipStyle -> 
                    "TextStyling"], 
                   Annotation[#, "Standard deviation of testset values", 
                    "Tooltip"]& ], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 TemplateBox[{"0.7014559785160564553`3.", 
                   StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.040350830825162054`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                  "RowDefault"],
                 
                 TemplateBox[{
                  "\"95% confidence interval: [\"", 
                   "0.6207543168657323474`3.", "\", \"", 
                   "0.7821576401663805633`3.", "\"]\""}, "RowDefault"],
                 TooltipStyle->{}],
                Annotation[#, 
                 
                 Row[{"95% confidence interval: [", 0.6207543168657323474`3., 
                   ", ", 0.7821576401663805633`3., "]"}], "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["R-squared"], 
                   TextCell["R-squared"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 TemplateBox[{
                   RowBox[{"-", "0.0822201656383874102`3."}], 
                   StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.1537205683284073032`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                  "RowDefault"],
                 TemplateBox[{"\"95% confidence interval: [\"", 
                   RowBox[{"-", "0.3896613022952020167`3."}], "\", \"", 
                   "0.2252209710184271962`3.", "\"]\""}, "RowDefault"],
                 TooltipStyle->{}],
                Annotation[#, 
                 
                 Row[{"95% confidence interval: [", -0.3896613022952020167`3.,
                    ", ", 0.2252209710184271962`3., "]"}], "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Mean cross entropy"], 
                   TextCell["Mean cross entropy"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 TemplateBox[{"39.5782086223618065901`3.", 
                   StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "3.4057290605028782693`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                  "RowDefault"],
                 
                 TemplateBox[{
                  "\"95% confidence interval: [\"", 
                   "32.7667505013560500515`3.", "\", \"", 
                   "46.3896667433675631287`3.", "\"]\""}, "RowDefault"],
                 TooltipStyle->{}],
                Annotation[#, 
                 
                 Row[{"95% confidence interval: [", 32.7667505013560500515`3.,
                    ", ", 46.3896667433675631287`3., "]"}], "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Single evaluation time"], 
                   TextCell["Single evaluation time"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{"7.48`", 
                 
                 RowBox[{
                  "\"ms\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]",
                    "\"example\""}], "milliseconds per example", 
                 FractionBox["\"Milliseconds\"", "\"Examples\""]},
                "Quantity"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Batch evaluation speed"], 
                   TextCell["Batch evaluation speed"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{"529.`", 
                 
                 RowBox[{
                  "\"examples\"", "\[InvisibleSpace]", "\"/\"", 
                   "\[InvisibleSpace]", "\"s\""}], "examples per second", 
                 FractionBox["\"Examples\"", "\"Seconds\""]},
                "Quantity"]},
              {
               ItemBox[
                GraphicsBox[{{{}, {
                    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
                    0.009166666666666668], AbsoluteThickness[1.6], 
                    GeometricTransformationBox[InsetBox[
                    FormBox[
                    StyleBox[
                    GraphicsBox[
                    {RGBColor[0.34398, 0.49112, 0.89936], AbsoluteThickness[
                    1.], CircleBox[{0, 0}, Offset[{1.8, 1.8}, {0., 0.}]]}],
                    StripOnInput->False,
                    GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                    PointSize[0.009166666666666668], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}],
                    TraditionalForm], {0., 0.}], CompressedData["
1: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
jJ7xV9CQ1C/+H0CKjrc=
                    "]]}, {
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{8.037415522459451, 9.04}}]},
                    RowBox[{"{", 
                    RowBox[{"8.037415522459451`", ",", "9.04`"}], "}"}]],
                    Annotation[#, {8.037415522459451, 9.04}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{8.317497533389663, 9.06}}]},
                    RowBox[{"{", 
                    RowBox[{"8.317497533389663`", ",", "9.06`"}], "}"}]],
                    Annotation[#, {8.317497533389663, 9.06}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{7.48703687691554, 8.58}}]},
                    RowBox[{"{", 
                    RowBox[{"7.48703687691554`", ",", "8.58`"}], "}"}]],
                    Annotation[#, {7.48703687691554, 8.58}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{7.312448256751022, 8.61}}]},
                    RowBox[{"{", 
                    RowBox[{"7.312448256751022`", ",", "8.61`"}], "}"}]],
                    Annotation[#, {7.312448256751022, 8.61}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{4.815984661395145, 6.24}}]},
                    RowBox[{"{", 
                    RowBox[{"4.815984661395145`", ",", "6.24`"}], "}"}]],
                    Annotation[#, {4.815984661395145, 6.24}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.5304276301828095`, 6.99}}]},
                    RowBox[{"{", 
                    RowBox[{"6.5304276301828095`", ",", "6.99`"}], "}"}]],
                    Annotation[#, {6.5304276301828095`, 6.99}, "Tooltip"]& ], 
                    
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.189406266696881, 7.02}}]},
                    RowBox[{"{", 
                    RowBox[{"6.189406266696881`", ",", "7.02`"}], "}"}]],
                    Annotation[#, {6.189406266696881, 7.02}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.407903348713829, 7.16}}]},
                    RowBox[{"{", 
                    RowBox[{"6.407903348713829`", ",", "7.16`"}], "}"}]],
                    Annotation[#, {6.407903348713829, 7.16}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.422337651804765, 6.98}}]},
                    RowBox[{"{", 
                    RowBox[{"6.422337651804765`", ",", "6.98`"}], "}"}]],
                    Annotation[#, {6.422337651804765, 6.98}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.380054841246443, 6.87}}]},
                    RowBox[{"{", 
                    RowBox[{"6.380054841246443`", ",", "6.87`"}], "}"}]],
                    Annotation[#, {6.380054841246443, 6.87}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.519994912724874, 6.76}}]},
                    RowBox[{"{", 
                    RowBox[{"5.519994912724874`", ",", "6.76`"}], "}"}]],
                    Annotation[#, {5.519994912724874, 6.76}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.124984137873648, 6.78}}]},
                    RowBox[{"{", 
                    RowBox[{"6.124984137873648`", ",", "6.78`"}], "}"}]],
                    Annotation[#, {6.124984137873648, 6.78}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.713626584217469, 6.82}}]},
                    RowBox[{"{", 
                    RowBox[{"5.713626584217469`", ",", "6.82`"}], "}"}]],
                    Annotation[#, {5.713626584217469, 6.82}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.258718100165461, 6.67}}]},
                    RowBox[{"{", 
                    RowBox[{"6.258718100165461`", ",", "6.67`"}], "}"}]],
                    Annotation[#, {6.258718100165461, 6.67}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.3937529160423585`, 6.65}}]},
                    RowBox[{"{", 
                    RowBox[{"5.3937529160423585`", ",", "6.65`"}], "}"}]],
                    Annotation[#, {5.3937529160423585`, 6.65}, "Tooltip"]& ], 
                    
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.4015497910482555`, 6.68}}]},
                    RowBox[{"{", 
                    RowBox[{"6.4015497910482555`", ",", "6.68`"}], "}"}]],
                    Annotation[#, {6.4015497910482555`, 6.68}, "Tooltip"]& ], 
                    
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.360523468936731, 6.71}}]},
                    RowBox[{"{", 
                    RowBox[{"5.360523468936731`", ",", "6.71`"}], "}"}]],
                    Annotation[#, {5.360523468936731, 6.71}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.0768103511866105`, 6.69}}]},
                    RowBox[{"{", 
                    RowBox[{"6.0768103511866105`", ",", "6.69`"}], "}"}]],
                    Annotation[#, {6.0768103511866105`, 6.69}, "Tooltip"]& ], 
                    
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.868320062291799, 6.58}}]},
                    RowBox[{"{", 
                    RowBox[{"5.868320062291799`", ",", "6.58`"}], "}"}]],
                    Annotation[#, {5.868320062291799, 6.58}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.9756390023715635`, 6.58}}]},
                    RowBox[{"{", 
                    RowBox[{"5.9756390023715635`", ",", "6.58`"}], "}"}]],
                    Annotation[#, {5.9756390023715635`, 6.58}, "Tooltip"]& ], 
                    
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.92958402982703, 6.6}}]},
                    RowBox[{"{", 
                    RowBox[{"5.92958402982703`", ",", "6.6`"}], "}"}]],
                    Annotation[#, {5.92958402982703, 6.6}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.010103330058385, 6.62}}]},
                    RowBox[{"{", 
                    RowBox[{"6.010103330058385`", ",", "6.62`"}], "}"}]],
                    Annotation[#, {6.010103330058385, 6.62}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{7.830898708454047, 7.94}}]},
                    RowBox[{"{", 
                    RowBox[{"7.830898708454047`", ",", "7.94`"}], "}"}]],
                    Annotation[#, {7.830898708454047, 7.94}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{7.711351606810002, 7.97}}]},
                    RowBox[{"{", 
                    RowBox[{"7.711351606810002`", ",", "7.97`"}], "}"}]],
                    Annotation[#, {7.711351606810002, 7.97}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.65153986048645, 7.75}}]},
                    RowBox[{"{", 
                    RowBox[{"6.65153986048645`", ",", "7.75`"}], "}"}]],
                    Annotation[#, {6.65153986048645, 7.75}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.443031646706553, 7.7}}]},
                    RowBox[{"{", 
                    RowBox[{"6.443031646706553`", ",", "7.7`"}], "}"}]],
                    Annotation[#, {6.443031646706553, 7.7}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.105931888815687, 7.}}]},
                    RowBox[{"{", 
                    RowBox[{"6.105931888815687`", ",", "7.`"}], "}"}]],
                    Annotation[#, {6.105931888815687, 7.}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.261857608387598, 6.81}}]},
                    RowBox[{"{", 
                    RowBox[{"6.261857608387598`", ",", "6.81`"}], "}"}]],
                    Annotation[#, {6.261857608387598, 6.81}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.059396019481056, 6.76}}]},
                    RowBox[{"{", 
                    RowBox[{"6.059396019481056`", ",", "6.76`"}], "}"}]],
                    Annotation[#, {6.059396019481056, 6.76}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.218623878945143, 6.65}}]},
                    RowBox[{"{", 
                    RowBox[{"6.218623878945143`", ",", "6.65`"}], "}"}]],
                    Annotation[#, {6.218623878945143, 6.65}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.3047974977637296`, 6.69}}]},
                    RowBox[{"{", 
                    RowBox[{"5.3047974977637296`", ",", "6.69`"}], "}"}]],
                    Annotation[#, {5.3047974977637296`, 6.69}, "Tooltip"]& ], 
                    
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.0273299022455795`, 6.57}}]},
                    RowBox[{"{", 
                    RowBox[{"6.0273299022455795`", ",", "6.57`"}], "}"}]],
                    Annotation[#, {6.0273299022455795`, 6.57}, "Tooltip"]& ], 
                    
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.228991491686594, 6.57}}]},
                    RowBox[{"{", 
                    RowBox[{"6.228991491686594`", ",", "6.57`"}], "}"}]],
                    Annotation[#, {6.228991491686594, 6.57}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.216315830427621, 6.58}}]},
                    RowBox[{"{", 
                    RowBox[{"6.216315830427621`", ",", "6.58`"}], "}"}]],
                    Annotation[#, {6.216315830427621, 6.58}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.4507190567833685`, 6.62}}]},
                    RowBox[{"{", 
                    RowBox[{"5.4507190567833685`", ",", "6.62`"}], "}"}]],
                    Annotation[#, {5.4507190567833685`, 6.62}, "Tooltip"]& ], 
                    
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.067733168232776, 6.52}}]},
                    RowBox[{"{", 
                    RowBox[{"6.067733168232776`", ",", "6.52`"}], "}"}]],
                    Annotation[#, {6.067733168232776, 6.52}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.375409939673032, 6.56}}]},
                    RowBox[{"{", 
                    RowBox[{"6.375409939673032`", ",", "6.56`"}], "}"}]],
                    Annotation[#, {6.375409939673032, 6.56}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.988116266426359, 6.52}}]},
                    RowBox[{"{", 
                    RowBox[{"5.988116266426359`", ",", "6.52`"}], "}"}]],
                    Annotation[#, {5.988116266426359, 6.52}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.5806471518650245`, 6.43}}]},
                    RowBox[{"{", 
                    RowBox[{"5.5806471518650245`", ",", "6.43`"}], "}"}]],
                    Annotation[#, {5.5806471518650245`, 6.43}, "Tooltip"]& ], 
                    
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.727159894790258, 6.52}}]},
                    RowBox[{"{", 
                    RowBox[{"5.727159894790258`", ",", "6.52`"}], "}"}]],
                    Annotation[#, {5.727159894790258, 6.52}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.012681747361109, 6.62}}]},
                    RowBox[{"{", 
                    RowBox[{"6.012681747361109`", ",", "6.62`"}], "}"}]],
                    Annotation[#, {6.012681747361109, 6.62}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{4.9193873692859835`, 6.51}}]},
                    RowBox[{"{", 
                    RowBox[{"4.9193873692859835`", ",", "6.51`"}], "}"}]],
                    Annotation[#, {4.9193873692859835`, 6.51}, "Tooltip"]& ], 
                    
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{4.382026462158221, 5.42}}]},
                    RowBox[{"{", 
                    RowBox[{"4.382026462158221`", ",", "5.42`"}], "}"}]],
                    Annotation[#, {4.382026462158221, 5.42}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{3.608035364200563, 5.03}}]},
                    RowBox[{"{", 
                    RowBox[{"3.608035364200563`", ",", "5.03`"}], "}"}]],
                    Annotation[#, {3.608035364200563, 5.03}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{8.892924670265748, 8.24}}]},
                    RowBox[{"{", 
                    RowBox[{"8.892924670265748`", ",", "8.24`"}], "}"}]],
                    Annotation[#, {8.892924670265748, 8.24}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{8.781385405216469, 8.26}}]},
                    RowBox[{"{", 
                    RowBox[{"8.781385405216469`", ",", "8.26`"}], "}"}]],
                    Annotation[#, {8.781385405216469, 8.26}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{8.392095628286986, 8.37}}]},
                    RowBox[{"{", 
                    RowBox[{"8.392095628286986`", ",", "8.37`"}], "}"}]],
                    Annotation[#, {8.392095628286986, 8.37}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.813410628771641, 8.35}}]},
                    RowBox[{"{", 
                    RowBox[{"6.813410628771641`", ",", "8.35`"}], "}"}]],
                    Annotation[#, {6.813410628771641, 8.35}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{7.4445482497641375`, 6.58}}]},
                    RowBox[{"{", 
                    RowBox[{"7.4445482497641375`", ",", "6.58`"}], "}"}]],
                    Annotation[#, {7.4445482497641375`, 6.58}, "Tooltip"]& ], 
                    
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{8.336890047389499, 6.59}}]},
                    RowBox[{"{", 
                    RowBox[{"8.336890047389499`", ",", "6.59`"}], "}"}]],
                    Annotation[#, {8.336890047389499, 6.59}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{7.157761547649392, 7.69}}]},
                    RowBox[{"{", 
                    RowBox[{"7.157761547649392`", ",", "7.69`"}], "}"}]],
                    Annotation[#, {7.157761547649392, 7.69}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{7.50250072875571, 7.97}}]},
                    RowBox[{"{", 
                    RowBox[{"7.50250072875571`", ",", "7.97`"}], "}"}]],
                    Annotation[#, {7.50250072875571, 7.97}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{7.4017146550427375`, 7.74}}]},
                    RowBox[{"{", 
                    RowBox[{"7.4017146550427375`", ",", "7.74`"}], "}"}]],
                    Annotation[#, {7.4017146550427375`, 7.74}, "Tooltip"]& ], 
                    
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{7.591580271823581, 8.15}}]},
                    RowBox[{"{", 
                    RowBox[{"7.591580271823581`", ",", "8.15`"}], "}"}]],
                    Annotation[#, {7.591580271823581, 8.15}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{7.255443856688348, 8.17}}]},
                    RowBox[{"{", 
                    RowBox[{"7.255443856688348`", ",", "8.17`"}], "}"}]],
                    Annotation[#, {7.255443856688348, 8.17}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.726477907397798, 7.87}}]},
                    RowBox[{"{", 
                    RowBox[{"6.726477907397798`", ",", "7.87`"}], "}"}]],
                    Annotation[#, {6.726477907397798, 7.87}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.4726041299052355`, 7.5}}]},
                    RowBox[{"{", 
                    RowBox[{"6.4726041299052355`", ",", "7.5`"}], "}"}]],
                    Annotation[#, {6.4726041299052355`, 7.5}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.461833886297848, 7.48}}]},
                    RowBox[{"{", 
                    RowBox[{"6.461833886297848`", ",", "7.48`"}], "}"}]],
                    Annotation[#, {6.461833886297848, 7.48}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.2750416627039876`, 7.43}}]},
                    RowBox[{"{", 
                    RowBox[{"6.2750416627039876`", ",", "7.43`"}], "}"}]],
                    Annotation[#, {6.2750416627039876`, 7.43}, "Tooltip"]& ], 
                    
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.292102227480418, 7.36}}]},
                    RowBox[{"{", 
                    RowBox[{"6.292102227480418`", ",", "7.36`"}], "}"}]],
                    Annotation[#, {6.292102227480418, 7.36}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.158080190056017, 7.21}}]},
                    RowBox[{"{", 
                    RowBox[{"6.158080190056017`", ",", "7.21`"}], "}"}]],
                    Annotation[#, {6.158080190056017, 7.21}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.359533066710529, 7.2}}]},
                    RowBox[{"{", 
                    RowBox[{"6.359533066710529`", ",", "7.2`"}], "}"}]],
                    Annotation[#, {6.359533066710529, 7.2}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.329402757275142, 7.1}}]},
                    RowBox[{"{", 
                    RowBox[{"6.329402757275142`", ",", "7.1`"}], "}"}]],
                    Annotation[#, {6.329402757275142, 7.1}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.401954199211847, 6.49}}]},
                    RowBox[{"{", 
                    RowBox[{"6.401954199211847`", ",", "6.49`"}], "}"}]],
                    Annotation[#, {6.401954199211847, 6.49}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.059463805741265, 7.01}}]},
                    RowBox[{"{", 
                    RowBox[{"6.059463805741265`", ",", "7.01`"}], "}"}]],
                    Annotation[#, {6.059463805741265, 7.01}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{8.17464165962593, 8.14}}]},
                    RowBox[{"{", 
                    RowBox[{"8.17464165962593`", ",", "8.14`"}], "}"}]],
                    Annotation[#, {8.17464165962593, 8.14}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{7.355450286659078, 8.42}}]},
                    RowBox[{"{", 
                    RowBox[{"7.355450286659078`", ",", "8.42`"}], "}"}]],
                    Annotation[#, {7.355450286659078, 8.42}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{7.49888982023733, 8.18}}]},
                    RowBox[{"{", 
                    RowBox[{"7.49888982023733`", ",", "8.18`"}], "}"}]],
                    Annotation[#, {7.49888982023733, 8.18}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{7.397421657133404, 8.4}}]},
                    RowBox[{"{", 
                    RowBox[{"7.397421657133404`", ",", "8.4`"}], "}"}]],
                    Annotation[#, {7.397421657133404, 8.4}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.618183795086036, 7.95}}]},
                    RowBox[{"{", 
                    RowBox[{"6.618183795086036`", ",", "7.95`"}], "}"}]],
                    Annotation[#, {6.618183795086036, 7.95}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.409372014548877, 7.95}}]},
                    RowBox[{"{", 
                    RowBox[{"6.409372014548877`", ",", "7.95`"}], "}"}]],
                    Annotation[#, {6.409372014548877, 7.95}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.30256303067128, 7.68}}]},
                    RowBox[{"{", 
                    RowBox[{"6.30256303067128`", ",", "7.68`"}], "}"}]],
                    Annotation[#, {6.30256303067128, 7.68}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.292158149256386, 7.66}}]},
                    RowBox[{"{", 
                    RowBox[{"6.292158149256386`", ",", "7.66`"}], "}"}]],
                    Annotation[#, {6.292158149256386, 7.66}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.394564267323908, 7.37}}]},
                    RowBox[{"{", 
                    RowBox[{"6.394564267323908`", ",", "7.37`"}], "}"}]],
                    Annotation[#, {6.394564267323908, 7.37}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.284756800948385, 7.22}}]},
                    RowBox[{"{", 
                    RowBox[{"6.284756800948385`", ",", "7.22`"}], "}"}]],
                    Annotation[#, {6.284756800948385, 7.22}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.127757433808247, 6.96}}]},
                    RowBox[{"{", 
                    RowBox[{"6.127757433808247`", ",", "6.96`"}], "}"}]],
                    Annotation[#, {6.127757433808247, 6.96}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.394932648523606, 7.06}}]},
                    RowBox[{"{", 
                    RowBox[{"6.394932648523606`", ",", "7.06`"}], "}"}]],
                    Annotation[#, {6.394932648523606, 7.06}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.992148033260827, 6.8}}]},
                    RowBox[{"{", 
                    RowBox[{"5.992148033260827`", ",", "6.8`"}], "}"}]],
                    Annotation[#, {5.992148033260827, 6.8}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.1568435321094945`, 7.1}}]},
                    RowBox[{"{", 
                    RowBox[{"6.1568435321094945`", ",", "7.1`"}], "}"}]],
                    Annotation[#, {6.1568435321094945`, 7.1}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.466436617764986, 6.78}}]},
                    RowBox[{"{", 
                    RowBox[{"6.466436617764986`", ",", "6.78`"}], "}"}]],
                    Annotation[#, {6.466436617764986, 6.78}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.423316374777399, 6.92}}]},
                    RowBox[{"{", 
                    RowBox[{"6.423316374777399`", ",", "6.92`"}], "}"}]],
                    Annotation[#, {6.423316374777399, 6.92}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.343217204481148, 6.93}}]},
                    RowBox[{"{", 
                    RowBox[{"6.343217204481148`", ",", "6.93`"}], "}"}]],
                    Annotation[#, {6.343217204481148, 6.93}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.1275240915936795`, 6.93}}]},
                    RowBox[{"{", 
                    RowBox[{"6.1275240915936795`", ",", "6.93`"}], "}"}]],
                    Annotation[#, {6.1275240915936795`, 6.93}, "Tooltip"]& ], 
                    
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.235655131062824, 7.}}]},
                    RowBox[{"{", 
                    RowBox[{"6.235655131062824`", ",", "7.`"}], "}"}]],
                    Annotation[#, {6.235655131062824, 7.}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.139692310509381, 6.97}}]},
                    RowBox[{"{", 
                    RowBox[{"6.139692310509381`", ",", "6.97`"}], "}"}]],
                    Annotation[#, {6.139692310509381, 6.97}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.363631507733366, 6.96}}]},
                    RowBox[{"{", 
                    RowBox[{"6.363631507733366`", ",", "6.96`"}], "}"}]],
                    Annotation[#, {6.363631507733366, 6.96}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.416051811280342, 6.85}}]},
                    RowBox[{"{", 
                    RowBox[{"6.416051811280342`", ",", "6.85`"}], "}"}]],
                    Annotation[#, {6.416051811280342, 6.85}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{8.312572531748962, 8.58}}]},
                    RowBox[{"{", 
                    RowBox[{"8.312572531748962`", ",", "8.58`"}], "}"}]],
                    Annotation[#, {8.312572531748962, 8.58}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{8.114835554488975, 8.62}}]},
                    RowBox[{"{", 
                    RowBox[{"8.114835554488975`", ",", "8.62`"}], "}"}]],
                    Annotation[#, {8.114835554488975, 8.62}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{7.50995378698732, 8.}}]},
                    RowBox[{"{", 
                    RowBox[{"7.50995378698732`", ",", "8.`"}], "}"}]],
                    Annotation[#, {7.50995378698732, 8.}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{7.567448293238328, 7.94}}]},
                    RowBox[{"{", 
                    RowBox[{"7.567448293238328`", ",", "7.94`"}], "}"}]],
                    Annotation[#, {7.567448293238328, 7.94}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.740832792237198, 7.23}}]},
                    RowBox[{"{", 
                    RowBox[{"6.740832792237198`", ",", "7.23`"}], "}"}]],
                    Annotation[#, {6.740832792237198, 7.23}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.309965539306443, 7.12}}]},
                    RowBox[{"{", 
                    RowBox[{"6.309965539306443`", ",", "7.12`"}], "}"}]],
                    Annotation[#, {6.309965539306443, 7.12}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.221936157502265, 6.76}}]},
                    RowBox[{"{", 
                    RowBox[{"6.221936157502265`", ",", "6.76`"}], "}"}]],
                    Annotation[#, {6.221936157502265, 6.76}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.270842339119767, 6.86}}]},
                    RowBox[{"{", 
                    RowBox[{"6.270842339119767`", ",", "6.86`"}], "}"}]],
                    Annotation[#, {6.270842339119767, 6.86}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.139083328514047, 6.53}}]},
                    RowBox[{"{", 
                    RowBox[{"6.139083328514047`", ",", "6.53`"}], "}"}]],
                    Annotation[#, {6.139083328514047, 6.53}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.161232295170064, 6.72}}]},
                    RowBox[{"{", 
                    RowBox[{"6.161232295170064`", ",", "6.72`"}], "}"}]],
                    Annotation[#, {6.161232295170064, 6.72}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.128248624798088, 6.33}}]},
                    RowBox[{"{", 
                    RowBox[{"6.128248624798088`", ",", "6.33`"}], "}"}]],
                    Annotation[#, {6.128248624798088, 6.33}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.079802699306111, 6.42}}]},
                    RowBox[{"{", 
                    RowBox[{"6.079802699306111`", ",", "6.42`"}], "}"}]],
                    Annotation[#, {6.079802699306111, 6.42}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.329468706254805, 6.33}}]},
                    RowBox[{"{", 
                    RowBox[{"6.329468706254805`", ",", "6.33`"}], "}"}]],
                    Annotation[#, {6.329468706254805, 6.33}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.789383337944274, 6.41}}]},
                    RowBox[{"{", 
                    RowBox[{"5.789383337944274`", ",", "6.41`"}], "}"}]],
                    Annotation[#, {5.789383337944274, 6.41}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.138775807727651, 6.21}}]},
                    RowBox[{"{", 
                    RowBox[{"6.138775807727651`", ",", "6.21`"}], "}"}]],
                    Annotation[#, {6.138775807727651, 6.21}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.196939244431368, 6.28}}]},
                    RowBox[{"{", 
                    RowBox[{"6.196939244431368`", ",", "6.28`"}], "}"}]],
                    Annotation[#, {6.196939244431368, 6.28}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.192548154715929, 6.26}}]},
                    RowBox[{"{", 
                    RowBox[{"6.192548154715929`", ",", "6.26`"}], "}"}]],
                    Annotation[#, {6.192548154715929, 6.26}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.270218645037646, 6.33}}]},
                    RowBox[{"{", 
                    RowBox[{"6.270218645037646`", ",", "6.33`"}], "}"}]],
                    Annotation[#, {6.270218645037646, 6.33}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.162126450972517, 5.79}}]},
                    RowBox[{"{", 
                    RowBox[{"6.162126450972517`", ",", "5.79`"}], "}"}]],
                    Annotation[#, {6.162126450972517, 5.79}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.227760113982671, 6.17}}]},
                    RowBox[{"{", 
                    RowBox[{"6.227760113982671`", ",", "6.17`"}], "}"}]],
                    Annotation[#, {6.227760113982671, 6.17}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.2402196360956825`, 6.26}}]},
                    RowBox[{"{", 
                    RowBox[{"6.2402196360956825`", ",", "6.26`"}], "}"}]],
                    Annotation[#, {6.2402196360956825`, 6.26}, "Tooltip"]& ], 
                    
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.091918478989502, 6.36}}]},
                    RowBox[{"{", 
                    RowBox[{"6.091918478989502`", ",", "6.36`"}], "}"}]],
                    Annotation[#, {6.091918478989502, 6.36}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{8.307180399766455, 7.15}}]},
                    RowBox[{"{", 
                    RowBox[{"8.307180399766455`", ",", "7.15`"}], "}"}]],
                    Annotation[#, {8.307180399766455, 7.15}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{7.756233605207375, 8.21}}]},
                    RowBox[{"{", 
                    RowBox[{"7.756233605207375`", ",", "8.21`"}], "}"}]],
                    Annotation[#, {7.756233605207375, 8.21}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{7.476015306239709, 7.58}}]},
                    RowBox[{"{", 
                    RowBox[{"7.476015306239709`", ",", "7.58`"}], "}"}]],
                    Annotation[#, {7.476015306239709, 7.58}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{7.653775556315547, 7.5}}]},
                    RowBox[{"{", 
                    RowBox[{"7.653775556315547`", ",", "7.5`"}], "}"}]],
                    Annotation[#, {7.653775556315547, 7.5}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.573863259698253, 6.77}}]},
                    RowBox[{"{", 
                    RowBox[{"6.573863259698253`", ",", "6.77`"}], "}"}]],
                    Annotation[#, {6.573863259698253, 6.77}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.248540586289179, 6.83}}]},
                    RowBox[{"{", 
                    RowBox[{"6.248540586289179`", ",", "6.83`"}], "}"}]],
                    Annotation[#, {6.248540586289179, 6.83}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.393339512808771, 6.13}}]},
                    RowBox[{"{", 
                    RowBox[{"6.393339512808771`", ",", "6.13`"}], "}"}]],
                    Annotation[#, {6.393339512808771, 6.13}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.188990715823231, 5.91}}]},
                    RowBox[{"{", 
                    RowBox[{"6.188990715823231`", ",", "5.91`"}], "}"}]],
                    Annotation[#, {6.188990715823231, 5.91}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.604843290859216, 5.86}}]},
                    RowBox[{"{", 
                    RowBox[{"6.604843290859216`", ",", "5.86`"}], "}"}]],
                    Annotation[#, {6.604843290859216, 5.86}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.2795092924481555`, 6.2}}]},
                    RowBox[{"{", 
                    RowBox[{"6.2795092924481555`", ",", "6.2`"}], "}"}]],
                    Annotation[#, {6.2795092924481555`, 6.2}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.869412303016317, 6.24}}]},
                    RowBox[{"{", 
                    RowBox[{"5.869412303016317`", ",", "6.24`"}], "}"}]],
                    Annotation[#, {5.869412303016317, 6.24}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.032354609762814, 6.38}}]},
                    RowBox[{"{", 
                    RowBox[{"6.032354609762814`", ",", "6.38`"}], "}"}]],
                    Annotation[#, {6.032354609762814, 6.38}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.092887788359267, 6.27}}]},
                    RowBox[{"{", 
                    RowBox[{"6.092887788359267`", ",", "6.27`"}], "}"}]],
                    Annotation[#, {6.092887788359267, 6.27}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.0420122824021565`, 6.52}}]},
                    RowBox[{"{", 
                    RowBox[{"6.0420122824021565`", ",", "6.52`"}], "}"}]],
                    Annotation[#, {6.0420122824021565`, 6.52}, "Tooltip"]& ], 
                    
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.699027945922115, 6.36}}]},
                    RowBox[{"{", 
                    RowBox[{"5.699027945922115`", ",", "6.36`"}], "}"}]],
                    Annotation[#, {5.699027945922115, 6.36}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.090040402225524, 6.38}}]},
                    RowBox[{"{", 
                    RowBox[{"6.090040402225524`", ",", "6.38`"}], "}"}]],
                    Annotation[#, {6.090040402225524, 6.38}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.240969132164446, 6.14}}]},
                    RowBox[{"{", 
                    RowBox[{"6.240969132164446`", ",", "6.14`"}], "}"}]],
                    Annotation[#, {6.240969132164446, 6.14}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.694382678927367, 6.18}}]},
                    RowBox[{"{", 
                    RowBox[{"5.694382678927367`", ",", "6.18`"}], "}"}]],
                    Annotation[#, {5.694382678927367, 6.18}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.088161832900845, 6.}}]},
                    RowBox[{"{", 
                    RowBox[{"6.088161832900845`", ",", "6.`"}], "}"}]],
                    Annotation[#, {6.088161832900845, 6.}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.864005596240504, 6.04}}]},
                    RowBox[{"{", 
                    RowBox[{"5.864005596240504`", ",", "6.04`"}], "}"}]],
                    Annotation[#, {5.864005596240504, 6.04}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.637215800845823, 6.18}}]},
                    RowBox[{"{", 
                    RowBox[{"5.637215800845823`", ",", "6.18`"}], "}"}]],
                    Annotation[#, {5.637215800845823, 6.18}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.258311452414118, 6.11}}]},
                    RowBox[{"{", 
                    RowBox[{"6.258311452414118`", ",", "6.11`"}], "}"}]],
                    Annotation[#, {6.258311452414118, 6.11}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{8.239486915944036, 7.73}}]},
                    RowBox[{"{", 
                    RowBox[{"8.239486915944036`", ",", "7.73`"}], "}"}]],
                    Annotation[#, {8.239486915944036, 7.73}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{7.872942414467254, 7.69}}]},
                    RowBox[{"{", 
                    RowBox[{"7.872942414467254`", ",", "7.69`"}], "}"}]],
                    Annotation[#, {7.872942414467254, 7.69}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{7.47076173191051, 7.33}}]},
                    RowBox[{"{", 
                    RowBox[{"7.47076173191051`", ",", "7.33`"}], "}"}]],
                    Annotation[#, {7.47076173191051, 7.33}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.8716472457798545`, 7.02}}]},
                    RowBox[{"{", 
                    RowBox[{"6.8716472457798545`", ",", "7.02`"}], "}"}]],
                    Annotation[#, {6.8716472457798545`, 7.02}, "Tooltip"]& ], 
                    
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.513622417935258, 6.99}}]},
                    RowBox[{"{", 
                    RowBox[{"6.513622417935258`", ",", "6.99`"}], "}"}]],
                    Annotation[#, {6.513622417935258, 6.99}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.357625942967, 7.19}}]},
                    RowBox[{"{", 
                    RowBox[{"6.357625942967`", ",", "7.19`"}], "}"}]],
                    Annotation[#, {6.357625942967, 7.19}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.284712344310249, 7.3}}]},
                    RowBox[{"{", 
                    RowBox[{"6.284712344310249`", ",", "7.3`"}], "}"}]],
                    Annotation[#, {6.284712344310249, 7.3}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.27479651307239, 7.15}}]},
                    RowBox[{"{", 
                    RowBox[{"6.27479651307239`", ",", "7.15`"}], "}"}]],
                    Annotation[#, {6.27479651307239, 7.15}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.363475062971899, 7.01}}]},
                    RowBox[{"{", 
                    RowBox[{"6.363475062971899`", ",", "7.01`"}], "}"}]],
                    Annotation[#, {6.363475062971899, 7.01}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.230748214051977, 7.03}}]},
                    RowBox[{"{", 
                    RowBox[{"6.230748214051977`", ",", "7.03`"}], "}"}]],
                    Annotation[#, {6.230748214051977, 7.03}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.354354930509256, 6.83}}]},
                    RowBox[{"{", 
                    RowBox[{"6.354354930509256`", ",", "6.83`"}], "}"}]],
                    Annotation[#, {6.354354930509256, 6.83}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.143032555364281, 6.76}}]},
                    RowBox[{"{", 
                    RowBox[{"6.143032555364281`", ",", "6.76`"}], "}"}]],
                    Annotation[#, {6.143032555364281, 6.76}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.609157085210423, 6.77}}]},
                    RowBox[{"{", 
                    RowBox[{"6.609157085210423`", ",", "6.77`"}], "}"}]],
                    Annotation[#, {6.609157085210423, 6.77}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.4005134168258895`, 6.69}}]},
                    RowBox[{"{", 
                    RowBox[{"6.4005134168258895`", ",", "6.69`"}], "}"}]],
                    Annotation[#, {6.4005134168258895`, 6.69}, "Tooltip"]& ], 
                    
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.230088391402754, 6.7}}]},
                    RowBox[{"{", 
                    RowBox[{"6.230088391402754`", ",", "6.7`"}], "}"}]],
                    Annotation[#, {6.230088391402754, 6.7}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.160690218637859, 6.62}}]},
                    RowBox[{"{", 
                    RowBox[{"6.160690218637859`", ",", "6.62`"}], "}"}]],
                    Annotation[#, {6.160690218637859, 6.62}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.107708307842634, 6.64}}]},
                    RowBox[{"{", 
                    RowBox[{"6.107708307842634`", ",", "6.64`"}], "}"}]],
                    Annotation[#, {6.107708307842634, 6.64}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.0768103511866105`, 6.68}}]},
                    RowBox[{"{", 
                    RowBox[{"6.0768103511866105`", ",", "6.68`"}], "}"}]],
                    Annotation[#, {6.0768103511866105`, 6.68}, "Tooltip"]& ], 
                    
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.779530945143273, 6.7}}]},
                    RowBox[{"{", 
                    RowBox[{"5.779530945143273`", ",", "6.7`"}], "}"}]],
                    Annotation[#, {5.779530945143273, 6.7}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.11750273073339, 6.57}}]},
                    RowBox[{"{", 
                    RowBox[{"6.11750273073339`", ",", "6.57`"}], "}"}]],
                    Annotation[#, {6.11750273073339, 6.57}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.368497511066874, 6.7}}]},
                    RowBox[{"{", 
                    RowBox[{"6.368497511066874`", ",", "6.7`"}], "}"}]],
                    Annotation[#, {6.368497511066874, 6.7}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.447176181269915, 6.69}}]},
                    RowBox[{"{", 
                    RowBox[{"6.447176181269915`", ",", "6.69`"}], "}"}]],
                    Annotation[#, {6.447176181269915, 6.69}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{8.022187778151666, 7.34}}]},
                    RowBox[{"{", 
                    RowBox[{"8.022187778151666`", ",", "7.34`"}], "}"}]],
                    Annotation[#, {8.022187778151666, 7.34}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{8.273704370850316, 8.08}}]},
                    RowBox[{"{", 
                    RowBox[{"8.273704370850316`", ",", "8.08`"}], "}"}]],
                    Annotation[#, {8.273704370850316, 8.08}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{7.321705587594116, 8.12}}]},
                    RowBox[{"{", 
                    RowBox[{"7.321705587594116`", ",", "8.12`"}], "}"}]],
                    Annotation[#, {7.321705587594116, 8.12}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{7.862668654849106, 8.19}}]},
                    RowBox[{"{", 
                    RowBox[{"7.862668654849106`", ",", "8.19`"}], "}"}]],
                    Annotation[#, {7.862668654849106, 8.19}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.339181605675618, 7.47}}]},
                    RowBox[{"{", 
                    RowBox[{"6.339181605675618`", ",", "7.47`"}], "}"}]],
                    Annotation[#, {6.339181605675618, 7.47}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.62393818827364, 7.42}}]},
                    RowBox[{"{", 
                    RowBox[{"6.62393818827364`", ",", "7.42`"}], "}"}]],
                    Annotation[#, {6.62393818827364, 7.42}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.340313667414351, 7.33}}]},
                    RowBox[{"{", 
                    RowBox[{"6.340313667414351`", ",", "7.33`"}], "}"}]],
                    Annotation[#, {6.340313667414351, 7.33}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.393391239436904, 7.19}}]},
                    RowBox[{"{", 
                    RowBox[{"6.393391239436904`", ",", "7.19`"}], "}"}]],
                    Annotation[#, {6.393391239436904, 7.19}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.130604464948291, 6.91}}]},
                    RowBox[{"{", 
                    RowBox[{"6.130604464948291`", ",", "6.91`"}], "}"}]],
                    Annotation[#, {6.130604464948291, 6.91}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.162564724601107, 6.92}}]},
                    RowBox[{"{", 
                    RowBox[{"6.162564724601107`", ",", "6.92`"}], "}"}]],
                    Annotation[#, {6.162564724601107, 6.92}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.242198195521951, 6.9}}]},
                    RowBox[{"{", 
                    RowBox[{"6.242198195521951`", ",", "6.9`"}], "}"}]],
                    Annotation[#, {6.242198195521951, 6.9}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.637720726575759, 6.87}}]},
                    RowBox[{"{", 
                    RowBox[{"6.637720726575759`", ",", "6.87`"}], "}"}]],
                    Annotation[#, {6.637720726575759, 6.87}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.358914325830035, 6.86}}]},
                    RowBox[{"{", 
                    RowBox[{"6.358914325830035`", ",", "6.86`"}], "}"}]],
                    Annotation[#, {6.358914325830035, 6.86}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.682246735689143, 6.89}}]},
                    RowBox[{"{", 
                    RowBox[{"6.682246735689143`", ",", "6.89`"}], "}"}]],
                    Annotation[#, {6.682246735689143, 6.89}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.216315830427621, 6.73}}]},
                    RowBox[{"{", 
                    RowBox[{"6.216315830427621`", ",", "6.73`"}], "}"}]],
                    Annotation[#, {6.216315830427621, 6.73}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.9056458675234325`, 6.76}}]},
                    RowBox[{"{", 
                    RowBox[{"5.9056458675234325`", ",", "6.76`"}], "}"}]],
                    Annotation[#, {5.9056458675234325`, 6.76}, "Tooltip"]& ], 
                    
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.124984137873648, 6.64}}]},
                    RowBox[{"{", 
                    RowBox[{"6.124984137873648`", ",", "6.64`"}], "}"}]],
                    Annotation[#, {6.124984137873648, 6.64}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.250189880093732, 6.62}}]},
                    RowBox[{"{", 
                    RowBox[{"6.250189880093732`", ",", "6.62`"}], "}"}]],
                    Annotation[#, {6.250189880093732, 6.62}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.48522319788836, 6.63}}]},
                    RowBox[{"{", 
                    RowBox[{"6.48522319788836`", ",", "6.63`"}], "}"}]],
                    Annotation[#, {6.48522319788836, 6.63}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.39383067910558, 6.65}}]},
                    RowBox[{"{", 
                    RowBox[{"6.39383067910558`", ",", "6.65`"}], "}"}]],
                    Annotation[#, {6.39383067910558, 6.65}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.496896472417024, 6.74}}]},
                    RowBox[{"{", 
                    RowBox[{"6.496896472417024`", ",", "6.74`"}], "}"}]],
                    Annotation[#, {6.496896472417024, 6.74}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.24546431211316, 6.78}}]},
                    RowBox[{"{", 
                    RowBox[{"6.24546431211316`", ",", "6.78`"}], "}"}]],
                    
                    Annotation[#, {6.24546431211316, 6.78}, 
                    "Tooltip"]& ]}}, {{}, {}}}, {{{}, {}, 
                    TagBox[
                    {GrayLevel[0.2], AbsoluteThickness[1.], Opacity[0.5], 
                    AbsoluteDashing[{2, 4}], LineBox[CompressedData["
1:eJxFxXswE3AAB/Cdq8i8N2N5ZQlXyWvjcnWt00MdulZc/6iRFrEWrnGcxx3p
Tp0ZaTbyOu/XyHRmIqlbVmrkruv800Mqyy6X3I1Q/dHv+8fnPp4JIt5lMwqF
EvXXvzdSwodMPZbc/ysiFw8/foA5frJnxQ9xqnFBTxvBs9fLv/hN4sEbH+gJ
Bpyeny/S+VDJn8s1XtX1WF3Q3SlpsSJPnNdzfKutyc2JB8XLJTZkUSjrDU1i
Sw7LrpEbuHbk4OG5t+KnmFZ1Zqn6mD3Z7lusFW0EF7nJB/q5DmSGNoPfMoRL
LTPmg4Jo5NxA5erXflwyWWi3tI9OtomqVLF6cZbgRbAxwJG8uSxXUdvxuqB5
nLeXQWZGn5wxNOEu5z0ZPb5O5N25/ouWHXg4djJJzXIm62ht6dJm/OuYS57G
g0k2d+hPzJdhyditd6nMHWTO/PLprnLMM9aec2S4kGPKhGxnGRa3zjgKbV3J
No1ZNw1SPG4/sKKhupEvujDCvQtxmoXKbWiLO7nh6oKpLhdH9MYlKikeZOuU
ZL1dDh4clTtZ/cTfcwrFVWE7ybd52z6ezcTzila6lxqzA2bZYyZsT5mNMQ/x
JLcfMR1KyMT6R5+8BSq8UMxfD/mBR8fWFK6BLPKu0EsHOoX4jklZp76GVzS/
tz4XYR333vRcGk4/NZHiLsZP4vxrpXmYX7RmliXBuuMRycVlmL298vVdKbYo
3V/TV4GVsniOQYY3OrRXLtTjJCH9VWoDnvaPZ+c04hbVKqWqCUeP+Cmm2vBg
QTblfTtmhWsFxg68ouUHU7sxv6RbzuzBusjVTR8lZtueEIT04vtTFS+P9uE/
ns4MEQ==
                    "]]},
                    Annotation[#, "Charting`Private`Tag$4266056#1"]& ]}, {}}},
                 
                 Axes->{False, False},
                 AxesLabel->{None, None},
                 AxesOrigin->{3.3354371324105987`, 3.3354371324105987`},
                 DisplayFunction->Identity,
                 Frame->{{True, False}, {True, False}},
                 FrameLabel->{{
                    FormBox[
                    TagBox["\"actual value\"", HoldForm], TraditionalForm], 
                    None}, {
                    FormBox[
                    TagBox["\"predicted value\"", HoldForm], TraditionalForm],
                     None}},
                 FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
                 
                 GridLines->{Automatic, Automatic},
                 GridLinesStyle->Directive[
                   GrayLevel[0.5, 0.5], 
                   AbsoluteThickness[1], 
                   AbsoluteDashing[{1, 2}]],
                 ImageSize->250,
                 
                 Method->{
                  "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                   Automatic, 
                   "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                   "DefaultMeshStyle" -> AbsolutePointSize[6], 
                   "DefaultPlotStyle" -> {
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02],
                    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
                   Scaled[0.05], "OptimizePlotMarkers" -> True, 
                   "OptimizePlotMarkers" -> True, 
                   "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}},
                 
                 PlotRange->{{3.335437132410591, 9.34622814337947}, {
                  3.335437132410591, 9.34622814337947}},
                 PlotRangeClipping->True,
                 PlotRangePadding->{{0, 0}, {0, 0}},
                 Ticks->{Automatic, Automatic}],
                Alignment->Center,
                StripOnInput->False], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             ColumnsEqual->False,
             
             GridBoxAlignment->{
              "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
             GridBoxDividers->{"Columns" -> {False, {
                  Opacity[0.15]}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {Automatic, {Automatic}}, "Rows" -> {{1.}}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], 
                 Offset[1.1199999999999999`], {
                  Offset[1.75]}, 
                 Offset[0.27999999999999997`]}, "Rows" -> {
                 Offset[0.2], {
                  Offset[0.8]}, 
                 Offset[0.2]}}],
            "Grid"],
           FrameMargins->{{10, 10}, {10, 5}},
           FrameStyle->None,
           StripOnInput->False],
          Deploy,
          DefaultBaseStyle->"Deploy"],
         Alignment->Center,
         BaseStyle->{
          FontWeight -> "Light", FontSize -> 11, FontFamily -> 
           ".AppleSystemUIFont", NumberMarks -> False, Deployed -> False},
         StripOnInput->False]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], 
          Offset[0.8], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[0.85],
     RoundingRadius->5,
     StripOnInput->False],
    StripOnInput->False,
    LineBreakWithin->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  PredictorMeasurementsObject[<|
   "Model" -> PredictorFunction[<|
      "ExampleNumber" -> 898, 
       "Input" -> <|
        "Preprocessor" -> 
         MachineLearning`MLProcessor[
          "ToMLDataset", <|
           "Input" -> <|
             "f1" -> <|"Type" -> "NumericalVector", "Length" -> 41|>|>, 
            "Output" -> <|
             "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
            "Preprocessor" -> 
            MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
                 MachineLearning`MLProcessor["List"], 
                 MachineLearning`MLProcessor[
                 "WrapMLDataset", <|
                  "FeatureTypes" -> {"NumericalVector"}, 
                   "FeatureKeys" -> {"f1"}, "FeatureWeights" -> Automatic, 
                   "ExampleWeights" -> Automatic, "RawExample" -> 
                   Missing["KeyAbsent", "RawExample"], "StructurePreserving" -> 
                   False|>]}|>], "ScalarFeature" -> True, "Invertibility" -> 
            "Perfect", "StructurePreserving" -> False, "Missing" -> 
            "Allowed"|>], "Processor" -> 
         MachineLearning`MLProcessor[
          "Sequence", <|
           "Input" -> <|
             "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
            "Output" -> <|
             "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
            "Processors" -> {
              MachineLearning`MLProcessor[
              "SynthesizeMissingValues", <|
               "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Distribution" -> 
                LearnedDistribution[<|
                  "ExampleNumber" -> 898, "Preprocessor" -> 
                   MachineLearning`MLProcessor[
                    "ToMLDataset", <|
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Length" -> 41|>|>,
                     "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Preprocessor" -> MachineLearning`MLProcessor["Identity"],
                     "ScalarFeature" -> True, "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
                    "Processor" -> 
                   MachineLearning`MLProcessor[
                    "Sequence", <|
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Processors" -> {
                    MachineLearning`MLProcessor[
                    "LogRescaleNumericalVector", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Indices" -> {24}, "Centers" -> {0.04314593098342069}, 
                    "Cutoffs" -> {0.00033538463930567197`}, 
                    "Version" -> {13.2, 1}, "ID" -> 1758109800256407757, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 
                    1|>|>|>], 
                    MachineLearning`MLProcessor[
                    "Standardize", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAACzypZgfu+XP9BIt2NgL5o/FbGuiAa3nD+D
+clcUqGfPwkfZWf8W6E/yozpBxY0oj9X8bwxz8aiP8j/dbZD86I/WV0uoATd
oj+Gm9dmKKuiPw0y/Kn7W6I/UlpiP3HHoT8sKD3m/OCgP/3CySr7cJ8/W2aO
XlKdnT9ZHJM8zm6cPzQ/PK9SkZw/fZKae8zUnT/oCMg+4P2fP9uwnEML76E/
LzUTTaPioz9reOhNoyCkP1a4q+JTGqI/B1Ez/2hMA8AEiMCk+D+fP0BcLLMl
HqA/dT7ZFK2ioD/ozGQh40+gP5aWGrebJp0/9+MerbAhlz9xo4ZSyVaQP3Oo
KEEjU4Q/8XWPWSYyeD9wd9QjUdNpP5OdF1H/Al0/DtOG21IgTT8eoV6P8HxA
P429KDkWqjM/+F4AMmWAKT9/W2K81nsjP3eTQBIumxg/s8CZ+Q==
                    "], "StandardDeviation" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAAAIQ46QdQ+AP1A0Za9+/nc/YwHlmJnNcz8e
tU0hU3F3P4nTZmYcZH8/QOcuO1TEgz9GFFguRzCIP0/oTX65Bow/xcoK+5xw
jj+yhtenIcOPPz0JPmtTYY8/vayUQOTAjT+7o+6G9JiLP9W7S69WqYk/SwZj
iIbOiD9hmymwdqmIP9floHbyAYk/ESULVVZIiT+YaRZNW7aJP57HOgRuh40/
nDik6aakkT+gkUnvb12RP7kTLcbotYs/E4XLS93v/T/lnIgXLhqNP+cMNnvz
CZE/PK/VBXTukj/fFJA0GHSTP9YmLjoExpE/ys89UBAkjD8h6HUkaGODP7/s
bHjt+3Y/89BVz/KdaT/+OmLvXeJZP3IB+rRcMlA/4hXanuYaRj8QVTaAkh9C
P0dslVNaIUI/Gteieh37PT9o7vdEsD05PxFhqaNPXTY//nGWtQ==
                    "], 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Version" -> {13.2, 1}, "ID" -> 64935607783415987|>]}, 
                    "Invertibility" -> "Perfect", "StructurePreserving" -> 
                    True, "Missing" -> "Allowed"|>], "PerformanceGoal" -> 
                   "DirectTraining", "BatchProcessing" -> Automatic, 
                   "Model" -> <|"RotationMatrix" -> CompressedData["
1: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
J9l5Dd8JgKWM2sPHN2vxso9C2FGXEJSKSY1y8SBg7SbnUxOVONRq9Wu0lsrF
OH2eixfmSlFk7bF0Pr0DtM3mydeVj2LGpn7n4/B6mN/pWRo8mo7pH2jc0380
4MMq9WMnGRqwpr1Io1k+E7UNVyd/k+fhYesrUCSRisdtbSZWBnuw8p2WrU0I
EY1oRPUbNb8he321yzP1LnhCFvjp4HYD2MzRXT8sWo0z817CllOuqLNVsK74
2R5kO26qLLiXYedd+jTpnkTQlx56q5+ViNdl2IUawn3ggOYNn749DqJ5Xkn/
+UI2nKo69/y8SCRun1H9MrORi5vpv8k2j9TD8RyNw33D2RD9Tv7SO0qEK7pC
7N9sdXFlLcJ30DoR2gZqM5jGQuHYSrRUX2UHPDhzslmqohr1o775nfKvhi+u
q/Hz9pHQV1Dr3W9ajJ5idOHNH9KA7vJp30YdGzAJWaCYv1IEOXdI53R78jDo
0ef0uvgmEOy/cISaOx3pGWaUHqkWoHej2K5PYAVYj10ZGKxrwFmF6x9UvZug
cly8LLB+AGimldTz/vVCH+l58585eWi809DU0z4G9cw0scplXaAWwXAsOS8M
Un0vHv3FUwvX9TuZJlTr4I2G0Nr98QaI01EvHFOpxgiZG2xqklHIPUVXrH5G
G2rIyJf0S8uQl38hZdspGWYYGi4+I03A3h7Pnn6OQPjNZXKuwjUD7mu9vMlf
VgDXOk8XMMh8Ru23Mikih0Iw1Lo/PMavBd4XRReuTSXs4faGl1BGHajyd56Q
ORQNG5d+2JJnRgLPK7qMhUOFOFJHcevl03q49tvvoWlLJu482q3lSSfg2Yh/
1V+Um8C4rkw/8kIaKjd+rUnqqQCzntW242Wh+KKIgW400AHbQs3OaTY0grR0
Dwv7+xZoIrtiT8jswK40pUXpeyPg6XferbO2E5wfTeSUmfUBZ/jnqiNFCGev
t+GJinJoJRYxGyy3omH+e4uk/QTINjM9t3KpB69/M7qGp6rQsf/fS1L7WkSW
U9b75dLg14hrvKBVETjd+brZkdgAfT2ng9oZqvHuL+I2NRMBZfku2tKsWkCV
l1Lf9uUyzGDVFj7Xngo3Jrzpbz/LxcADV44L/HWAbnsecvfoGAixp2pivZsP
HLyiH2mFvOD5gm2+I00cJJ0lF3CXbISqJeb0VRpF7Ll3vXhrsx4ELKV6CAX5
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
1KFRLg==
                    "], "Precisions" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAADXPTPKV+emP0mYF6ERALo/0/FosOqsyj+v
dMPw/bfiP8eJI2PmzvE/4zcctxE3BEAJmyq7BkkLQKRG27tUMhNAG/FUq8qA
HECuglm4FswgQF25JMNAhCVAKDcef738OUAMmZeCPIpIQCPN6GINaklAXZlS
CX1JUUBiZraoVbBdQDjTujK0XGBArIRCNlVBaUAQ3c92D8puQMoCLpSaWXBA
D45svkdveECesgrbGAx7QLIiVrp1xn9A94wkE5tbhUDy+ynoV12IQAsN90TP
LolAEIDElHL8kkCRLKUFeNuTQAMFutJ2kplAYWkPBUMlnkDxUx66FkugQJpl
9eo2vqFAtvPl22JapED9a8StvaymQCCD4vL/kahAgLGfKqu1q0D9u0TCplOw
QBS+W+pL3rZAswHtb9IovUCziMOYVM/BQJ/qRwFrVNZAA6qbbA==
                    "], "NoisePrecision" -> None, "Processor" -> 
                    MachineLearning`MLProcessor[
                    "Center", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAABBFtZd2NwjP4SA0b9Xoia/caH8n9VEJT90
oH6furwxP7DKP5C3LiS/N3/OnlSyMr+ldkjEzb4jv/ZIB/u9Ijm/GdQSvIAl
8r6jKRkVHb0wv8p+1AeKeCe/PtLAANl5J7+asadF5QnuvuNm6AmvIT+/ncwG
VccBNL8b0AWfz6cLP0G6BFcXaCM/ALwf6xOXJj9eVqDtcC8jPwtMpWRsSxK/
edzXsQxjJT8DK/kXY3klv3zXyFtZjDE/lti/l7/HFz9yf9LXZQwrP6Jk5yJ/
1TQ/XpLv8+PqJD/Hot04VBLuvjXaEfsdaSw/JIgNrsvdGj85R++o2uslPwKr
73VnqQw/tTIc2Pf6IL9yj/XXc4ouP2oJNokIgCg//HJW+x0GQL8BXdaFRTBB
vxy2BABVyy8/x7v2i1/KFb98fg56PSMjv9UKRkisctK+BXKbKg==
                    "], "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Version" -> {13.2, 1}, "ID" -> 1210029810956485142|>], 
                    "PostProcessor" -> 
                    MachineLearning`MLProcessor[
                    "FirstValues", <|
                    "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, 
                    "Key" -> "f1", "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
                     "Method" -> "Multinormal", 
                    "Options" -> <|
                    "CovarianceType" -> <|
                    "Value" -> "Full", "Options" -> <||>|>, 
                    "IntrinsicDimension" -> <|
                    "Value" -> 41, "Options" -> <||>|>|>|>, 
                   "TrainingInformation" -> <|
                    "Configurations" -> 
                    Dataset[<|<|
                    "Value" -> "Multinormal", 
                    "Options" -> <|
                    "CovarianceType" -> <|"Value" -> "Full"|>, 
                    "IntrinsicDimension" -> <|"Value" -> "Heuristic"|>|>, 
                    "NaiveImputer" -> 
                    MachineLearning`MLProcessor[
                    "ImputeMissing", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAAAlB9Zd2NwjPxKA0b9Xoia/+5j8n9VEJT/r
o36furwxP0XHP5C3LiS/Bn3OnlSyMr8lfkjEzb4jv0lPB/u9Ijm/a8QSvIAl
8r4wMxkVHb0wv0uM1AeKeCe/JszAANl5J7+FFqhF5QnuvlFl6AmvIT+/sdEG
VccBNL+8hgWfz6cLP8WcBFcXaCM/48kf6xOXJj8bSaDtcC8jP45npWRsSxK/
i+zXsQxjJT+mHPkXY3klvy7XyFtZjDE/hvW/l7/HFz94fdLXZQwrP0Ft5yJ/
1TQ/d4vv8+PqJD8uLt04VBLuvr7iEfsdaSw/yqUNrsvdGj/lOu+o2uslPwHe
73VnqQw/tEYc2Pf6IL9BmfXXc4ouPxsANokIgCg/pHRW+x0GQL+iWdaFRTBB
vyG5BABVyy8/Edb2i1/KFb/5eg56PSMjv1+ZRkisctK+sUabCg==
                    "], "StandardDeviation" -> CompressedData["
1:eJxTTMoPSmVkYGDQBGK2nCNmTn/f2/N/8eSY++e9Pa/LmZwqhg/22wQbDiUD
6WOq76/o/Htvz62Xq5/C+MFeX2Xtka7/7+2/PnlakAikhV6UTeMH0v7np2V9
//3enrGa6dAOoL5X7wIuZAL1ydjV16sB6fDbH5inAOljvv8/dALln5+0dC8D
8kNnvbo9Bcg/L7TwwlQgnS2m9qUOaN7u4infnUHu2sFkuhwoHlcU9nEpUDzy
wzpDHaA7zW/ETv0E1G+ae/+aFlB+dfqr+I9AeqXUjJ2WQLq07sc+EN0yk0/S
C6iuVErquz+Q/uXUyyANFPeYyRpxE2hekZeZ2HQgvaol/SofUD7f9sFBayD/
wSz9E5ZAevujeSEOQPW5nHIf5gL5hvO6i1KB/KyYnReXA9XPuG67UAoYLgDp
Jq8g
                    "], "Method" -> "NaiveSampler", "VectorLength" -> 41, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Type" -> "NumericalVector", "Version" -> {13.2, 1}, "ID" -> 
                    2628110491450176983|>], "EMIterations" -> 1|> -> <||>|>, 
                    TypeSystem`Assoc[
                    
                    TypeSystem`Struct[{
                    "Value", "Options", "NaiveImputer", "EMIterations"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Struct[{"Value"}, {
                    TypeSystem`Atom[String]}], 2], TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer]}], 
                    TypeSystem`Assoc[
                    TypeSystem`UnknownType, TypeSystem`UnknownType, 
                    TypeSystem`AnyLength], 1], <||>], "BestModelInformation" -> 
                    Dataset[<|
                    "Configuration" -> {
                    "Multinormal", "CovarianceType" -> "Full", 
                    "IntrinsicDimension" -> "Heuristic"}, "ModelUtility" -> 
                    Missing[]|>, 
                    TypeSystem`Struct[{"Configuration", "ModelUtility"}, {
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[String], TypeSystem`AnyType, 
                    TypeSystem`AnyType}], TypeSystem`UnknownType}], <||>]|>, 
                   "NaiveImputer" -> 
                   MachineLearning`MLProcessor[
                    "ImputeMissing", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAAAlB9Zd2NwjPxKA0b9Xoia/+5j8n9VEJT/r
o36furwxP0XHP5C3LiS/Bn3OnlSyMr8lfkjEzb4jv0lPB/u9Ijm/a8QSvIAl
8r4wMxkVHb0wv0uM1AeKeCe/JszAANl5J7+FFqhF5QnuvlFl6AmvIT+/sdEG
VccBNL+8hgWfz6cLP8WcBFcXaCM/48kf6xOXJj8bSaDtcC8jP45npWRsSxK/
i+zXsQxjJT+mHPkXY3klvy7XyFtZjDE/hvW/l7/HFz94fdLXZQwrP0Ft5yJ/
1TQ/d4vv8+PqJD8uLt04VBLuvr7iEfsdaSw/yqUNrsvdGj/lOu+o2uslPwHe
73VnqQw/tEYc2Pf6IL9BmfXXc4ouPxsANokIgCg/pHRW+x0GQL+iWdaFRTBB
vyG5BABVyy8/Edb2i1/KFb/5eg56PSMjv1+ZRkisctK+sUabCg==
                    "], "StandardDeviation" -> CompressedData["
1:eJxTTMoPSmVkYGDQBGK2nCNmTn/f2/N/8eSY++e9Pa/LmZwqhg/22wQbDiUD
6WOq76/o/Htvz62Xq5/C+MFeX2Xtka7/7+2/PnlakAikhV6UTeMH0v7np2V9
//3enrGa6dAOoL5X7wIuZAL1ydjV16sB6fDbH5inAOljvv8/dALln5+0dC8D
8kNnvbo9Bcg/L7TwwlQgnS2m9qUOaN7u4infnUHu2sFkuhwoHlcU9nEpUDzy
wzpDHaA7zW/ETv0E1G+ae/+aFlB+dfqr+I9AeqXUjJ2WQLq07sc+EN0yk0/S
C6iuVErquz+Q/uXUyyANFPeYyRpxE2hekZeZ2HQgvaol/SofUD7f9sFBayD/
wSz9E5ZAevujeSEOQPW5nHIf5gL5hvO6i1KB/KyYnReXA9XPuG67UAoYLgDp
Jq8g
                    "], "Method" -> "NaiveSampler", "VectorLength" -> 41, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Type" -> "NumericalVector", "Version" -> {13.2, 1}, "ID" -> 
                    2628110491450176983|>], "InputDimension" -> 0, 
                   "OutputDimension" -> 41, 
                   "Log" -> <|
                    "Example" -> 
                    MachineLearning`MLDataset[<|
                    "f1" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 1, 
                    "Values" -> CompressedData["
1:eJxTTMoPSmViYGBgBGJNIK7Ist9ntWGCvemcK7WVOVPtDzoe9X9/dqb9dtXC
4F/v5thzyYT8+XJvjr1GearBxM2z7I8BZTNtZ9hfKk1UyXWfZh/BJmy5mnGq
fbrZ4pd7zKbYcytnWm8Sm2I/71b/ej6dKfaHPe9OPx42xR4k6nJmin2u64WC
oO9T7U+E/Pv14dIMe/loQZM5V+baN7VO2Chit8hes7Y8zXjWMvtU/b5V//+t
sb8360JhKMNGqDkb7BVTdFr71622///n25N1PMvsT8WIOZ+MXmwf/P3pRlHH
xfa225QyLFYutr89catCktpi+19vjgFtWmC/UdB0/t0Zs+zrKnOALphkX5qk
Xpak3ma/XSXP6/7cSnugZ641dWTaT92l37+WI8r+WkvfaiYOD3vTBQ8WPt1g
ZK8C9r+UPQMUdE/arlYS89UOxgcALneWhA==
                    "], "ID" -> 4635246341379078022|>|>, <|
                    "ExampleNumber" -> 1, "ExampleWeights" -> 1, 
                    "LogDensityRatios" -> 0, "RawExample" -> False|>], 
                    "TrainingTime" -> 0.177486, "MaxTrainingMemory" -> 
                    1619016, "DataMemory" -> 296520, "FunctionMemory" -> 
                    59376, "LanguageVersion" -> {13.2, 1}, "Date" -> 
                    DateObject[{
                    2023, 8, 1, 10, 12, 28.594815`8.208862272657734}, 
                    "Instant", "Gregorian", -4.], "ProcessorCount" -> 4, 
                    "ProcessorType" -> "x86-64", "OperatingSystem" -> 
                    "MacOSX", "SystemWordLength" -> 64, "Evaluations" -> {}|>,
                    "LogPDFDistribution" -> 
                   MachineLearning`TailedQuantileDistribution[<|
                    "Quantiles" -> {6.07088734253851, 6.07088734253851, 
                    6.095422220961959, 6.139582333771467, 6.150821740348716, 
                    6.166772593140232, 6.176929859830782, 6.1923097388355615`,
                     6.20425963698722, 6.216873024332063, 6.318474894752949}, 
                    "LeftBoundary" -> 6.095422220961959, "LeftScale" -> 
                    0.012267439211724351`, "LeftTailNorm" -> 0.2|>], 
                   "Entropy" -> 
                   Around[-253.10256688054784`, 0.891433624356406], 
                   "EntropySampleSize" -> 10|>], 
                "Output" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "EvaluationStrategy" -> "ModeFinding", "Version" -> {13.2, 1},
                 "ID" -> 895810465636885430|>], 
              MachineLearning`MLProcessor[
              "LogRescaleNumericalVector", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Indices" -> {24}, "Centers" -> {0.04314593098342069}, 
                "Cutoffs" -> {0.00033538463930567197`}, 
                "Version" -> {13.2, 1}, "ID" -> 1295242045016063173, 
                "Output" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>|>], 
              
              MachineLearning`MLProcessor[
              "Standardize", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Mean" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAACzypZgfu+XP9BIt2NgL5o/FbGuiAa3nD+D
+clcUqGfPwkfZWf8W6E/yozpBxY0oj9X8bwxz8aiP8j/dbZD86I/WV0uoATd
oj+Gm9dmKKuiPw0y/Kn7W6I/UlpiP3HHoT8sKD3m/OCgP/3CySr7cJ8/W2aO
XlKdnT9ZHJM8zm6cPzQ/PK9SkZw/fZKae8zUnT/oCMg+4P2fP9uwnEML76E/
LzUTTaPioz9reOhNoyCkP1a4q+JTGqI/B1Ez/2hMA8AEiMCk+D+fP0BcLLMl
HqA/dT7ZFK2ioD/ozGQh40+gP5aWGrebJp0/9+MerbAhlz9xo4ZSyVaQP3Oo
KEEjU4Q/8XWPWSYyeD9wd9QjUdNpP5OdF1H/Al0/DtOG21IgTT8eoV6P8HxA
P429KDkWqjM/+F4AMmWAKT9/W2K81nsjP3eTQBIumxg/s8CZ+Q==
                 "], "StandardDeviation" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAAAIQ46QdQ+AP1A0Za9+/nc/YwHlmJnNcz8e
tU0hU3F3P4nTZmYcZH8/QOcuO1TEgz9GFFguRzCIP0/oTX65Bow/xcoK+5xw
jj+yhtenIcOPPz0JPmtTYY8/vayUQOTAjT+7o+6G9JiLP9W7S69WqYk/SwZj
iIbOiD9hmymwdqmIP9floHbyAYk/ESULVVZIiT+YaRZNW7aJP57HOgRuh40/
nDik6aakkT+gkUnvb12RP7kTLcbotYs/E4XLS93v/T/lnIgXLhqNP+cMNnvz
CZE/PK/VBXTukj/fFJA0GHSTP9YmLjoExpE/ys89UBAkjD8h6HUkaGODP7/s
bHjt+3Y/89BVz/KdaT/+OmLvXeJZP3IB+rRcMlA/4hXanuYaRj8QVTaAkh9C
P0dslVNaIUI/Gteieh37PT9o7vdEsD05PxFhqaNPXTY//nGWtQ==
                 "], 
                "Output" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Version" -> {13.2, 1}, "ID" -> 3037891080026016735|>]}, 
            "Invertibility" -> "Perfect", "StructurePreserving" -> True, 
            "Missing" -> "Imputed"|>]|>, 
       "Output" -> <|
        "Preprocessor" -> 
         MachineLearning`MLProcessor[
          "ToMLDataset", <|
           "Input" -> <|"f1" -> <|"Type" -> "Numerical"|>|>, 
            "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
            "Preprocessor" -> 
            MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
                 MachineLearning`MLProcessor["List"], 
                 MachineLearning`MLProcessor[
                 "WrapMLDataset", <|
                  "FeatureTypes" -> {"Numerical"}, "FeatureKeys" -> {"f1"}, 
                   "FeatureWeights" -> Automatic, "ExampleWeights" -> 
                   Automatic, "RawExample" -> 
                   Missing["KeyAbsent", "RawExample"], "StructurePreserving" -> 
                   False|>]}|>], "ScalarFeature" -> True, "Invertibility" -> 
            "Perfect", "StructurePreserving" -> False, "Missing" -> 
            "Allowed"|>], "Processor" -> 
         MachineLearning`MLProcessor[
          "Sequence", <|
           "Input" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
            "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
            "Processors" -> {
              MachineLearning`MLProcessor[
              "ToVector", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                "Output" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Version" -> {13.2, 1}, "ID" -> 2243861272990366060|>], 
              MachineLearning`MLProcessor[
              "Standardize", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Mean" -> {8.396926503340762}, 
                "StandardDeviation" -> {3.100408284980153}, 
                "Output" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Version" -> {13.2, 1}, "ID" -> 9003256909179662445|>], 
              MachineLearning`MLProcessor[
              "FromVector", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Output" -> <|
                 "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                "Version" -> {13.2, 1}, "ID" -> 5068397814240598494|>], 
              MachineLearning`MLProcessor[
              "FirstValues", <|
               "Info" -> <|"Type" -> "Numerical", "Weight" -> 1|>, "Key" -> 
                "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> 
                False, "Missing" -> "Allowed"|>]}, "Invertibility" -> 
            "Perfect", "StructurePreserving" -> False, "Missing" -> 
            "Allowed"|>], "ProbabilityPostprocessor" -> Identity, 
         "InverseProcessorFunction" -> (8.396926503340762 + 
          3.100408284980153 #& ), 
         "ProcessorFunction" -> (-2.708329268767424 + 
          0.32253816532631324` #& ), "Name" -> "value", 
         "Quantiles" -> {-1.8890823288385883`, 1.6007806199921208`}, "Mean" -> 
         8.396926503340758|>, "LabelSplitter" -> 
       MachineLearning`MLProcessor[
        "FeatureLabelSplit", <|
         "Processor" -> MachineLearning`MLProcessor["ListSplit"], 
          "PreferLabeled" -> True, "KeepLabelsFormat" -> False|>], 
       "RecalibrationFunction" -> None, "ImputationStrategy" -> Automatic, 
       "Prior" -> Automatic, "Utility" -> (DiracDelta[#2 - #]& ), "Threshold" -> 
       0, "PerformanceGoal" -> Automatic, "BatchProcessing" -> Automatic, 
       "Model" -> <|"Trees" -> {
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{14, 24, 8, 33, 15, 14, 12, 26, 33, 4, 2, 
               15, 5, 3, 8, 4, 32, 1, 39, 3, 25, 13, 12, 32, 39, 40, 12, 11, 
               32, 29, 26, 29, 9, 18, 16, 8, 41, 6, 37, 22, 39, 1, 41, 18, 1, 
               40, 17, 1, 31, 14, 38, 40, 39, 35, 27}], 
             "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGAwB+L////XK/5cth/Id5jb98geSBeESjwB0QfanR+DaIff
Ea/sger0ZR49Bqn7IBP4Aiz/8OA9sLym1RsQveCL8H8QbWDcAZafsGTCJxCd
wCBZA9Lvn133FKT/wqbUkyD++zWyv8D25m19D1L3gDP4L0g8X1Htyn4g/X9P
EVh9QHzeE5D4/EnS78DqX0U8BbuH8fUHsHs8Zl0G8fmZ7c+B9K2fJPYKrO/e
6o9g+7VajoHd02L+CaTuv0vzb5D8g4IpT8HyIiH3QeLn48Q/g/S/7294CaZv
/dwGovtd0i6CaHmVRW/B9hkuYnMA2bPI4zlYntH+LIiOV+t/A6L9u7L2gsUn
l30Cqd/gGPMZZP5+Z/sbIPH9zAUfwO6U0b8Dkl/Q+/k92N82mq9A4vXuUadA
9H11XjDtv8jjKkgdw6IHD8Dh29H52R4AAWrrgA==
              "], "LeafValues" -> 
             RawArray["Real32",{0.09453952312469482, -0.36053264141082764`, 
               0.18273426592350006`, -0.08295709639787674, 
               0.2137841284275055, -0.13463439047336578`, \
-0.01103232055902481, -0.28073635697364807`, 0.2512170970439911, 
               0.2851050794124603, -0.11962978541851044`, \
-0.3240218460559845, -0.22491297125816345`, 0.04049719497561455, 
               0.16838692128658295`, -0.24485351145267487`, \
-0.318375825881958, 0.009503146633505821, -0.3498126268386841, 
               0.22977577149868011`, 0.13170252740383148`, 0.1980624943971634,
                0.272390216588974, -0.28718316555023193`, \
-0.11134996265172958`, -0.2473590224981308, -0.16619722545146942`, 
               0.25361984968185425`, -0.20731571316719055`, 
               0.14842768013477325`, 
               0.30771881341934204`, -0.18313418328762054`, 
               0.06795354932546616, -0.22162583470344543`, \
-0.043505989015102386`, -0.03423568978905678, 
               0.023907886818051338`, -0.0597071573138237, \
-0.33904463052749634`, -0.3290075659751892, 
               0.007726429961621761, -0.1536351889371872, 
               0.22953231632709503`, -0.13675403594970703`, \
-0.01806333102285862, -0.17865270376205444`, -0.09671582281589508, \
-0.0018295026384294033`, 0.05529254302382469, 0.29520183801651, 
               0.0814652070403099, 0.018713222816586494`, 0.04915831983089447,
                0.032283227890729904`, -0.019901858642697334`, 
               0.3140699863433838}], "Children" -> 
             RawArray["Integer16",{{2, 3}, {6, 4}, {7, 5}, {8, 9}, {10, 12}, {
               13, 17}, {16, 11}, {20, 14}, {19, 30}, {34, 24}, {15, -12}, {
               26, 28}, {32, 36}, {42, 21}, {25, 33}, {38, 18}, {35, 40}, {23,
                39}, {27, 22}, {-3, 29}, {-15, -22}, {-20, -23}, {-17, -24}, {
               43, 46}, {-8, -26}, {41, 45}, {-5, -28}, {-13, 
               31}, {-21, -30}, {49, 55}, {-29, -32}, {50, 48}, {-16, -34}, {
               37, -35}, {54, 44}, {52, 
               53}, {-4, -38}, {-2, -39}, {-19, -40}, {47, 
               51}, {-6, -42}, {-9, -43}, {-11, -44}, {-36, -45}, {-27, -46}, \
{-25, -47}, {-18, -48}, {-33, -49}, {-10, -50}, {-1, -51}, {-41, -52}, {-14, \
-53}, {-37, -54}, {-7, -55}, {-31, -56}}], "NominalSplits" -> {}, "RootIndex" -> 
             1, "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{14, 24, 8, 15, 15, 14, 12, 33, 28, 2, 6, 
               23, 5, 41, 6, 32, 24, 13, 38, 24, 3, 11, 5, 29, 35, 3, 38, 41, 
               8, 5, 30, 39, 33, 3, 5, 13, 8, 26, 35, 37, 38, 22, 13, 17, 29, 
               4, 37, 17, 16, 12, 26, 38, 27, 2}], 
             "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGAwYwCDA0unrrIA8h3m9j2yB9Ibngs/tP///z//nUvP9wP5
EwJ+vAHx9WUePQbxDR79eQZSN8GX9yWIZtDceAtEGxh3vACpq//X/Xg/kM7P
T/kHUq/QMvErSHx9COtFkPj5S59WgcQd8ra+B9t37P97kPz964bvwOJaHRtB
fPs3t96B1P/fU/QUJM6w2PYjSP2Bd+v/gOgGPh4wX+BV7zyQev/suqcg9fNf
lZ8C0f2a3JfA7uWeehEk3z+F8wFInL+k+jvYXwu/HQLpL3h2+gFIPn/Fzxcg
efmsJTfA5tg+fgWi39/6uQ1E73fzugo2d1H2T7C6CT4nwPz3sWB/rV/kAQ6v
DfqJv8Hh8M7mOVg87ukXEO3/c/rN/bDwBpnHXPABrD9I4w1IX4GKIjg8DeoC
P4D9w3XkINidnh8+gMQd5C98tQcAGTT1UQ==
              "], "LeafValues" -> 
             RawArray["Real32",{0.07602059096097946, -0.29137298464775085`, 
               0.1812160611152649, -0.1194164976477623, 
               0.14749975502490997`, -0.18502794206142426`, \
-0.03560764342546463, -0.25046029686927795`, 0.22790507972240448`, 
               0.14258137345314026`, -0.2675180733203888, \
-0.20265796780586243`, -0.040741920471191406`, -0.14856918156147003`, 
               0.14376014471054077`, 0.031703200191259384`, 
               0.007620121352374554, 0.1912143975496292, 
               0.2105538696050644, -0.20450763404369354`, \
-0.22996139526367188`, 
               0.1154528260231018, -0.16564495861530304`, \
-0.08538481593132019, 0.24970126152038574`, 0.10540593415498734`, 
               0.1573527306318283, 
               0.08434713631868362, -0.2485707551240921, \
-0.18163585662841797`, 
               0.1728932112455368, -0.12471836060285568`, \
-0.14681807160377502`, -0.008987566456198692, -0.2673797309398651, 
               0.05571746081113815, 0.20688752830028534`, 
               0.025399837642908096`, -0.06004536151885986, \
-0.11159851402044296`, -0.02084176428616047, -0.2754777669906616, 
               0.007469664793461561, -0.13428272306919098`, \
-0.07338374108076096, -0.09963935613632202, 0.06360913068056107, 
               0.04594879969954491, -0.0014459979720413685`, 
               0.24030667543411255`, -0.25536036491394043`, 
               0.03888464719057083, 0.017468882724642754`, 
               0.01818172261118889, -0.11742107570171356`}], "Children" -> 
             RawArray["Integer16",{{2, 3}, {6, 4}, {7, 5}, {8, 9}, {12, 13}, {
               15, 16}, {20, 10}, {14, 24}, {21, 17}, {11, 50}, {19, 29}, {39,
                23}, {22, 31}, {18, 30}, {35, 37}, {33, 42}, {25, 
               26}, {-3, -19}, {-8, -20}, {41, 28}, {-5, 27}, {-6, 32}, {38, 
               44}, {36, 49}, {-10, -26}, {-18, -27}, {-22, -28}, {-21, 
               34}, {-12, -30}, {-15, -31}, {43, 54}, {-23, -33}, {-7, 
               40}, {-29, -35}, {46, 47}, {-9, -37}, {51, 
               53}, {-13, -39}, {-4, 45}, {-34, -41}, {-2, -42}, {48, 
               52}, {-14, -44}, {-24, -45}, {-40, -46}, {-1, -47}, {-36, \
-48}, {-17, -49}, {-25, -50}, {-11, -51}, {-16, -52}, {-43, -53}, {-38, -54}, \
{-32, -55}}], "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 
             0, "NominalNodeNumber" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{1, 24, 6, 15, 16, 14, 12, 33, 26, 16, 2, 1,
                5, 22, 7, 3, 21, 24, 12, 33, 35, 5, 29, 12, 30, 19, 27, 24, 
               27, 39, 3, 12, 32, 18, 27, 30, 40, 31, 41, 26, 35, 33, 17, 16, 
               34, 1, 41, 27, 4, 40, 1, 8, 2, 38, 38}], 
             "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGAwB2IgXbAqcK89kHaY2/cIRCesKjpr////f/47l57vB9L7
t83fBqL1ZR493g+U/yAT+AKkbsIeTzDdwMh3F0Qr1HI+BdEGxh0vQPrnz7B4
AVKfwCBZAzbPUXU22Lzq9Acgmn+l80EQ7c/a+x2kzkHswDuQuvgdzh9A/AkK
BVtBfH+hnr0gdfOrA+6BxW3j34LVFZq/A5vfsOkDyN4HSdwfQeL/7y39ADb3
+6Z3IPq+ge0PsL6F3w6Bzcuuewr2h731Z7A5unq/QerOx4l/Bqs37QHbv+B1
6RWQ/H7n2edAfAOdHU9A/H6XtItgfl3gB7B9p32/gv0lbPYHrL/y/nsQvX5H
2DOw+45avQKpq5c58xDs77eKF8Hu4zD8CfbXFcOdINo+N+wGWJ+M/h0Q3Z98
8iFIf8G9hz/A+pemHgbr32F5Yz8AlKj/rg==
              "], "LeafValues" -> 
             RawArray["Real32",{0.061163280159235, -0.19535963237285614`, 
               0.14441511034965515`, -0.07306401431560516, 
               0.08148407936096191, -0.11137682944536209`, \
-0.011425517499446869`, -0.14389117062091827`, 0.18188367784023285`, 
               0.1296154111623764, -0.14234484732151031`, \
-0.20739834010601044`, 0.10354545712471008`, 
               0.029809311032295227`, -0.16790585219860077`, \
-0.196774423122406, -0.2296302616596222, -0.055432528257369995`, 
               0.1529715210199356, 0.08413241803646088, 0.10426229983568192`, 
               0.09564273059368134, 0.1409272402524948, 0.012185512110590935`,
                0.16775482892990112`, 
               0.18935132026672363`, -0.21786950528621674`, \
-0.16847631335258484`, -0.20164485275745392`, -0.08434277772903442, \
-0.1703759729862213, 
               0.12485865503549576`, -0.1357536017894745, \
-0.11437888443470001`, -0.024169735610485077`, -0.20778681337833405`, 
               0.05548178404569626, 0.1632159799337387, 
               0.0441407784819603, -0.03612228110432625, 
               0.024874625727534294`, -0.09882330149412155, \
-0.23196329176425934`, -0.020969228819012642`, -0.0071889059618115425`, 
               0.017809737473726273`, -0.002798032481223345, 
               0.006929553113877773, -0.09981705993413925, 
               0.037034522742033005`, -0.05767468363046646, 
               0.03366635739803314, 
               0.19908680021762848`, -0.06764274090528488, \
-0.0023539564572274685`, 0.05239994078874588}], "Children" -> 
             RawArray["Integer16",{{2, 3}, {6, 4}, {7, 5}, {8, 9}, {17, 10}, {
               13, 23}, {15, 11}, {12, 25}, {19, 18}, {29, 32}, {14, -12}, {
               24, 22}, {38, 40}, {27, 28}, {26, 16}, {30, 35}, {50, 34}, {21,
                31}, {20, 36}, {-5, -21}, {-10, -22}, {-13, -23}, {43, 
               46}, {-3, -25}, {37, 52}, {-2, 42}, {-8, -28}, {-15, -29}, {48,
                41}, {-16, -31}, {-19, -32}, {-11, 33}, {-33, -34}, {
               39, -35}, {-17, -36}, {-20, -37}, {-9, -38}, {55, 
               51}, {-18, -40}, {45, 49}, {-30, -42}, {-27, -43}, {54, 
               44}, {-44, -45}, {-14, -46}, {-24, 
               47}, {-47, -48}, {-6, -49}, {-41, -50}, {-4, 
               53}, {-39, -52}, {-26, -53}, {-51, -54}, {-7, -55}, {-1, \
-56}}], "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
             "NominalNodeNumber" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{1, 24, 6, 32, 17, 23, 12, 26, 33, 11, 1, 5,
                1, 13, 3, 16, 39, 36, 21, 1, 19, 25, 2, 24, 40, 41, 6, 36, 29,
                13, 9, 14, 18, 25, 5, 29, 41, 34, 29, 16, 41, 29, 40, 39, 38, 
               5, 41, 1, 23, 3, 41, 39, 10}], 
             "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGAwBWIgXbAqcK89kE6INXsGplcVnQXRBQ3NT+z///+//pz4
k/1Aml9nwu79QHGDR3/A6gRO73kEVn+/4TWIfnBD/g+IXsAR/wGkL77Y+SNI
3/1r8q9BdDyr3xuwOb29T0G0vHYOWDxfUe0KyNyA4oM7Qfr8WXu/g9Wr9b8B
iTPs5PkKEr9vYv0XJO6/5cJLEG3/5tY7sHveSbwB2ctw8fJFkLp830fHQOIN
H3m+gPj8HyJ+gvgPOpXegd299MN1sL8OxILtPx8n/hkkf+DepZdge1jnXwfx
J7SYfwKHw3KuKyB6Awc3JDzinn4B6Xvf3wB2R79L2kWw+1WlHoLk58da3wDL
d14+BpZ/HwuWT2CQrAHJ77fwuQgSr5c58xCs7vvUvyD5BfZPGB1A7o9gBMv7
L/K4CqLnVz16uh8AuKPv4A==
              "], "LeafValues" -> 
             RawArray["Real32",{0.009748409502208233, -0.18721821904182434`, 
               0.10471098870038986`, -0.060472726821899414`, 
               0.1056748554110527, -0.11616480350494385`, 
               0.059370990842580795`, -0.17122435569763184`, 
               0.11239166557788849`, 
               0.15000909566879272`, -0.08494727313518524, \
-0.17167462408542633`, -0.11327807605266571`, 0.10027116537094116`, 
               0.02937133051455021, 
               0.06522050499916077, -0.009019304066896439, 
               0.14040179550647736`, 
               0.10267334431409836`, -0.044346023350954056`, 
               0.08169952780008316, -0.1333034634590149, -0.07584529370069504,
                0.13507720828056335`, -0.1476956158876419, \
-0.18494191765785217`, -0.1715904027223587, 
               0.029500575736165047`, -0.12126254290342331`, \
-0.0946478620171547, -0.1659674346446991, -0.1336827576160431, 
               0.0820392444729805, -0.019335787743330002`, 
               0.011753256432712078`, 0.12607704102993011`, 
               0.15668196976184845`, -0.1524989753961563, \
-0.16714465618133545`, -0.06495260447263718, -0.005751125048846006, \
-0.028897825628519058`, -0.01849459856748581, 0.04045623540878296, 
               0.0011071069166064262`, -0.17604976892471313`, 
               0.022024381905794144`, -0.045479536056518555`, 
               0.0014204339822754264`, -0.0966264009475708, \
-0.05421740561723709, 0.14228643476963043`, 0.0175054669380188, 
               0.16224336624145508`}], "Children" -> 
             RawArray["Integer16",{{2, 3}, {6, 4}, {7, 5}, {8, 9}, {19, 10}, {
               16, 14}, {24, 11}, {15, 13}, {17, 36}, {28, 22}, {12, 30}, {37,
                21}, {23, 32}, {-7, 27}, {-3, 20}, {34, 40}, {35, 
               18}, {-18, -19}, {47, 33}, {-16, -21}, {-13, -22}, {49, 
               39}, {-9, -24}, {45, 25}, {26, 38}, {-25, -27}, {43, 46}, {
               29, -29}, {-6, -30}, {-12, 31}, {-31, -32}, {-14, -33}, {
               41, -34}, {48, 52}, {-5, -36}, {51, 
               53}, {-8, -38}, {-26, -39}, {-23, -40}, {44, 
               42}, {-20, -42}, {-41, -43}, {-15, -44}, {-17, -45}, {-2, \
-46}, {-28, -47}, {-4, 
               50}, {-1, -49}, {-11, -50}, {-48, -51}, {-10, -52}, {-35, \
-53}, {-37, -54}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
             "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{26, 24, 8, 30, 14, 15, 25, 12, 2, 3, 39, 6,
                24, 2, 39, 39, 23, 11, 30, 12, 16, 6, 5, 24, 23, 41, 5, 41, 
               23, 4, 12, 9, 30, 41, 20, 23, 26, 17, 31, 9, 35, 16, 8, 16, 16,
                15, 34, 38, 17, 36, 39, 1, 40, 37, 39}], 
             "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGAwB2IgvcDs8nZ7IJ0Qa/YMRG94LvwQRDfIrX1m//////lW
Bo/3A/kTAn68AYkHxOc9AdEGj/6A1ReEbrkFUseflfBkP5Bev23vLRCd7/vo
GEhfwI6jb0Hy9qwlL0Di84WZb4Do/n1LL4LV5af8A6kT6JT+BrZfMPomSL1+
+eHXIPn3/Q0vQfT/+xnPQXT8kgmvQLT852kfQHR9X9hTsHma3JfA9BTOByD6
/PeFR0DmHkiz/wAyr95r4jUQ/4O99WeQPQ+qc66B/Ses/gOknv+kzEaw+6dy
/QTb57BnL9i96lfB9t8PLHgH0p9wVxscPgbMpx6A6AkiTOfA4XIr8jXIvP7k
kw/B7uv/fQ9Ma+e8BunbEKTzBaSOYX7tQ7C6yYq3we5/Z/Mc7K5A3Tsg8fed
l8HhlrAh8RPY3TrNZ0D8BZ4zjoH412s8yvcDAH5t/PY=
              "], "LeafValues" -> 
             RawArray["Real32",{-0.11695600301027298`, 0.01780995912849903, 
               0.02325635403394699, -0.05260944366455078, 0.09486246854066849,
                0.003893257351592183, -0.10885664820671082`, 
               0.06557495146989822, -0.12852908670902252`, \
-0.14557158946990967`, -0.07329977303743362, 0.11845996230840683`, 
               0.01029795128852129, 0.06623924523591995, 0.05870085209608078, 
               0.1077512875199318, 
               0.08323173969984055, -0.04523124173283577, \
-0.08206411451101303, 0.09532713145017624, 
               0.11933034658432007`, -0.022555159404873848`, \
-0.10710766911506653`, -0.13690975308418274`, -0.08237403631210327, \
-0.11021215468645096`, -0.1376267373561859, 0.09674043953418732, 
               0.03459645435214043, 0.061103593558073044`, 
               0.11086415499448776`, -0.08635394275188446, \
-0.09452734142541885, -0.06458383053541183, 
               0.08447962254285812, -0.033667612820863724`, \
-0.12286719679832458`, -0.15008294582366943`, 
               0.018671493977308273`, -0.015190457925200462`, 
               0.0033323816023766994`, 
               0.03170005604624748, -0.07746570557355881, 
               0.12720268964767456`, -0.019882138818502426`, \
-0.006983795203268528, -0.06756776571273804, 
               0.0814514085650444, -0.0481996014714241, -0.03492262214422226, 
               0.018917974084615707`, 
               0.0008856856147758663, -0.06146511062979698, 
               0.02471020817756653, -0.0034202432725578547`, \
-0.07662905007600784}], "Children" -> 
             RawArray["Integer16",{{3, 2}, {5, 4}, {8, 6}, {7, 11}, {12, 
               21}, {17, 18}, {13, 15}, {26, 9}, {10, 23}, {22, 32}, {30, 
               20}, {28, 38}, {14, 19}, {-3, -15}, {34, 16}, {-16, -17}, {48, 
               35}, {24, 33}, {-14, -20}, {27, 43}, {45, 39}, {-9, -23}, {-10,
                25}, {31, 46}, {-24, -26}, {-1, 36}, {-12, -28}, {41, 
               29}, {-29, -30}, {47, -31}, {-7, -32}, {-11, -33}, {55, 
               42}, {-8, -35}, {49, 44}, {37, -37}, {-27, -38}, {50, 
               53}, {-22, 
               40}, {-40, -41}, {-2, -42}, {-34, -43}, {-21, -44}, {-36, \
-45}, {54, 51}, {-25, -47}, {-5, -48}, {
               52, -49}, {-18, -50}, {-13, -51}, {-46, -52}, {-4, -53}, {-39, \
-54}, {-6, -55}, {-19, -56}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
             "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{26, 24, 8, 18, 17, 14, 12, 33, 26, 2, 1, 5,
                36, 23, 24, 40, 5, 27, 37, 19, 40, 33, 34, 38, 36, 8, 10, 5, 
               19, 36, 24, 39, 29, 16, 14, 41, 28, 12, 35, 16, 2, 37, 26, 28, 
               9, 41, 4, 41, 37, 41, 11}], 
             "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGAwBmIgvcDs8nZ7IO0wt+8RiN7wXPghiBbw6Vtt//////OG
4fv3A+n5VgaP9wPFDR79eQaSn7DH8wWIbmDkuwtSZ89a8gIkv4Aj/gOIH1/s
/BGkT37BjGkgOj8/5R9IvuHPxFcgeX25u6dB/AQGyRoQn3/J1l8gdfYaXw+A
xBl28nwFq7v/7TKIX/Ds9AMQv78h4jJIXfxjtQsgmn/insMgeYe//IfA7p/2
7CpI3fzqgHtgdzdteABWfz/nCYheb/j6DYjeP50PbO4E2/i3IH0BtyJfg/Ud
YXoFtm851xVwOHzNA4dLgYriS7D9i7J/gv3V//seSF2AiO5TsHjc9Tfg8KkL
/ABSb7DK9yNI3H/Ryor9QO8cWDp1lQXI/CuGO0H6+zdyXgT7V8//OYj+/3Eq
mK9/rf35fgCvhuJC
              "], "LeafValues" -> 
             RawArray["Real32",{-0.12516137957572937`, 0.03143971785902977, 
               0.07664873450994492, -0.0509251244366169, 
               0.02550525777041912, -0.0832466185092926, \
-0.017139514908194542`, -0.1108475998044014, 0.09924446791410446, 
               0.061470236629247665`, 
               0.05776214599609375, -0.11646003276109695`, \
-0.07209056615829468, 0.03420213982462883, -0.039763301610946655`, 
               0.053833600133657455`, 0.049509137868881226`, 
               0.012889743782579899`, -0.05393525958061218, 
               0.08465991914272308, -0.0881410613656044, 0.09085866808891296, 
               0.0038987931329756975`, -0.07752492278814316, \
-0.10763080418109894`, 
               0.040538281202316284`, -0.12251421809196472`, \
-0.08320675045251846, 0.07253389060497284, 
               0.07867972552776337, -0.02693408913910389, \
-0.09406067430973053, 
               0.09390051662921906, -0.0015872911317273974`, \
-0.061387546360492706`, 
               0.01815100386738777, -0.09638093411922455, \
-0.007582333870232105, -0.10280290991067886`, -0.03477313369512558, \
-0.015143366530537605`, -0.069492407143116, -0.04592423886060715, 
               0.011797362938523293`, 
               0.005228012800216675, -0.1135164424777031, \
-0.11095552891492844`, 0.021907009184360504`, 
               0.024825910106301308`, -0.031779445707798004`, 
               0.002877910854294896, 0.10431458801031113`}], "Children" -> 
             RawArray["Integer16",{{3, 2}, {6, 4}, {7, 5}, {8, 9}, {14, 18}, {
               17, 22}, {24, 11}, {10, 29}, {15, 13}, {21, 28}, {12, 31}, {36,
                20}, {19, -14}, {39, 30}, {16, 25}, {-5, -17}, {35, 43}, {41, 
               23}, {-10, -20}, {-13, -21}, {-3, -22}, {-7, 33}, {34, -24}, {
               45, 26}, {-16, -26}, {27, 46}, {-25, -28}, {-11, -29}, {51, 
               32}, {49, 40}, {38, -32}, {-30, -33}, {37, 
               50}, {-19, -35}, {-2, 
               48}, {-8, -37}, {-23, -38}, {-12, -39}, {-4, 
               42}, {-31, -41}, {-6, -42}, {-40, -43}, {44, 
               47}, {-18, -45}, {-1, -46}, {-27, -47}, {-44, -48}, {-36, \
-49}, {-15, -50}, {-34, -51}, {-9, -52}}], "NominalSplits" -> {}, "RootIndex" -> 
             1, "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{26, 24, 8, 18, 20, 15, 12, 33, 18, 3, 37, 
               2, 3, 41, 4, 21, 11, 24, 32, 36, 11, 9, 41, 15, 26, 40, 23, 1, 
               23, 7, 24, 41, 34, 35, 4, 40, 32, 1, 14, 38, 18, 24, 1, 37, 41,
                1, 3, 24, 9, 37}], "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGAwAmIgvcDs8nZ7IJ0Qa/YMRG94LvwQRAv49K22/////3ou
1vf7gfwL6p5vQOIGj/6A1U3Y4/kCRC/gdbkLUjff88/T/UA6f6bKaZD6A7lT
boDE+bMSnoDE32v/uACi42WiwfT/ifu/g9QpaMR/BqmrN739AcT/sPbxO7A9
v6wWgegG28VPQPQB3drTIHX9mtyXwPpbToLNPd+U+hukb8JTljsgeXuTFrA7
4h+zPQarc9izF0Tvr05/AFIX4JLwDaRO3mHXSpA4vy3LL7B+b+2HIPH/L47e
A4nrX9yxBCS+wPDJA7A/2DdfBZtnPv0Y2D8LfR9C3GHwGUTf37b3PYiulznz
EKRPYIvrPpC++xlqF8Hms7B9BPP33X8E4jeILv8B9mf/NCYHkD6+T4/2AwAy
8OKk
              "], "LeafValues" -> 
             RawArray["Real32",{-0.07312627881765366, -0.015526236034929752`, 
               0.0692407488822937, -0.0428759939968586, 0.07440955936908722, 
               0.025486566126346588`, -0.06912150233983994, \
-0.07901623845100403, 0.06912365555763245, 0.0466642864048481, 
               0.04988603666424751, 
               0.034575410187244415`, -0.09605852514505386, \
-0.048513371497392654`, 0.04288935288786888, 
               0.012507755309343338`, -0.02134932391345501, \
-0.05547579377889633, -0.053301308304071426`, 0.00032569796894676983`, 
               0.05618427321314812, -0.061774857342243195`, \
-0.08928085118532181, -0.0967261865735054, 
               0.02722247876226902, -0.04012873396277428, \
-0.06491629034280777, -0.07314694672822952, 
               0.05811000615358353, -0.07676760107278824, \
-0.08679477125406265, 0.08322043716907501, 
               0.03242897614836693, -0.033362627029418945`, 
               0.07917860150337219, 0.03714718669652939, 
               0.02188262529671192, -0.00764997536316514, 
               0.0049518379382789135`, 
               0.0025956130120903254`, -0.025418417528271675`, \
-0.0110554164275527, -0.04264475032687187, -0.002219064859673381, 
               0.01074786763638258, 
               0.0034022685140371323`, -0.045689601451158524`, 
               0.01762024685740471, 
               0.07697723060846329, -0.035063453018665314`, \
-0.050100360065698624`}], "Children" -> 
             RawArray["Integer16",{{3, 2}, {5, 4}, {7, 6}, {8, 9}, {19, 15}, {
               16, 17}, {23, 12}, {14, 31}, {10, 24}, {-5, 11}, {-11, -12}, {
               13, 22}, {21, 26}, {20, 28}, {32, 36}, {33, 41}, {18, 25}, {-7,
                42}, {37, 43}, {-3, -21}, {-8, -22}, {-13, 27}, {-1, 
               29}, {-10, 35}, {50, 46}, {-14, -27}, {-23, -28}, {-15, -29}, {
               30, -30}, {-24, -31}, {34, 48}, {47, -33}, {49, 
               40}, {-9, -35}, {-25, -36}, {38, -37}, {-2, 
               39}, {-16, -39}, {-38, -40}, {-34, -41}, {-17, -42}, {-19, \
-43}, {44, 
               45}, {-20, -45}, {-44, -46}, {-26, -47}, {-6, -48}, {-32, \
-49}, {-4, -50}, {-18, -51}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
             "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{1, 24, 6, 30, 17, 17, 11, 16, 18, 3, 1, 32,
                14, 21, 8, 11, 24, 25, 12, 40, 40, 3, 22, 11, 10, 1, 37, 4, 7,
                37, 26, 37, 2, 17, 41, 38, 16, 39, 37, 41, 41, 33, 40, 37, 26,
                40, 14, 17, 14, 7, 24}], 
             "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGAwBmIgXbAqcK89kG74M/EViE5YVXQWzJdb+8z+/////Vwn
3uwH0ud5oi/vB8kXbboLkmdQSHwHohfwutwFqVs/c95TkLp4tf43IHUPTv56
CBLfX1vyGiTuz9r7Haw/uusySPx84ffTIP6CSzbfQfz8K7tfgdTpe/x6D6bl
7oLlL8xnPgKS/38v4gGIf8DL+xvI3gfHpn8Cid8PWfAcpL7eWAFs//yYejCd
7xAMdvf/pzpgfR8MF7E5AGmDbasug/QbGP2eB6IP5E65ATan8j7Y3n6XtIsg
er8ZN1hfwK3I1yD5+AnHzoHFJY5fB7svyQis7v5BaTDtX/LzN0h9gzT3BpB6
+TmPnoH4DoJeb8Hmq/OeAvvHMhzCDyx4B3bf0QywOoUktQv2sPAAAInY50I=

              "], "LeafValues" -> 
             RawArray["Real32",{-0.001004184945486486, -0.08092238008975983, 
               0.06565844267606735, -0.030371276661753654`, 
               0.05927393585443497, 
               0.011248921975493431`, -0.027625618502497673`, \
-0.08153004944324493, -0.061497997492551804`, 0.017034364864230156`, 
               0.0242060124874115, 0.04166208207607269, 0.018315572291612625`,
                0.04258187860250473, -0.01745138317346573, \
-0.039706453680992126`, -0.005661890842020512, 
               0.0422198586165905, -0.04937027022242546, 0.04679875075817108, 
               0.03178180381655693, -0.053665246814489365`, 
               0.028010454028844833`, 
               0.022581737488508224`, -0.0433434396982193, 
               0.06307423114776611, 
               0.045240823179483414`, -0.07175598293542862, \
-0.08746649324893951, -0.05165557563304901, -0.06741829961538315, 
               0.03622618690133095, 
               0.005220139864832163, -0.05129910260438919, \
-0.0037313399370759726`, -0.0127342464402318, -0.023813167586922646`, \
-0.04341183602809906, -0.012946941889822483`, -0.001589830033481121, \
-0.034953925758600235`, -0.013080671429634094`, -0.03658359497785568, \
-0.03317909315228462, -0.021812476217746735`, 0.012417447753250599`, 
               0.007148849777877331, -0.07208824902772903, 
               0.014564258977770805`, 0.00630791625007987, 
               0.0008850668091326952, 0.06753461062908173}], "Children" -> 
             RawArray["Integer16",{{2, 3}, {5, 4}, {7, 6}, {9, 13}, {16, 
               12}, {14, 21}, {27, 8}, {47, 15}, {10, 23}, {17, 
               11}, {-11, -12}, {19, 32}, {25, -14}, {36, 35}, {18, 33}, {46, 
               34}, {-3, -18}, {-9, -19}, {20, 22}, {-6, -21}, {37, 
               24}, {-20, -23}, {-10, 31}, {-22, 42}, {26, 
               51}, {-5, -27}, {-2, 28}, {29, 
               30}, {-28, -30}, {-29, -31}, {-24, -32}, {
               45, -33}, {-16, -34}, {50, 41}, {-15, 39}, {44, 38}, {40, 
               43}, {-37, -39}, {-36, -40}, {-7, -41}, {-35, -42}, {-25, \
-43}, {-38, -44}, {-4, -45}, {-13, -46}, {49, 
               48}, {-8, -48}, {-47, -49}, {-1, -50}, {-17, -51}, {-26, \
-52}}], "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
             "NominalNodeNumber" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{1, 24, 6, 30, 17, 17, 12, 30, 19, 22, 11, 
               2, 3, 28, 41, 24, 15, 14, 28, 22, 3, 5, 26, 11, 9, 41, 28, 32, 
               15, 38, 35, 39, 32, 32, 27, 38, 18, 20, 40, 31, 41, 41, 39, 38,
                25, 27, 17}], "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGDQB2IgXbAqcK89kG5ISXsJog+sXHACzJdb+8z+/////Vwn
3uwH0u+3693bDxQ3ePTnGUjeQe/lTRCdwP/7JIgOMND5ClLPf8PlA0jdgdwp
N8D8rIQnIP6DCX+ugM3byHkRxG+4/+IBiK//ifUpyPz9tSWvQXT/fOFPIHr9
Io/nIHUKAjxgc89r2jwHiZ9vSv0N1m+7+AnI3gesU86DzdXkvgQS33B93nuQ
+IZ/a5+D5Y+s+wyiL2x98Q1EF7SF/QGp31/4fy9Yvfj5x2B1J389BIm/3+MN
tuf9Qt+HYPvixD+DaPuNSz+D1H9w+HEBpF5A+Rk4fPIdb18Eyf+PXQ2m/Rd5
XAXzIw5fAptz5OsfcLh1dH4GqV9/TvzJfgA8f9N5
              "], "LeafValues" -> 
             RawArray["Real32",{-0.010357133112847805`, -0.04524294659495354, 
               0.02232876420021057, 0.0020838622003793716`, 
               0.05325205251574516, 
               0.0015353619819507003`, -0.03319361433386803, \
-0.05093284323811531, 0.010539942421019077`, 0.03529977425932884, 
               0.0585799477994442, 
               0.00653468444943428, -0.06277521699666977, \
-0.020609447732567787`, 0.03305891156196594, 0.010366789065301418`, 
               0.03539513051509857, 0.012587379664182663`, 
               0.034065503627061844`, -0.04597596079111099, 
               0.010287567973136902`, -0.019050071015954018`, \
-0.03685801103711128, -0.023959733545780182`, -0.03765929490327835, \
-0.04544666036963463, -0.06813282519578934, 0.05005355924367905, 
               
               0.04167284443974495, -0.059085432440042496`, \
-0.043726108968257904`, -0.05788480490446091, -0.015651321038603783`, 
               0.0072511970065534115`, 
               0.005592426750808954, -0.05705934390425682, \
-0.021329158917069435`, -0.011103544384241104`, -0.028941091150045395`, \
-0.008360184729099274, -0.0019687055610120296`, -0.001792950090020895, 
               0.005308834835886955, 0.01417683344334364, 
               0.017591973766684532`, -0.03987846523523331, 
               0.05467812716960907, -0.02460566721856594}], "Children" -> 
             RawArray["Integer16",{{2, 3}, {5, 4}, {7, 6}, {8, 18}, {20, 
               15}, {21, 19}, {26, 12}, {11, 9}, {-9, 10}, {-10, -11}, {
               14, -12}, {13, 25}, {24, 22}, {-3, -15}, {33, 16}, {44, 
               17}, {-17, -18}, {27, -19}, {23, -20}, {34, 41}, {32, 
               36}, {-14, -23}, {45, 38}, {-8, -25}, {-13, 31}, {-2, 29}, {28,
                46}, {-5, -29}, {35, 30}, {-30, -31}, {-26, -32}, {
               39, -33}, {-6, 43}, {-1, 40}, {-27, -36}, {47, 
               37}, {-37, -38}, {-24, -39}, {-4, -40}, {-35, -41}, {-21, 
               42}, {-42, -43}, {-34, -44}, {-16, -45}, {-7, -46}, {-28, \
-47}, {-22, -48}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
             "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{14, 24, 8, 32, 17, 32, 7, 1, 37, 3, 39, 38,
                26, 28, 40, 38, 12, 39, 39, 22, 40, 5, 11, 5, 5, 25, 39, 30, 
               19, 39, 20, 40, 3, 38, 16, 21, 38, 41, 13, 3, 18, 23, 24, 1, 
               27, 37}], "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGDQA+L////HK1md2w/kN/yZ+MoeSG94LvwQRAfcmfbUHiif
37vuKUj+gov3IxB/f3X6AxC/4LDCNxB/frDTgf1Amn8i93kQXb9X/yKI9o+Y
dhRM7zd/DqLXH+P+CqL3+6ndBNHv1+w8BjLH4P/N3yBz/qfevgUSP/93E5ie
31f3EUTb36s5AVbflgY2R77B5DWI7p/C+QBE32edfx1sP+e1PyBaf9eKxWD5
XKavIPMfJHF/BJnP/37mJbD9XYxgc/1D/98AySsI8HwFyfd3xlwB8Q8UiLE4
gOyXcngCNmf+vStge898Afurf9nSh2D9+dsfgej4jzc/gf233OssSH+ASwI4
XPhVFZ6A+BM8P3wAh9vH52/2AwAK7fL6
              "], "LeafValues" -> 
             RawArray["Real32",{0.00010446825763210654`, -0.0392044372856617, 
               0.03945670649409294, -0.0189535990357399, 
               0.021540045738220215`, -0.03925226256251335, 
               0.0010523536475375295`, -0.03816961497068405, \
-0.03887612372636795, 0.049474071711301804`, -0.0011425415286794305`, 
               0.041192296892404556`, 
               0.01632249541580677, -0.05092306435108185, \
-0.02848178707063198, 0.023622434586286545`, 
               0.011469418182969093`, -0.02189880795776844, 
               0.04093166068196297, 
               0.030616726726293564`, -0.028289156034588814`, 
               0.024419723078608513`, 0.016301020979881287`, 
               0.03923530876636505, 0.025744765996932983`, 
               0.03597426041960716, -0.018862232565879822`, \
-0.010595256462693214`, -0.020049506798386574`, -0.050454284995794296`, 
               0.017121849581599236`, 0.004584609996527433, 
               0.0026005671825259924`, -0.014798307791352272`, \
-0.008970781229436398, -0.045410577207803726`, -0.05732201412320137, \
-0.009794306010007858, -0.047335781157016754`, 0.006332031451165676, 
               0.009700755588710308, -0.005363578908145428, \
-0.05973513796925545, 0.04339616000652313, 
               0.015843503177165985`, -0.000047816018195590004`, \
-0.026464393362402916`}], "Children" -> 
             RawArray["Integer16",{{2, 3}, {6, 4}, {7, 5}, {9, 18}, {32, 
               17}, {19, 10}, {29, 8}, {13, 36}, {15, 11}, {39, 27}, {-10, 
               12}, {-12, -13}, {14, -14}, {-8, -15}, {-3, 16}, {-16, -17}, {
               20, 26}, {25, 23}, {21, 30}, {-6, 28}, {22, 44}, {-1, -23}, {
               24, 43}, {-19, -25}, {-5, -26}, {46, 37}, {
               31, -28}, {-21, -29}, {-2, 35}, {-20, -31}, {-11, -32}, {-4, 
               33}, {34, 41}, {-33, -35}, {42, -36}, {-9, 
               38}, {-27, -38}, {-37, -39}, {40, 
               45}, {-7, -41}, {-34, -42}, {-30, -43}, {-24, -44}, {-22, \
-45}, {-40, -46}, {-18, -47}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
             "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{14, 24, 6, 35, 17, 13, 39, 25, 7, 2, 1, 24,
                1, 3, 4, 40, 38, 1, 26, 39, 38, 31, 7, 14, 6, 16, 15, 6, 22, 
               41, 39, 11, 9, 18, 12, 5, 2, 41, 24, 40, 7, 19}], 
             "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGDQAuL////rz71xeT+QvyEg7p09kD6wcsEJe6C4vHzlgf1A
en/F+6cg+v51w3cg+n/q7Vsg9QZ5zY9B6vZXpz8A8Q/kTrkB4sfX3H0L4ie0
6HwH8fMXV78B6eOfyH0eRPvvvHsXJP8gccENkH0OcRs+g+gFbs2/wXxBr7cg
ffoi2edA6uunGTwEqZ8wdRbYPv+yL8dA4vrXfF6D3fcw4RFIPuBW5Guwvk+s
YPfWb59xCUTn3xB/AKLtN+6+CHYHI/tqsHvZ8m+B1St+Xwn217m6TyD6PMfj
lyD5DxVOZ8HhoNfwDOzurqy9IDp+reIHsHm/z9wA66txewyi5X1lvu8HAOHF
0mc=
              "], "LeafValues" -> 
             RawArray["Real32",{0.029836973175406456`, -0.036078449338674545`,
                0.036897312849760056`, -0.013595308177173138`, \
-0.00962301716208458, -0.013083864003419876`, 0.020722124725580215`, 
               0.04245518893003464, 
               0.03534618392586708, -0.025231938809156418`, \
-0.048267513513565063`, 0.013664845377206802`, 0.0023054457269608974`, 
               0.0254146046936512, 0.005662083625793457, 
               0.012242929078638554`, -0.03680075705051422, \
-0.005564326886087656, -0.03248895704746246, 0.00495162745937705, 
               0.018559355288743973`, 0.01720237173140049, 
               0.02576667070388794, -0.025247151032090187`, 
               0.011831858195364475`, 
               0.03270271420478821, -0.022611839696764946`, 
               0.014614167623221874`, -0.039022237062454224`, \
-0.022175032645463943`, -0.036041829735040665`, -0.007923554629087448, \
-0.04564831778407097, -0.02780763991177082, 0.0016607519937679172`, 
               0.0306079238653183, 0.00006501736061181873, 
               0.008027958683669567, -0.01813090778887272, \
-0.015294975601136684`, -0.009218978695571423, -0.04569625481963158, \
-0.004803600255399942}], "Children" -> 
             RawArray["Integer16",{{2, 3}, {4, 6}, {9, 5}, {8, 14}, {34, 
               18}, {11, 7}, {24, 22}, {21, -9}, {32, 10}, {16, 28}, {-3, 
               12}, {13, 20}, {-12, -14}, {15, 31}, {-5, 19}, {17, 
               23}, {-10, -18}, {26, -19}, {-16, -20}, {-13, -21}, {27, 
               37}, {-8, 25}, {-17, -24}, {35, -25}, {-23, -26}, {38, 
               39}, {-1, -28}, {30, 29}, {-29, -30}, {-11, -31}, {36, -32}, {
               33, -33}, {41, -34}, {
               40, -35}, {-7, -36}, {-15, -37}, {-22, -38}, {-6, -39}, {-27, \
-40}, {-4, 42}, {-2, -42}, {-41, -43}}], "NominalSplits" -> {}, "RootIndex" -> 
             1, "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{13, 14, 6, 32, 28, 39, 3, 13, 3, 1, 11, 16,
                24, 13, 4, 11, 4, 14, 26, 41, 15, 36, 6, 37, 15, 9, 24, 6, 32,
                35, 36, 35, 40, 32, 36, 41, 14, 19, 3, 27, 1}], 
             "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGDQBOL////X857dsR9Ix38Xfb0fKO4QpDjdHkhvOPDvqT1Q
fH6y0QeQ/PueHbtA9H7vnhsgdQ/i0z+B5NfPnPcUJL5eUfQNSDyhaNNdkH4G
hcR3IHrBJZvvIPrAq7MfQOr56569A6kLuFb3DMTPd1l0H6Q/30bzFYj+79L8
G0wHml0E0favP7wE0fqn550D0fIZFx6A6Pkx9WB776tvAcu/l/BcCjL3A8f7
r2Bz5c2ugM09uf8CWPxy3QGw/Vmcl8D8OxxnQO6awGG4EkR/uJT6BezeUx9u
gv2/KfMGmF+46iuIbvARfQOiDR4x/AfRCtscPoLlr3i+tQcAy4m3MQ==
              "], "LeafValues" -> 
             RawArray["Real32",{
               0.03304076939821243, -0.03629855439066887, \
-0.003654325846582651, -0.03172617405653, 
               0.022079605609178543`, -0.013559134677052498`, \
-0.0023381884675472975`, 0.0003066246572416276, -0.017125047743320465`, 
               0.009588105604052544, 
               0.018003903329372406`, -0.03488573059439659, \
-0.0035132786724716425`, 
               0.01664227992296219, -0.02874457836151123, \
-0.023089317604899406`, -0.01813877746462822, 0.007585442624986172, 
               0.006666900590062141, -0.010945710353553295`, 
               0.021979179233312607`, 0.012804833240807056`, 
               0.01603083871304989, -0.039371803402900696`, \
-0.03171325474977493, 0.033948346972465515`, -0.02385696768760681, 
               0.02833513170480728, 
               0.030533771961927414`, -0.004411723464727402, \
-0.013792301528155804`, 0.00815674290060997, -0.003997677471488714, 
               0.01197534054517746, -0.007464574184268713, 
               0.0068546864204108715`, 
               0.0009791136253625154, -0.014747977256774902`, \
-0.02469666674733162, -0.003608408384025097, 
               0.0016491005662828684`, -0.009419736452400684}], "Children" -> 
             RawArray["Integer16",{{2, 3}, {4, 7}, {11, 5}, {6, 20}, {8, 
               29}, {9, -7}, {17, 33}, {-4, 19}, {13, 10}, {-10, -11}, {23, 
               12}, {-12, 14}, {-1, -14}, {15, 
               16}, {-13, -16}, {-15, -17}, {-3, 18}, {22, 40}, {38, 37}, {25,
                21}, {28, -22}, {-18, -23}, {24, -24}, {-2, 26}, {
               27, -26}, {-25, -27}, {-5, -28}, {-21, -29}, {39, 30}, {31, 
               32}, {-30, -32}, {-31, -33}, {34, 36}, {
               35, -35}, {-8, -36}, {-34, -37}, {-20, -38}, {-9, -39}, {-6, 
               41}, {-19, -41}, {-40, -42}}], "NominalSplits" -> {}, 
             "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
             0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{1, 24, 6, 36, 6, 15, 15, 7, 36, 31, 15, 23,
                2, 15, 39, 4, 1, 27, 39, 12, 2, 1, 38, 40, 39, 1, 38, 39, 40, 
               29, 3, 23, 4, 33, 15, 41, 38, 22, 38, 33, 3, 14, 36, 10}], 
             "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGDQAWIgXbAqcK89kHYQO/AOTAcpTrf/////enXVq/uB9Hx7
h1f7geINfFUvQeL6n1ifgsTXuz97A5b/w3gEJG/g03oNJN//u+wZSPy/w569
YDpx8UsQzW/D9wSsj4f/AojeL1R0D6zfbfFrEG1vFPsRrE5q6VWweY/+PAO5
50DulBsgeoHCs+dg98Vt+Ax2h3fmQpD6+xt3bQHR/rmMz8Hm9rKDzb///vIt
kDkXHiveAqnn/xDxE8RfYO/F6gDiv8k/AbY3mu07mLb0eweSF3g+8RvYHw98
L4LE3y/0fQimpeb8BtH6n5/eBLsv/dw7kLp8a6F7YHMLV30F8c8n8r4H8wv2
nLAHANGt0/I=
              "], "LeafValues" -> 
             RawArray["Real32",{0.027167152613401413`, -0.031206704676151276`,
                0.010211547836661339`, -0.012426506727933884`, 
               0.006193087436258793, 
               0.03144822642207146, -0.01779463328421116, \
-0.0007530477596446872, 0.005260495003312826, 0.006391187198460102, 
               0.004305983427911997, 
               0.024178238585591316`, -0.010249093174934387`, 
               0.0043644895777106285`, 0.006777673028409481, 
               0.030324622988700867`, 0.017096899449825287`, 
               0.019037429243326187`, -0.02534833922982216, 
               0.023922313004732132`, -0.016719508916139603`, \
-0.03168698400259018, -0.016063302755355835`, 0.0028341233264654875`, 
               0.013095644302666187`, -0.016503479331731796`, 
               0.014376590959727764`, -0.006724479142576456, 
               0.013831058517098427`, -0.024547599256038666`, \
-0.008953177370131016, -0.011932289227843285`, -0.025469541549682617`, \
-0.012612223625183105`, -0.02675933577120304, -0.01434321328997612, \
-0.025158395990729332`, 
               0.0024331456515938044`, -0.0050572664476931095`, \
-0.0032982558477669954`, 0.001023733289912343, 
               0.00730404257774353, -0.012132336385548115`, \
-0.006264718249440193, -0.021166034042835236`}], "Children" -> 
             RawArray["Integer16",{{2, 3}, {4, 5}, {20, 6}, {7, 12}, {9, 8}, {
               31, 18}, {26, 28}, {-6, 15}, {14, 10}, {27, 11}, {-11, -12}, {
               39, 13}, {-13, 24}, {19, -15}, {16, 
               17}, {-9, -17}, {-16, -18}, {30, -19}, {-3, -20}, {32, 21}, {
               22, 25}, {29, 23}, {-23, -24}, {-14, -25}, {-22, 
               36}, {-1, -27}, {-10, -28}, {41, -29}, {-21, -30}, {-7, 42}, {
               37, -32}, {34, 33}, {44, -34}, {-2, 
               35}, {-35, -36}, {-26, -37}, {43, 38}, {-38, -39}, {-5, 
               40}, {-40, -41}, {-8, -42}, {-31, -43}, {-4, -44}, {-33, \
-45}}], "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
             "NominalNodeNumber" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{1, 24, 6, 35, 6, 16, 40, 26, 1, 31, 20, 32,
                39, 33, 13, 2, 11, 15, 14, 38, 39, 38, 14, 39, 14, 30, 39, 6, 
               32, 3, 2, 39, 22, 27, 2, 33, 17, 41}], 
             "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGBQA2IgXbAqcK89kHYQO/AOTAcpTgfRHy7XHbD/////fHuH
V/tB6jaeuA/i2/8+cwPMf3r3EUhdwq83P0C0ANuLSyCaYb3Ud7A5fHGXwOp/
fL0GUr9hYc1dEP/+dcN3+4F0f2j4Q5C4w5OgV2B7zjU8A4nPP8L0CkSfF559
C0T7v+O8DaLts1efAqk/cOPkW5D5G64+3QmiFVKWfwHr1zj0E6ROX/TTLZC6
Bg79PyDx99fX7gGJ80/kPg+i13uIvwSbHycKNjde9cxvsLzQqV8gfQo/DvwE
mTshh3cnSL+8rMJ7sHp20Uv7AQZBqJk=
              "], "LeafValues" -> 
             RawArray["Real32",{0.018807318061590195`, -0.027026169002056122`,
                0.03045591339468956, 
               0.005687664728611708, -0.0018684432143345475`, 
               0.010237263515591621`, -0.014637565240263939`, 
               0.004902088548988104, 
               0.011711935512721539`, -0.023303186520934105`, \
-0.005940000992268324, 0.00603363336995244, 0.002353907562792301, 
               0.03503338620066643, 0.00991731882095337, 
               0.016666555777192116`, 
               0.019129380583763123`, -0.006428506225347519, 
               0.011666645295917988`, 0.0032272872049361467`, 
               0.007191826123744249, 
               
               0.014483160339295864`, -0.015050912275910378`, \
-0.010416362434625626`, -0.01716628111898899, -0.009358623065054417, \
-0.020707737654447556`, 
               0.00009697805944597349, -0.0018779401434585452`, \
-0.0007302157464437187, -0.00011730023106792942`, 0.015200262889266014`, 
               0.002181034069508314, -0.006445694249123335, \
-0.013757607899606228`, -0.010303620249032974`, -0.019186820834875107`, \
-0.006444714963436127, -0.008843868970870972}], "Children" -> 
             RawArray["Integer16",{{2, 3}, {4, 5}, {17, 6}, {7, 8}, {10, 
               13}, {28, 9}, {-1, 20}, {22, 19}, {34, -10}, {11, 12}, {-3, 
               31}, {-11, 18}, {16, 14}, {-14, 15}, {-15, -16}, {32, -17}, {
               23, -18}, {-13, -19}, {-9, 30}, {21, 
               27}, {-8, -22}, {-5, -23}, {36, 24}, {26, 
               25}, {-25, -26}, {-24, -27}, {-21, -28}, {29, 33}, {-4, 
               37}, {-20, -31}, {-12, -32}, {-6, -33}, {-29, 35}, {-7, 
               38}, {-34, -36}, {-2, -37}, {-30, -38}, {-35, -39}}], 
             "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0,
              "NominalNodeNumber" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{27, 14, 7, 2, 8, 36, 37, 3, 6, 2, 3, 36, 
               24, 39, 4, 14, 6, 25, 2, 6, 40, 22, 1, 27, 24, 32, 3, 39, 40, 
               5, 38, 12, 40, 37, 41}], 
             "NumericalThresholds" -> {0.196260541677475, -0.8464314341545104,
               1.2627133727073672`, -0.8716202974319457, -0.7324393987655639, 
              0.10060806944966318`, -0.12702412903308866`, 
              2.388556599617005, -0.3092427849769592, 
              0.7886977493762971, -0.3835629820823669, 
              1.7436331510543825`, -0.8817518949508666, 
              1.4497092962265017`, -0.4726275354623794, -0.8231321275234221, \
-0.1509241312742233, -0.7985469996929168, -0.78089901804924, 
              1.0000000180025095`*^-35, -0.22739674150943753`, \
-1.7321141362190244`, -0.8476366400718688, 
              0.8522909879684449, -0.5220322012901305, 1.2748593688011172`, 
              0.12886169552803042`, -0.4196410179138183, -0.3890514820814132, \
-0.39814276993274683`, -0.17754136770963666`, -0.8152554929256438, \
-0.3833316564559936, -0.3647881299257278, 0.02350949496030808}, "LeafValues" -> 
             RawArray["Real32",{-0.0149846775457263, 0.02277655340731144, 
               0.002645397325977683, 0.006095083896070719, 
               0.007578996941447258, 
               0.0050681717693805695`, -0.012499634176492691`, 
               0.015550636686384678`, -0.024943653494119644`, 
               0.0009265138651244342, 0.0036963270977139473`, 
               0.004415240604430437, -0.026139726862311363`, \
-0.006945877801626921, -0.014058485627174377`, 0.003227052977308631, 
               0.009008851833641529, -0.015758110210299492`, \
-0.010525878518819809`, 
               0.011347492225468159`, -0.00903921015560627, \
-0.01332329772412777, -0.008081164211034775, -0.006765223573893309, 
               0.00023590127239003778`, -0.006742606405168772, \
-0.004928589332848787, -0.00161351531278342, 0.01872393861413002, 
               0.002149381209164858, 0.013336939737200737`, 
               0.0035506251733750105`, 
               0.013148331083357334`, -0.00327748479321599, \
-0.0033592272084206343`, -0.007713100872933865}], "Children" -> 
             RawArray["Integer16",{{3, 2}, {4, 11}, {8, 10}, {-2, 5}, {6, 
               28}, {7, -7}, {-5, -8}, {9, -9}, {12, 17}, {-4, 21}, {15, 
               24}, {13, 14}, {-1, -14}, {-13, -15}, {23, 16}, {19, 29}, {18, 
               20}, {-10, -19}, {-16, -20}, {-18, -21}, {22, 34}, {-11, 
               33}, {-3, -24}, {25, 26}, {27, -26}, {31, -27}, {-12, -28}, {
               32, 30}, {-17, -30}, {-29, -31}, {-25, -32}, {-6, -33}, {-23, \
-34}, {35, -35}, {-22, -36}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
             "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{29, 24, 12, 17, 3, 6, 25, 31, 32, 36, 36, 
               1, 14, 22, 31, 1, 40, 40, 22, 1, 5, 26, 24, 18, 40, 40, 26, 35,
                33, 12, 20, 38, 41, 18, 1, 1, 18, 39, 36, 18}], 
             "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGDQAOL////Xr1p+dj+Q7yB24J09kFZQOfvBHijuX5fyZj+Q
1j8X+AREz7d3eAVSx1Ak/AKkboFb4mMQvUFA/TFY/c7KVSB1/GZKR0C0/V35
tyD6/EPF1yB9AWdOfwSpL7jy/xpI/fzZa1+B5OtDl60Dq+O+cQNE9wcceIms
f7+x4FGwuXmdr8F8f/M3IPMmlHJ8BZkjHyZ9FmyO01SwfvkF93+A3Sue9wGk
ruDZ6QcgewPSks+C1Mcb7fsMks9nyL0NouO5lS+C1G2wYn0C9peH/iuQuv19
65+C3eW//yOIvu9zfSeIfj8zDcz/32LweT8AaErGPQ==
              "], "LeafValues" -> 
             RawArray["Real32",{-0.019757453352212906`, 
               0.0012671160511672497`, 
               0.019380295649170876`, -0.010575877502560616`, \
-0.00809706375002861, 0.00975503958761692, 
               0.019139349460601807`, -0.004830557852983475, 
               0.02049115113914013, 0.008751125074923038, 
               0.022631576284766197`, 
               0.011267761699855328`, -0.007553728763014078, \
-0.002851189114153385, 0.005483857821673155, 0.003200700506567955, 
               0.006117180455476046, 0.012278863228857517`, 
               0.0020379386842250824`, -0.011391526088118553`, 
               0.008659088052809238, -0.001983386930078268, \
-0.012215077877044678`, -0.0016579772345721722`, -0.02263510599732399, \
-0.00019135908223688602`, -0.005727389361709356, 
               0.004085484892129898, -0.005107166711241007, \
-0.006184140220284462, 0.007474730256944895, 
               0.0003499548474792391, -0.008355614729225636, \
-0.0030785370618104935`, -0.012172571383416653`, -0.00232770387083292, 
               0.006644585635513067, -0.0069953459315001965`, \
-0.004787140060216188, -0.010797835886478424`, -0.003600927535444498}], 
             "Children" -> 
             RawArray["Integer16",{{3, 2}, {4, 6}, {19, 25}, {29, 5}, {-5, 
               17}, {11, 7}, {10, 8}, {-8, 9}, {-9, -10}, {14, -11}, {13, 
               12}, {-12, 15}, {16, 20}, {-7, -15}, {-13, -16}, {-3, -17}, {
               18, 36}, {-6, -19}, {-1, 21}, {-14, -21}, {22, -22}, {23, 
               24}, {-20, -24}, {-23, -25}, {26, 34}, {33, 27}, {-27, 
               28}, {-28, -29}, {32, 30}, {31, -31}, {-30, -32}, {-2, 
               40}, {-4, -34}, {35, 38}, {-26, 
               37}, {-18, -37}, {-36, -38}, {-35, 
               39}, {-39, -40}, {-33, -41}}], "NominalSplits" -> {}, 
             "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
             0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{15, 14, 12, 13, 36, 37, 39, 15, 15, 13, 40,
                2, 22, 38, 36, 1, 38, 33, 24, 25, 24, 39, 38, 3, 17, 9, 40, 
               40, 40, 40, 41, 19, 1, 23, 20, 22}], 
             "NumericalThresholds" -> {
              0.04742746241390706, -0.8541001379489898, 
              1.0500832796096804`, -0.943584382534027, 
              0.03560621105134488, -0.1351806968450546, -0.2658700346946716, \
-0.7777709960937499, -0.7844237387180327, -0.9240420758724212, \
-0.2824535965919494, -0.703146994113922, -0.8047259151935576, \
-0.17754136770963666`, -0.03189915418624877, -0.9101396799087523, 
              1.2305586338043215`, -0.7847993671894072, -0.9919084906578063, \
-0.6908848583698272, -0.9689250886440276, 
              0.06808219105005266, -0.35507249832153315`, \
-0.5306526124477385, -0.9512109160423278, -0.8231191039085387, \
-0.22739674150943753`, 
              0.284216195344925, -0.3841100931167602, -0.3802750706672668, \
-0.2677639424800872, 0.8775999546051027, 
              0.8182719349861146, -1.0207400321960447`, -0.1787738651037216, \
-1.6331443786621092`}, "LeafValues" -> 
             RawArray["Real32",{
               0.007989747449755669, -0.01806679740548134, \
-0.0008627226925455034, -0.008460702374577522, 
               0.003060905495658517, -0.008176613599061966, 
               0.00810296181589365, 0.00020459451479837298`, 
               0.00229794648475945, -0.005877234041690826, 
               0.02369532361626625, 
               0.017305297777056694`, -0.0063867345452308655`, \
-0.0007990097510628402, -0.004774566274136305, 0.0183049738407135, 
               0.0015569874085485935`, 
               0.007496991194784641, -0.0050007039681077, \
-0.01705152541399002, -0.011450866237282753`, -0.010298393666744232`, \
-0.007518104277551174, 0.008283757604658604, -0.0003617981565184891, 
               0.0023879073560237885`, 0.009173430502414703, 
               0.00010461149213369936`, -0.007482860703021288, 
               0.003783142426982522, -0.00014017066860105842`, \
-0.0024628296960145235`, -0.00882419478148222, -0.0049326759763062, \
-0.010151504538953304`, -0.005553780123591423, -0.0031329847406595945`}], 
             "Children" -> 
             RawArray["Integer16",{{2, 3}, {4, 12}, {13, 27}, {5, 8}, {
               6, -6}, {7, 15}, {-1, -8}, {9, 10}, {26, -10}, {
               11, -11}, {-9, -12}, {14, 22}, {-2, 17}, {
               16, -15}, {-7, -16}, {-3, 23}, {19, 18}, {-18, 20}, {28, 
               21}, {-19, -21}, {-20, -22}, {24, -23}, {-17, -24}, {-13, 
               25}, {-25, -26}, {-5, -27}, {29, 32}, {-14, -29}, {31, 
               30}, {-30, 36}, {-4, -32}, {33, -33}, {35, 
               34}, {-34, -35}, {-28, -36}, {-31, -37}}], 
             "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0,
              "NominalNodeNumber" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{13, 14, 16, 40, 13, 32, 15, 13, 11, 14, 30,
                41, 6, 6, 38, 15, 32, 4, 32, 6, 40, 38, 14, 40, 13, 40, 38, 
               38, 41, 37, 1, 40, 17, 29, 37, 39, 15, 40}], 
             "NumericalThresholds" -> CompressedData["
1:eJxTTMoPSmVkYGBQA+L////vXzfzwn4gff5kyOv9QPEFb849tgfSCbNkvtkD
xe9fN3wHEm+4s+kRmH/j6XOQ+vqLmm9BtH/Jhdcgen9W9xuQuoStqQ9A6uav
unMRrG6//BsQnb/s8QuQfMCJMg4HIP/9jWlgfkOk4gWQev+dd++C9Wu1HAPx
89ddPg9Wr3PlDsg9D4S7foLE9SXDX4HM+9907AqIvj/zI5jvf6viKoieX1B8
CUzPX3oOROurMYP5+fZHLoPME6jkuwMyp36SOljcXj34Pdj/k3b8ANHylm0P
wOan3r4FovmXXXoMVrcwfN9+AEYGygY=
              "], "LeafValues" -> 
             RawArray["Real32",{0.017903707921504974`, 
               0.008127786219120026, -0.0012115524150431156`, \
-0.008119942620396614, -0.010245821438729763`, 0.0011944035068154335`, 
               0.0011048568412661552`, 
               0.00012539613817352802`, -0.013602117076516151`, 
               0.003976745530962944, 0.0052236225455999374`, 
               0.016780702397227287`, 0.005677315406501293, 
               0.0034820716828107834`, -0.00736378924921155, \
-0.004518976900726557, -0.011184792965650558`, -0.01196318306028843, 
               0.009014405310153961, 
               0.004531076177954674, -0.004035102669149637, \
-0.005006002262234688, -0.02026538737118244, -0.0066867610439658165`, \
-0.00013675908849108964`, 0.001089154276996851, 0.0123447235673666, 
               0.00120167201384902, 
               0.0039842319674789906`, -0.000960302073508501, \
-0.00804766546934843, -0.0027392017655074596`, -0.0016432765405625105`, \
-0.007210054900497198, -0.015584558248519897`, -0.00801155250519514, 
               0.007768657058477402, 0.004293357953429222, 
               0.006972699426114559}], "Children" -> 
             RawArray["Integer16",{{2, 3}, {5, 17}, {27, 4}, {13, 15}, {6, 
               8}, {7, 16}, {-1, 12}, {10, 9}, {-9, 36}, {-6, 
               11}, {-11, -12}, {-8, -13}, {21, 14}, {-14, 20}, {
               22, -16}, {-7, -17}, {19, 18}, {-18, 23}, {37, 
               26}, {-15, -21}, {34, -22}, {-5, -23}, {24, 
               25}, {-19, -25}, {-24, -26}, {-20, -27}, {30, 28}, {38, 
               29}, {-29, 33}, {31, -31}, {32, 
               35}, {-2, -33}, {-30, -34}, {-4, -35}, {-32, -36}, {-10, -37}, \
{-3, -38}, {-28, -39}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
             "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{15, 14, 16, 15, 4, 1, 41, 10, 2, 1, 24, 35,
                24, 1, 1, 12, 24, 25, 18, 14, 15, 3, 1, 24, 18, 3, 35, 28, 40,
                2, 39, 26, 17}], 
             "NumericalThresholds" -> {-0.6267376244068145, \
-0.8541001379489898, 
              0.6190093159675599, -0.6469912230968474, -0.4766022711992263, 
              1.3829988837242129`, -0.28056624531745905`, 
              0.22659664601087573`, -0.8716202974319457, -0.8853920400142669, 
              1.3899905085563662`, 0.033880956470966346`, 
              1.540791988372803, -0.863681137561798, -0.8304780721664428, 
              0.8134425878524781, -0.9037102162837981, -0.8354284465312957, 
              1.3145652413368227`, -0.8817181587219237, -0.619463950395584, 
              0.12886169552803042`, -0.7055000066757201, 0.5284268856048585, 
              2.598146796226502, -0.4949363470077514, 
              0.5112479627132417, -1.4540913105010984`, -0.33550126850605005`,
               1.2389886379241946`, 1.9592557549476626`, 0.6541973650455476, 
              0.1299417540431023}, "LeafValues" -> 
             RawArray["Real32",{
               0.012486307881772518`, -0.007074964698404074, \
-0.010531269945204258`, -0.0011422333773225546`, 0.004121826030313969, 
               0.0008657922735437751, -0.015957539901137352`, \
-0.009266133420169353, -0.004155267961323261, 0.004968669731169939, 
               0.011547291651368141`, 
               0.0011820502113550901`, -0.006898963358253241, \
-0.009580845013260841, 0.004532619379460812, 
               0.006384904962033033, -0.003809971734881401, \
-0.01343055721372366, 0.002541004214435816, -0.01320173591375351, 
               0.011607933789491653`, 
               0.006019746884703636, -0.004582816734910011, \
-0.00526721216738224, 0.005655665881931782, -0.006293038371950388, 
               
               0.000720917945727706, -0.00675225118175149, \
-0.0010813853004947305`, 0.010662244632840157`, 
               0.0005694977007806301, -0.008660122752189636, \
-0.00019706533930730075`, 0.001046065124683082}], "Children" -> 
             RawArray["Integer16",{{2, 3}, {9, 4}, {21, 6}, {5, 29}, {-3, 
               23}, {8, 7}, {-7, 30}, {19, 16}, {-1, 10}, {11, 13}, {12, 
               20}, {-10, -13}, {14, 15}, {-11, -15}, {-14, -16}, {18, 
               17}, {-17, -18}, {-9, -19}, {-4, 25}, {-12, -21}, {-2, 22}, {
               32, 27}, {24, 26}, {-6, -25}, {-20, -26}, {-24, -27}, {
               28, -28}, {-23, -29}, {-5, -30}, {-8, 31}, {-31, -32}, {
               33, -33}, {-22, -34}}], "NominalSplits" -> {}, "RootIndex" -> 
             1, "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{14, 16, 39, 39, 39, 3, 2, 12, 36, 14, 4, 
               40, 40, 34, 40, 14, 41, 41, 29, 9, 36, 37, 34, 41, 37, 34}], 
             "NumericalThresholds" -> {-0.5952346920967101, 
              0.6190093159675599, 
              0.11658094078302385`, -0.3446925580501556, -0.27574123442173, \
-0.5848919451236724, -0.7943604588508605, -0.9442679286003112, 
              0.024799551814794544`, -0.8732585310935973, \
-0.4601698219776153, -0.19131067395210263`, -0.3410122692584991, 
              1.7661697864532473`, -0.3174462020397186, 1.6553927063941958`, 
              0.4193591177463532, -0.2760844230651855, -1.505104839801788, \
-0.02323129307478666, 
              0.4053217470645905, -0.2088380306959152, -1.7839461565017698`, \
-0.27279880642890925`, -0.9023933708667754, -1.7976981997489927`}, 
             "LeafValues" -> 
             RawArray["Real32",{
               0.009166020900011063, -0.006186991930007935, \
-0.004819158930331469, -0.007694368716329336, 0.008002037182450294, 
               0.0013269076589494944`, 0.007875924929976463, 
               0.01978505775332451, 
               0.010332761332392693`, -0.009394743479788303, 
               0.0015313195763155818`, 0.003327122190967202, 
               0.00234273262321949, -0.0012327396543696523`, \
-0.011583837680518627`, -0.0023139044642448425`, -0.005018269643187523, \
-0.0032007242552936077`, -0.0011182606685906649`, -0.00843118503689766, \
-0.0008312552236020565, 0.004392048344016075, 
               0.007732179015874863, -0.0023989956825971603`, \
-0.00038712838431820273`, -0.007063247263431549, -0.010980171151459217`}], 
             "Children" -> 
             RawArray["Integer16",{{3, 2}, {20, 14}, {4, -4}, {10, 5}, {6, 
               8}, {7, 13}, {-5, -8}, {9, 11}, {-6, -10}, {-1, 
               12}, {-9, -12}, {15, 22}, {-7, -14}, {16, -15}, {-11, -16}, {
               17, 26}, {18, 19}, {-3, -19}, {-18, -20}, {-2, 21}, {
               23, -22}, {-13, -23}, {25, 
               24}, {-24, -25}, {-21, -26}, {-17, -27}}], 
             "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0,
              "NominalNodeNumber" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{1, 24, 6, 24, 28, 1, 1, 2, 3, 36, 5, 34, 
               18, 39, 4, 13, 12, 35, 40, 37, 24, 41, 24, 40, 37, 22, 40, 22, 
               11, 3, 10, 6, 22, 1}], 
             "NumericalThresholds" -> {-0.41044953465461725`, 
              1.1654745340347292`, -0.32874651253223414`, 1.185003459453583, 
              0.33393210172653204`, -0.9185251593589782, -0.8924743533134459, \
-0.7102905511856078, -0.5329088568687438, -0.2885702103376388, \
-0.6761808991432189, 1.0271143913269045`, 
              0.3628345727920533, -0.20615184307098386`, -0.9656362831592559, 
              1.0502727031707766`, 
              0.6671038866043092, -1.1079444885253904`, \
-0.33303831517696375`, -0.5705182552337645, -1.0218052268028257`, \
-0.28107297420501703`, -0.9897786676883696, 0.11191239580512048`, 
              2.6066154241561894`, -0.17771308124065396`, \
-0.20924359560012815`, -0.010853626299649475`, 1.210731625556946, 
              0.18154252320528033`, 
              0.5328762531280519, -0.43656532466411585`, \
-1.7373403310775755`, -0.9185251593589782}, "LeafValues" -> 
             RawArray["Real32",{0.0014528892934322357`, 0.0004400460165925324,
                0.01166816521435976, -0.003015075344592333, 
               0.0029512550681829453`, 0.013633912429213524`, 
               0.0016526860417798162`, 
               0.011902997270226479`, -0.007358000613749027, 
               9.979475180443842*^-6, 
               0.008214711211621761, -0.010758805088698864`, \
-0.013125286437571049`, -0.0014839895302429795`, 
               
               0.005154222249984741, -0.005207392852753401, \
-0.004408716689795256, 
               0.01252714078873396, -0.012345349416136742`, \
-0.007690946571528912, 0.0025164405815303326`, 0.009251009672880173, 
               0.0016570832813158631`, -0.000893221702426672, \
-0.00028127498808316886`, 0.005033711902797222, -0.012437635101377964`, 
               0.0023716152645647526`, -0.005900794640183449, 
               0.001372910221107304, -0.008725538849830627, \
-0.002148952567949891, -0.010570459999144077`, -0.002101362217217684, \
-0.0019763202872127295`}], "Children" -> 
             RawArray["Integer16",{{2, 3}, {7, 4}, {15, 12}, {-3, 5}, {19, 
               6}, {-6, 14}, {11, 8}, {10, 9}, {-9, 27}, {-8, 22}, {
               34, -12}, {21, 13}, {-13, -14}, {-7, -15}, {16, 26}, {17, 
               18}, {28, -18}, {20, -19}, {-5, -20}, {-17, -21}, {29, 
               23}, {-11, -23}, {24, 25}, {-22, -25}, {-24, -26}, {
               31, -27}, {-10, -28}, {-2, -29}, {30, 33}, {-4, -31}, {
               32, -32}, {-16, -33}, {-30, -34}, {-1, -35}}], 
             "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0,
              "NominalNodeNumber" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{27, 14, 40, 27, 5, 36, 1, 40, 4, 17, 3, 16,
                35, 17, 39, 21, 22, 14, 35, 41, 38, 10, 41, 40, 37, 20, 4, 16,
                1, 10, 39, 40, 19}], 
             "NumericalThresholds" -> {0.196260541677475, -0.8128378987312316,
               1.3819831609725954`, -0.9135341942310332, \
-0.37400619685649866`, 
              0.10060806944966318`, -0.7055000066757201, -0.2035264819860458, \
-0.4666579514741897, -0.5704314112663268, 0.27413408458232885`, 
              1.949878811836243, -1.1079444885253904`, 
              1.7815473079681399`, -0.023049568757414814`, 
              0.08256579563021661, -0.17771308124065396`, 
              1.6553927063941958`, -1.7849307656288145`, \
-0.27524794638156885`, -0.2832748889923095, 
              0.5042509436607362, -0.2780598551034927, -0.2836652994155883, 
              0.10547868162393571`, 0.6553959846496583, 
              0.18113346397876742`, -0.7729443013668059, -0.5577834844589232, \
-0.7383217215538024, -0.24897328019142148`, -0.11852462589740752`, 
              2.289122343063355}, "LeafValues" -> 
             RawArray["Real32",{-0.0017243684269487858`, 
               0.0012633077567443252`, -0.006655047181993723, \
-0.01012655720114708, -0.007317332550883293, 
               0.00013734318781644106`, -0.0002390862355241552, \
-0.004294436424970627, 0.0027771482709795237`, 
               0.00501933041960001, -0.010193747468292713`, 
               0.0019886221271008253`, 
               0.0031092411372810602`, -0.013688127510249615`, \
-0.0012868879130110145`, 0.011257072910666466`, -0.009060346521437168, 
               0.005857701413333416, -0.008488406427204609, \
-0.002533361781388521, -0.00013395704445429146`, -0.0008338821353390813, 
               0.00696226954460144, 
               0.0000868229108164087, -0.007368891965597868, 
               0.004119648598134518, -0.0027273548766970634`, \
-0.0026249641086906195`, 0.008529155515134335, 0.0024727266281843185`, 
               0.007651517633348703, 0.003391178557649255, 
               0.00038432664587162435`, -0.0033894299995154142`}], "Children" -> 
             RawArray["Integer16",{{3, 2}, {5, 20}, {12, 4}, {-4, 11}, {6, 
               28}, {7, 10}, {9, 
               8}, {-8, -9}, {-2, -10}, {-7, -11}, {-5, -12}, {14, 13}, {
               18, -14}, {16, 15}, {-15, -16}, {17, 26}, {-1, -18}, {19, 
               33}, {-13, -20}, {21, 22}, {-3, 23}, {27, -23}, {25, 
               24}, {-24, -25}, {-22, -26}, {-17, -27}, {29, 32}, {
               30, -29}, {-21, -30}, {-6, 
               31}, {-31, -32}, {-28, -33}, {-19, -34}}], 
             "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0,
              "NominalNodeNumber" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{15, 3, 1, 4, 37, 1, 36, 22, 8, 26, 4, 39, 
               24, 36, 37, 40, 15, 4, 26, 14, 20, 17, 16, 23, 23, 19, 20, 40, 
               4, 14}], 
             "NumericalThresholds" -> {-0.6267376244068145, \
-0.6756103932857512, -0.8751384019851683, -0.49740645289421076`, \
-0.18113622069358823`, -0.6776803731918334, -0.06922437623143195, 
              1.0499042272567751`, -1.0732870101928709`, 
              0.48058360815048223`, -0.42185391485691065`, \
-0.2685388326644897, 1.4523493051528933`, 0.987236261367798, 
              1.3408477902412417`, -0.2726531773805618, -0.619463950395584, \
-0.44812810420989985`, 
              1.0198957324028017`, -0.8635278940200805, -0.38620749115943903`,
               1.5181351304054262`, 
              1.5838478207588198`, -0.2773336619138717, -0.6091661751270293, 
              0.9089435636997224, 
              0.2354855537414551, -0.12101612985134123`, \
-0.29533091187477106`, -0.8914735615253447}, "LeafValues" -> 
             RawArray["Real32",{
               0.009961889125406742, -0.006417478434741497, \
-0.0006721277022734284, 0.012601634487509727`, 
               0.004854090977460146, -0.011706997640430927`, \
-0.004408621229231358, -0.0016909686382859945`, 
               0.0031345330644398928`, -0.0039357710629701614`, 
               0.008904991671442986, 0.00217510387301445, 
               0.008408164605498314, -0.00270856823772192, \
-0.008547643199563026, 
               0.006634891964495182, -0.0032781383488327265`, \
-0.0005222036270424724, 0.004672957584261894, 0.0013112840242683887`, 
               0.00016445087385363877`, -0.0013516346225515008`, \
-0.007504492532461882, -0.00592225743457675, -0.0012032696977257729`, 
               0.002679100725799799, 
               0.0025455309078097343`, -0.00795367918908596, \
-0.000620031903963536, 0.00543422345072031, 0.00461638392880559}], "Children" -> 
             RawArray["Integer16",{{2, 14}, {12, 3}, {4, 6}, {10, 5}, {
               9, -6}, {7, 19}, {8, 
               11}, {-4, -9}, {-5, -10}, {-3, -11}, {-8, -12}, {-1, 13}, {30, 
               18}, {15, 21}, {16, -16}, {17, 23}, {-2, 25}, {-14, -19}, {20, 
               29}, {-7, -21}, {-15, 22}, {26, -23}, {28, 
               24}, {-24, -25}, {-18, -26}, {
               27, -27}, {-22, -28}, {-17, -29}, {-20, -30}, {-13, -31}}], 
             "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0,
              "NominalNodeNumber" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{14, 6, 6, 34, 16, 23, 23, 25, 38, 35, 2, 1,
                40, 39, 40, 39, 24, 40, 15, 38, 5, 38, 40, 5, 37, 4, 24, 2}], 
             "NumericalThresholds" -> {-0.8128378987312316, \
-0.3092427849769592, -0.17878120392560956`, 
              1.2134262919425967`, -0.8966434895992278, -0.3626967072486877, \
-0.3421987891197204, -1.5550842285156248`, 1.2804342508316042`, 
              0.5416589081287385, -0.8716202974319457, -0.8751384019851683, \
-0.32929769158363337`, -0.21593268215656278`, -0.37862339615821833`, \
-0.17562273144721982`, 
              1.1972860693931582`, -0.3808781653642654, -0.7426593899726867, \
-0.17754136770963666`, -0.8696566224098204, -0.24890209734439847`, \
-0.32392418384551996`, -0.28058463335037226`, 
              0.11031349748373033`, -0.2689693868160247, -0.9135218858718871, 
              0.5777630507946016}, "LeafValues" -> 
             RawArray["Real32",{0.00687293941155076, -0.009008325636386871, 
               0.006446704268455505, -0.004157722927629948, 
               0.0009449252393096685, -0.009699005633592606, 
               0.0074524483643472195`, 
               0.0029569007456302643`, -0.0035624683368951082`, 
               0.0013177276123315096`, -0.0027128886431455612`, \
-0.004810689948499203, 0.004031249321997166, -0.004374796058982611, 
               0.002371740061789751, 0.010176878422498703`, 
               0.00015072021051310003`, 0.007426644209772348, 
               0.006168309599161148, 
               0.0006653231685049832, -0.006696375086903572, \
-0.005609039682894945, -0.00278955465182662, 
               0.0008190416265279055, -0.0006988234235905111, 
               0.0014602632727473974`, 
               0.0036570054944604635`, -0.004036380909383297, 
               0.0015306384302675724`}], "Children" -> 
             RawArray["Integer16",{{11, 2}, {6, 3}, {10, 4}, {24, 
               5}, {-5, -6}, {21, 7}, {-7, 8}, {-8, 9}, {-9, -10}, {-3, 
               26}, {-1, 12}, {18, 13}, {14, 16}, {15, 22}, {-13, -16}, {23, 
               17}, {-17, -18}, {-12, 19}, {-19, 20}, {-20, -21}, {-2, 
               27}, {-15, -23}, {-14, -24}, {-4, 
               25}, {-25, -26}, {-11, -27}, {-22, 28}, {-28, -29}}], 
             "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0,
              "NominalNodeNumber" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{27, 36, 2, 5, 24, 5, 23, 12, 24, 1, 11, 40,
                25, 3, 37, 3, 39, 35, 38, 25, 41, 2, 32, 6, 2}], 
             "NumericalThresholds" -> {
              0.26903182268142706`, -0.2885702103376388, -0.6570234894752501, \
-0.7513014972209929, 1.1654745340347292`, -0.6286626756191253, 
              1.2473477721214297`, -0.9585639536380767, 
              1.185003459453583, -0.9301235079765319, -1.0564407110214231`, 
              0.05637855082750321, 0.4968093186616898, 
              2.7212861776351933`, -0.8293245136737822, 
              2.58844268321991, -0.42269897460937494`, 0.08231753855943681, 
              1.2305586338043215`, -0.6908848583698272, \
-0.020199276506900784`, -0.7712931931018828, 
              0.3339768201112748, -1.0488838553428648`, 1.3031931519508364`}, 
             "LeafValues" -> 
             RawArray["Real32",{0.0014446770073845983`, 
               0.004293830133974552, -0.004569448996335268, \
-0.00298897922039032, 0.01376622449606657, 0.007461225613951683, 
               0.0076202391646802425`, 
               0.0012912909733131528`, -0.00018591903790365905`, 
               0.006378228310495615, -0.003616390284150839, 
               0.0013668633764609694`, 0.003441074164584279, 
               0.005088829901069403, -0.00010625182039802894`, \
-0.009425891563296318, 
               0.003340755123645067, -0.0006238260539248586, \
-0.0006939270533621311, 
               0.0070762038230896, -0.0038949442096054554`, \
-0.0007180318934842944, -0.0031101719941943884`, -0.01058551948517561, \
-0.004107452463358641, 0.00014525896403938532`}], "Children" -> 
             RawArray["Integer16",{{14, 2}, {3, 5}, {4, 13}, {-2, -5}, {6, 
               9}, {7, 8}, {23, 22}, {-7, 12}, {-6, 10}, {-10, 
               11}, {-11, -12}, {-9, -13}, {-4, 21}, {16, 15}, {-15, -16}, {
               17, -17}, {24, 18}, {19, 
               20}, {-18, -20}, {-19, -21}, {-14, -22}, {-8, -23}, {-3, -24}, \
{-1, 25}, {-25, -26}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
             "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{16, 39, 36, 20, 38, 38, 39, 2, 40, 2, 41, 
               34, 33, 29, 30, 39, 1, 14, 26, 40, 40, 7, 4}], 
             "NumericalThresholds" -> {-0.3429705053567886, 
              0.06808219105005266, 0.04880123957991601, 
              0.552601844072342, -0.2494176849722862, -0.22111643850803372`, \
-0.26143732666969294`, -0.8067266047000884, -0.3174462020397186, \
-0.8416996896266936, -0.2759136855602264, 0.6113494634628297, 
              0.7590010464191438, 0.32030892372131353`, 
              0.19593778997659686`, -0.42187349498271937`, 
              1.8327730894088747`, 
              0.9479832351207734, -0.8605261147022246, -0.3071140050888061, 
              0.47568671405315405`, -1.1568204164505003`, \
-0.4652085602283477}, "LeafValues" -> 
             RawArray["Real32",{0.003318299539387226, 
               0.00020523712737485766`, -0.003930287901312113, 
               0.005153390113264322, -0.006785445846617222, 
               0.01309223473072052, 
               0.007207606919109821, -0.00046705559361726046`, 
               0.003312505781650543, -0.000028788648705813102`, \
-0.005068143829703331, 0.004995021969079971, -0.008061077445745468, 
               0.000272938545094803, -0.006066212896257639, 
               0.004655837547034025, -0.00017394927272107452`, \
-0.0003186032408848405, -0.008002959191799164, -0.0020982963033020496`, \
-0.0011027593864127994`, 0.0005440423265099525, -0.003760463558137417, 
               0.00071649847086519}], "Children" -> 
             RawArray["Integer16",{{2, 14}, {3, -3}, {5, 4}, {12, -5}, {8, 
               6}, {11, 7}, {-7, -8}, {10, 
               9}, {-9, -10}, {-1, -11}, {-6, -12}, {-4, 13}, {-13, -14}, {
               15, -15}, {16, 20}, {21, 17}, {19, 
               18}, {-18, -19}, {-17, -20}, {23, -21}, {
               22, -22}, {-2, -23}, {-16, -24}}], "NominalSplits" -> {}, 
             "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
             0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{24, 4, 24, 41, 38, 3, 36, 36, 31, 32, 40, 
               38, 19, 6, 6, 34, 22, 37, 37, 15, 24, 14, 14, 19, 33, 2, 27, 
               14}], "NumericalThresholds" -> {
              0.5284268856048585, -0.38677230477333063`, 
              1.5712198019027712`, -0.2815735042095184, \
-0.22726976126432416`, -0.6756103932857512, -0.16960833966732022`, \
-0.01942526269704103, 0.7698359787464143, 
              0.8459738790988923, -0.31091381609439844`, \
-0.12940517812967298`, -1.5279652476310728`, -0.2905710935592651, \
-0.17878120392560956`, 0.7149436473846437, -0.25974844396114344`, 
              1.099523425102234, 1.524767339229584, 
              1.4106207489967348`, -0.9919084906578063, 1.3541122674942019`, 
              1.314442276954651, -0.3985556215047836, 0.8778914809226991, 
              0.38405936956405645`, 1.2210771441459658`, 1.1046323180198672`},
              "LeafValues" -> 
             RawArray["Real32",{-0.003912920132279396, 0.009454657323658466, 
               0.0067923348397016525`, -0.005751464050263166, 
               0.0043357671238482, -0.004759106785058975, 
               0.0010471743298694491`, -0.0016740773571655154`, 
               0.0012179072946310043`, -0.0036261873319745064`, 
               0.0005402130773290992, 
               0.002174538793042302, -0.0007485296810045838, \
-0.002922676270827651, 
               0.007506882306188345, -0.0001528118591522798, \
-0.0017365397652611136`, 0.0007663322030566633, 
               0.009286416694521904, -0.0009357890812680125, \
-0.007935256697237492, -0.0025278886314481497`, 0.0017707538791000843`, 
               0.0037569564301520586`, 0.0051780082285404205`, 
               0.0026896419003605843`, -0.0015560169704258442`, 
               0.003893377725034952, 0.00040658353827893734`}], "Children" -> 
             RawArray["Integer16",{{13, 2}, {3, 9}, {4, -4}, {5, 6}, {8, 
               11}, {12, 7}, {-7, -8}, {-2, -9}, {-3, 10}, {-10, 
               24}, {-6, -12}, {-5, -13}, {-1, 14}, {17, 15}, {16, 22}, {-15, 
               25}, {20, 18}, {21, 19}, {-19, -20}, {28, -21}, {-18, -22}, {
               23, 26}, {-16, -24}, {
               27, -25}, {-17, -26}, {-23, -27}, {-11, -28}, {-14, -29}}], 
             "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0,
              "NominalNodeNumber" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{16, 30, 31, 22, 22, 20, 11, 25, 15, 38, 41,
                30, 22, 19, 39, 39, 32, 17, 6}], 
             "NumericalThresholds" -> {-0.350173071026802, 
              0.31969729065895086`, 0.35188584029674536`, 1.3036426901817324`,
               1.360818147659302, 1.004193961620331, -0.9786324501037597, 
              0.4968093186616898, -0.6935001015663146, -0.2554979175329208, \
-0.27495558559894556`, 
              0.3023126423358918, -1.7373403310775755`, -1.5279652476310728`, \
-0.42207509279251093`, -0.20469265431165692`, -0.11202764138579367`, \
-0.019381335936486718`, -1.0488838553428648`}, "LeafValues" -> 
             RawArray["Real32",{0.0030217047315090895`, 0.002396835247054696, 
               0.0013346822233870625`, 0.00569559819996357, 
               0.010417052544653416`, -0.002291578333824873, \
-0.005755479913204908, 0.00024662018404342234`, 0.0038958967197686434`, 
               0.006299989297986031, -0.007742126006633043, \
-0.005068059079349041, -0.005112722050398588, -0.006521308328956366, 
               0.0010528700659051538`, 
               0.0008709216490387917, -0.0007258888217620552, \
-0.001456006313674152, 0.008789723739027977, -0.002382205566391349}], 
             "Children" -> 
             RawArray["Integer16",{{2, 12}, {8, 3}, {10, 4}, {6, 5}, {-5, 
               9}, {7, -7}, {-4, -8}, {17, 18}, {-6, -10}, {
               11, -11}, {-3, -12}, {13, -13}, {-2, 14}, {-14, 15}, {19, 
               16}, {-16, -17}, {-1, -18}, {-9, -19}, {-15, -20}}], 
             "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0,
              "NominalNodeNumber" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{40, 38, 39, 38, 15, 40, 40, 21, 23, 17, 34,
                33, 39, 39, 13, 16, 9, 37, 35, 35, 39}], 
             "NumericalThresholds" -> {0.35404099524021154`, 
              1.2305586338043215`, 1.2461745142936709`, 0.7768523991107942, 
              1.0442767739295962`, 1.6442610621452334`, 
              0.5710895955562593, -0.2028279900550842, -0.2605524659156799, 
              1.8775764703750613`, 
              1.2377530336380007`, -0.947048783302307, -0.3446925580501556, \
-0.32814535498619074`, 1.6201222538948061`, 0.9230184555053712, 
              0.7647812664508821, -0.5256382226943969, -1.1453253030776975`, 
              1.4147114753723147`, -0.07286714389920233}, "LeafValues" -> 
             RawArray[
               "Real32",{-0.00010527957056183368`, -0.002747106831520796, 
               0.01066107489168644, -0.0016779231373220682`, \
-0.007620044518262148, 
               0.002031702781096101, -0.006618004757910967, \
-0.0033483898732811213`, -0.005962643772363663, -0.0012357158120721579`, 
               0.0037179456558078527`, -0.003081123810261488, \
-0.0022069753613322973`, 0.0044472855515778065`, 
               0.0004532089806161821, -0.005628271959722042, 
               0.004164041951298714, 
               0.0006990658584982157, -0.00012572546256706119`, 
               0.0027063069865107536`, 
               0.0010132684838026762`, -0.0018705080728977919`}], "Children" -> 
             RawArray["Integer16",{{2, 5}, {4, 3}, {-3, 20}, {11, 12}, {16, 
               6}, {7, -7}, {8, 10}, {-6, 9}, {-9, -10}, {18, -11}, {
               13, -12}, {-5, -13}, {15, 14}, {-14, -15}, {-1, -16}, {
               17, -17}, {-2, 19}, {-8, -19}, {
               21, -20}, {-4, -21}, {-18, -22}}], "NominalSplits" -> {}, 
             "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
             0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{25, 14, 35, 35, 34, 35, 22, 3, 36, 7, 38, 
               24, 41, 17, 10, 24, 24, 38}], 
             "NumericalThresholds" -> {1.0184965133666994`, 1.664364278316498,
               0.1288704797625542, 0.16986312717199328`, 0.39116735756397253`,
               0.05864662118256093, 1.4507028460502627`, -0.6284168064594268, 
              0.04880123957991601, -0.7613143622875213, -0.26565191149711603`,
               1.507481932640076, -0.28384152054786677`, -0.6487552225589751, \
-0.6838963627815245, 1.3236786127090456`, 
              1.415653705596924, -0.2509500384330749}, "LeafValues" -> 
             RawArray["Real32",{0.0041821361519396305`, 
               0.0026280381716787815`, -0.0035882480442523956`, \
-0.008645819500088692, -0.0006766881560906768, 0.0026722836773842573`, 
               0.010616184212267399`, -0.003074596170336008, 
               0.0007068632403388619, -0.007228618487715721, \
-0.0005295100272633135, 0.002125566126778722, 
               0.005029724445194006, -0.0001952397869899869, 
               0.004418004769831896, 
               0.0034384906757622957`, -0.0015168972313404083`, 
               0.00009986354416469112, 0.0018399079563096166`}], "Children" -> 
             RawArray["Integer16",{{2, 14}, {3, -3}, {6, 4}, {5, 
               9}, {-4, -6}, {12, 7}, {8, -8}, {-7, -9}, {11, 
               10}, {-10, -11}, {-5, -12}, {13, -13}, {-1, -14}, {15, -15}, {
               16, -16}, {-2, 17}, {-17, 18}, {-18, -19}}], 
             "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0,
              "NominalNodeNumber" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{26, 3, 31, 41, 41, 40, 37, 41, 38, 38, 36, 
               3, 36, 1, 34, 3, 40, 7, 40, 38, 14, 41, 13}], 
             "NumericalThresholds" -> {
              1.0198957324028017`, -0.4039557129144668, 
              1.2062902450561526`, -0.2787817567586898, -0.2815735042095184, 
              0.7171173691749574, 
              0.07916230708360673, -0.2692563980817794, \
-0.32380823791027064`, -0.5398761332035064, -0.04629575088620185, \
-0.5643660724163054, 0.12703400850296023`, -0.7659050524234771, 
              0.021890616044402126`, -0.6645408272743224, \
-0.2651324570178985, -0.3650371432304382, -0.24556683748960492`, \
-0.18496949225664136`, -0.8635278940200805, -0.26546007394790644`, \
-0.8556583523750304}, "LeafValues" -> 
             RawArray["Real32",{0.0019265060545876622`, 0.0007402717601507902,
                0.007119214162230492, -0.00338375149294734, \
-0.0022927725221961737`, -0.002637449186295271, -0.007603035774081945, 
               0.0020907772704958916`, -0.0007648754981346428, \
-0.0015589518006891012`, 0.006154921371489763, 0.0013722252333536744`, 
               0.004005244001746178, -0.0058693415485322475`, \
-0.00004157722651143558, -0.002125580795109272, 
               0.0024034427478909492`, -0.0036807300057262182`, \
-0.0031509052496403456`, 0.002465765457600355, 0.004397330339998007, 
               0.0028914022259414196`, -0.0037490446120500565`, 
               0.0025552755687385798`}], "Children" -> 
             RawArray["Integer16",{{3, 2}, {18, -3}, {4, -4}, {5, 8}, {15, 
               6}, {7, -7}, {-6, -8}, {9, 12}, {10, 
               11}, {-5, -11}, {-10, -12}, {13, 14}, {-9, -14}, {-13, -15}, {
               17, 16}, {-16, -17}, {-1, -18}, {20, 19}, {-19, -20}, {21, 
               23}, {22, -22}, {-2, -23}, {-21, -24}}], "NominalSplits" -> {},
              "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
             0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{3, 37, 17, 17, 16, 37, 5, 4, 19, 8, 40, 36,
                37}], "NumericalThresholds" -> {
              2.7212861776351933`, -0.8293245136737822, -1.0333310961723325`, \
-1.013282537460327, -0.88757586479187, 
              0.11031349748373033`, -1.3315238356590269`, \
-1.3981128334999082`, 
              1.5633189082145693`, -0.1279722489416599, -0.08959762006998061, \
-1.0772739648818968`, 0.2982232421636582}, "LeafValues" -> 
             RawArray["Real32",{0.003613055683672428, 
               0.0003446608898229897, -0.00613777432590723, \
-0.0078158900141716, -0.004160052165389061, -0.0046027954667806625`, 
               0.002118560718372464, 0.00047534494660794735`, 
               0.00017132048378698528`, -0.0027668974362313747`, 
               0.005363360047340393, -0.0007497108308598399, 
               0.0003084825293626636, -0.002296400023624301}], "Children" -> 
             RawArray["Integer16",{{3, 2}, {-2, -3}, {-1, 4}, {5, 7}, {-4, 
               6}, {11, -7}, {12, 8}, {10, 
               9}, {-9, -10}, {-8, -11}, {-6, -12}, {-5, 13}, {-13, -14}}], 
             "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0,
              "NominalNodeNumber" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{36, 41, 39, 23, 34, 19, 16, 12, 22, 37, 12,
                39, 39, 36, 32, 25}], 
             "NumericalThresholds" -> {4.366788387298585, 
              0.5171810984611512, -0.07450431212782858, \
-0.36626571416854853`, -1.866535425186157, 1.5633189082145693`, 
              1.8612311482429507`, 
              0.7199347913265229, -1.7373403310775755`, -0.5705182552337645, 
              0.7273566126823426, -0.11129789054393767`, \
-0.41830053925514216`, -1.0585420131683347`, -1.6881804466247556`, \
-1.810002267360687}, "LeafValues" -> 
             RawArray["Real32",{
               0.0013734655221924186`, -0.0030260852072387934`, \
-0.0006290279561653733, -0.001181185245513916, -0.005750175099819899, 
               0.0037806557957082987`, -0.00016994174802675843`, 
               0.005072739906609058, -0.006879383698105812, 
               0.000053563657274935395`, -0.0003900091105606407, 
               0.005320272408425808, 
               0.0011908350279554725`, -0.0037419393192976713`, \
-0.002243215683847666, 0.004119778983294964, 0.0009530724491924047}], 
             "Children" -> 
             RawArray["Integer16",{{2, -2}, {5, 3}, {10, 4}, {14, -5}, {15, 
               6}, {7, 8}, {9, -8}, {-7, -9}, {-6, -10}, {12, 
               11}, {-11, -12}, {13, -13}, {-3, -14}, {
               16, -15}, {-1, -16}, {-4, -17}}], "NominalSplits" -> {}, 
             "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
             0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{19, 38, 37, 35, 19, 40, 40, 1, 19, 41, 37, 
               36, 41, 15, 41}], 
             "NumericalThresholds" -> {-1.4444094896316526`, \
-0.4447551220655441, -0.7655255794525145, -0.7139588594436644, \
-1.331140637397766, -0.3855632990598678, 0.24255163222551349`, 
              0.4176099300384522, -1.3099079132080076`, -0.2822112143039703, \
-0.18983651697635648`, -0.063851710408926, -0.27747479081153864`, \
-0.7918472886085509, -0.2718669325113296}, "LeafValues" -> 
             RawArray[
               "Real32",{-0.002285821596160531, -0.0029696414712816477`, \
-0.0014636407140642405`, 
               0.0032530089374631643`, -0.007165791001170874, \
-0.003397432155907154, 0.0026999705005437136`, 0.0005055987276136875, 
               0.008825740776956081, 0.003892115317285061, 
               0.0019458080641925335`, -0.004438730422407389, 
               0.001231399830430746, 
               0.0011336968746036291`, -0.0014783934457227588`, \
-0.00018412286590319127`}], "Children" -> 
             RawArray["Integer16",{{2, 5}, {3, 4}, {-1, -4}, {-3, -5}, {6, 
               9}, {-2, 7}, {8, -8}, {-7, -9}, {-6, 10}, {11, 13}, {-10, 
               12}, {-12, -13}, {14, 15}, {-11, -15}, {-14, -16}}], 
             "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0,
              "NominalNodeNumber" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{2, 2, 37, 10, 11, 10, 2, 19, 15, 36, 23, 
               34, 23, 31, 37, 3, 13, 12}], 
             "NumericalThresholds" -> {1.5551437735557558`, 
              1.2642803192138674`, -0.4983051866292953, 1.5016268491744997`, 
              1.424072086811066, 1.699684262275696, 
              0.8978496491909028, -1.4200013875961301`, 
              0.9889931976795198, -1.3143351078033445`, -1.99558287858963, 
              0.008839827729389073, -1.9734844565391538`, \
-0.9996158182621001, -0.6978124380111693, 1.970981538295746, 
              1.5763114094734194`, 1.954950511455536}, "LeafValues" -> 
             RawArray["Real32",{0.004404920153319836, 
               0.002581222215667367, -0.0027442416176199913`, 
               0.006921845022588968, -0.005876805167645216, 
               0.004654161166399717, -0.000628364912699908, \
-0.0041209333576262, 
               0.00003720058884937316, -0.004058204125612974, \
-0.0039313845336437225`, 
               0.0021623773500323296`, -0.00022931353305466473`, \
-0.00227979919873178, 0.00013583258260041475`, -0.0006814262014813721, 
               0.0044274101965129375`, 
               0.0024038786068558693`, -0.000011783215086325072`}], 
             "Children" -> 
             RawArray["Integer16",{{2, 9}, {4, 3}, {15, -4}, {5, 6}, {
               7, -6}, {-5, -7}, {8, 12}, {-1, -9}, {10, -10}, {-2, 11}, {-11,
                13}, {-8, -13}, {-12, 14}, {-14, -15}, {17, 
               16}, {-16, -17}, {-3, 18}, {-18, -19}}], "NominalSplits" -> {},
              "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
             0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{17, 17, 15, 11, 17, 17, 16, 3, 41, 38, 3, 
               2, 24, 41, 36}], 
             "NumericalThresholds" -> {-1.0333310961723325`, \
-1.013282537460327, -0.7213185131549834, -0.12464256957173346`, \
-1.0014047622680662`, -1.003959536552429, -0.8784277737140654, \
-0.6095209419727324, -0.27620421350002283`, -0.3181480318307876, \
-0.6349860131740569, -0.7367318272590636, 
              1.5712198019027712`, -0.2759136855602264, 0.3566607683897019}, 
             "LeafValues" -> 
             RawArray["Real32",{
               0.002919616876170039, -0.0066220443695783615`, \
-0.0027907718904316425`, 0.0030239804182201624`, -0.0002841866808012128, 
               0.00008847182471072301, 0.005376949440687895, 
               0.0018669861601665616`, 0.0009169664117507637, 
               0.00403535645455122, -0.0023144555743783712`, 
               0.0010366745991632342`, 
               0.007431314792484045, -0.005524962674826384, 
               0.00010358914005337283`, -0.004375516902655363}], "Children" -> 
             RawArray["Integer16",{{-1, 2}, {3, 5}, {-2, 4}, {-4, 15}, {6, 
               8}, {7, -7}, {-3, -8}, {11, 9}, {10, 14}, {-9, -11}, {13, 
               12}, {-12, -13}, {-6, -14}, {-10, -15}, {-5, -16}}], 
             "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0,
              "NominalNodeNumber" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{2, 1, 24, 36, 37, 8, 40, 1, 24, 1, 41, 1, 
               36, 1, 20, 41, 38, 16}], 
             "NumericalThresholds" -> {-0.8716202974319457, \
-0.8795969486236571, 
              1.370858132839203, -0.063851710408926, -0.18113622069358823`, \
-1.0604344010353086`, -0.3410122692584991, -0.863681137561798, 
              1.415653705596924, -0.8572868108749389, -0.2718669325113296, \
-0.8476366400718688, 0.024799551814794544`, -0.8442594110965728, 
              1.580346465110779, -0.27510897815227503`, -0.2042267322540283, \
-0.475246176123619}, "LeafValues" -> 
             RawArray["Real32",{0.0030324221588671207`, 0.00250330101698637, 
               0.007018610835075378, 0.002185471123084426, 
               0.006446170620620251, -0.00676222238689661, \
-0.007830443792045116, -0.0005420239758677781, -0.005462918896228075, \
-0.003035112516954541, 0.005944876465946436, 
               0.0028991736471652985`, -0.005278557538986206, \
-0.0011386951664462686`, 
               0.0000132703880808549, -0.0034918037708848715`, \
-0.0009638498304411769, -0.00457183038815856, -0.0010332466335967183`}], 
             "Children" -> 
             RawArray["Integer16",{{-1, 2}, {3, 8}, {6, 4}, {
               5, -5}, {-4, -6}, {15, 7}, {-7, 17}, {9, 10}, {11, -10}, {-9, 
               12}, {-3, 18}, {13, 14}, {-11, -14}, {-13, -15}, {
               16, -16}, {-2, -17}, {-8, -18}, {-12, -19}}], 
             "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0,
              "NominalNodeNumber" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{19, 23, 21, 10, 11, 13, 38, 22, 41, 20}], 
             "NumericalThresholds" -> {-1.5279652476310728`, 
              1.4262633919715884`, 
              1.646251440048218, -1.1163245439529417`, -1.0624305009841917`, \
-0.9803544878959655, -0.23942942917346952`, 
              1.523980259895325, -0.2693887650966644, 1.6299418210983279`}, 
             "LeafValues" -> 
             RawArray[
               "Real32",{-0.0021928856149315834`, -0.002925620647147298, 
               0.0026620447169989347`, 
               0.004661961924284697, -0.0011390706058591604`, 
               0.006310250144451857, 0.00003585830199881457, 
               0.0002270630357088521, -0.0036885766312479973`, \
-0.005851936526596546, -0.0014718429883942008`}], "Children" -> 
             RawArray["Integer16",{{-1, 2}, {3, 4}, {5, -4}, {10, 9}, {-2, 
               6}, {7, 8}, {-6, -8}, {-7, -9}, {-5, -10}, {-3, -11}}], 
             "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0,
              "NominalNodeNumber" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{1, 1, 5, 1, 4, 24, 12, 5, 5, 15}], 
             
             "NumericalThresholds" -> {-0.9332868456840514, \
-0.9150777757167815, -0.7260941565036773, -0.9101396799087523, \
-0.4808294773101806, 
              1.4399781227111819`, -0.9621942341327666, -0.6286626756191253, \
-0.6013090312480925, -0.744489699602127}, "LeafValues" -> 
             RawArray["Real32",{0.002827927004545927, 0.0011573684168979526`, 
               0.003846100065857172, -0.007276630960404873, 
               0.003940438386052847, 
               0.0006113562267273664, -0.005504421889781952, \
-0.004274835344403982, 0.008023218251764774, 
               0.0000941103498917073, -0.00036132519016973674`}], "Children" -> 
             RawArray["Integer16",{{-1, 2}, {3, 4}, {-2, -4}, {-3, 5}, {6, 
               7}, {10, -7}, {8, 9}, {-6, -9}, {-8, -10}, {-5, -11}}], 
             "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0,
              "NominalNodeNumber" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{16, 29, 34, 17, 29, 30, 29, 14, 22, 2}], 
             "NumericalThresholds" -> {-0.8966434895992278, 
              1.1509497165679934`, 1.2134262919425967`, 0.49048970639705664`, 
              1.125215291976929, 1.1553009748458865`, 
              1.173013210296631, -0.9025790989398955, -1.7373403310775755`, 
              1.6096116304397585`}, "LeafValues" -> 
             RawArray["Real32",{0.001164717716164887, 
               0.0024056395050138235`, -0.002672255039215088, \
-0.007148168049752712, 0.0002936301752924919, 0.005939210765063763, 
               0.003468315117061138, 0.0013869081158190966`, 
               0.0020101729314774275`, -0.000012809115105483215`, \
-0.0012739469530060887`}], "Children" -> 
             RawArray["Integer16",{{2, 3}, {5, 7}, {6, 
               4}, {-4, -5}, {-1, -6}, {8, -7}, {-3, -8}, {-2, 9}, {-9, 
               10}, {-10, -11}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
             "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{35, 29, 29, 41, 31, 31, 14, 39, 39, 40, 2, 
               35, 26, 38, 36, 39, 41, 38}], 
             "NumericalThresholds" -> {-1.7957092523574827`, \
-1.3278840184211729`, -1.2914980649948118`, -0.2663006633520126, \
-1.4381712675094602`, -1.2597877383232114`, 
              1.340961277484894, -0.08097373694181441, -0.43258252739906305`, 
              0.22967168688774112`, 
              0.4574568718671799, -1.3763164877891538`, -1.581758379936218, \
-0.5428965687751769, -1.1672496795654295`, 0.3461874127388001, 
              0.059595867991447456`, -0.2761630862951278}, "LeafValues" -> 
             RawArray["Real32",{0.0030063935555517673`, 0.0009073939872905612,
                0.0068022022023797035`, -0.005322866141796112, \
-0.0002875445643439889, -0.005389660596847534, 0.0016432807315140963`, 
               0.0050924839451909065`, 
               0.0006242005038075149, -0.0000879147119121626, \
-0.0027291199658066034`, 0.0006750737084075809, 
               0.005352817475795746, -0.0034697516821324825`, \
-0.0012478913413360715`, 
               0.0015702275559306145`, -0.0032252527307718992`, \
-0.0013442045310512185`, 0.0004076585464645177}], "Children" -> 
             RawArray["Integer16",{{18, 2}, {5, 3}, {4, 6}, {-3, -5}, {10, 
               8}, {17, 7}, {9, -8}, {-6, 16}, {-7, -10}, {11, 14}, {12, 
               13}, {-2, -13}, {-12, -14}, {-11, 
               15}, {-15, -16}, {-9, -17}, {-4, -18}, {-1, -19}}], 
             "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0,
              "NominalNodeNumber" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{14, 3, 2, 35, 20, 21, 11, 39, 38, 36, 12, 
               41, 1, 41, 3, 3, 20, 30, 21}], 
             "NumericalThresholds" -> {
              1.664364278316498, -0.6095209419727324, -0.78089901804924, 
              0.19708653539419177`, 0.6748562157154084, 
              0.47804430127143865`, -0.9591592252254485, -0.2509185522794723, \
-0.24890209734439847`, 
              0.09656087309122087, -0.8569453954696654, -0.2800270467996597, \
-0.7497666776180266, -0.27096971869468683`, -0.5677547454833983, \
-0.5643660724163054, 0.3661713749170304, 0.6702956259250642, 
              0.34571814537048345`}, "LeafValues" -> 
             RawArray["Real32",{
               0.00945562869310379, -0.002322662156075239, \
-0.004165175370872021, 
               0.00733538530766964, -0.008678476326167583, \
-0.004536360036581755, 0.00011304126383038238`, -0.0013476869789883494`, 
               0.0007399145979434252, 
               
               0.002379526849836111, -0.005852723028510809, \
-0.00011738803732441738`, 0.0018580325413495302`, 
               1.0751524541774415`*^-6, -0.002776855370029807, 
               0.0004244656884111464, 
               0.00172290054615587, -0.0006619651685468853, \
-0.007996045053005219, 0.0035900662187486887`}], "Children" -> 
             RawArray["Integer16",{{2, -2}, {4, 3}, {-3, 13}, {5, 7}, {-1, 
               6}, {-6, 9}, {8, 10}, {-5, -9}, {-7, -10}, {12, 
               11}, {-11, -12}, {-8, -13}, {14, 17}, {15, 
               16}, {-4, -16}, {-15, -17}, {19, 18}, {-18, -19}, {-14, -20}}],
              "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 
             0, "NominalNodeNumber" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{2, 1, 25, 36, 7, 27, 1, 1, 37, 14, 37, 1, 
               18, 1}], 
             "NumericalThresholds" -> {-0.8716202974319457, \
-0.8795969486236571, 
              0.7585017979145051, -0.05170992948114871, -1.0296221971511839`, 
              0.38250108063220983`, -0.863681137561798, -0.8572868108749389, \
-0.17129758745431897`, -0.8872027397155761, -0.286512479186058, \
-0.8476366400718688, -0.03347799181938171, -0.8442594110965728}, "LeafValues" -> 
             RawArray["Real32",{
               0.0022374754771590233`, -0.0012664105743169785`, 
               0.0005383944953791797, -0.004272777121514082, 
               0.0026053518522530794`, -0.00459093926474452, 
               0.0015608826652169228`, -0.004357548896223307, \
-0.00036924442974850535`, 0.004146741237491369, -0.004639077465981245, 
               0.006288560573011637, -0.0035254224203526974`, 
               0.004313116427510977, 0.00001020182935462799}], "Children" -> 
             RawArray["Integer16",{{-1, 2}, {3, 7}, {4, -4}, {5, -5}, {
               6, -6}, {-2, -7}, {9, 8}, {-8, 12}, {11, 
               10}, {-10, -11}, {-3, -12}, {13, 14}, {-9, -14}, {-13, -15}}], 
             "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0,
              "NominalNodeNumber" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{37, 38, 38, 25, 1, 41, 34, 39, 38, 40, 19, 
               40, 20, 12, 39, 17, 23, 40, 40, 22, 38, 41, 36, 17, 2, 1}], 
             "NumericalThresholds" -> {-0.32701013982295984`, \
-0.2832748889923095, -0.2912656366825103, 
              0.8197647035121919, -0.744554430246353, -0.26570712029933924`, 
              0.12673533707857135`, -0.27574123442173, -0.2741171717643737, \
-0.3174462020397186, -1.5200285911560056`, -0.2921698093414306, 
              1.4138594865798952`, 2.0454624891281132`, 
              0.10116324946284296`, -0.8923043906688689, -1.318213105201721, \
-0.21639443188905713`, -0.2035264819860458, 
              0.9679554104804994, -0.2641990780830383, -0.10533052310347556`, \
-0.010859977919608353`, -0.3911206573247909, -0.6487660706043242, \
-0.8722262084484099}, "LeafValues" -> 
             RawArray["Real32",{-0.0031332012731581926`, 0.00220005982555449, 
               0.00522112101316452, -0.003871556371450424, 
               0.005698447115719318, -0.009442266076803207, 
               0.002199772512540221, -0.0016879905015230179`, \
-0.00653874734416604, -0.003272176021710038, -0.0036847933661192656`, 
               0.006463436409831047, 
               0.0045757838524878025`, -0.00344048161059618, \
-0.002256163163110614, -0.0024289481807500124`, 
               0.0018787480657920241`, -0.0026139970868825912`, \
-0.005937619134783745, -0.00370563636533916, -0.0001283445453736931, 
               0.0002628215297590941, 
               0.0000731481341063045, -0.0015855715610086918`, 
               0.0027744986582547426`, -0.0006299453671090305, \
-0.0007745096809230745}], "Children" -> 
             RawArray["Integer16",{{10, 2}, {3, 9}, {4, 5}, {7, 6}, {
               26, -6}, {-5, 23}, {-2, 8}, {-8, -9}, {20, 13}, {11, 12}, {-1, 
               14}, {-11, 18}, {17, -14}, {15, -15}, {
               16, -16}, {-12, -17}, {-10, 21}, {24, 19}, {-19, 
               22}, {-3, -21}, {-18, -22}, {-20, -23}, {-7, -24}, {-13, 
               25}, {-25, -26}, {-4, -27}}], "NominalSplits" -> {}, 
             "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
             0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{1, 1, 7, 1, 4, 24, 9, 17, 9, 41}], 
             "NumericalThresholds" -> {-0.9332868456840514, \
-0.9150777757167815, -1.0658665299415586`, -0.9101396799087523, \
-0.4803836047649383, 
              1.4399781227111819`, -0.881374567747116, -0.28563019633293146`, \
-0.8231191039085387, -0.27970787882804865`}, "LeafValues" -> 
             RawArray["Real32",{0.0023503561969846487`, 0.001065602176822722, 
               0.003285210346803069, -0.005270382389426231, \
-0.001802442711777985, 
               0.006274891551584005, -0.004302770830690861, \
-0.0027613365091383457`, 0.0006758239469490945, 0.00006633845623582602, 
               0.00009837665129452944}], "Children" -> 
             RawArray["Integer16",{{-1, 2}, {3, 4}, {-2, -4}, {-3, 5}, {6, 
               7}, {10, -7}, {8, 9}, {-6, -9}, {-8, -10}, {-5, -11}}], 
             "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0,
              "NominalNodeNumber" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{19, 35, 19, 40, 18, 17, 38, 14, 3, 2, 22, 
               19}], "NumericalThresholds" -> {-1.4444094896316526`, \
-0.5316500365734099, -1.3779478669166563`, -0.38045606017112726`, \
-1.119767367839813, -0.7261879444122313, -0.5516225695610045, 
              1.664364278316498, -0.6095209419727324, -0.78089901804924, \
-0.25974844396114344`, -1.5200285911560056`}, "LeafValues" -> 
             RawArray[
               "Real32",{-0.0015149374958127737`, -0.0012023046147078276`, \
-0.0057390606962144375`, 0.002772638341411948, 
               0.005228285677731037, -0.0026342470664530993`, 
               0.003385978750884533, -0.003495265729725361, \
-0.0026375972665846348`, -0.0031579264905303717`, -0.00007682092837058008, 
               0.00043132336577400565`, 0.0010045351227745414`}], "Children" -> 
             RawArray["Integer16",{{2, 3}, {5, -3}, {4, 7}, {-2, -5}, {
               6, -6}, {12, -7}, {-4, 8}, {9, -9}, {11, 
               10}, {-10, -11}, {-8, -12}, {-1, -13}}], "NominalSplits" -> {},
              "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
             0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{3, 37, 3, 37, 4, 36, 34, 38, 4, 38, 10}], 
             "NumericalThresholds" -> {
              2.7212861776351933`, -0.9009022414684295, 2.58844268321991, 
              2.6066154241561894`, -0.1843890994787216, 1.7436331510543825`, 
              0.39804632961750036`, 1.2305586338043215`, -0.8851625621318816, 
              0.8989427387714387, 0.5242724418640138}, "LeafValues" -> 
             RawArray["Real32",{0.00002282804598507937, 
               0.0008610979421064258, -0.003833207068964839, 
               0.0022538488265126944`, -0.0008810202707536519, 
               0.0034811487421393394`, -0.004544687457382679, 
               0.0003000109572894871, 
               0.005139730870723724, -0.0020974446088075638`, \
-0.0029309713281691074`, 0.001316133071668446}], "Children" -> 
             RawArray["Integer16",{{3, 2}, {-2, -3}, {4, -4}, {6, 5}, {
               11, -6}, {8, 7}, {-7, -8}, {10, 
               9}, {-9, -10}, {-1, -11}, {-5, -12}}], "NominalSplits" -> {}, 
             "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
             0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{36, 37, 6, 37, 37, 18, 22, 37, 38, 37, 8, 
               26}], "NumericalThresholds" -> {4.366788387298585, 
              2.6066154241561894`, -0.21953364461660382`, 1.4280104637145998`,
               1.3408477902412417`, 1.2830932140350344`, -0.2914660274982452, 
              0.20448905974626544`, -0.005142623092979192, 
              0.16154240071773532`, 
              0.26215225458145147`, -0.7409779429435729}, "LeafValues" -> 
             RawArray["Real32",{
               0.000013332338312466163`, -0.0020408194977790117`, \
-0.0010663754073902965`, 0.003666493808850646, -0.0034756711684167385`, 
               0.004644949920475483, -0.004970457870513201, 
               0.0033457125537097454`, -0.004556183237582445, \
-0.0003329843748360872, 0.0034566677641123533`, -0.00009124328789766878, 
               0.0006878022104501724}], "Children" -> 
             RawArray["Integer16",{{2, -2}, {4, 3}, {12, -4}, {5, 6}, {
               8, -6}, {7, -7}, {11, -8}, {10, 
               9}, {-9, -10}, {-1, -11}, {-5, -12}, {-3, -13}}], 
             "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0,
              "NominalNodeNumber" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{17, 17, 28, 37, 17, 8, 3, 16, 41, 34, 18, 
               34, 16, 38}], 
             "NumericalThresholds" -> {-1.0333310961723325`, \
-1.008942902088165, 1.0279076695442202`, 
              0.11031349748373033`, -1.0014047622680662`, 
              0.025991793721914295`, 
              0.12002993375062944`, -0.8835952877998351, \
-0.27264818549156183`, 0.762939751148224, -0.9689552783966063, 
              0.7432492971420289, -0.8988514244556426, -0.18496949225664136`},
              "LeafValues" -> 
             RawArray["Real32",{
               0.002196826273575425, -0.003150390228256583, \
-0.0005081719718873501, -0.005665493663400412, 
               0.00271430192515254, -0.003395254723727703, 
               0.0036859505344182253`, -0.00025306022143922746`, 
               0.000017325797671219334`, 
               0.0013210877077654004`, -0.0029651205986738205`, \
-0.00027583129121921957`, 0.0037272130139172077`, 0.0004481155192479491, 
               0.004916299134492874}], "Children" -> 
             RawArray["Integer16",{{-1, 2}, {3, 5}, {4, -4}, {7, -5}, {6, 
               8}, {-3, -7}, {-2, -8}, {9, 10}, {13, 14}, {12, 
               11}, {-11, -12}, {-9, -13}, {-6, -14}, {-10, -15}}], 
             "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0,
              "NominalNodeNumber" -> 0|>], 
           
           MachineLearning`DecisionTree[<|
            "FeatureIndices" -> 
             RawArray["Integer16",{23, 11, 40, 11, 9, 25, 6, 6, 6, 40, 6, 
               40}], "NumericalThresholds" -> {
              1.4262633919715884`, -1.0789577960968015`, \
-0.18022719770669934`, -1.0624305009841917`, -1.0712830424308775`, 
              0.5474854707717897, -0.9097796082496642, -0.7846683859825133, \
-0.9244163334369658, -0.31248815357685084`, -1.0488838553428648`, \
-0.37936525046825403`}, "LeafValues" -> 
             RawArray["Real32",{
               0.004082546103745699, -0.0012439717538654804`, \
-0.0020619190763682127`, 
               0.0015512637328356504`, -0.0002842580433934927, \
-0.00022087768593337387`, 0.0043848128989338875`, 
               0.0014423788525164127`, -0.00008148819324560463, \
-0.003544245148077607, -0.0016100978245958686`, -0.0043051172979176044`, 
               0.00040243196417577565`}], "Children" -> 
             RawArray["Integer16",{{2, 3}, {-1, 4}, {10, -4}, {-3, 5}, {6, 
               7}, {-5, -7}, {9, 8}, {-8, -9}, {-6, -10}, {12, 
               11}, {-11, -12}, {-2, -13}}], "NominalSplits" -> {}, 
             "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
             0|>]}, "ClassNumber" -> 1, "IterationsNumber" -> 50, "Processor" -> 
         MachineLearning`MLProcessor[
          "Sequence", <|
           "Input" -> <|
             "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
            "Output" -> <|
             "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
            "Processors" -> {
              MachineLearning`MLProcessor[
              "DensifyNumericalVector", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Version" -> {13.2, 1}, "ID" -> 5473596142612864811, 
                "Output" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>|>], 
              
              MachineLearning`MLProcessor[
              "FirstValues", <|
               "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, 
                "Key" -> "f1", "Invertibility" -> "Perfect", 
                "StructurePreserving" -> False, "Missing" -> "Allowed"|>]}, 
            "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
            "Missing" -> "Allowed"|>], 
         "DistributionData" -> {NormalDistribution, {0.025934725499407604`}}, 
         "Calibrator" -> None, "Method" -> "GradientBoostedTrees", 
         "PostProcessor" -> MachineLearning`MLProcessor["Identity"], 
         "Options" -> <|
          "BoostingMethod" -> <|"Value" -> "Gradient", "Options" -> <||>|>, 
           MaxTrainingRounds -> <|"Value" -> 50, "Options" -> <||>|>, 
           "LeavesNumber" -> <|"Value" -> 500, "Options" -> <||>|>, 
           "LearningRate" -> <|"Value" -> 0.2, "Options" -> <||>|>, 
           ValidationSet -> <|"Value" -> Automatic, "Options" -> <||>|>, 
           "MaxBinNumber" -> <|"Value" -> 255, "Options" -> <||>|>, 
           "ThreadNumber" -> <|"Value" -> 4, "Options" -> <||>|>, 
           "MaxDepth" -> <|"Value" -> 6, "Options" -> <||>|>, 
           "LeafSize" -> <|"Value" -> 7, "Options" -> <||>|>, 
           "FeatureFraction" -> <|"Value" -> 1, "Options" -> <||>|>, 
           "BaggingFraction" -> <|"Value" -> 1, "Options" -> <||>|>, 
           "BaggingFrequency" -> <|"Value" -> 0, "Options" -> <||>|>, 
           "MinGainToSplit" -> <|"Value" -> 0, "Options" -> <||>|>, 
           "L1Regularization" -> <|"Value" -> 0, "Options" -> <||>|>, 
           "L2Regularization" -> <|"Value" -> 0, "Options" -> <||>|>, 
           "LossFunction" -> <|
            "Value" -> "MeanSquaredError", "Options" -> <||>|>|>|>, 
       "TrainingInformation" -> <|
        "Reporting" -> None, "TrainingFunction" -> Predict, "EMIterations" -> 
         Missing["KeyAbsent", "EMIterations"], "ProcessorEntropyShift" -> 
         1.1315338076510881`, "PreprocessingTime" -> 
         0.526308`6.172784964937246, "LossName" -> "StandardDeviation", 
         "BestModelInformation" -> 
         Dataset[<|
           "MeanCrossEntropy" -> Around[166.7514637699593, 20.43530110622962],
             "StandardDeviation" -> 
            Around[0.6305619692276822, 0.07309467303093932], "EvaluationTime" -> 
            0.000057123896530042826`, "TestSize" -> 748, "ModelMemory" -> 
            130808, "ModelUtility" -> -0.25494691125302194`, "Round" -> 3, 
            "Iteration" -> 18, "TimeStamp" -> 
            3.899873552348434`16.3436255150563*^9, "TrainingSize" -> 150, 
            "TrainingTime" -> 0.15848931924611134`, "TrainingMemory" -> 
            728840, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
              Around[166.7514637699593, 14.44993998780392]}, 
            "StandardDeviationHistory" -> {
              Around[0.6305619692276822, 0.05168573896879064]}, 
            "IterationHistory" -> {18}, 
            "TimeStampHistory" -> {3.899873552348434`16.3436255150563*^9}, 
            "Configuration" -> {
             "GradientBoostedTrees", "BoostingMethod" -> "Gradient", 
              MaxTrainingRounds -> 50, "LeavesNumber" -> 500, "LearningRate" -> 
              0.2, ValidationSet -> Automatic, "MaxBinNumber" -> 255, 
              "ThreadNumber" -> 4, "MaxDepth" -> 6, "LeafSize" -> 7, 
              "FeatureFraction" -> 1, "BaggingFraction" -> 1, 
              "BaggingFrequency" -> 0, "MinGainToSplit" -> 0, 
              "L1Regularization" -> 0, "L2Regularization" -> 0, 
              "LossFunction" -> "MeanSquaredError"}, "FinalTrainingSize" -> 
            898|>, 
           TypeSystem`Assoc[
            TypeSystem`Atom[String], TypeSystem`AnyType, 19], <||>], 
         "Configurations" -> 
         Dataset[<|<|
             "Value" -> "GradientBoostedTrees", 
              "Options" -> <|
               "BoostingMethod" -> <|"Value" -> "Gradient"|>, 
                MaxTrainingRounds -> <|"Value" -> 50|>, 
                "LeavesNumber" -> <|"Value" -> 13|>, 
                "LearningRate" -> <|"Value" -> 0.1|>, 
                ValidationSet -> <|"Value" -> Automatic|>, 
                "MaxBinNumber" -> <|"Value" -> 255|>, 
                "ThreadNumber" -> <|"Value" -> 4|>, 
                "MaxDepth" -> <|"Value" -> 6|>, 
                "LeafSize" -> <|"Value" -> 200|>, 
                "FeatureFraction" -> <|"Value" -> 1|>, 
                "BaggingFraction" -> <|"Value" -> 1|>, 
                "BaggingFrequency" -> <|"Value" -> 0|>, 
                "MinGainToSplit" -> <|"Value" -> 0|>, 
                "L1Regularization" -> <|"Value" -> 0|>, 
                "L2Regularization" -> <|"Value" -> 0|>, 
                "LossFunction" -> <|"Value" -> "MeanSquaredError"|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[3.389021789149366, 0.008871855431902978], 
                 "StandardDeviation" -> 
                 Around[3.40271346380175, 0.16147900297776024`], 
                 "EvaluationTime" -> 0.00003778809218869826, "TestSize" -> 
                 300, "ModelMemory" -> 20776, 
                 "ModelUtility" -> -1.9271782356868528`, "Round" -> 1, 
                 "Iteration" -> 1, "TimeStamp" -> 
                 3.89987354891468`16.343625514673917*^9, "TrainingSize" -> 9, 
                 "TrainingTime" -> 0.03981071705534971, "TrainingMemory" -> 
                 80936, "ExperimentCount" -> 1, 
                 "MeanCrossEntropyHistory" -> {
                   Around[3.389021789149366, 0.006273349137605302]}, 
                 "StandardDeviationHistory" -> {
                   Around[3.40271346380175, 0.11418289802481696`]}, 
                 "IterationHistory" -> {1}, 
                 "TimeStampHistory" -> {
                  3.89987354891468`16.343625514673917*^9}|>, <|
                "MeanCrossEntropy" -> 
                 Around[3.9290831359751994`, 0.012171798913900942`], 
                 "StandardDeviation" -> 
                 Around[3.1046025721123995`, 0.11685782928622997`], 
                 "EvaluationTime" -> 0.00012649110640673515`, "TestSize" -> 
                 300, "ModelMemory" -> 20776, 
                 "ModelUtility" -> -1.8335442563966644`, "Round" -> 2, 
                 "Iteration" -> 17, "TimeStamp" -> 
                 3.899873551696285`16.343625514983678*^9, "TrainingSize" -> 
                 40, "TrainingTime" -> 0.25118864315095796`, "TrainingMemory" -> 
                 147928, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[3.9290831359751994`, 0.00860676155125841]}, 
                 "StandardDeviationHistory" -> {
                   Around[3.1046025721123995`, 0.08263096352303313]}, 
                 "IterationHistory" -> {17}, 
                 "TimeStampHistory" -> {
                  3.899873551696285`16.343625514983678*^9}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 0.00012649110640673515`, "ModelMemory" -> 
                20776, "StandardDeviation" -> 
                Around[3.1046025721123995`, 0.11685782928622997`], 
                "TrainingMemory" -> 147928, "TrainingTime" -> 
                2.2954847325509524`|>, "Index" -> 1|>, <|
             "Value" -> "GradientBoostedTrees", 
              "Options" -> <|
               "BoostingMethod" -> <|"Value" -> "Gradient"|>, 
                MaxTrainingRounds -> <|"Value" -> 50|>, 
                "LeavesNumber" -> <|"Value" -> 25|>, 
                "LearningRate" -> <|"Value" -> 0.1|>, 
                ValidationSet -> <|"Value" -> Automatic|>, 
                "MaxBinNumber" -> <|"Value" -> 255|>, 
                "ThreadNumber" -> <|"Value" -> 4|>, 
                "MaxDepth" -> <|"Value" -> 6|>, 
                "LeafSize" -> <|"Value" -> 3|>, 
                "FeatureFraction" -> <|"Value" -> 1|>, 
                "BaggingFraction" -> <|"Value" -> 1|>, 
                "BaggingFrequency" -> <|"Value" -> 0|>, 
                "MinGainToSplit" -> <|"Value" -> 0|>, 
                "L1Regularization" -> <|"Value" -> 0|>, 
                "L2Regularization" -> <|"Value" -> 0|>, 
                "LossFunction" -> <|"Value" -> "MeanSquaredError"|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[2.403986039377802, 0.19022015845755527`], 
                 "StandardDeviation" -> 
                 Around[1.7671715140805127`, 0.11931229367487566`], 
                 "EvaluationTime" -> 0.00007943282347242814, "TestSize" -> 
                 200, "ModelMemory" -> 116640, 
                 "ModelUtility" -> -1.2759629061686275`, "Round" -> 1, 
                 "Iteration" -> 4, "TimeStamp" -> 
                 3.899873549081317`16.343625514692476*^9, "TrainingSize" -> 9,
                  "TrainingTime" -> 0.05011872336272722, "TrainingMemory" -> 
                 321256, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[2.403986039377802, 0.13450596396371692`]}, 
                 "StandardDeviationHistory" -> {
                   Around[1.7671715140805127`, 0.08436653193642539]}, 
                 "IterationHistory" -> {4}, 
                 "TimeStampHistory" -> {
                  3.899873549081317`16.343625514692476*^9}|>, <|
                "MeanCrossEntropy" -> 
                 Around[3.188139377770767, 0.5329980796899414], 
                 "StandardDeviation" -> 
                 Around[0.8542137635347231, 0.1101081909576724], 
                 "EvaluationTime" -> 0.0000630957344480193, "TestSize" -> 300,
                  "ModelMemory" -> 126888, 
                 "ModelUtility" -> -0.5610504906139352, "Round" -> 2, 
                 "Iteration" -> 7, "TimeStamp" -> 
                 3.899873549242335`16.3436255147104*^9, "TrainingSize" -> 40, 
                 "TrainingTime" -> 0.07943282347242814, "TrainingMemory" -> 
                 554576, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[3.188139377770767, 0.3768865565081654]}, 
                 "StandardDeviationHistory" -> {
                   Around[0.8542137635347231, 0.07785824849035344]}, 
                 "IterationHistory" -> {7}, 
                 "TimeStampHistory" -> {
                  3.899873549242335`16.3436255147104*^9}|>, <|
                "MeanCrossEntropy" -> 
                 Around[146.51905224155507`, 51.17268881769074], 
                 "StandardDeviation" -> 
                 Around[0.7292891673921141, 0.2203761069809667], 
                 "EvaluationTime" -> 0.001, "TestSize" -> 100, "ModelMemory" -> 
                 149400, "ModelUtility" -> -0.43690225037355235`, "Round" -> 
                 3, "Iteration" -> 14, "TimeStamp" -> 
                 3.899873550640882`16.343625514866147*^9, "TrainingSize" -> 
                 150, "TrainingTime" -> 0.25118864315095796`, 
                 "TrainingMemory" -> 995416, "ExperimentCount" -> 1, 
                 "MeanCrossEntropyHistory" -> {
                   Around[146.51905224155507`, 36.184555274538134`]}, 
                 "StandardDeviationHistory" -> {
                   Around[0.7292891673921141, 0.1558294396577336]}, 
                 "IterationHistory" -> {14}, 
                 "TimeStampHistory" -> {
                  3.899873550640882`16.343625514866147*^9}|>, <|
                "MeanCrossEntropy" -> 
                 Around[3.924776340218847, 1.2351487837367763`], 
                 "StandardDeviation" -> 
                 Around[0.636941826761706, 0.19507440864768436`], 
                 "EvaluationTime" -> 0.00007010637160891033, "TestSize" -> 
                 180, "ModelMemory" -> 149464, 
                 "ModelUtility" -> -0.30154738084720345`, "Round" -> 4, 
                 "Iteration" -> 23, "TimeStamp" -> 
                 3.899873553487607`16.343625515183163*^9, "TrainingSize" -> 
                 718, "TrainingTime" -> 0.15848931924611134`, 
                 "TrainingMemory" -> 1445264, "ExperimentCount" -> 1, 
                 "MeanCrossEntropyHistory" -> {
                   Around[3.924776340218847, 0.8733820807545909]}, 
                 "StandardDeviationHistory" -> {
                   Around[0.636941826761706, 0.1379384371907333]}, 
                 "IterationHistory" -> {23}, 
                 "TimeStampHistory" -> {
                  3.899873553487607`16.343625515183163*^9}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 0.00007010637160891033, "ModelMemory" -> 
                149464, "StandardDeviation" -> 
                Around[0.636941826761706, 0.19507440864768436`], 
                "TrainingMemory" -> 1445264, "TrainingTime" -> 
                0.24834074102708373`|>, "Index" -> 2|>, <|
             "Value" -> "GradientBoostedTrees", 
              "Options" -> <|
               "BoostingMethod" -> <|"Value" -> "Gradient"|>, 
                MaxTrainingRounds -> <|"Value" -> 50|>, 
                "LeavesNumber" -> <|"Value" -> 250|>, 
                "LearningRate" -> <|"Value" -> 0.1|>, 
                ValidationSet -> <|"Value" -> Automatic|>, 
                "MaxBinNumber" -> <|"Value" -> 255|>, 
                "ThreadNumber" -> <|"Value" -> 4|>, 
                "MaxDepth" -> <|"Value" -> 6|>, 
                "LeafSize" -> <|"Value" -> 35|>, 
                "FeatureFraction" -> <|"Value" -> 1|>, 
                "BaggingFraction" -> <|"Value" -> 1|>, 
                "BaggingFrequency" -> <|"Value" -> 0|>, 
                "MinGainToSplit" -> <|"Value" -> 0|>, 
                "L1Regularization" -> <|"Value" -> 0|>, 
                "L2Regularization" -> <|"Value" -> 0|>, 
                "LossFunction" -> <|"Value" -> "MeanSquaredError"|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[3.9291388560250993`, 0.009428599085194403], 
                 "StandardDeviation" -> 
                 Around[3.101886545377339, 0.09060606443952793], 
                 "EvaluationTime" -> 0.00004787516460259518, "TestSize" -> 
                 500, "ModelMemory" -> 20776, 
                 "ModelUtility" -> -1.83099411148613, "Round" -> 2, 
                 "Iteration" -> 11, "TimeStamp" -> 
                 3.899873550363522`16.343625514835264*^9, "TrainingSize" -> 
                 40, "TrainingTime" -> 0.03981071705534971, "TrainingMemory" -> 
                 118048, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[3.9291388560250993`, 0.00666702635023024]}, 
                 "StandardDeviationHistory" -> {
                   Around[3.101886545377339, 0.0640681625818155]}, 
                 "IterationHistory" -> {11}, 
                 "TimeStampHistory" -> {
                  3.899873550363522`16.343625514835264*^9}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 0.00004787516460259518, "ModelMemory" -> 
                20776, "StandardDeviation" -> 
                Around[3.101886545377339, 0.09060606443952793], 
                "TrainingMemory" -> 118048, "TrainingTime" -> 
                0.39731095621239015`|>, "Index" -> 3|>, <|
             "Value" -> "GradientBoostedTrees", 
              "Options" -> <|
               "BoostingMethod" -> <|"Value" -> "Gradient"|>, 
                MaxTrainingRounds -> <|"Value" -> 50|>, 
                "LeavesNumber" -> <|"Value" -> 110|>, 
                "LearningRate" -> <|"Value" -> 0.2|>, 
                ValidationSet -> <|"Value" -> Automatic|>, 
                "MaxBinNumber" -> <|"Value" -> 255|>, 
                "ThreadNumber" -> <|"Value" -> 4|>, 
                "MaxDepth" -> <|"Value" -> 6|>, 
                "LeafSize" -> <|"Value" -> 15|>, 
                "FeatureFraction" -> <|"Value" -> 1|>, 
                "BaggingFraction" -> <|"Value" -> 1|>, 
                "BaggingFrequency" -> <|"Value" -> 0|>, 
                "MinGainToSplit" -> <|"Value" -> 0|>, 
                "L1Regularization" -> <|"Value" -> 0|>, 
                "L2Regularization" -> <|"Value" -> 0|>, 
                "LossFunction" -> <|"Value" -> "MeanSquaredError"|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[3.3881820557492195`, 0.010821281544393855`], 
                 "StandardDeviation" -> 
                 Around[3.372911575958258, 0.19676345441568563`], 
                 "EvaluationTime" -> 0.00017900777537149963`, "TestSize" -> 
                 200, "ModelMemory" -> 20776, 
                 "ModelUtility" -> -1.9205348329880811`, "Round" -> 1, 
                 "Iteration" -> 9, "TimeStamp" -> 
                 3.899873549396915`16.343625514727616*^9, "TrainingSize" -> 9,
                  "TrainingTime" -> 0.5011872336272722, "TrainingMemory" -> 
                 268904, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[3.3881820557492195`, 0.00765180156116973]}, 
                 "StandardDeviationHistory" -> {
                   Around[3.372911575958258, 0.13913277290702142`]}, 
                 "IterationHistory" -> {9}, 
                 "TimeStampHistory" -> {
                  3.899873549396915`16.343625514727616*^9}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 0.00017900777537149963`, "ModelMemory" -> 
                20776, "StandardDeviation" -> 
                Around[3.372911575958258, 0.19676345441568563`], 
                "TrainingMemory" -> 268904, "TrainingTime" -> 
                5.001848591600178|>, "Index" -> 4|>, <|
             "Value" -> "GradientBoostedTrees", 
              "Options" -> <|
               "BoostingMethod" -> <|"Value" -> "Gradient"|>, 
                MaxTrainingRounds -> <|"Value" -> 50|>, 
                "LeavesNumber" -> <|"Value" -> 500|>, 
                "LearningRate" -> <|"Value" -> 0.2|>, 
                ValidationSet -> <|"Value" -> Automatic|>, 
                "MaxBinNumber" -> <|"Value" -> 255|>, 
                "ThreadNumber" -> <|"Value" -> 4|>, 
                "MaxDepth" -> <|"Value" -> 6|>, 
                "LeafSize" -> <|"Value" -> 7|>, 
                "FeatureFraction" -> <|"Value" -> 1|>, 
                "BaggingFraction" -> <|"Value" -> 1|>, 
                "BaggingFrequency" -> <|"Value" -> 0|>, 
                "MinGainToSplit" -> <|"Value" -> 0|>, 
                "L1Regularization" -> <|"Value" -> 0|>, 
                "L2Regularization" -> <|"Value" -> 0|>, 
                "LossFunction" -> <|"Value" -> "MeanSquaredError"|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[3.3888470402523296`, 0.006870319322222106], 
                 "StandardDeviation" -> 
                 Around[3.396586505948905, 0.1252530271176797], 
                 "EvaluationTime" -> 0.000025118864315095795`, "TestSize" -> 
                 500, "ModelMemory" -> 20776, 
                 "ModelUtility" -> -1.9232777243640409`, "Round" -> 1, 
                 "Iteration" -> 3, "TimeStamp" -> 
                 3.899873549034487`16.34362551468726*^9, "TrainingSize" -> 9, 
                 "TrainingTime" -> 0.025118864315095794`, "TrainingMemory" -> 
                 80872, "ExperimentCount" -> 1, 
                 "MeanCrossEntropyHistory" -> {
                   Around[3.3888470402523296`, 0.004858049381660216]}, 
                 "StandardDeviationHistory" -> {
                   Around[3.396586505948905, 0.08856726483905382]}, 
                 "IterationHistory" -> {3}, 
                 "TimeStampHistory" -> {
                  3.899873549034487`16.34362551468726*^9}|>, <|
                "MeanCrossEntropy" -> 
                 Around[1.5561023166000783`, 0.2846264463998506], 
                 "StandardDeviation" -> 
                 Around[0.8804783631457624, 0.134972247351009], 
                 "EvaluationTime" -> 0.00011896107135926975`, "TestSize" -> 
                 200, "ModelMemory" -> 118704, 
                 "ModelUtility" -> -0.5960784226080982, "Round" -> 2, 
                 "Iteration" -> 12, "TimeStamp" -> 
                 3.899873550436276`16.343625514843364*^9, "TrainingSize" -> 
                 40, "TrainingTime" -> 0.12589254117941673`, "TrainingMemory" -> 
                 403064, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[1.5561023166000783`, 0.20126129035436374`]}, 
                 "StandardDeviationHistory" -> {
                   Around[0.8804783631457624, 0.09543979137388647]}, 
                 "IterationHistory" -> {12}, 
                 "TimeStampHistory" -> {
                  3.899873550436276`16.343625514843364*^9}|>, <|
                "MeanCrossEntropy" -> 
                 Around[166.7514637699593, 20.43530110622962], 
                 "StandardDeviation" -> 
                 Around[0.6305619692276822, 0.07309467303093932], 
                 "EvaluationTime" -> 0.000057123896530042826`, "TestSize" -> 
                 748, "ModelMemory" -> 130808, 
                 "ModelUtility" -> -0.25494691125302194`, "Round" -> 3, 
                 "Iteration" -> 18, "TimeStamp" -> 
                 3.899873552348434`16.3436255150563*^9, "TrainingSize" -> 150,
                  "TrainingTime" -> 0.15848931924611134`, "TrainingMemory" -> 
                 728840, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[166.7514637699593, 14.44993998780392]}, 
                 "StandardDeviationHistory" -> {
                   Around[0.6305619692276822, 0.05168573896879064]}, 
                 "IterationHistory" -> {18}, 
                 "TimeStampHistory" -> {
                  3.899873552348434`16.3436255150563*^9}|>, <|
                "MeanCrossEntropy" -> 
                 Around[19.33537466675155, 4.9278534681466315`], 
                 "StandardDeviation" -> 
                 Around[0.6495942984803915, 0.19050923250899002`], 
                 "EvaluationTime" -> 0.00009968490192912675, "TestSize" -> 
                 180, "ModelMemory" -> 158504, 
                 "ModelUtility" -> -0.3187665201635844, "Round" -> 4, 
                 "Iteration" -> 22, "TimeStamp" -> 
                 3.899873552791987`16.3436255151057*^9, "TrainingSize" -> 718,
                  "TrainingTime" -> 0.19952623149688792`, "TrainingMemory" -> 
                 1572960, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[19.33537466675155, 3.4845186040201295`]}, 
                 "StandardDeviationHistory" -> {
                   Around[0.6495942984803915, 0.1347103701857515]}, 
                 "IterationHistory" -> {22}, 
                 "TimeStampHistory" -> {
                  3.899873552791987`16.3436255151057*^9}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 0.00009968490192912675, "ModelMemory" -> 
                158504, "StandardDeviation" -> 
                Around[0.6495942984803915, 0.19050923250899002`], 
                "TrainingMemory" -> 1572960, "TrainingTime" -> 
                0.27466559952986647`|>, "Index" -> 5|>, <|
             "Value" -> "GradientBoostedTrees", 
              "Options" -> <|
               "BoostingMethod" -> <|"Value" -> "Gradient"|>, 
                MaxTrainingRounds -> <|"Value" -> 50|>, 
                "LeavesNumber" -> <|"Value" -> 250|>, 
                "LearningRate" -> <|"Value" -> 0.004|>, 
                ValidationSet -> <|"Value" -> Automatic|>, 
                "MaxBinNumber" -> <|"Value" -> 255|>, 
                "ThreadNumber" -> <|"Value" -> 4|>, 
                "MaxDepth" -> <|"Value" -> 6|>, 
                "LeafSize" -> <|"Value" -> 35|>, 
                "FeatureFraction" -> <|"Value" -> 1|>, 
                "BaggingFraction" -> <|"Value" -> 1|>, 
                "BaggingFrequency" -> <|"Value" -> 0|>, 
                "MinGainToSplit" -> <|"Value" -> 0|>, 
                "L1Regularization" -> <|"Value" -> 0|>, 
                "L2Regularization" -> <|"Value" -> 0|>, 
                "LossFunction" -> <|"Value" -> "MeanSquaredError"|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[3.3885846222493474`, 0.007674558381534099], 
                 "StandardDeviation" -> 
                 Around[3.38712621571961, 0.14002987564384972`], 
                 "EvaluationTime" -> 0.00003204378364345327, "TestSize" -> 
                 400, "ModelMemory" -> 20776, 
                 "ModelUtility" -> -1.9213748083733453`, "Round" -> 1, 
                 "Iteration" -> 2, "TimeStamp" -> 
                 3.899873548978886`16.343625514681065*^9, "TrainingSize" -> 9,
                  "TrainingTime" -> 0.03162277660168379, "TrainingMemory" -> 
                 81000, "ExperimentCount" -> 1, 
                 "MeanCrossEntropyHistory" -> {
                   Around[3.3885846222493474`, 0.005426732274194816]}, 
                 "StandardDeviationHistory" -> {
                   Around[3.38712621571961, 0.0990160746364751]}, 
                 "IterationHistory" -> {2}, 
                 "TimeStampHistory" -> {
                  3.899873548978886`16.343625514681065*^9}|>, <|
                "MeanCrossEntropy" -> 
                 Around[3.928768369522209, 0.014903151033027435`], 
                 "StandardDeviation" -> 
                 Around[3.065413459623383, 0.14309050765151765`], 
                 "EvaluationTime" -> 0.00019783029474463302`, "TestSize" -> 
                 200, "ModelMemory" -> 20776, 
                 "ModelUtility" -> -1.8226337258590577`, "Round" -> 2, 
                 "Iteration" -> 16, "TimeStamp" -> 
                 3.89987355152474`16.34362551496457*^9, "TrainingSize" -> 40, 
                 "TrainingTime" -> 0.1, "TrainingMemory" -> 263080, 
                 "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[3.928768369522209, 0.010538119156501]}, 
                 "StandardDeviationHistory" -> {
                   Around[3.065413459623383, 0.1011802682838137]}, 
                 "IterationHistory" -> {16}, 
                 "TimeStampHistory" -> {
                  3.89987355152474`16.34362551496457*^9}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 0.00019783029474463302`, "ModelMemory" -> 
                20776, "StandardDeviation" -> 
                Around[3.065413459623383, 0.14309050765151765`], 
                "TrainingMemory" -> 263080, "TrainingTime" -> 
                0.9296227766016838|>, "Index" -> 6|>, <|
             "Value" -> "GradientBoostedTrees", 
              "Options" -> <|
               "BoostingMethod" -> <|"Value" -> "Gradient"|>, 
                MaxTrainingRounds -> <|"Value" -> 50|>, 
                "LeavesNumber" -> <|"Value" -> 13|>, 
                "LearningRate" -> <|"Value" -> 0.04|>, 
                ValidationSet -> <|"Value" -> Automatic|>, 
                "MaxBinNumber" -> <|"Value" -> 255|>, 
                "ThreadNumber" -> <|"Value" -> 4|>, 
                "MaxDepth" -> <|"Value" -> 6|>, 
                "LeafSize" -> <|"Value" -> 35|>, 
                "FeatureFraction" -> <|"Value" -> 1|>, 
                "BaggingFraction" -> <|"Value" -> 1|>, 
                "BaggingFrequency" -> <|"Value" -> 0|>, 
                "MinGainToSplit" -> <|"Value" -> 0|>, 
                "L1Regularization" -> <|"Value" -> 0|>, 
                "L2Regularization" -> <|"Value" -> 0|>, 
                "LossFunction" -> <|"Value" -> "MeanSquaredError"|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[3.9291388560250993`, 0.009428599085194403], 
                 "StandardDeviation" -> 
                 Around[3.101886545377339, 0.09060606443952793], 
                 "EvaluationTime" -> 0.000025118864315095795`, "TestSize" -> 
                 500, "ModelMemory" -> 20776, 
                 "ModelUtility" -> -1.8309940887298297`, "Round" -> 2, 
                 "Iteration" -> 10, "TimeStamp" -> 
                 3.899873550303281`16.34362551482855*^9, "TrainingSize" -> 40,
                  "TrainingTime" -> 0.03981071705534971, "TrainingMemory" -> 
                 118176, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[3.9291388560250993`, 0.00666702635023024]}, 
                 "StandardDeviationHistory" -> {
                   Around[3.101886545377339, 0.0640681625818155]}, 
                 "IterationHistory" -> {10}, 
                 "TimeStampHistory" -> {
                  3.899873550303281`16.34362551482855*^9}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 0.000025118864315095795`, "ModelMemory" -> 
                20776, "StandardDeviation" -> 
                Around[3.101886545377339, 0.09060606443952793], 
                "TrainingMemory" -> 118176, "TrainingTime" -> 
                0.39731095621239015`|>, "Index" -> 7|>, <|
             "Value" -> "GradientBoostedTrees", 
              "Options" -> <|
               "BoostingMethod" -> <|"Value" -> "Gradient"|>, 
                MaxTrainingRounds -> <|"Value" -> 50|>, 
                "LeavesNumber" -> <|"Value" -> 60|>, 
                "LearningRate" -> <|"Value" -> 0.02|>, 
                ValidationSet -> <|"Value" -> Automatic|>, 
                "MaxBinNumber" -> <|"Value" -> 255|>, 
                "ThreadNumber" -> <|"Value" -> 4|>, 
                "MaxDepth" -> <|"Value" -> 6|>, 
                "LeafSize" -> <|"Value" -> 35|>, 
                "FeatureFraction" -> <|"Value" -> 1|>, 
                "BaggingFraction" -> <|"Value" -> 1|>, 
                "BaggingFrequency" -> <|"Value" -> 0|>, 
                "MinGainToSplit" -> <|"Value" -> 0|>, 
                "L1Regularization" -> <|"Value" -> 0|>, 
                "L2Regularization" -> <|"Value" -> 0|>, 
                "LossFunction" -> <|"Value" -> "MeanSquaredError"|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[3.3885846222493474`, 0.007674558381534099], 
                 "StandardDeviation" -> 
                 Around[3.38712621571961, 0.14002987564384972`], 
                 "EvaluationTime" -> 0.000025118864315095795`, "TestSize" -> 
                 400, "ModelMemory" -> 20776, 
                 "ModelUtility" -> -1.921374801448426, "Round" -> 1, 
                 "Iteration" -> 5, "TimeStamp" -> 
                 3.899873549155619`16.343625514700747*^9, "TrainingSize" -> 9,
                  "TrainingTime" -> 0.01995262314968879, "TrainingMemory" -> 
                 80936, "ExperimentCount" -> 1, 
                 "MeanCrossEntropyHistory" -> {
                   Around[3.3885846222493474`, 0.005426732274194816]}, 
                 "StandardDeviationHistory" -> {
                   Around[3.38712621571961, 0.0990160746364751]}, 
                 "IterationHistory" -> {5}, 
                 "TimeStampHistory" -> {
                  3.899873549155619`16.343625514700747*^9}|>, <|
                "MeanCrossEntropy" -> 
                 Around[3.929082229443, 0.010540846415376181`], 
                 "StandardDeviation" -> 
                 Around[3.094835618840155, 0.10111245581263303`], 
                 "EvaluationTime" -> 0.00005519021774611702, "TestSize" -> 
                 400, "ModelMemory" -> 20776, 
                 "ModelUtility" -> -1.8294064373213508`, "Round" -> 2, 
                 "Iteration" -> 13, "TimeStamp" -> 
                 3.899873550585644`16.343625514859998*^9, "TrainingSize" -> 
                 40, "TrainingTime" -> 0.025118864315095794`, 
                 "TrainingMemory" -> 118288, "ExperimentCount" -> 1, 
                 "MeanCrossEntropyHistory" -> {
                   Around[3.929082229443, 0.007453503979758408]}, 
                 "StandardDeviationHistory" -> {
                   Around[3.094835618840155, 0.07149730316753795]}, 
                 "IterationHistory" -> {13}, 
                 "TimeStampHistory" -> {
                  3.899873550585644`16.343625514859998*^9}|>, <|
                "MeanCrossEntropy" -> 
                 Around[1.7642346310420787`, 0.027154476954063183`], 
                 "StandardDeviation" -> 
                 Around[1.387472766671596, 0.05605500976741385], 
                 "EvaluationTime" -> 0.000048728601512476335`, "TestSize" -> 
                 748, "ModelMemory" -> 116856, 
                 "ModelUtility" -> -1.0287014382027566`, "Round" -> 3, 
                 "Iteration" -> 19, "TimeStamp" -> 
                 3.899873552558416`16.343625515079683*^9, "TrainingSize" -> 
                 150, "TrainingTime" -> 0.0630957344480193, "TrainingMemory" -> 
                 450864, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[1.7642346310420787`, 0.019201114793791902`]}, 
                 "StandardDeviationHistory" -> {
                   Around[1.387472766671596, 0.03963687752601649]}, 
                 "IterationHistory" -> {19}, 
                 "TimeStampHistory" -> {
                  3.899873552558416`16.343625515079683*^9}|>, <|
                "MeanCrossEntropy" -> 
                 Around[1.6502994428668185`, 0.06339760998390247], 
                 "StandardDeviation" -> 
                 Around[1.3050100599010122`, 0.10807599252821228`], 
                 "EvaluationTime" -> 0.00012310280760785037`, "TestSize" -> 
                 180, "ModelMemory" -> 132200, 
                 "ModelUtility" -> -0.9758099876176507, "Round" -> 4, 
                 "Iteration" -> 24, "TimeStamp" -> 
                 3.899873553672003`16.343625515203698*^9, "TrainingSize" -> 
                 718, "TrainingTime" -> 0.12589254117941673`, 
                 "TrainingMemory" -> 1192680, "ExperimentCount" -> 1, 
                 "MeanCrossEntropyHistory" -> {
                   Around[1.6502994428668185`, 0.044828879930637396`]}, 
                 "StandardDeviationHistory" -> {
                   Around[1.3050100599010122`, 0.07642126720016554]}, 
                 "IterationHistory" -> {24}, 
                 "TimeStampHistory" -> {
                  3.899873553672003`16.343625515203698*^9}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 0.00012310280760785037`, "ModelMemory" -> 
                132200, "StandardDeviation" -> 
                Around[1.3050100599010122`, 0.10807599252821228`], 
                "TrainingMemory" -> 1192680, "TrainingTime" -> 
                0.17740596852450247`|>, "Index" -> 8|>, <|
             "Value" -> "GradientBoostedTrees", 
              "Options" -> <|
               "BoostingMethod" -> <|"Value" -> "Gradient"|>, 
                MaxTrainingRounds -> <|"Value" -> 50|>, 
                "LeavesNumber" -> <|"Value" -> 110|>, 
                "LearningRate" -> <|"Value" -> 0.1|>, 
                ValidationSet -> <|"Value" -> Automatic|>, 
                "MaxBinNumber" -> <|"Value" -> 255|>, 
                "ThreadNumber" -> <|"Value" -> 4|>, 
                "MaxDepth" -> <|"Value" -> 6|>, 
                "LeafSize" -> <|"Value" -> 200|>, 
                "FeatureFraction" -> <|"Value" -> 1|>, 
                "BaggingFraction" -> <|"Value" -> 1|>, 
                "BaggingFrequency" -> <|"Value" -> 0|>, 
                "MinGainToSplit" -> <|"Value" -> 0|>, 
                "L1Regularization" -> <|"Value" -> 0|>, 
                "L2Regularization" -> <|"Value" -> 0|>, 
                "LossFunction" -> <|"Value" -> "MeanSquaredError"|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[3.9290349590088676`, 0.009427933857107443], 
                 "StandardDeviation" -> 
                 Around[3.101856693546047, 0.09059456716138155], 
                 "EvaluationTime" -> 0.000026419646772413396`, "TestSize" -> 
                 500, "ModelMemory" -> 20776, 
                 "ModelUtility" -> -1.8309837851034867`, "Round" -> 2, 
                 "Iteration" -> 8, "TimeStamp" -> 
                 3.899873549346175`16.343625514721964*^9, "TrainingSize" -> 
                 40, "TrainingTime" -> 0.025118864315095794`, 
                 "TrainingMemory" -> 118048, "ExperimentCount" -> 1, 
                 "MeanCrossEntropyHistory" -> {
                   Around[3.9290349590088676`, 0.0066665559629389155`]}, 
                 "StandardDeviationHistory" -> {
                   Around[3.101856693546047, 0.064060032778473]}, 
                 "IterationHistory" -> {8}, 
                 "TimeStampHistory" -> {
                  3.899873549346175`16.343625514721964*^9}|>, <|
                "MeanCrossEntropy" -> 
                 Around[2.593423068053555, 0.017011299767263195`], 
                 "StandardDeviation" -> 
                 Around[3.099309344872487, 0.07266786712790146], 
                 "EvaluationTime" -> 0.000014302054752268874`, "TestSize" -> 
                 748, "ModelMemory" -> 20776, 
                 "ModelUtility" -> -1.8290162179042597`, "Round" -> 3, 
                 "Iteration" -> 20, "TimeStamp" -> 
                 3.899873552672815`16.343625515092423*^9, "TrainingSize" -> 
                 150, "TrainingTime" -> 0.025118864315095794`, 
                 "TrainingMemory" -> 270496, "ExperimentCount" -> 1, 
                 "MeanCrossEntropyHistory" -> {
                   Around[2.593423068053555, 0.012028805422228943`]}, 
                 "StandardDeviationHistory" -> {
                   Around[3.099309344872487, 0.05138394162050213]}, 
                 "IterationHistory" -> {20}, 
                 "TimeStampHistory" -> {
                  3.899873552672815`16.343625515092423*^9}|>, <|
                "MeanCrossEntropy" -> 
                 Around[0.9059616566966484, 0.09208988708673475], 
                 "StandardDeviation" -> 
                 Around[0.759198574316312, 0.159338692297633], 
                 "EvaluationTime" -> 0.0009778403585674663, "TestSize" -> 180,
                  "ModelMemory" -> 116496, 
                 "ModelUtility" -> -0.458797215659251, "Round" -> 4, 
                 "Iteration" -> 25, "TimeStamp" -> 
                 3.899873553818504`16.343625515220012*^9, "TrainingSize" -> 
                 718, "TrainingTime" -> 0.1, "TrainingMemory" -> 1034632, 
                 "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[0.9059616566966484, 0.06511738363773362]}, 
                 "StandardDeviationHistory" -> {
                   Around[0.759198574316312, 0.112669469829053]}, 
                 "IterationHistory" -> {25}, 
                 "TimeStampHistory" -> {
                  3.899873553818504`16.343625515220012*^9}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 0.0009778403585674663, "ModelMemory" -> 
                116496, "StandardDeviation" -> 
                Around[0.759198574316312, 0.159338692297633], 
                "TrainingMemory" -> 1034632, "TrainingTime" -> 
                0.15018850219810417`|>, "Index" -> 9|>, <|
             "Value" -> "GradientBoostedTrees", 
              "Options" -> <|
               "BoostingMethod" -> <|"Value" -> "Gradient"|>, 
                MaxTrainingRounds -> <|"Value" -> 50|>, 
                "LeavesNumber" -> <|"Value" -> 60|>, 
                "LearningRate" -> <|"Value" -> 0.04|>, 
                ValidationSet -> <|"Value" -> Automatic|>, 
                "MaxBinNumber" -> <|"Value" -> 255|>, 
                "ThreadNumber" -> <|"Value" -> 4|>, 
                "MaxDepth" -> <|"Value" -> 6|>, 
                "LeafSize" -> <|"Value" -> 200|>, 
                "FeatureFraction" -> <|"Value" -> 1|>, 
                "BaggingFraction" -> <|"Value" -> 1|>, 
                "BaggingFrequency" -> <|"Value" -> 0|>, 
                "MinGainToSplit" -> <|"Value" -> 0|>, 
                "L1Regularization" -> <|"Value" -> 0|>, 
                "L2Regularization" -> <|"Value" -> 0|>, 
                "LossFunction" -> <|"Value" -> "MeanSquaredError"|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[3.3888470402523296`, 0.006870319322222106], 
                 "StandardDeviation" -> 
                 Around[3.396586505948905, 0.1252530271176797], 
                 "EvaluationTime" -> 0.000026419646772413396`, "TestSize" -> 
                 500, "ModelMemory" -> 20776, 
                 "ModelUtility" -> -1.9232777256648232`, "Round" -> 1, 
                 "Iteration" -> 6, "TimeStamp" -> 
                 3.899873549197646`16.34362551470543*^9, "TrainingSize" -> 9, 
                 "TrainingTime" -> 0.01995262314968879, "TrainingMemory" -> 
                 80936, "ExperimentCount" -> 1, 
                 "MeanCrossEntropyHistory" -> {
                   Around[3.3888470402523296`, 0.004858049381660216]}, 
                 "StandardDeviationHistory" -> {
                   Around[3.396586505948905, 0.08856726483905382]}, 
                 "IterationHistory" -> {6}, 
                 "TimeStampHistory" -> {
                  3.899873549197646`16.34362551470543*^9}|>, <|
                "MeanCrossEntropy" -> 
                 Around[3.9290618322645563`, 0.00942810959403967], 
                 "StandardDeviation" -> 
                 Around[3.1018791463462554`, 0.09060321807203], 
                 "EvaluationTime" -> 0.000045273599687959974`, "TestSize" -> 
                 500, "ModelMemory" -> 20776, 
                 "ModelUtility" -> -1.8309915549438776`, "Round" -> 2, 
                 "Iteration" -> 15, "TimeStamp" -> 
                 3.899873551469005`16.343625514958365*^9, "TrainingSize" -> 
                 40, "TrainingTime" -> 0.025118864315095794`, 
                 "TrainingMemory" -> 118048, "ExperimentCount" -> 1, 
                 "MeanCrossEntropyHistory" -> {
                   Around[3.9290618322645563`, 0.006666680227715398]}, 
                 "StandardDeviationHistory" -> {
                   Around[3.1018791463462554`, 0.06406614989605597]}, 
                 "IterationHistory" -> {15}, 
                 "TimeStampHistory" -> {
                  3.899873551469005`16.343625514958365*^9}|>, <|
                "MeanCrossEntropy" -> 
                 Around[2.59338335669272, 0.017002513372983048`], 
                 "StandardDeviation" -> 
                 Around[3.1004362153614204`, 0.07262505647288782], 
                 "EvaluationTime" -> 0.00004184619162171752, "TestSize" -> 
                 748, "ModelMemory" -> 20776, 
                 "ModelUtility" -> -1.8293753218758844`, "Round" -> 3, 
                 "Iteration" -> 21, "TimeStamp" -> 
                 3.899873552721711`16.34362551509787*^9, "TrainingSize" -> 
                 150, "TrainingTime" -> 0.03162277660168379, "TrainingMemory" -> 
                 270488, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[2.59338335669272, 0.01202259250325127]}, 
                 "StandardDeviationHistory" -> {
                   Around[3.1004362153614204`, 0.05135366991603494]}, 
                 "IterationHistory" -> {21}, 
                 "TimeStampHistory" -> {
                  3.899873552721711`16.34362551509787*^9}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 0.00004184619162171752, "ModelMemory" -> 
                20776, "StandardDeviation" -> 
                Around[3.1004362153614204`, 0.07262505647288782], 
                "TrainingMemory" -> 270488, "TrainingTime" -> 
                0.2092676457384358|>, "Index" -> 10|>|>, 
           TypeSystem`Assoc[
            TypeSystem`Struct[{"Value", "Options"}, {
              TypeSystem`Atom[
               TypeSystem`Enumeration["GradientBoostedTrees"]], 
              TypeSystem`Assoc[TypeSystem`AnyType, 
               TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 16]}], 
            TypeSystem`Struct[{
             "Experiments", "PredictedPerformances", "Index"}, {
              TypeSystem`Vector[
               
               TypeSystem`Struct[{
                "MeanCrossEntropy", "StandardDeviation", "EvaluationTime", 
                 "TestSize", "ModelMemory", "ModelUtility", "Round", 
                 "Iteration", "TimeStamp", "TrainingSize", "TrainingTime", 
                 "TrainingMemory", "ExperimentCount", 
                 "MeanCrossEntropyHistory", "StandardDeviationHistory", 
                 "IterationHistory", "TimeStampHistory"}, {
                TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
                 TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
                 TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
                 TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
                 TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
                 TypeSystem`AnyType, TypeSystem`AnyType}], 
               TypeSystem`AnyLength], 
              
              TypeSystem`Struct[{
               "EvaluationTime", "ModelMemory", "StandardDeviation", 
                "TrainingMemory", "TrainingTime"}, {
                TypeSystem`Atom[Real], 
                TypeSystem`Atom[Integer], TypeSystem`AnyType, 
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[Real]}], 
              TypeSystem`Atom[Integer]}], 10], <||>], 
         "TrainingSizes" -> {9, 40, 150, 718}, "MaxTrainingSize" -> 898, 
         "PreprocessorEvaluationTime" -> 7.328125*^-6, "PreprocessorMemory" -> 
         77040, "InputDimension" -> 41, "OutputDimension" -> 1, 
         "BaselineLogProbability" -> -1.4189385332046727`, "VariableBudget" -> 
         True, "CheckpointingInfo" -> <|"Checkpointing" -> False|>, 
         "UserStop" -> False, "NaturalStop" -> True, "AbortStop" -> False, 
         "LastReportingTime" -> 3.899873554745434`16.343625515323232*^9, 
         "RoundPartitioning" -> 
         Dataset[{<|
            "TrainingSizes" -> 9, "TimeBudgets" -> 0.5594303142518577, 
             "ElapsedTimes" -> 1.217606, "ExperimentCounts" -> 7|>, <|
            "TrainingSizes" -> 40, "TimeBudgets" -> 0.7991861632169396, 
             "ElapsedTimes" -> 1.3489459999999998`, "ExperimentCounts" -> 
             9|>, <|"TrainingSizes" -> 150, "TimeBudgets" -> 
             1.141694518881343, "ElapsedTimes" -> 1.258408, 
             "ExperimentCounts" -> 5|>, <|
            "TrainingSizes" -> 718, "TimeBudgets" -> 1.6309921698304872`, 
             "ElapsedTimes" -> 1.9451239999999999`, "ExperimentCounts" -> 
             4|>}, 
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
              "ExperimentCounts"}, {
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer]}], 4], <||>]|>, "AnomalyDetector" -> 
       None, "Log" -> <|
        "Example" -> 
         MachineLearning`MLDataset[<|
           "f1" -> <|
             "Type" -> "NumericalVector", "Weight" -> 1, 
              "Values" -> CompressedData["
1:eJxTTMoPSmViYGBgBGJNIK7Ist9ntWGCvemcK7WVOVPtDzoe9X9/dqb9dtXC
4F/v5thzyYT8+XJvjr1GearBxM2z7I8BZTNtZ9hfKk1UyXWfZh/BJmy5mnGq
fbrZ4pd7zKbYcytnWm8Sm2I/71b/ej6dKfaHPe9OPx42xR4k6nJmin2u64WC
oO9T7U+E/Pv14dIMe/loQZM5V+baN7VO2Chit8hes7Y8zXjWMvtU/b5V//+t
sb8360JhKMNGqDkb7BVTdFr71622///n25N1PMvsT8WIOZ+MXmwf/P3pRlHH
xfa225QyLFYutr89catCktpi+19vjgFtWmC/UdB0/t0Zs+zrKnOALphkX5qk
Xpak3ma/XSXP6/7cSnugZ641dWTaT92l37+WI8r+WkvfaiYOD3vTBQ8WPt1g
ZK8C9r+UPQMUdE/arlYS89UOxgcALneWhA==
               "], "ID" -> 6515543852639189880|>|>, <|
           "ExampleNumber" -> 1, "ExampleWeights" -> 1, "LogDensityRatios" -> 
            0, "RawExample" -> False|>], "TrainingTime" -> 6.681868, 
         "MaxTrainingMemory" -> 2930784, "DataMemory" -> 510304, 
         "FunctionMemory" -> 463448, "LanguageVersion" -> {13.2, 1}, "Date" -> 
         DateObject[{2023, 8, 1, 10, 12, 34.987878`8.296492583391363}, 
           "Instant", "Gregorian", -4.], "ProcessorCount" -> 4, 
         "ProcessorType" -> "x86-64", "OperatingSystem" -> "MacOSX", 
         "SystemWordLength" -> 64, "Evaluations" -> {}|>|>], 
    "TestSet" -> <|"Input" -> CompressedData["
1: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
4It5p0s+EKPr0/bL1Y6C4i5uCKdp82Q5wPVz/cSlfedgs/y3oe6YJcx3Nn3k
/G4OX3q7IVbT9XUh9qpP8xevJgrucayNmlTBzd9JsR76Mn95JNgZkceXVWLe
P9lWNLESTFYmPe6ClcgKSzhQaluJSeMi4SllMo7Ox6scOlOFjJ1fc9W1qrHB
2JAo/oWWX/rEbDKTofzF/ImetuP51WBUfvdrw40qjLr1tlcRyPBXEzY79IYE
H7Y4LmetCvyR3sd/jVwO+UfON/o5CPiW/VGN61MJ9IUo73+MFGJcoWayYSoX
Oxy3eMyyZWP9q1cXmNMyILa+dm3/dCoSZSsKX+Qk4uKxcj/mqFj08N541kQ7
z1V6Pu6m/oyATauPjH9oOA626hfzDIViyHzd7FhkEA6XeImsO+0PwR+9d5ZT
vCG3Qy3vLLvnkp4rLmXMXvOzdcTeJJYGmdPW2PrOWlOYYgG333e0KsVP4Znw
LaZ5Zj2M955zYrx+6C+Pyu81uBY7K9FM3OpSd6cSD3yO9c1pVmGWl9VY2r4a
DPavzwy9osDJoH/lhGotkr0UZEIN68D+I9lV6HEdVAQYhppo++Vz1daa77R6
h7S27P4W31p8OCFck9FNQeZCRSFPahV+7+4aDc4hITXUJtGxoxx6CiadBoul
cH4S9m7f8UJ0KfCrEnpzMXwk5cD+31m41/Ja8jNzBj6YGy8PpVVJzNMvvz9+
nIQ18yXBfLQ8so0qQCE+i16yF4H0yNvaG16EIc7tqesQQnGr7uLTZblB2MO5
subylgCs+f3nQMc2X3z5zwy3F8j5wcuNv7mBi6mghueTE94/VdRN/GwLthXX
7m08chYhdDtnMEpvNwKhXDio6qseVmzefLlJ/TDE6Phvf7Q//dr40Eky0gMS
h37lVMJhcNK6nJeWRwo0yta9q0T0yUPFVWlVuOegbiI5Wo01i8e4Iu5Q4Nvw
wyxxmoKy/oLBeoYabJGO1qizpuDeO83TP32rcVWES0WssgqrrR1RJEam7Vc8
XY20fXG88v2HjGgizENG7T5fIsDM45Mf5/YyaPMd6BirKV6yU4Bx1c67fjy5
mLHassbCKAtfdMX4ub+kQ3V2MZNvKAX14U9WVuxNwCJZeUevaQy0hjN3P9wc
BV9n9YvvhCLA2lgZyWQdhtOm/zkIgWTF+9RnSoE4tmA/f2rMDzpvo7dQGryx
U+LP1bUDHvj1eeLG6LQrUoWMigWynGBj/MHiacw5tNek1t8KtMTnVt7FkORT
4KTrnwDP5cPjH56r/+Vx+vDTtyf9SagTTIwjdVVjpaneocE8CpLXyfe4RNWg
8kz5g1e09cWjcOH01nV1YI7Iz5INqUfLk47ZAekGzF3ma0pb0wARgXFHJY16
TLRkpTVM1v61c/dZxYkE0yo0ng3ZnVdGwoOVSs+vHyPCiNmNm+VzGWzSSPxv
I4qhdJf9d+hAPqoWDyqqv8tGR+Dh1snOdEwdTKgLdUlBQDZbRdD9OLBOZBX4
74pEtPrxDbUSITh9uS5e0cBnqd0Tgowf9KlO7pj/cTbZ6IM7zMXmDb3fuUL6
6Hrvp9POOOQtyze54ACDMuNexnV2iH647JBrsTVy/wjORNZYopM+XzOscqk3
yQoyRQW9Xx8b1sqEyVF1MUDXU0UEvV/pL4+Cj7YUyh0g4H+o1LdWINuUgKGW
Wq90+XIk+lXo3EurwEzo5eVXHchQSxgW09lDgTRRoXLlmVrM88uvPvOuDtdF
TZwOZNch80quIQuN///pdZ6Rmxmk1YUdmuNTreqVKHmycyhOrgLaLFMNktbl
uD2m/96ouQz9y8/P+XOU4sa0k+OKqiKQR4RepCgVQKVAQPiMVw6WJc/HC/dn
Qjt9Y31LfBp+aD5kjo5MQk8h35cN0fH4dopnZXZPHEg2x0c2W8bhAf+R6XxK
LPa5RArIPAxHkbSHcfjpYAzR/YSCL+3L1rQv/vhmb8dI2uoNG9EQxUtc7pBS
qior7j0HwTAyTxjZfKldD36f9DR8PtPqaquTxxvB95e//6tviAJ201BSQAVm
10pqO++rwHENwoGmmxVQyrsx90yjEodtX1pM76/CgXtHNzfYVmPHe639DO8p
aGdVZ/BLqkGOqrGodxPtfGG8xvx9shoWb8bZR2qr0OC2TFynjIzsjMy7xFWV
6AgdLX6/uwLPWb/qR6jQ8qmxggc3lcugsZl0t+1DEXQ2yyre6cuHcDUSo5hz
obNqJY/cz0zI78m5GG+ZgX3V5i6JA2mQiU1j2zOYAmtZtH+WSILyqnd7xcUT
oBZb/0WCEIezpCOfzd/GIrL91cdEkVh8qZUXqhGOAcXyEOHq6yhYbT7B1VUU
ifITMRy7ae8/8eHx7j0FYThJEl5rtC0EejlOoe3mgRjj4XNj3+QHwsMbpoJN
nmhjbU7xqnRBdLu7eeoGaxzNSbDq3GPw715hGafJxdE8KLS+nN+WW4QZ/SF5
ro4SELaxzszPlOEST1Om2kQ5eA/tTDfgqEAUb1XUOLUC654IjDbR6vKQx20B
ljsr8JHqkKEVQoQLz7JX+VfKsXIuazw2hYD1hoQ/bSGl+OLhYHm0oAC3+BTZ
pbfnINRm9Xr/1RmwLTEdOfo7BftZ7i0rEUzGylsD76+eSUFi3I7LOezpSFO7
Lrbscibcd1kri0rmwlDnvwgLYSBlIUyxLoXdI66nm0XK8dNeWITjDS0PWBzY
dkONDIURd/6j9lUodZaVOi9PxuD2IJMPJUS89BHcmrG1GBxU/WCd2QxszGg/
wctP453OA63+8ZLePaPriGWrFLx1L5tikek/PIa3/AxDTwfkEZT0zG00nR+6
V3epPuLc9pdH9hWq61eolmFgpKx/pIxWz1zRcr+iRcCgm/FDN2NaXnKFS/YK
VwUUQ9bLhawnYavjzU2ON0nIe0jIfkggoWWzxMXNEiQocOfIcudUwEji7UmJ
t0TIZdVKZ9WW40LFGLVirAy88/Xc8/VFePbkv59c5E7sz6Q9eNQs1dcslQb+
a0Sea8RkEPVvFevfSkamI18a7UHOLs0M2oMtLOqbWNSzUaxzPY/2oEz8ZBHt
gTTliCTlSBmyDWIyDGLK0Rzp2xTpW4E8gnU2wZoW10dj2Y/GFfi6U3xmpzgB
RRvP59MecOTOr8+dT0M+XS8a3Aa7thjs8gO/7H8TdgQfPR5zcNL50YVwWN72
sDyVJRRfwn/1tTU+hqoeIkDkZLB71+VyfD3HdtZIogImbpbeUZMkJF/qSeVa
RsujW6uVqO01ONsR9e5QdD1O1/CYOuhScd+jyTvkORV5zhwxvQyN6C7cn2R+
nQpZ8T1MKdcaUC2RstfofC2MeCwDs6WrYLx0T3q69FefTUUJuGlWJCNy8WrT
x2Wd5zLgrsYr8kooZem+NB6DPE/HxCRisW61+nT55WhIn0itKLwZhf9ucTkP
/UPeeoejO/ZHozTKoZt8Jgbv2n4rUc7H4HbXhfCyc9GYtP0jEbc7AmNcvzW6
lAPxkS57LN0H2+IFvd0U3fT56EKB7ufQEsou4a4l5PiL/+NR93XrNUt2Eoo8
eycf9FXg7L3lmr8ZSVi/54HW4YVKZCj5PDw/X41DzA8u8XXWYm5gR2FGYQNU
miXUTtL4Ox+u1il9shFJl682/vFsxJbPZOHtf6jo2OajnHa7AQPyHQ/36NQi
Y3TD9ad2ZNw0Op0Y9qccn6Pz8XFjMQ46sGyYmssGz0RL9wpa/XL13Xcbu4RE
/D4Ue5PCGrsUTzRYLIcMD+VHwtqhVIbPIwJurw1eZCeFI7dmZK7TMRzUn/XW
SZIRCLrsVvZaPhKGMxOx9UaReHJLPriNLQIan9qliEEhyLap5AtNpNU3xV9u
jzU7L9mzwp93fDV9IfqQe72nQCzvyBIqoucT1zVPG8kl5F3C9X/l//Houztl
Nn6QBO5dL7c+7CHB/OF656RnlfB6KUfYGFQFj7wRrWK+GnhsZJzd4liHlcFO
4hfzGqBzyZa6LZqKdeOrZUgPqIgaibZPb6NCPmrziacKVKhT/Ye+mtUj8/yM
x6ejNZj685zx6nYy3oWXtLzQJKJIXPLavR2l6NlpFzb0Mg979w+VtDlkYc3O
VPkLe9KRULksfFd7EkwSWrZsjohHbqjgjne0PPGxV5ZAi1wk7ja8essUSMu7
6XpBkBCS+jPtGYApPwaKvK0/6jp7DYNM/KB3bOHhkTU+SDngNLT1jQckXn7V
HKadF1k/xAWXb7FF256Pk3wKlggY0z3oyWwC8oZ1qzOF9HEpMoNok6yFerp8
CNEFG1PNlFSwgT5fSUw4bWhxeSH8l8cq5k6ON4kkUF5VWT+h7XfdZt7npzaT
8d169PPz7ir4nc830mulQHtEhBKRWYswoc8+oi312GP1xUlNgIqnp3/2+xlT
ERKT20uryGj1lAeXiFoD1lGEU4761CEwyY+sNkgB/xTL/jQBMgSusta5FRAR
3m2j8USzDE9qqndeEyhEQGjJPSlZWj1z+AJjMFsW3ovP6K5hTscu5hu/L9im
YLuzhtiDqAQYv6DeXzsYjWPPb1wxKQiH8jo5kenXgZj6bUXd6OOHa0khMma2
PlAlq6xp7PbCxZlV1p5RHtij3H9NTskNvXMfw5/8cMBJX7kEtWAbKK3tUOr4
YAEeun0TSDzRSNq+XR/iT5sC1Tl1MCDqJBV+VwOB4fzvrnofwJnai3snNaWx
dtnwqM6Xf/eFMz5v6s/1VIHbZFXSTt4q/E/mtHucFXW+CgZeAoHvpShgYA5y
QWsNtrmSNn6erwVl1onNMrgO04mR8rLkur+yaq1liXdgLV7//ORjeomC2hjZ
4XueVVjHvyaAw4KEXSOLxwWiypETq/ayZa4Umofm36m3FCImW+1bdWoe2gra
TSs6ssGbLlt97U0GxoWPbUqSS0ebWU7T+uYUTEY1Nd+3iEeZqn2r0c5o5B2x
19R1Dsdten8IbPRiXwi3BcE9vMmje18gHrVPW2t/98WLrzzz0640fuVNPriL
eOLUf+rb3XDxbI4Ky3JH8D9ebBdVPIdzrWNbLbWsoEe3Y4Yv/McSM9/rQ7Vj
sUGp7DiO0MerLbXL/uWRqiJuJEk7R47OZnf1llfhycHjzvstaXlzLbuQano1
ukPjLvoQKeg9saBWe7EGYorbZi+/qAW746S6XEcdOtvm5lMy6uA9xqZmsakO
bqwFTcLLa7FXrHirsCIFOkL6e/1p+af2BcH45gsksHbPfnmiRMTvz5wu471l
2Fpcc2HUqhhB/aedZm7mY87z+zeO+hxorFNy0krNxAFbHZ0xh3R0ZTnH3q5I
QdVwY/BIVzxSjCaehShH4yC9Pxw1n3N0RHqCsc1U2e0u7f12uvfdW8bWD6pB
sjslnLyxWcqjS9jdAyS6njNayymSkQp2kGDV1ds+Yo3l7cm/t76yhK7CyvUT
6aZL7fqg0vWP47ZMY2CZifqSLAaTU+yVfE85//JomaNqKiJJxt619n1S3mR4
kDX0drSRsdP/9aN3FVVwPSW+7QRtfb5K/cgldq4aPhNNLNM7alCkInTHIqUG
Q19b6jLCanC7XmtiE7EGz9Y5bXoiWAPbJ/Ubf6dQwMKwAa8CqlEkxft8SxAZ
LEJuAvwXK7CxvTzzekE5vjOfVX+3oQxyDwwjarOKkPOaiXQsPg+X2VvZJJEN
peOB25sNMnDn6sl+84upEGN2aI/+ngCHhXU/le9Hg3PuPwO0esVmbNOkeiiu
WMg0HqEG4YVptFbF1gDw1WkS3WZ8cfKRftGKDG9o+ckGfU7yAPFbo+S3Qjeo
pKipPpJ2gVl89nPxIkew0eOzhj1dNsXtgMR61acnkbNvd0sTmw6Uny5jrN6t
uNS/5i+P3cc4Ml6yVsNA2PmTqWM1lkXuod7eW4MYn+uT/KO1OCVbrpDzuB6z
HWq610IagCcRfaq7qEgmPHqu70eFXvKDlE+uVOzsDqlex0vF4ehbrgrz9bDY
kG27rakWzcTim93F1fhwn6NYZJoEoxVZ92aOlqPmfbPFnVfFcHoQcI/PNY+2
bgm5zs5ZUD/gz92wKx11z954ijEno/NEcJxoUDwUYjKvVdpHo4/TPmx0Yzj2
DIdqyscHQMnh8ysfWr3hlHaudYDJDfnfrs+7tNpj+E2LjynJ9i8m7Nln9FLE
DkMGmiPbAk7D7I9wP2lED1daVQv+nDiGAnq/MX5Slbd8UNTEb+/d64v6DkDp
v+lvp+2PmdIc7Svklvr3LOG/+8JjvPHv2RKIYG6Y2mzTUo6N41ciKJEV+HY5
T6B5uBLh+RMCK1fV4H2beSpjTB3u112y0Xek4t5QbdfL2EZw7hba3/KxEcfT
Pq6msJ6HjHrK9AeXRjTcY2h3EaZiZRDPAxNKLQi/rmYe/kLGp2/iz9ZkEcHm
ryh4UqYU2vtfMA6w5GPkRbFoRmsW0t0nFqas09E0O6MpvyIZLYOXkhzWJUD+
7DgtxJilOCPwdDx4ZuBrMLpMKGYh53zh/uRsmKWCN4ySmc6V53qB78cxqV3G
nhhrtXK92+G+pO+MKxcDe0s22+Ji3+N7QkMWWMjM3P581hhD22RfvfXTA8Vx
+8UXPup4RdffD/as//oVl2QxqKpVH3s9t/Ev/o9HR6Ouq3dTifBZ1xdAKSOC
+F3hTKY/CS/cBF71O5JxK1zgtOyPGqw+v7nM8HcdnqUbKH/XoSJIOdlZm1ax
P/xEsXEaaMSrYMkVtyYb4R4TX++g3Aipm78rursaMNpRf9WZvxbvBfcQLtLe
62NybSFc5kSkb7rj6d1bAspXR7bLtXn47Raifd8zC1N5HTekFNPh9spC221V
MnLzrvsf401A9St2oTOcsRj/yjNBvhaB9owQ9ZSUYJwr+V3LfN4HbCPRXWnZ
XkjRP/X0dacnXtH1PDD+6vbicSH3JX1nXNPeRhLca4s1Vx/9eu5gibXr06NL
DE6hUdRuwINVH7/Y/pM18e2B6Lg8gxq66OP2wzmZeLueWw7cdP09uLH60vLW
1//yx59Nilf8jEug5iw6cLy2BCVT8zE51uUo1IGk4gZafk5g0iw6XoGro+qh
u3eR8fx+a5HuDQocEFRjnViL83Oud/a++IdDAlKOcYdr8awny/fK6xow6vDI
O8dQkLV2jrzhcDWO64hfePiADDH7BDcOIxLe6ejWFRuW48Phyrn7a8rQ/KXg
Q+/lQuzp7Nt6aXkebkQMUqeLaPXg4ewA67sZ4MpZxddNToXWqg26B4cToPf1
2njBoRgYKA1riNDy7zsu4Yc1V4XD4ZBeTA81GIyEce3+W/5wH0jU+pzpi0Du
6obQaC+EWt9lX+/rDrPIOcpVITfcyNnDnSftgJI/vpwDAzZL/ZbIdd6vd2HG
dEnWgzT7VJD67KElWfUvjwbKqXlvjcgwIpjtdWQkI063paVAnQyuH3+yK5yq
YF6iWM61nIJHX3rEbo3WQLNW2mTyLC3PIXG33DtUD7NVL2Ivn64He4/LvARf
Pbb8eTx8fXsdWJzuTP30qcH9NIFdyTLV2CAd+/EDZyUGeSOsYoSI0HZH9Ua9
MsTop/+5MF8I+1ylu+dP5EFj/bHjVaeysTveZKDYIgPdN54a6wWloXHvCaXh
D0k4R9eLQ+TJ5zofaPVg7uFXuVvGw+D3/aZi3mIweERx/RhXENLOW97qnfHH
8r1R9052+EKTbtcbpxQvnewmeeDRzYNN469dcbk79sanNEeUDXd1fNtvS/t7
3u839T4LAn1+p/FL8b/xRhClx3MCa+n2NJBHt/9vf7zcI22vcqoC5JRpllW0
fDzztIbt1XuVMHW5uPGEMgW7xQU3aAfUYYPKmEXjq3r8KWEM4KCdJz9jxtvX
21Ixp/L7iWYyFbMu99atq6diechjbu7rDRAe3W11Qa0OZ7a3WDevpKBUm2ds
I2slhhaOHuxxLsf2hY8V6swlcCs5fal4MQ8NN4R9WP9kYbSk6bGGaAbWhxw+
acGaCtUFxSMbfyci4MaizeVzcbiy8F8EUZin+w2DXsiL/B+zAfBdOGtsl+GH
pAXVO9OyviCHGB3nCvNGx4LT4OEHnpgMmclssnWH1ILJs4RTzsig69ni4cKz
NQncZyFIj+c0guh2jJfaT0Jv4T9Lx5ZkNZAXdkj7P5HDn4XcNwWWkn95XM+y
ekgssBKLhz+2O4pUYtOT1H6lNDLK2FxYnz+j1TNWPDcbN1OQsDa0/+c0BSsi
VH48/VSD0W+DKiqzNRBS3XnVppeC93wcX396VKPho6YQJ6EK8j4Ji4okMnjf
vJmxO1CJ8rjX3cuvVKDw0bYhl21EeIUaXXpuQ4AO+38Oy3DU+7em3aVi7Nlt
3fzpVCEi00y9XLJycWWvm+vZT1ngcpvc9VUpA9OHKbs+30hFdY3/4tzKREhV
rVglkhYDtdtUjejpSHQZcFOva0XgG5fwMsvYMJwVjP94byIY3EnGd/sk/Gn8
35QxeOSD6py9U5IOntgd7TIof8gNG0OWVRJDHVBGj9MaYg1Tc7cDzyDooJwo
n6YpxOh6utCg+1FD+/k34omd/77b+3zZfHh5dxluqonesvQux8TFWw+mWsux
cHV7uAZ7BXQ/pux/310Jvyq76T8q1WBVIn3inKTVN4yTFyZo7zfvLtLKIdp6
NeRSmOH2rsNjMqfiaB+t/Qvfh0dramExqTMuupGCGA7iIWmFKqxPMl8bM0GC
6vvuHFIcETr8Mb0DGwgoyr19g3NHMU7T9QsQZnnTIFEgGy5+N5U7czOgu/qO
6gmTNPzucch7/S0RPGrPWA6uioXZ19smGyci0LqBUmnGFA6z1Jv8LKvD0Pxp
QWQdKWRJPxDyr415Wy8E4ECo/vumQV/8HHjB2nnfC+hby8Lf77E03h1BXmud
hZidEXjndlL2cjtMlZvTPJzFZyYr4V5FQwxfrF5tuf8Y6iKFPpv2/Huvzasl
BCZcKqBhrTGzaF+BVImMdUfESZDvEV0zGlaJav4jqd+1ydDTShBX9CGjyVhn
ce4bbZ3eWnOy8XE1Rnv6+N0NarBxi27x1FAN+tj42G8PU6D09UTz/L1qGB/h
brgnUgVhtpAfkkyVeN09HJK1uQIyMvUMrqzl6BF8L9GQWoZwXvLUftYSsL0Y
rgt6XwB33Z1e3bO5KG00p7K7ZEPgg9Hxza0ZWKbw9fIV/jTMsx17OsGWhDzO
waNh++LQtXC0mmF/NL4NHW9fLRKJZqNTJlyXwhEyaD0johqGpMqX6/3zgrF9
t5TloGIAGH+tnG4S8sVjDYLZqSQvXN7m81Ex0B2pottkmvic8c2rq9u/2Bbz
Z2LfHL5oBaOvgcE8f0wwfZKD0Ft2Ei6j8tnvOf7dc525s3ZfUAAJCfvVUbOz
Ehsytyzve0fLGx81Xi0nVUGScD3qOzsFATv9KWLKNXCXPfk927EW1QOlJ0KP
1uHUjm0f1WjrMkt5cHPJZC1+MmXFi4zU4MD9vmfUoxRcr+o4lXawCkNfHlS+
Za7EZBcn22YKEfUzI2yrrQmwYj/L8PN5CQbUL31PPVII7Y83+7WGclHWO7nV
ZTATNt8ubLNKTYeDhtjBhYJk4L8wv8dhSqcapIUoyKTqWxZyRsDy8l1f7A7D
celv8rUZIfhGjyMQdws3uKpf80ey5H+KvuA4rEd7vKDm2i783tID7vlyqske
bmiWCv64/4ATtKmPxIU9zoG/4U3u8W5LcJuP5N2YPY3dKyXIL9/og7Sy8ou2
ogZK6fb/3XNp1bv4ToCIunXy9/v6iVhzvv3kppQK7M7jD6rKJuF9oZ/x4OtK
jL2LZXZSqsINtis9x1OqsbeAHC5wogZbrqb1dfnW4PvWuZfZBRRMCN7T6qLt
p6KjNQpqJVWw28GT5RFAhnTfVs0etUowz8UnubdUoCrNv137RzkuLRKHTX0J
+PU6autkVSlyVeTWOrAW4WB0F5dPZy7YJcJO5Z7LBkeFlE2ZTAa+n+vY6NiX
gteOydG7VRPAoJavzLw+BrqTdVePcEXjtdleDm/maNg9PGZZfCgSpTkMLUeP
hNP47DwcWRqK9046zLY7gjHkzhGwK80PzMq6d7pfeeGTxun6O2HutBp27Psz
f1fcyPjT8eCiHTR/BguF5lqjsX5n5UUHc3T6DH0cY9BHt2uaF/nRv+/484IU
HlRnVKJPPHZlnn4lqHN3pnTNSFAR/ej8Y7YSirab7cR/V0I70D7UhMan5qUs
/9T3lbDofJd2ta8ShcN9t39Uk+GvPEBQ6CVj95Y8w25WMohMY48RU4nl3Mv2
XeWuxMPsWxs2KpBgzHqxmKu8AnztZa5Vt4gw4jSiqtPO7+4DD4SnPhDAPr4Y
NBlRhvvxc21hi0X481Zn01HvfNh+nytnrMtGPYMdY5BQJjx+8L6025oGu/EL
wTWbE7BV0kDv3fIYyLDvCGehRuLP3dUnc/oicJZZucNILRzb1nYzKT0JwWwo
B0tvRgCqH1x8vjrMB5qCHnlyuZ6Qf5mdv+jljnrvCor+FmcYOmnnOl62QXZU
a4bawdPg/EwNnyo5ASl6+2GcOxd/y2bq33o0WTVglv6+HCKxXPqxbuUIm/HM
L80g4MfAfz0EOL3eMdQ+TcDAhyuddy6Uo53VVTuzlgjb3m9O8vokDI9cVhGk
nRvXOpRKzLwrcUI3Nc+ukYzJgN8f2OLJ2Ha/tsHNlvy3vX77vM0j5ipw/2r6
unVZFZiuGn/OukOG0LIXj1Y9ImNWZ3usfmslOJkvhV7ursDpvc/L9kUR4dmi
6s0sRIBU3lzpcmI+9IntAypN6XjInFc+1hiDu3wFV3g1w8A8aSGjYuGH1b2R
pnxWXkjrbt30MN/t7/3+/43LFqkfiyYnaetMkH9Nl6ySJfjP3Al0UjiF5hwZ
kwvDBpilfxegg3d0fQ1YqKWsvf9mH77RZQXEnXe4byi661/e87O5heCQgyI2
7gLDyDzcuzQieOxtESLkokfXnShDoSSPb+auclQs7PlQsYoI5XITJqXhcrz4
6ut/9BcBD2xdCJ6LZbD60SXmNVWK1QXGhwv0SpDFMCXm5lAEvkszV8zu5KP5
ytlPZ6xywOPn9UbeJBOBbzfvm2NLR9+l54cTVNPQSbeTBgul3neTkplgmNRq
uMOWC84tmzwkVAsxuDzezsihFBoHFHTsThNgGPwwYvcWIr6zSorbWZFgXiih
fGmKjNEvOS2kqWo4TgwH3/KgYFxqVtvtXBXmptjY+7qJ2NeWbyluVQTHoRpJ
rovp2DCcW8TyOAoXjg2KNCZ6Y1Zc9yjD3DmUqzjwDUoaglNT0Lyl9jB+mJc8
DKmQRWFjSFVeJC/sVt/4bX1nyz8edycw3RbPgwzlPN95kXzcVXLhWEMpRN41
9W2sIyXY1Hlvyoi2Licsta44R5YjrYqRs/ZOOY5+2E/dsqccqn593xJo6/eu
srncsydlYL2Y2SnAWYYXssENxtwlcHlhxkzaX4jxx1dyP2nmQiEj+HnKpUyc
9DSSunwhDVfnx6wvBKUgdbL03q7ZFGzPd1FVPZSOkcAfBHdyFj59nLq6PTUP
J1pmx6ReF+HXZnWBkxplUOXKNZdQLQf7j6qfyXcq8FDR+ctW2j78p/e+9L5r
1fgwcPD7mkJa3nv2zx3P91V/9Q5YyLFWuZXggrCwTMGtTCzEK1vOnI4Da1NF
tcH7AIzQ43ZBPn3+p/GiWk8sN1UXb+h4AG/p/eIwujy+bNmGf98DZOfZbIh6
lYMbxhyrBnzy4TOT2HKvrQj1JxvIhkWl8Ei/nvykhoAd9a7KP6bKIU8oOW9k
TETsTFbc4mw59mSEy+pIlSOR81CokywBYi2SItdcy9AaF8jdxViKiS3tv/nX
FKE9pP3PgYu5+ESwOtU7QjuHI8rYeqPSMKBbutYvJhmbF3nfvxxJAqv6Nt/9
YalgdIjRDLTKQK7I9aQrjDmo5T+ScXpDATwePG8ziSzB2c9HsvJoeXxSw1z8
xA8iZCt/qhYvVKLhUum6bMlqJGmt2kWxoeCFhIF3HB+tLq2oPy7vQsKlhzlv
fPjKMDSkYs9Pqz+HWSpDuMYT8PW/6bCH4GHkbvMbqe7ome4bi3WzQmfnzo/b
pPXRptDpOs5+GL10lFvCf/cK3bl5GeO+RSBHm7lqOxWhY9nRk6VninHWklF9
VqYMJgrW9xyWl2MfW4gpRZKIle+1lzVdpdXHW7idveWJOC3KRhwspeXvDFTz
qpcECDQ+7ddeTXvft2y4XLSyDNcjSWZRrMVQJ75aRqDk4Wa9qKf5SBbSzDN5
Lf3SwRAStkuQtg7fhyooTJ9IwWDuxYZmwzTaeWy5/WxHBsR0M4qH32Xj4qEj
Ytsv5uMFQ+aBQcYSRI9O7VGn7Zcttx9fja0g4syYR3PioUrEHrl04rxbFarv
EOWXW1fje3zrS5Y5Mm6rBZ4vnyWifHqdJIt+MVaHFKv+eJQB1t21Uts2xaJl
KMfpbLcfqrfV1GdGOYJtv9Or2f1mcD4jttl4TmsJlWFJR1FI7eUalrX89/+G
g16ztW9xLgbJ1/PO3N1SqAnqPfe4SIBIWFPeM9Dy5QPBsYOlZFS1bbT/KkPB
NtEaqw8rayH8YuTXebdagPPw6e9tNSgReNmsl0jB5VeBNItV+PgkxH2DViWk
V763NBSknUs1VRaDXCUQSD46tVYuFwyDevWD/Onorq2zXvwcj8jCNxp2C9HY
fOS4fN5U1NL4GHRm1wc9FYvHmx3Vn9quJKPveBTj7tZ0/Jl/+1HsWRYoEppH
NYzzMHtgg+2oZhGGNh0w6ZoshfatqGQO2j7KFhelUZJCgNtQpSR/WSmy5sbe
LV+V/9f/tjNa21up0bhpS61NqPYF47GAH482O0DqoUZleOApJL98tfj80JEl
VMTiVp1zRx348YmO//79cb5hnc7c+hykqfAts2TOR8ln7q5bQkUoeZ4r389R
Bv2YSdlGm3I8G/2w1Yr297x8tsgg+ksFMup0iNL/fQciK3xS+1QFLsfVvPRO
J2LTJmeqdlU59k93TKbrEyAfIhUquqMUO432DY1+yEfy8YPCXUrZCLLU9Pi2
IZ1Wh/WsersrGVUNCjdSAxIhwSxHPLA6GerU1y9Ok9OW7GZizdtdPFS/XCzn
/LDM70shFC92LnIdLcOfU3tHVebLoRnUJLp8kESrQ+9PSGlUQbBZ48ThrGq0
NcVXhtlVoX97n1A2Ld+y/ZbHrxVaAidu9qA+n0yMSzx1MHeMhUPcoA7rLz94
LfSL/GRzRA09HlOoHHfKtyYdxSE67ltC4SX8913KBGObkvf2MoysHFNvNS8D
aWt4iFQBAVHyevaydkT4nR5b6/yOhOOh/cuufKPlMeljsrEbquGZreclYFSN
prR0Bpk11ZCKJ2z/mlGF+75jvAFBZGibWjo8aCLhilwjQ5IpEcHLGdfdVSgD
Z8XYcj3VAqhrhVceu52Fc2tU+U0upcFkgPGL++FkmLcx8ldtSsLnQdX2W6eT
cX6ZZQWPSBoiBMZK2YwzwKSnuk1lfTbOh+5UYP2Vi9HmcKX24EKUzOzccH9r
KXjZ04tmdhKQuUMqlfcHATPrCYvfWAmofLDTU+5KEST12669OJi9NC4R6axt
d35NhEFLMJy5xdoD2zUZV1DSreFqxbilWdAQHnRUx6ZsxgP9unuXcM8Sbv3L
o0OTzjGHCwR0GG36tHyAgDO9QXoKLbTzeOUT8/42Wt3NGDX1M5yMtu47g45N
Vdi98WWR0Usabz4sZ0qVKLh5jLskjIOCuuj7W2fMq5FhdvzRVq0qfD2YrpFl
RsvjETWkuqYCBWT3aPLVMlw8p1lxfGshdslfCO+3zsaz0g1VIcLp4Ba+IqNN
SkaHaNHukd5EpDzWFTV2SoK5ZfQVidspON65YFesR8uTFLN9LFIzIf97JZMl
Vw6mVVSeXufOh30H46fjZ4pgc7s+yJe2/qUJEXx3UYYP8nk/1heX4PCNlVzb
MvIhUSxx4fNiBlbE7stS9IxDzzruC3sTg2HU0G/Vp+WGQ29EXB0MreBmWOF+
7cYJ9ND9qWGQjjJLyI+79Hn/W4+V+q/t70gSsMo38YriKwLOHpUrMVxLhH3L
RSbxQyQ85+HSZjOm8bei84PoJwoYKrKVPnLXQbd8WboHdz2K7CWkWRnqocl9
21XKvw43Amy8fmrUImDb7DyPEQVvr3LuvnKODMc+z9bcBiJajr5fJuReilTD
qVpPrzzsIavNVw5nIOOBtPHZmRRcVxO4ySqaiJOFKtomT+KxMyTx/scjCdh/
5nDBiiuJMPfFDhaNFFpdlzMl00qrZ/Jl1tRmZsBS2vfNp7Is5F2nPJS2zUHS
jvr5WONcvIl64tlzNAe9q4c7vLoyYMTSekmKLQlsf+4/84+OwLmyueO3n/qg
3Mrx8+wVe7D6P7wfrmGOifuldR9oebiI2/JDV2+oojDGYbvGMbklFID/BcVH
p625/33X3M+/4ac6AU9y2xKzugiwXlFUnhRGO5cvs86cXE3CGrHWCMIbMuQ5
ZHdcuViNgx5PI4+w1kCI/yWHzYpaXPOvXyiWq8VrlhfOymM1kBA+oOWvWIPa
Mal+O9dqGEo2/V5Nqw9PtZ8t7x8txxeCaaE7uQTV5FPMtxjzcH7Xn7D7TzJA
DP95TVY3FXeKAwqieZNAVfRZeJWZCL/grdeO3E+CfdKdxq+cqfCc/UwznQ6d
0lymD18zUC5T7eMlmI2sgwZOO7xzUUP3m49aWlTKggW4tvZ0hXVKHgib97MT
XLMwomy02LMtBZvu9ZwJ8ohEzpm2vi8ifnjcUekcDkfIv9be333QArG+FnVG
3idw6vszGesth8F+VOSdV5EiuujxiS61/8t7DvqE9rLkEfC2Y8bI5Ritzt3P
1p6TR0TI0xLVgDMkLHINM253roLj4HHpnkkKfozGtvba1iJN2OntYdM63I+V
YUyrr8PbbJ3bTuJ16FSvcFo0qcWtA1LrZ29SkGh5rCv+Lhnf1rNpT54mwt38
RfMP8VI8T4har8ybh7EYjRs/+jPA3/yCoFWeit44bSavgUTci3hWbb8vARSv
1rdJVxIgo6wzvPVqEgizt1Z3KqWCk1d9c/2KdIQZhm051ZIB5UtfT1+6kwXZ
i09PPSzNge+TSOWcvblYzL/69PedbLh0tcTZiGRARP55MNvORFz1aClhbwnH
TIaYLyuTD6IsJO+RyuyR9VmnvpVgDl3lkCLbFbo4eXBm3r1EFTpHrA2CFGVg
TNfbA3m6zP+Xx0vRCppOiRXwzxbw2aJAwlqT5zeGSJXoOqPTEfyiChIiv3h/
Z9dgUtJFuKy3DnIWio0VDxuwmmmF8Zs8KjKM3XvzK6iITAh7+/woFc/Dt2yR
UG+A0l2TT2ZKdXhqaFiTEliNALUf4W7nK7BmZNI83bAMZdszVxVy5KFOPTT7
6vN0nPaRXvnuYQJikkRP7XkUjctjoxbcEZEIOe5F8tsViVlvTe6bLyJRJR2v
XTMfhT9NjH1uKTEQKtjsT7SKw3JlR/02nUTs3RL7csXNZBgwZVcKzqfgTyS3
gKVVMtIejK8dDo/DgzRZz+Q1EVhdy3whXNgXx+89/+Kt6YSxkVaJF8qnMYKE
6IUsXfA/+MV/IUUV1+lxyEDCXqonU37HX2T4f34mZJhX+9eTkDweMvr1fSXm
ug7n55GqsLI25v+Q9dYBUXVfuLBggYUBoiCigmChqKikj6CkonR3d3d3d3cz
QzNDqAiCiggmCigiUiohYIEIgvGN8+PV+93LP8+svWKvs9ix1pnZ55w4RyiD
A51kX8/lKkSn9D/KbSTBne2itRUDGbYMtI2fXcj4fezD2aAkMmJm+9r7T5Oh
8drJWLyHhA1J7uv2+FVBzOn0pe1clHFpFzyz8mcR6IIElkJP54GWP1pCriEN
8ZUvbiryJEBj1Z2sn+cjcUEk5rCLeTA8eyUN360OQMCTZM6KI37Qma5zGmDz
xdtxTWXR4z7YSLXvA/KFz4MZjb743fXxvNROfxQHGu9oVQrAk2OBj/MLAyCi
nKmYEusPkTOjfvfmvKC2jS1kNM4Z7wdLt9OrWcGMpoHOeVAfuussJSuvKYJs
qfa54KgEflLjwA8jajvHMv7LF/9rT4ndMxWYyIPiH5yHnpOLUHVfrcbpVDHM
yxaF2p8S0GbjMV2mQan3ZwXXbg+vgJiQ20HJ6mpsmaW74i1CBrE5J8ybuQYm
D+MJyd/ISOnbt03Wl4yphIl0gSkSPPXlA2MvVWOHyT3GT3rl8LarHX7ISoDM
k8fne6Qp+9ojnVUk9Qzs2b7eZLVdEm6y+M0bUerEJN8KOXb2SFxNiRJkbAjG
3UaDqbN3A7DfpjImbt4PbP2qTiu1fUHr1NTP2eUNp1s2sfUbvBGi8SL36zaf
v/y0ryKkk6y+f/n5RQE0MofccIaOKbfzlz0yei+7lxFMl+1o45DQyHZeT3mY
0e+Q+hB3AST7q+HvK/mX8QD25Luv+eK4Zxk3/z/jkWfq4tXVGwvxSnmRxt6n
EC+3nn849qYIXqo/r+1yJCLk6wvluedl+FR69/bRa5XYkengas9AwupTjqcW
+0hY8ndMOgsyoiWYGz9zkRFGiL/f6UWCU8nH1Iht1Wg5N51r+r4cidoBU3UK
RDw4UfMt8F0B7vvNB5SKZCPjXMs2vbQUCJPb1milxWM4xOuqKFs0nJxuxdrz
hGH16+SlqDUhYN/fZVztH4QZTd9T9DqB8PXLtsjIDMBAGpl/aWfAX5rfZtPT
Zz/+oRDVrj9qPByubNHxhus113tLHS54sWKTNM+YLdyptAlIVL42YlfU8e6+
oAxFGyGtPlkpGFLx3/MTxL56iYyd3PO3/T9sTjuftNGkCFN1W+SKicXY8Wxo
vQhlfp99qVPLJl+C6bJCvWO85ShMOLNvYaISleIebj/eV6PHN4H2WzwJml46
pn5zJFQVGdypfUUCy95Cm1YuEgzXuDwY4alC3FL59pTFMsT1bCPWBBMgvcHy
IY1XAcwuPRSZmc3CkLp1x8DaVKyy1NDlG0+AfErAUcO6WDS4h8QNM0bgo8Lq
hJknoXgS36+9jycYD2bHWZ+vDsTvRyZs4y1+lPUtLLop7885I4VMAS6fv7Tl
ZLMvKOPxv/a5lhmnMXpP6Dh8dl3n44KoQf+UAz/tQCd+av8ubXM8vjPS5LnT
CIz+u0qvlmtj5+csBgtBeTgkc1lEL0hAgGr3LFSpuHsZN/2NL83H78+8J4oR
NXTyiKgIAUoHo5vZPIk4WH/y/q+DlLrq/YZDgoPl2PS8vqXrYhUihJjFjQRI
uHCeQ1d4DRkhU0c+ajGSkbs78vvkGxLaxBZTaSnj9SXbzVahzErEBvwKKlMo
w3/9+GeKpSp/ysfzR36Dt0Kz0H8/4qRJUwq0qOdrE+B5nnhtRWUsrrz6Ohd+
IQIzFb/Gp41DseMp60JcYRCu0vyutI/yxxRJYm8juy+iqedOvZDM6Xolz90L
WW3ZkftqvBDy5mBvJp0XZKl2PED76aLelxeucFw+79q+fM71jQXZduKrCUSo
51n1oUk9T6sBF6qcIp5Q5S4v0+eX5URRTT0X++9cnFfVEMvRkSI0VQ3u3r23
GF7bCab6HgRkpWWH96WXYGn8yE6zI+VgWaWyiaeGMh7fzzzW30rCz/MchIwO
ErIPfXq9n5YM2TPhonqjJPDItdDOHaaMy5zQEfcdVViSXRJnvVcGYelNizJr
CRB2C5bjfJ4Pz4lDe6UqMtHk6Rp2QSkZPzY3MdxeisPSxIGDB45EwcvHqi5p
Wxi8pDf+EpQMgZenW5ASYzB+uP9hBMLT3c+oh5GCW69y63sGYGnoUrrp0cC/
fK9hmXzJKgpfnK1ZUCoAi1O71M0O++KHt01FXaIrfpR+6ZI1sMOv6r4TT/RM
sHStoeaJjg6WJLeNZbQrYe7KrHFm2yXMUekLoJH7QwuDdo/fb5qFY6AZ/tPf
v7zndWz/9chsAthupyf10RHBKGHk8HKeiDQzcY3XG0txh6MzTvVlGfRExW4+
9qzACzPOfStoqzBQolDLf6sKc29928U2VUNM7uXc9/tVeDKhcftYYCVolaOt
is+Xw49nh0RXSwmexkrNT+YWIzD91+Td8AKMHtjFSI9cWLlKPTPVyYBSzcGh
j/UpiFf/9vrxvURo5fS9I/+KgxfNYzvXqzHQF67y+bUxEs8ZCSkRUaGgoWEY
OfYkCM/aGqXfBQWgc0Xrq4peP7yl2vXFmCFH8bN4b9hS7XuA4V7GFjp3Vygc
4Kfx03TElRwJji00dvjGqNtvFWwB2wM6QbdVjMH14Z0531Z9SNwbY4601cS5
mpValTeUEEujd2JH3RW8abu8PjjgPHJyrlc8n/k3Hvn0RjbvWEdEaLHlpONe
IpwqF+4XPSWCOLa/oXtLKaxrvgpOUdbHmNkq+ot7K6EtdI31wUQVcpkr0y7T
kyDxMd3Mn7IeTr3vVBVdqoZuaCy/eG8VMtemd5cQKpD0sSZt1e1S/H7Vv8rm
VTFuOA1uFjlagOFpvXuHZbLhNaAuEh+RiunK9SusbBOBZv65JKs4rBqQWPtg
KhL5tNkGBhLhONbB27uXJxTbui/vFzkcjHOzyX3tIYEwfuvJYnIgAI7nz9Ig
yx9Prh+8HEqpTAZ2TFMujZIvUf3xQbiDO132Dg8wUvWdocD9WN7K0BYvFMQj
+jRNYbltIFrhjT40FE4obb2piUnvsijfekUkEl9Md56QRdXPvC+sY+LLtAj2
/6rlfht0/G8cd3v3pxNOEWFxbZ3IZ2YCFk1ax3ptitEvcr1r/lkxYleGH6v6
RMBzY/bngjGlGC5fnfBtZQVEGjWuXL9eAYUflyY2VVag/qmkmFdnOXTkTrxx
cS0Dret5o6LuEmx9eEBnQw4BekLN58Tji9Amzv4q/24BOshTan5jeRAtMf1I
eJMD9oQrQi9ZsyH4RJZ0PyYD5hfPNm/5lopYgU822StSkM63JMPvm4jfTnc4
glrjUDpxtH2GKwpDeofJzzeEgrtKtp63LRDzowH32k38IbzzQPxksC8K1D+Z
n37gBe5oTWbHDA+I3VePMtrohir6vcYkeWd8Uzlvvn6dAzi4Apu+f7eBeo4v
4fWQORqOMgVVZenAV1TFRXJWAb2GOUksPvJ/cau8doE/97/nxB0tkX3Ffi0N
B+xdJX06M/FWOEv4XHgOxkfe0ch8zcOHEX/PMyyFcBhnXD0dUIQlWjapsl3F
WCe+82Pd8yIQrifEhaoX4ftGejP+gkL85PDZK9ZdgKlp68y23HwU8ZUXMRXn
wtTdbKikNgOGGUegeCEFn+e/8YleTIDW9pK+WfNY3CiIv3mSUof0s+a8v1ER
g2MrJh5ZHouHjOy6kKGGRBypFVisFE5FrrLtqlunMlHnQpTZo5MLr4NOx+m3
FyDZJWXSK68IdvdqDys9IoC3+U7iwQkislxOGlnco6zLewPTB48XQn59wL2I
tCzwb1/8bRCSgKBtApaveEMxf0sj2aPaHX1cEfTSJ6yRvjvdfvdlHTCE9ue9
E5PDBiqeA7MJs6hgDR9Y5ECzm8j9N46h8dcu7P2agyuqUTG807ngq9T8tVif
D7pMvxvfbQrhGc44y95fjPS3UnWC0UQEamhuvWFeAr1Stl/SwSU48+4ar8G5
EmR/eB3ncpOIGpcHJ+aHCXiX9fiYXVgx3gxV3ZfVKERYUBbDO9E8BDN7uL1O
zYCt/l0/XpZkjOyLMzx8JB4TcVId38/FwIznE+HBlmj4ecdGlibGoH+TWVnt
wzgk6rquv7EiEbzb7Ld0kJMRYvTp41x6Gu7sULM//CsTXAlct6WIueBJPyke
qJyPR+kFt8voCrCq57Fr5uZ86O9s/6BAzoLi3ar9/CnJYCrk2LAUGgXmzRKF
tCcClv1xRrQbc4n1ohlkBy7fmYrVxJfraYLvaa5AUsZefVZAFAJUPI7f+xuf
fS7/973rZfmzkd/78rBuv2wCLTdlHzWQWrlrRQFMJfUDJB0L8bA7lSHYrxj2
US3JDeco+89Jot1bSt2YpcLdvqBZioZrm+bmlUoRez+oe/JdCdrMul927ynB
zX3dh0vrCFg3QFdj4l2EWppUutXC+RgQ7BlSNM5a5qeA9xGf9ZGoBJjZzEg2
9saisnn1cb+haNypf3A7hDkG0keb+d5xxOFIad125hfxuEy/WKbNmwSqG5T8
/cJJe5Elu3RcmDqirduehfpVawbLLuZCd39g26QmpY7fKCpbtC0X2rJXOZl1
M9AanWqgwZiEEKFzEpydlPy01dho5VF/hD/sWKO1zwmHdh5RGQowA1eVKftR
Dk2IaLgvzuTLQeBTXauo2HnEn44W2RhwHP4RfyJ15G8cldakVW5/kI+NG+23
WUbm4U1XyKlKSl6SycvJsNG+EPyqVabP24qx8fJBeQM3InqqskMnAkpwXWI/
1vSU4LOkZypTRgkMZLil+LhKEF3v8kH4AhEZKoGNj98U44xBXYBuUyHsN0iY
Gpbk4d6z/b0BwZn4razGcO93Mn5ZGom/mo5HVLiOP6NFLNrmgwLPz0djZObI
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
53qe63Ue13Wdc17julv5Y3EwNbcltDoeZUuZl/sGE3Fzz+TrsTfJIHAes63Y
k4bMXb1V030ZuEqxnw0ho3DeCxdyEMYoKH1tZzYsaxJOpJDXAfvA7X7uC4mY
KJqx0P4Uhi9zr3/gpC8ibwycs+51wMccHWE2BRNQfSC5Nf+4iM0U/yijR33d
a4e0E1B2rw2StzsEMe2rVkd9/30/c3JtLm3AchGsXPKmBB4TIE2i9eR1JqLx
slr9d7VSPGTZ8dDTvQLdbpee+65U4dnLtPHA4FrkxnM5PCog4f09auFtKyQc
UOQ2zN5YB6O7vf0FxeT4UnxVWFKwFrrPnI/F9VaCVOnHnHyiFHfLDx/t+V6E
Vk42qdz4XPiPHMuiX5uOT1wf6p4nJGGdspJOOE88LvJpHY6Ji4KkvtuH+1Ph
SEltetr9JhRSVB8ddx4IgXDuUtfd4SCkSIrpCAv8o2+sWJmcA4NQnfc8/ZNc
EPKPTc5GzAZgeZpeJTjTZxXHFXfYzAql2+ywcmD+8tHdpjAPkx/8OqoLx56R
EJqjGsjSkvr8YloJb2w7KvrOykKX0i4GrSR6KbttgjhD6f/vPq7Tpgdf9sgS
yHnzuQ+Tj4qh69xfu7GrBDz25Wu6p8shvhzqxNlUjQOLnJGXF2vx4+C0xHGW
OvTkSf1wvl0HOXrr7dbTdTiuNfZsC91VcOaLlGgE1GH9tSN8yqokjFp5ayVu
qsYpoU52haNlYM5puZvWQICCvDDPrqg8/F73zNfpVDr6tdqO9GQkItv2e6zd
xmis3yhtvn9TKNrf19azDQaCENPoQ8PljztnOBOGQr2QqCqa/3LODdK01KI1
Ai7QnRTcy0lwhrXGsZpeI2dE7TcmyYw44V3byxuhFx0hPeAfLphgg73Zn8sX
zEwgdudGRry3NlooeEo4RuElIejD32Bw/t//8/zv93/aGVf1hHCKgnccN0TO
F8o5KoDvTlGOGFURSOKdYQ4cxZj0NLiT9JaIzv3sutOq5Dzc6QG1VmAlkrNj
cjIFqiGrcu5WYmQttlSWZz0OIMFhtojrwgQJsotMpqZfSRi7yjE+FE3CRa4K
OvHTteCenLKL4quCSH9rWFJvKXb9lFWev0fAptM6YoeC8nEw2LNi/H4Glug5
DFxGknHLkXWibn8CStwbwuojoqFtV5hmUhoB51vvf9AfDwP1fSL7MY9gSEYv
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
       "], "Output" -> CompressedData["
1:eJxFVCtwWzEQdGmwO9bT78lGCQ4J8cyxBJQkJCQkmWlJQROaYmPjhrbYBSUm
IS1tsLFxQhOc97R7J8280Ug63e3urd785tvF5w+TyeT38E03p/v76UL61fP5
Ni/k6Gr99/VwLts8bJzM5e1w3HCcgyA+yq/b5cHuZ5SX8zEyyPd6EGTYHE4C
8wU5G6I3p0HqtY2Xhx/j8Mi/9VLDd17+vY4FvFzUgzZ/qcMzv8b1UtPue5nU
0cvT/3FkrqMsK5CGR+tqHeBqs9bTOuDpmaetgbuztcajjifPj+Q/5XmRulwV
5HsscjyOP8XqVtmvFF82ftA9g9+nAr0uC/Mq/8w+JOJLclcLJeobqU+knpF5
O+KO1IH5d4V4Cu/p3NuMOpk+yMSTiDsyT6B+EXyPg9VXf0CvwHxt1j4iX7B8
uB/Mp8g/Z3wxf0CPSFzRfABd1J+e+bX/HfF0tga/jvUd76luLQ54Zrzv7Bz1
OvqP7+Wr9j1b/+CnwP1AvzjWnzHPjPo7e5eIUz82X2pdPa/tXDvq61jXEXfb
xz1H/bL5EbiSvX/9H+Bc+5uMp/oKekXjpX1Qvvoewau9J+Bt/wk91/eqa70P
vyby4TtbFvT3mvM+sT/J+Ch+6Nz8CB7tv6a+Aa5AfbzxUbyKH7q3/x308ub7
d03FQGQ=
       "]|>, "Predictions" -> CompressedData["
1:eJw9lGs01WkUxk8thFSEc973cI6/mEau0VSU9BTpwmioUTjoIsUh15U5yKBo
yi3FmJCcboyuysrUKuSapJlIZMolTFTq5Jbb0vw/9WF/2Wvvtdf6Pc9+dPcE
ueybxeFwbrA1djmbMVBnYCfzUUo7z2C3+fGGu0MCiCrSg4bWCuD4vigq3VYd
V4S3xAY6fIRH+ZQOPySIyXP3L5ZSNEYpbZLcpOCLCohJAsWh0a4kiQYXJ8ri
W6d+JSjR2DtY0c7Fkl1P9g0qUugE9o4tO60Jl4XOHWY5FD+SUFWTEE0Mify8
C5wI5suN9xpIeLBJ0RmY95aH6rHVXb2lPPxzl3NspzKB/r4A7VYXHYw0WacG
tAmR59xja5LDh//jRG5RDcVhu78OSAIIBJ/yffVVKJj7PlubrAnu1BrIOjoJ
OObNLdqWmpjeW+w1rUVwL6CzLPodQZXxpb641wSm9m8cjjdqwrRwotVjA0HZ
SOYhcSxFWr1exfNhHkL55YaZLlyouEVn5/ZzsepmYci0CoHTw8HusGvq8Crp
/Wx+TA32Acylda9VEGWoG2BSrwvZcEi52kldeDSQyopHDOYY25Z+hBZSPygW
rqwTILHGrD36KoO6bhubZKk2NvSopqTNFmLBx8VcjxwBCqtmWdZ5CqFfpaR+
Wl4A+SXc5oG3fKhmbXQd6qFo/zli6l0bxdH9xxMuUoqxiMI2bSOKxLKJmk4p
QfWBa0FLgikmW16MODlT2Ilvdp9h+bs+C9PoZfnkWRVL/d0YdK0cMpgSC8Dr
JxOvZgR4ECy7Pfq7AMZrVxvLS/hwOvHS3+ICRVebvWbzcorLtnFxRuwdS6eH
BYoZFKbJgZuz9Nj7WmhriifYyvha+bH9yMyDBaNfePD5apuVk08Q+jwpTfqa
4pNQ4aWkmN27cWt7uDfFlr3vr2aye7kW+hlbPxO0ptnFzk0jsFT2feYRTjH7
pDhaqYji/mRlnFI+g4i+xrsNqxj8u811m7myEOVHXQ3VNghh0047c8f4MG6x
zNm/hqKI67fatodAdvJ28Q5NClmSyStxKsHMOiMN/iUC4YKEnG1HCD7kxDwp
dSbou3bGZhfLKXRATWu7AQ/WRU9ttNj5F4njwUX1BP0XBncY1RAsbHa0KNGg
cJ8YkshdJtBLPTJkNUCwJaVn0fQoy11a0qXjRWAhaym3P8ugb5Yhf4+CDgrq
QlOD3wpwxaLPNeKsEFeFYX+fd+CjQ7Q/IG6GYGy4I6vuFIVfi82jRPbflB59
pywS81E5zruxUkjxtI5juTGSh0grrXRdXYKLjSMTAm8Cl8dJdvJGBCP/uU81
NnDhFa+VskxEkP2lNLdijCA1pwoqdVyQ9eFkoztBd8G8Nw/Cefgp/qhjfDIX
wh90n8Szf+p5JmhOXiQDvzs1Z3sP68Bx/lzPBW8EiOVJSHq0FsbIjOLwPD4c
Jqtjlh+k+Og8I01idT/V2LTOh/VfR2z6UwtWr7r2I+s3fyC43/5C7pU/heEK
JybiFMG0eLqzNoiP0DjxUiabwn9++pbc9wS1O+dMJl0kWFFtynU4SL7lwmSw
qWiNkAfTqtrzLr8QGFe6++2QsD7z/y2lv54iSdXBQjSXgfri25OLkhl8yU9c
GrhZgN6QID/vMB04MWsDXDwogkLkCwZi+LhVcs4sSkThUWj2fQvLObjQ3uRB
AkFUxoxnBKsj50pV4+xxglW/xv+pkMKHosJ162NBFPfcfHvy7vG/5cVSTQ/p
7nO8b3lXbXSh1pxDIa36w61DRiF3Pcpt02mKDMHjwKZpiuchel/dpwj+B+/P
UKg=
     "], "Distributions" -> {
      NormalDistribution[8.037415522459451, 0.08040823780704938], 
      NormalDistribution[8.317497533389663, 0.08040823780704938], 
      NormalDistribution[7.48703687691554, 0.08040823780704938], 
      NormalDistribution[7.312448256751022, 0.08040823780704938], 
      NormalDistribution[4.815984661395145, 0.08040823780704938], 
      NormalDistribution[6.5304276301828095`, 0.08040823780704938], 
      NormalDistribution[6.189406266696881, 0.08040823780704938], 
      NormalDistribution[6.407903348713829, 0.08040823780704938], 
      NormalDistribution[6.422337651804765, 0.08040823780704938], 
      NormalDistribution[6.380054841246443, 0.08040823780704938], 
      NormalDistribution[5.519994912724874, 0.08040823780704938], 
      NormalDistribution[6.124984137873648, 0.08040823780704938], 
      NormalDistribution[5.713626584217469, 0.08040823780704938], 
      NormalDistribution[6.258718100165461, 0.08040823780704938], 
      NormalDistribution[5.3937529160423585`, 0.08040823780704938], 
      NormalDistribution[6.4015497910482555`, 0.08040823780704938], 
      NormalDistribution[5.360523468936731, 0.08040823780704938], 
      NormalDistribution[6.0768103511866105`, 0.08040823780704938], 
      NormalDistribution[5.868320062291799, 0.08040823780704938], 
      NormalDistribution[5.9756390023715635`, 0.08040823780704938], 
      NormalDistribution[5.92958402982703, 0.08040823780704938], 
      NormalDistribution[6.010103330058385, 0.08040823780704938], 
      NormalDistribution[7.830898708454047, 0.08040823780704938], 
      NormalDistribution[7.711351606810002, 0.08040823780704938], 
      NormalDistribution[6.65153986048645, 0.08040823780704938], 
      NormalDistribution[6.443031646706553, 0.08040823780704938], 
      NormalDistribution[6.105931888815687, 0.08040823780704938], 
      NormalDistribution[6.261857608387598, 0.08040823780704938], 
      NormalDistribution[6.059396019481056, 0.08040823780704938], 
      NormalDistribution[6.218623878945143, 0.08040823780704938], 
      NormalDistribution[5.3047974977637296`, 0.08040823780704938], 
      NormalDistribution[6.0273299022455795`, 0.08040823780704938], 
      NormalDistribution[6.228991491686594, 0.08040823780704938], 
      NormalDistribution[6.216315830427621, 0.08040823780704938], 
      NormalDistribution[5.4507190567833685`, 0.08040823780704938], 
      NormalDistribution[6.067733168232776, 0.08040823780704938], 
      NormalDistribution[6.375409939673032, 0.08040823780704938], 
      NormalDistribution[5.988116266426359, 0.08040823780704938], 
      NormalDistribution[5.5806471518650245`, 0.08040823780704938], 
      NormalDistribution[5.727159894790258, 0.08040823780704938], 
      NormalDistribution[6.012681747361109, 0.08040823780704938], 
      NormalDistribution[4.9193873692859835`, 0.08040823780704938], 
      NormalDistribution[4.382026462158221, 0.08040823780704938], 
      NormalDistribution[3.608035364200563, 0.08040823780704938], 
      NormalDistribution[8.892924670265748, 0.08040823780704938], 
      NormalDistribution[8.781385405216469, 0.08040823780704938], 
      NormalDistribution[8.392095628286986, 0.08040823780704938], 
      NormalDistribution[6.813410628771641, 0.08040823780704938], 
      NormalDistribution[7.4445482497641375`, 0.08040823780704938], 
      NormalDistribution[8.336890047389499, 0.08040823780704938], 
      NormalDistribution[7.157761547649392, 0.08040823780704938], 
      NormalDistribution[7.50250072875571, 0.08040823780704938], 
      NormalDistribution[7.4017146550427375`, 0.08040823780704938], 
      NormalDistribution[7.591580271823581, 0.08040823780704938], 
      NormalDistribution[7.255443856688348, 0.08040823780704938], 
      NormalDistribution[6.726477907397798, 0.08040823780704938], 
      NormalDistribution[6.4726041299052355`, 0.08040823780704938], 
      NormalDistribution[6.461833886297848, 0.08040823780704938], 
      NormalDistribution[6.2750416627039876`, 0.08040823780704938], 
      NormalDistribution[6.292102227480418, 0.08040823780704938], 
      NormalDistribution[6.158080190056017, 0.08040823780704938], 
      NormalDistribution[6.359533066710529, 0.08040823780704938], 
      NormalDistribution[6.329402757275142, 0.08040823780704938], 
      NormalDistribution[6.401954199211847, 0.08040823780704938], 
      NormalDistribution[6.059463805741265, 0.08040823780704938], 
      NormalDistribution[8.17464165962593, 0.08040823780704938], 
      NormalDistribution[7.355450286659078, 0.08040823780704938], 
      NormalDistribution[7.49888982023733, 0.08040823780704938], 
      NormalDistribution[7.397421657133404, 0.08040823780704938], 
      NormalDistribution[6.618183795086036, 0.08040823780704938], 
      NormalDistribution[6.409372014548877, 0.08040823780704938], 
      NormalDistribution[6.30256303067128, 0.08040823780704938], 
      NormalDistribution[6.292158149256386, 0.08040823780704938], 
      NormalDistribution[6.394564267323908, 0.08040823780704938], 
      NormalDistribution[6.284756800948385, 0.08040823780704938], 
      NormalDistribution[6.127757433808247, 0.08040823780704938], 
      NormalDistribution[6.394932648523606, 0.08040823780704938], 
      NormalDistribution[5.992148033260827, 0.08040823780704938], 
      NormalDistribution[6.1568435321094945`, 0.08040823780704938], 
      NormalDistribution[6.466436617764986, 0.08040823780704938], 
      NormalDistribution[6.423316374777399, 0.08040823780704938], 
      NormalDistribution[6.343217204481148, 0.08040823780704938], 
      NormalDistribution[6.1275240915936795`, 0.08040823780704938], 
      NormalDistribution[6.235655131062824, 0.08040823780704938], 
      NormalDistribution[6.139692310509381, 0.08040823780704938], 
      NormalDistribution[6.363631507733366, 0.08040823780704938], 
      NormalDistribution[6.416051811280342, 0.08040823780704938], 
      NormalDistribution[8.312572531748962, 0.08040823780704938], 
      NormalDistribution[8.114835554488975, 0.08040823780704938], 
      NormalDistribution[7.50995378698732, 0.08040823780704938], 
      NormalDistribution[7.567448293238328, 0.08040823780704938], 
      NormalDistribution[6.740832792237198, 0.08040823780704938], 
      NormalDistribution[6.309965539306443, 0.08040823780704938], 
      NormalDistribution[6.221936157502265, 0.08040823780704938], 
      NormalDistribution[6.270842339119767, 0.08040823780704938], 
      NormalDistribution[6.139083328514047, 0.08040823780704938], 
      NormalDistribution[6.161232295170064, 0.08040823780704938], 
      NormalDistribution[6.128248624798088, 0.08040823780704938], 
      NormalDistribution[6.079802699306111, 0.08040823780704938], 
      NormalDistribution[6.329468706254805, 0.08040823780704938], 
      NormalDistribution[5.789383337944274, 0.08040823780704938], 
      NormalDistribution[6.138775807727651, 0.08040823780704938], 
      NormalDistribution[6.196939244431368, 0.08040823780704938], 
      NormalDistribution[6.192548154715929, 0.08040823780704938], 
      NormalDistribution[6.270218645037646, 0.08040823780704938], 
      NormalDistribution[6.162126450972517, 0.08040823780704938], 
      NormalDistribution[6.227760113982671, 0.08040823780704938], 
      NormalDistribution[6.2402196360956825`, 0.08040823780704938], 
      NormalDistribution[6.091918478989502, 0.08040823780704938], 
      NormalDistribution[8.307180399766455, 0.08040823780704938], 
      NormalDistribution[7.756233605207375, 0.08040823780704938], 
      NormalDistribution[7.476015306239709, 0.08040823780704938], 
      NormalDistribution[7.653775556315547, 0.08040823780704938], 
      NormalDistribution[6.573863259698253, 0.08040823780704938], 
      NormalDistribution[6.248540586289179, 0.08040823780704938], 
      NormalDistribution[6.393339512808771, 0.08040823780704938], 
      NormalDistribution[6.188990715823231, 0.08040823780704938], 
      NormalDistribution[6.604843290859216, 0.08040823780704938], 
      NormalDistribution[6.2795092924481555`, 0.08040823780704938], 
      NormalDistribution[5.869412303016317, 0.08040823780704938], 
      NormalDistribution[6.032354609762814, 0.08040823780704938], 
      NormalDistribution[6.092887788359267, 0.08040823780704938], 
      NormalDistribution[6.0420122824021565`, 0.08040823780704938], 
      NormalDistribution[5.699027945922115, 0.08040823780704938], 
      NormalDistribution[6.090040402225524, 0.08040823780704938], 
      NormalDistribution[6.240969132164446, 0.08040823780704938], 
      NormalDistribution[5.694382678927367, 0.08040823780704938], 
      NormalDistribution[6.088161832900845, 0.08040823780704938], 
      NormalDistribution[5.864005596240504, 0.08040823780704938], 
      NormalDistribution[5.637215800845823, 0.08040823780704938], 
      NormalDistribution[6.258311452414118, 0.08040823780704938], 
      NormalDistribution[8.239486915944036, 0.08040823780704938], 
      NormalDistribution[7.872942414467254, 0.08040823780704938], 
      NormalDistribution[7.47076173191051, 0.08040823780704938], 
      NormalDistribution[6.8716472457798545`, 0.08040823780704938], 
      NormalDistribution[6.513622417935258, 0.08040823780704938], 
      NormalDistribution[6.357625942967, 0.08040823780704938], 
      NormalDistribution[6.284712344310249, 0.08040823780704938], 
      NormalDistribution[6.27479651307239, 0.08040823780704938], 
      NormalDistribution[6.363475062971899, 0.08040823780704938], 
      NormalDistribution[6.230748214051977, 0.08040823780704938], 
      NormalDistribution[6.354354930509256, 0.08040823780704938], 
      NormalDistribution[6.143032555364281, 0.08040823780704938], 
      NormalDistribution[6.609157085210423, 0.08040823780704938], 
      NormalDistribution[6.4005134168258895`, 0.08040823780704938], 
      NormalDistribution[6.230088391402754, 0.08040823780704938], 
      NormalDistribution[6.160690218637859, 0.08040823780704938], 
      NormalDistribution[6.107708307842634, 0.08040823780704938], 
      NormalDistribution[6.0768103511866105`, 0.08040823780704938], 
      NormalDistribution[5.779530945143273, 0.08040823780704938], 
      NormalDistribution[6.11750273073339, 0.08040823780704938], 
      NormalDistribution[6.368497511066874, 0.08040823780704938], 
      NormalDistribution[6.447176181269915, 0.08040823780704938], 
      NormalDistribution[8.022187778151666, 0.08040823780704938], 
      NormalDistribution[8.273704370850316, 0.08040823780704938], 
      NormalDistribution[7.321705587594116, 0.08040823780704938], 
      NormalDistribution[7.862668654849106, 0.08040823780704938], 
      NormalDistribution[6.339181605675618, 0.08040823780704938], 
      NormalDistribution[6.62393818827364, 0.08040823780704938], 
      NormalDistribution[6.340313667414351, 0.08040823780704938], 
      NormalDistribution[6.393391239436904, 0.08040823780704938], 
      NormalDistribution[6.130604464948291, 0.08040823780704938], 
      NormalDistribution[6.162564724601107, 0.08040823780704938], 
      NormalDistribution[6.242198195521951, 0.08040823780704938], 
      NormalDistribution[6.637720726575759, 0.08040823780704938], 
      NormalDistribution[6.358914325830035, 0.08040823780704938], 
      NormalDistribution[6.682246735689143, 0.08040823780704938], 
      NormalDistribution[6.216315830427621, 0.08040823780704938], 
      NormalDistribution[5.9056458675234325`, 0.08040823780704938], 
      NormalDistribution[6.124984137873648, 0.08040823780704938], 
      NormalDistribution[6.250189880093732, 0.08040823780704938], 
      NormalDistribution[6.48522319788836, 0.08040823780704938], 
      NormalDistribution[6.39383067910558, 0.08040823780704938], 
      NormalDistribution[6.496896472417024, 0.08040823780704938], 
      NormalDistribution[6.24546431211316, 0.08040823780704938]}, 
    "Modes" -> CompressedData["
1:eJw9lGs01WkUxk8thFSEc973cI6/mEau0VSU9BTpwmioUTjoIsUh15U5yKBo
yi3FmJCcboyuysrUKuSapJlIZMolTFTq5Jbb0vw/9WF/2Wvvtdf6Pc9+dPcE
ueybxeFwbrA1djmbMVBnYCfzUUo7z2C3+fGGu0MCiCrSg4bWCuD4vigq3VYd
V4S3xAY6fIRH+ZQOPySIyXP3L5ZSNEYpbZLcpOCLCohJAsWh0a4kiQYXJ8ri
W6d+JSjR2DtY0c7Fkl1P9g0qUugE9o4tO60Jl4XOHWY5FD+SUFWTEE0Mify8
C5wI5suN9xpIeLBJ0RmY95aH6rHVXb2lPPxzl3NspzKB/r4A7VYXHYw0WacG
tAmR59xja5LDh//jRG5RDcVhu78OSAIIBJ/yffVVKJj7PlubrAnu1BrIOjoJ
OObNLdqWmpjeW+w1rUVwL6CzLPodQZXxpb641wSm9m8cjjdqwrRwotVjA0HZ
SOYhcSxFWr1exfNhHkL55YaZLlyouEVn5/ZzsepmYci0CoHTw8HusGvq8Crp
/Wx+TA32Acylda9VEGWoG2BSrwvZcEi52kldeDSQyopHDOYY25Z+hBZSPygW
rqwTILHGrD36KoO6bhubZKk2NvSopqTNFmLBx8VcjxwBCqtmWdZ5CqFfpaR+
Wl4A+SXc5oG3fKhmbXQd6qFo/zli6l0bxdH9xxMuUoqxiMI2bSOKxLKJmk4p
QfWBa0FLgikmW16MODlT2Ilvdp9h+bs+C9PoZfnkWRVL/d0YdK0cMpgSC8Dr
JxOvZgR4ECy7Pfq7AMZrVxvLS/hwOvHS3+ICRVebvWbzcorLtnFxRuwdS6eH
BYoZFKbJgZuz9Nj7WmhriifYyvha+bH9yMyDBaNfePD5apuVk08Q+jwpTfqa
4pNQ4aWkmN27cWt7uDfFlr3vr2aye7kW+hlbPxO0ptnFzk0jsFT2feYRTjH7
pDhaqYji/mRlnFI+g4i+xrsNqxj8u811m7myEOVHXQ3VNghh0047c8f4MG6x
zNm/hqKI67fatodAdvJ28Q5NClmSyStxKsHMOiMN/iUC4YKEnG1HCD7kxDwp
dSbou3bGZhfLKXRATWu7AQ/WRU9ttNj5F4njwUX1BP0XBncY1RAsbHa0KNGg
cJ8YkshdJtBLPTJkNUCwJaVn0fQoy11a0qXjRWAhaym3P8ugb5Yhf4+CDgrq
QlOD3wpwxaLPNeKsEFeFYX+fd+CjQ7Q/IG6GYGy4I6vuFIVfi82jRPbflB59
pywS81E5zruxUkjxtI5juTGSh0grrXRdXYKLjSMTAm8Cl8dJdvJGBCP/uU81
NnDhFa+VskxEkP2lNLdijCA1pwoqdVyQ9eFkoztBd8G8Nw/Cefgp/qhjfDIX
wh90n8Szf+p5JmhOXiQDvzs1Z3sP68Bx/lzPBW8EiOVJSHq0FsbIjOLwPD4c
Jqtjlh+k+Og8I01idT/V2LTOh/VfR2z6UwtWr7r2I+s3fyC43/5C7pU/heEK
JybiFMG0eLqzNoiP0DjxUiabwn9++pbc9wS1O+dMJl0kWFFtynU4SL7lwmSw
qWiNkAfTqtrzLr8QGFe6++2QsD7z/y2lv54iSdXBQjSXgfri25OLkhl8yU9c
GrhZgN6QID/vMB04MWsDXDwogkLkCwZi+LhVcs4sSkThUWj2fQvLObjQ3uRB
AkFUxoxnBKsj50pV4+xxglW/xv+pkMKHosJ162NBFPfcfHvy7vG/5cVSTQ/p
7nO8b3lXbXSh1pxDIa36w61DRiF3Pcpt02mKDMHjwKZpiuchel/dpwj+B+/P
UKg=
     "], "Weights" -> 
    SparseArray[Automatic, {175}, 1., {1, {{0, 0}, {}}, {}}], 
    "BatchEvaluationTime" -> 0.0018970571428571427`, "SingleEvaluationTime" -> 
    0.00748590625, "Version" -> {13.2, 1}|>]]], "Output",
 CellChangeTimes->{3.899886975162307*^9, 3.899887018963245*^9, 
  3.899887267479883*^9, 3.899887977969322*^9},
 CellLabel->
  "Out[612]=",ExpressionUUID->"bf4d0a9a-1087-49d3-9daf-b56eb6a8fc2e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"reportGBT", "[", "\"\<ResidualPlot\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8998870445904093`*^9, 3.899887045209085*^9}, {
  3.899887277876116*^9, 3.899887310629448*^9}, {3.899887350010435*^9, 
  3.899887352099181*^9}},
 CellLabel->
  "In[608]:=",ExpressionUUID->"4c627350-d412-469a-97df-cd5802f0998d"],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1: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
    "], {{{}, {}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
       LineBox[{220, 45}], LineBox[{221, 46}], LineBox[{222, 47}], 
       LineBox[{224, 49}], LineBox[{225, 50}], LineBox[{279, 104}], 
       LineBox[{281, 106}], LineBox[{282, 107}], LineBox[{285, 110}], 
       LineBox[{291, 116}], LineBox[{292, 117}], LineBox[{293, 118}], 
       LineBox[{294, 119}], LineBox[{301, 126}], LineBox[{306, 131}], 
       LineBox[{307, 132}], LineBox[{329, 154}], LineBox[{330, 155}], 
       LineBox[{342, 167}]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
       LineBox[{176, 1}], LineBox[{177, 2}], LineBox[{178, 3}], 
       LineBox[{179, 4}], LineBox[{180, 5}], LineBox[{181, 6}], 
       LineBox[{182, 7}], LineBox[{183, 8}], LineBox[{184, 9}], 
       LineBox[{185, 10}], LineBox[{186, 11}], LineBox[{187, 12}], 
       LineBox[{188, 13}], LineBox[{189, 14}], LineBox[{190, 15}], 
       LineBox[{191, 16}], LineBox[{192, 17}], LineBox[{193, 18}], 
       LineBox[{194, 19}], LineBox[{195, 20}], LineBox[{196, 21}], 
       LineBox[{197, 22}], LineBox[{198, 23}], LineBox[{199, 24}], 
       LineBox[{200, 25}], LineBox[{201, 26}], LineBox[{202, 27}], 
       LineBox[{203, 28}], LineBox[{204, 29}], LineBox[{205, 30}], 
       LineBox[{206, 31}], LineBox[{207, 32}], LineBox[{208, 33}], 
       LineBox[{209, 34}], LineBox[{210, 35}], LineBox[{211, 36}], 
       LineBox[{212, 37}], LineBox[{213, 38}], LineBox[{214, 39}], 
       LineBox[{215, 40}], LineBox[{216, 41}], LineBox[{217, 42}], 
       LineBox[{218, 43}], LineBox[{219, 44}], LineBox[{223, 48}], 
       LineBox[{226, 51}], LineBox[{227, 52}], LineBox[{228, 53}], 
       LineBox[{229, 54}], LineBox[{230, 55}], LineBox[{231, 56}], 
       LineBox[{232, 57}], LineBox[{233, 58}], LineBox[{234, 59}], 
       LineBox[{235, 60}], LineBox[{236, 61}], LineBox[{237, 62}], 
       LineBox[{238, 63}], LineBox[{239, 64}], LineBox[{240, 65}], 
       LineBox[{241, 66}], LineBox[{242, 67}], LineBox[{243, 68}], 
       LineBox[{244, 69}], LineBox[{245, 70}], LineBox[{246, 71}], 
       LineBox[{247, 72}], LineBox[{248, 73}], LineBox[{249, 74}], 
       LineBox[{250, 75}], LineBox[{251, 76}], LineBox[{252, 77}], 
       LineBox[{253, 78}], LineBox[{254, 79}], LineBox[{255, 80}], 
       LineBox[{256, 81}], LineBox[{257, 82}], LineBox[{258, 83}], 
       LineBox[{259, 84}], LineBox[{260, 85}], LineBox[{261, 86}], 
       LineBox[{262, 87}], LineBox[{263, 88}], LineBox[{264, 89}], 
       LineBox[{265, 90}], LineBox[{266, 91}], LineBox[{267, 92}], 
       LineBox[{268, 93}], LineBox[{269, 94}], LineBox[{270, 95}], 
       LineBox[{271, 96}], LineBox[{272, 97}], LineBox[{273, 98}], 
       LineBox[{274, 99}], LineBox[{275, 100}], LineBox[{276, 101}], 
       LineBox[{277, 102}], LineBox[{278, 103}], LineBox[{280, 105}], 
       LineBox[{283, 108}], LineBox[{284, 109}], LineBox[{286, 111}], 
       LineBox[{287, 112}], LineBox[{288, 113}], LineBox[{289, 114}], 
       LineBox[{290, 115}], LineBox[{295, 120}], LineBox[{296, 121}], 
       LineBox[{297, 122}], LineBox[{298, 123}], LineBox[{299, 124}], 
       LineBox[{300, 125}], LineBox[{302, 127}], LineBox[{303, 128}], 
       LineBox[{304, 129}], LineBox[{305, 130}], LineBox[{308, 133}], 
       LineBox[{309, 134}], LineBox[{310, 135}], LineBox[{311, 136}], 
       LineBox[{312, 137}], LineBox[{313, 138}], LineBox[{314, 139}], 
       LineBox[{315, 140}], LineBox[{316, 141}], LineBox[{317, 142}], 
       LineBox[{318, 143}], LineBox[{319, 144}], LineBox[{320, 145}], 
       LineBox[{321, 146}], LineBox[{322, 147}], LineBox[{323, 148}], 
       LineBox[{324, 149}], LineBox[{325, 150}], LineBox[{326, 151}], 
       LineBox[{327, 152}], LineBox[{328, 153}], LineBox[{331, 156}], 
       LineBox[{332, 157}], LineBox[{333, 158}], LineBox[{334, 159}], 
       LineBox[{335, 160}], LineBox[{336, 161}], LineBox[{337, 162}], 
       LineBox[{338, 163}], LineBox[{339, 164}], LineBox[{340, 165}], 
       LineBox[{341, 166}], LineBox[{343, 168}], LineBox[{344, 169}], 
       LineBox[{345, 170}], LineBox[{346, 171}], LineBox[{347, 172}], 
       LineBox[{348, 173}], LineBox[{349, 174}], LineBox[{350, 175}]}}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwVzNdaiAEAgOG/EImLcEtuQDIKKbNIWaFIQ5mhEtqJjGSHliQrUdm7kKyG
qLeD93m+o29OVPzcuJAgCGqYJyKZTxQLWMgiFhNNDEtYyjJiWc7kJJ4VrGQV
q1nDWhJIZB3rSWIDyaSwkU1sZgtbSWUb29lBGunsZBcZ7CaTLLLJYQ+55LGX
feznAAc5RD6HOcJRCiikiGMUc5wTnKSEUsoop4JKqqjmFDWc5gy1nOUc57lA
HRep5xKXucJVrnGdGzRwk1vcppEmmmmhlTu0cZd27tHBfR7wkEc8ppMndPGU
Z3TTQy/PecFLXvGaN7zlHe/5wEc+8Zk++vnCV74xwHcG+cFPfvGbPwwxzAij
/GWMf/xnnCA0CEIIZQpTmUYY05lBODOJYBazmQDBg3GK
       "]]}}], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, False},
  AxesLabel->{None, None},
  AxesOrigin->{4.223651070774584, 0.},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox[
      TagBox["\"actual value - predicted value\"", HoldForm], 
      TraditionalForm], None}, {
     FormBox[
      TagBox["\"predicted value\"", HoldForm], TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{4.223651070774584, 8.652230719932373}, {-2.4755468719844687`, 
   2.4755468719844687`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.899887295253579*^9, 3.899887310980694*^9}, 
   3.899887352464945*^9},
 CellLabel->
  "Out[608]=",ExpressionUUID->"b0faa5ee-080b-49d3-9783-d9f3aca81c3f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"reportGBT", "[", "\"\<MeanDeviation\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.899887405538877*^9, 3.8998874093941507`*^9}},
 CellLabel->
  "In[609]:=",ExpressionUUID->"9d65e4f5-20d6-490a-9512-71d4b6053fe3"],

Cell[BoxData["0.691738911325059`"], "Output",
 CellChangeTimes->{3.899887410999826*^9},
 CellLabel->
  "Out[609]=",ExpressionUUID->"e303aa33-a25c-4353-aab3-b485a430976a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Nearest Neighbor ", "Subsection",
 CellChangeTimes->{{3.8998879967420387`*^9, 
  3.899887999560256*^9}},ExpressionUUID->"7c7104f5-6b09-4049-8e20-\
6638d19130f1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"nn", " ", "=", " ", 
  RowBox[{"Predict", "[", 
   RowBox[{"trainingData", ",", 
    RowBox[{"Method", "->", "\"\<NearestNeighbors\>\""}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Information", "[", "nn", "]"}], "\[IndentingNewLine]", 
 RowBox[{"nnReport", " ", "=", " ", 
  RowBox[{"PredictorMeasurements", "[", 
   RowBox[{"nn", ",", "testData"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.899888003136924*^9, 3.899888052816372*^9}},
 CellLabel->
  "In[615]:=",ExpressionUUID->"3d32ead7-069f-4887-9c39-789683493322"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["PredictorFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{}, {{}, {
                PointSize[0.125], 
                GrayLevel[0.55], 
                
                PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                  4, 4.}}]}, {
                GrayLevel[0.7], 
                AbsoluteThickness[1.5], 
                
                BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {5, 
                 4}}]}}, {}}, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
             BaseStyle -> {FontFamily -> "Arial", 
               AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, LabelStyle -> {FontFamily -> "Arial"},
              Method -> {"ScalingFunctions" -> None}, PlotRange -> {All, All},
              PlotRangeClipping -> True, PlotRangePadding -> {{1, 1}, {1, 1}},
              Ticks -> {None, None}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    TemplateBox[{"\" (\"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "41"}, 
                    "RowWithSeparators"], "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{}, {{}, {
                PointSize[0.125], 
                GrayLevel[0.55], 
                
                PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                  4, 4.}}]}, {
                GrayLevel[0.7], 
                AbsoluteThickness[1.5], 
                
                BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {5, 
                 4}}]}}, {}}, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
             BaseStyle -> {FontFamily -> "Arial", 
               AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, LabelStyle -> {FontFamily -> "Arial"},
              Method -> {"ScalingFunctions" -> None}, PlotRange -> {All, All},
              PlotRangeClipping -> True, PlotRangePadding -> {{1, 1}, {1, 1}},
              Ticks -> {None, None}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    TemplateBox[{"\" (\"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "41"}, 
                    "RowWithSeparators"], "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Number of training examples: \"", 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["898", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  PredictorFunction[<|
   "ExampleNumber" -> 898, 
    "Input" -> <|
     "Preprocessor" -> 
      MachineLearning`MLProcessor[
       "ToMLDataset", <|
        "Input" -> <|
          "f1" -> <|"Type" -> "NumericalVector", "Length" -> 41|>|>, 
         "Output" -> <|
          "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
         "Preprocessor" -> 
         MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor[
              "WrapMLDataset", <|
               "FeatureTypes" -> {"NumericalVector"}, "FeatureKeys" -> {"f1"},
                 "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic,
                 "RawExample" -> Missing["KeyAbsent", "RawExample"], 
                "StructurePreserving" -> False|>]}|>], "ScalarFeature" -> 
         True, "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"|>], "Processor" -> 
      MachineLearning`MLProcessor[
       "Sequence", <|
        "Input" -> <|"f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>,
          "Output" -> <|
          "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
         "Processors" -> {
           MachineLearning`MLProcessor[
           "SynthesizeMissingValues", <|
            "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Distribution" -> 
             LearnedDistribution[<|
               "ExampleNumber" -> 898, "Preprocessor" -> 
                MachineLearning`MLProcessor[
                 "ToMLDataset", <|
                  "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Length" -> 41|>|>,
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                   "Preprocessor" -> MachineLearning`MLProcessor["Identity"], 
                   "ScalarFeature" -> True, "Invertibility" -> "Perfect", 
                   "StructurePreserving" -> False, "Missing" -> "Allowed"|>], 
                "Processor" -> 
                MachineLearning`MLProcessor[
                 "Sequence", <|
                  "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                   "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                   "Processors" -> {
                    MachineLearning`MLProcessor[
                    "LogRescaleNumericalVector", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Indices" -> {24}, "Centers" -> {0.04314593098342069}, 
                    "Cutoffs" -> {0.00033538463930567197`}, 
                    "Version" -> {13.2, 1}, "ID" -> 1758109800256407757, 
                    "Output" -> <|
                    "f1" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 1|>|>|>], 
                    MachineLearning`MLProcessor[
                    "Standardize", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAACzypZgfu+XP9BIt2NgL5o/FbGuiAa3nD+D
+clcUqGfPwkfZWf8W6E/yozpBxY0oj9X8bwxz8aiP8j/dbZD86I/WV0uoATd
oj+Gm9dmKKuiPw0y/Kn7W6I/UlpiP3HHoT8sKD3m/OCgP/3CySr7cJ8/W2aO
XlKdnT9ZHJM8zm6cPzQ/PK9SkZw/fZKae8zUnT/oCMg+4P2fP9uwnEML76E/
LzUTTaPioz9reOhNoyCkP1a4q+JTGqI/B1Ez/2hMA8AEiMCk+D+fP0BcLLMl
HqA/dT7ZFK2ioD/ozGQh40+gP5aWGrebJp0/9+MerbAhlz9xo4ZSyVaQP3Oo
KEEjU4Q/8XWPWSYyeD9wd9QjUdNpP5OdF1H/Al0/DtOG21IgTT8eoV6P8HxA
P429KDkWqjM/+F4AMmWAKT9/W2K81nsjP3eTQBIumxg/s8CZ+Q==
                    "], "StandardDeviation" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAAAIQ46QdQ+AP1A0Za9+/nc/YwHlmJnNcz8e
tU0hU3F3P4nTZmYcZH8/QOcuO1TEgz9GFFguRzCIP0/oTX65Bow/xcoK+5xw
jj+yhtenIcOPPz0JPmtTYY8/vayUQOTAjT+7o+6G9JiLP9W7S69WqYk/SwZj
iIbOiD9hmymwdqmIP9floHbyAYk/ESULVVZIiT+YaRZNW7aJP57HOgRuh40/
nDik6aakkT+gkUnvb12RP7kTLcbotYs/E4XLS93v/T/lnIgXLhqNP+cMNnvz
CZE/PK/VBXTukj/fFJA0GHSTP9YmLjoExpE/ys89UBAkjD8h6HUkaGODP7/s
bHjt+3Y/89BVz/KdaT/+OmLvXeJZP3IB+rRcMlA/4hXanuYaRj8QVTaAkh9C
P0dslVNaIUI/Gteieh37PT9o7vdEsD05PxFhqaNPXTY//nGWtQ==
                    "], 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Version" -> {13.2, 1}, "ID" -> 64935607783415987|>]}, 
                   "Invertibility" -> "Perfect", "StructurePreserving" -> 
                   True, "Missing" -> "Allowed"|>], "PerformanceGoal" -> 
                "DirectTraining", "BatchProcessing" -> Automatic, 
                "Model" -> <|"RotationMatrix" -> CompressedData["
1:eJwtl2dYD94bh6WUlopIA0mDjJYo5JEZoZLQIi3ae2hPDe2lpb133/Z8vu29
95KmiiT1a0j178X/xXl5zrmuc32ez7nv06oGzzT279u379z/V+Ej09Wv4fV4
SLx+n6isK+Qcvt6mZ1qP8/7nFes8vUBjXP7xoUuNcI/J+WHmgXEoEhUPLUxt
waDMguggU3XwZzHwerbQCgHyqWd55gpQd2hJJpcxDXz+GnDb0WXCt7ytquCZ
bhx7xbX9434JrBxejKO51glb92nf1BhNonX8k5/7H1dhktvDwl7aEvxZbIe5
nUnQ6nPGiutuAR67myVmZueG+l3/foo72oA9le2g1VQ6VhNOPk5IuYNsPlme
yz3+2Hfp1f039Ung7+/0TvykM7RUZgjxFYWiQLOSr8OzeLww9fLpO9Y4PER2
aMjVOBFWQk8JW5xyAufHY7H3S0OgVlzPT/uOIXbJyHKobEZizasbGp4LIfjI
03A1RMQbKfgUsl/cNkXmmGGbiY9G0LqlRPwqGArGYvQfp3fKgSpIXl/xcj3W
7PBlHX6ai6ypX+4LexHx2jeH4hrVIvh2+nfRr+4eODBMDmHqoyCu5mZ5Lb4F
F1mbbncWx8IXjGhcYS6GbZaQUYUxH6RqleCfOdAAXPnNf9NNklEjwwtfyAdD
frwGxT/HUhQWwbGt+BpQuVa2sdE+Az93VBjOFmVBIzPFQ52jNXDE7EKIOFkI
/npVmzd3NRE8i8nvNRJN4TzaVTcctACvkYd15ceL4ci6NtkMsyKM7KM+EGUZ
jTnL08eEWEMx2cZKMa44BJPfWwqWtcUCbWqxuOpQBBhzHCW7eTIdDOLK7z0S
9kGhd5Rc50oc0YUAlFQJfqhHTnFqhC4MNSJJv57XioZ9Qo5wl08dX39krvON
Mge++n4bK2MCLPx2k1Kc98P1/jPel98kYcap3Cy6mGyQ4qQxfy9Zg/l8b/05
GBtw4yISJefvQYvwT4KgRgWsJL9vjhEbhAJCBmmzfRGsnDEaITBXYpUQwV/G
vBCzJWdlWWySMHTJ/0zvVgG8WDnFHfYxB9ILjyVULzaijNaMjZZ2P3Sf962E
z4h1TeXl3+cnUEWNl5w7twMHOTyZx3p7YXSQcMhyfxSWR9f/Gg1/A6Fzt+ee
jqqALjvZNUIhAYU726UV1AQhqpzYGBXSiGyHZluW+/OB6s+a7Vf6AiCyiB2J
eFqMtsr2F2UxHTY47LVfqHwArm8ty5YzAfjip1OIwnQkeg3wPWR5nILv/Cef
71MKwEnm3wfzlsJBh0Nl9U5RLnCaXfI5FemGHnpvZ9lexUBB2WxzPe1HVHLe
CiUczkJag0pd99YIlBz9NmP0Ig7Kmnrov8Vlg/1Qtuv2f+XIV/Th/FxcO05/
FdcwlsiHTaPQ0EXVAgj4e6SrEnvBa8yUVnO1EvsPHHRjO5kCPT+erQZTZuOx
2RdXd5Vj8EPuM368XQnWXzdk//oUITuH1+v8WX80SD+oGGXWBn8Znll8LiHA
AesBkWu08aj+Vqj8U24ajvuNXO+6NopxzA6UGb/rMJMoPPz2eR2cc18+RGys
Ayj64tEm2A0vnQ6/X7FPhEUrf4cHLIMg7vX52n3fcryvljCuyWAIf/+9NB7x
7Ib4CBYFmqf1GJ68nXfHtxi3b2Y59mVHA6MQGWl0WwWUNlX91FguAEnmpzEO
FIUwKlQ38uRwJnISWiQrAytw1fc49/ZQLojH5jFeMizEqZ+pYx7kBnhJpVRL
P9UapQpufymy8ofmxXGjE+NGaE06T67FQgC6sIdU5AOIDRbe+nxsHWg2fM/m
iVoBzJP+LF6MT4AKs+9j1/JrQNVnWTL2ZCUeez2bIzCHcJSLaH03KBlPnhzr
O1Mbg7XTL+I3h9Mh4SDF1sGqUFTjfMEddy4VHk9uSYib1cK+uOTbZNtvgF+t
/KU0Rys817ktcZL4Ef2rbxzNezCM//Xks1YTgzCyt/avUng3ZsasmgiNxWDs
L7tNpg/N2OzyIkJ+kAiUMY8jzxyoQr2uDUPXpTK8Jhh4oTmnETN8DsznXRpC
/5eLFKHZjRBhJCv/R6MTSHz4pLtm8+Ggx2XBz8v1WOmdYLe104AC+Y8/GdCl
4tH0rOKhoFws/dU7liRUB7e8aScaebOw6/6DS7N9ZWCpPHXCRzEOyAdm1cm8
oyB4TVeWM9gaPc2/MAqfjIXligwB+axKEI7aN89UX43D7pOORR6tOPvTwMOz
MRscpetMNLuDgbjDXBS1HgvbR7K4SC3LUcrmzohvTwF4sN1giZnVhFtdbJF9
vzNxG33Zxzr1oJfaaXT7TxhGZ199dkEjARzO3v3g4ZsHBKvZXLM+FQykTrOu
/9IC5gp3/zDq8AKTQtLxyjpFTD7AleYiVwTOZ/6U0kkO48hsCTX3m737wr/f
pj7ci7vfgv2yzhFR+M25ejrRDrzz08XjW24jlIwTX5uqdMGc5tUmAYtOUI/I
Cd2n3Y7zcyoNlyMbUYXE3anVjYDHW8uk+MXrIK6aN/3meCtMPq8ef1hejC/G
LYr8Kmqg4R0/3eXtBlQ2bGCmZM9GiS3hhLNRROSZn9COWCwBK/cgD5Iz+dA5
lF78LSsdNxszDy3UJaN2jOWxQcYqiGHad78wug6PvF3fiqNtxJM6Lty0a3Fw
VCj8o2OiE7CdshJdmAlGok+FDb1KEYbI7nj+OLzXf0qbL3lKDeH00r+mkgMZ
SP3nl6zRdDROiymNZGR4IzWtZHG+QC5si46qh5LmYOvPr68W6YoxL+Mcg0Ju
EeRESKiqXS1AD5GVNnKHVtCNx5iunVrQkt1Nmh5PwVk0s7JM7kCj3XzDNw+T
sDnxwZ221jqcWzCabK3ph6iQpHs59e1wXUjUfv5EDy56svdR6ZfABHmq4CZF
C0KQgK2ixt55nuV+h4uMwOxexGrzQjVSqGp7xobV47Lqzg3fzzWgPuZmx2Je
B/bpLvfWKEvAsf3NUiR7LzwxD72z4xkHBl/8LD/H9WDmRKiXV0YDVhLZDzZc
zEVT4y/7/jCngfX5lVcpHaVwTHnjunpNA5p1eyyssdegsm/bwYLOIODJvstz
38wcT5wmnahdisHK3MtTl9IKcXPUnZTrcRYYHHlbVrj6AdIdon4zfcnC3I+T
VkRCLA5el1tzPfcRtwo+PHuUUwTPxcxM7aay8ZTI1L6LNwvxs0aSAG2IFpbm
bnXJHsrB9F0lGgalJtjaTymlub8Cqn7E7x6a8EVbXQmjW0+J2GxPtXYvqAdO
nJOXkrGtQYv/pHRvedXBxyV2kkFhd3wjzajuptqFZJOvYrSuZGDqaCmdqmgb
kMtSnEyujsfytMd/TB278KJfw9wd3nq46xSR+Yc0DdesQq6rd5dihhHN/Pjx
KEwRivugpfoRLd9yFppyjuKB4unOXSEifn/xQZePpx54fjpbJ53qAOqdlxMX
pzvg7eNPcvKxjRg/bXBlJrcJZgO0NrOWGtFd830o4XclCsRfYD+YLQTsdZal
0Y4mQK+3qdc6HYeaE1bWjqL5aOhMZdy+lQvUtE/Fa7fc4BJDgfk73lT8mtnF
xbWTgFz/2hw6HwRD3lX2zVGaKgjMSVX571Y5+iuIXyekukBxck5GxpsCYCoQ
QXOVbNjHtvhdqZkArpMOmmffGMOOzwchyks5EM96NU0iKBj4xOqGj8x2wqc3
Afs0cyqwmT3YiFU4C3ZnJ3WCsgtRimz2Ff+/ATB5c/kavX4xaiTwJGjTdUNH
AJeip10Ldnx488dfLgbFGILMBOjikN1q10dsKBCCOJ2Csp6VI0tFa7LMeBFw
WkvKlfznDpYl5k2cA0mwXsQZbsQwCtEsRbPuiaXAFJReN7zdhbwD36wZz3Vj
Yax2fP7vdhBqNl8eoe2E+Bd0r0Wqm3CCOq1IZ7sIv1H8Z85yQBr+EMckRrxC
USGfQsf9Vjx6cIluPKYrwMuXd7Rl1JNBovnfid9aehB3MmX/XZkkJARxtNxZ
SUK1g4K0Rl8doXBF5taDLwVw5Kv9ZTnSUix3lw58R+8Nj5895PO8lQb6Ys1d
dtby+DdfQYl/pQTCk03fDgZ4gfvwxzfSpWXgGKmvspieC0HaJxfpkr3AN9r3
24fyQuyXkSJdvVWBDduCwV4KTZie0JhqSDcA8cGmfFLm7eg+btVhfLcUTxfe
6G+dJMDXz5/vTNkUQNK2ldD75Bpg4j3u9KFyb44v9kX6u1cDbWvZfHhRJ4rW
9tGMhnRB1Fc+Ys27LvgW5nXb714VSkhJHtMy7EQ2dTpypdFwyCYqXHnOOgKc
96MGlhYbUMZjYUkvuA7uCovkLd1rxishY31fm3Jxv2L20pNjhpC2E+9WGpiM
R2KdeJ0d0rHl/mcjwZw8PLE+QqvmkgB2/IeZTph9gocMFFwdTcn4vvQLpWxh
Gtob8o5wj+tBjKfgg29vcyCt/OLldsO9nF91CajSiwX7/ticljhHbE8Ttdx8
Eo5U93ljGY3roMjJQbDdIAau8lKVPWqvg/Y6Ncb7yrWQwnr3FLesC7pYcVA5
/E0FJwbvwJZ8AioQ3wQ5HWlFPVPXVUfpPByMDBOYNCKieaBNtqtBJ7If/1ih
1loGH5jUzgZbVcGX2o1D1J7pIDYzZnK7NBz1/lyuKcv4Ai/P/Zk4klmNT8p7
W+acAuAh59/lpsQadPqv99jAjQE093hZ9DLDB8zjuY+NmdTDvXLRnWcT02jk
kGeYYlEO+z7HNt1szwe5I6Hct1ObcfhMzo8rNPGYO7KfvfPwI9AX6k/tk81B
itTjHkqseXiXU7pKejsXc+rjbnanxMDq4ScX/P5Ggg3lXCGZjhVefkwhuvA0
Beu036kTP1mgR+89miiaWPjIffH0v+YMlFEjs+FfTAOBa9RPvr72wyDnr+1H
pdIgeZtfhpajCkZLZ6lDfUzBysSGpde5EZS8XxXOU3VDpMWnTzR7PeV8zEY0
V6MLXOV5//yoaUZVI16qL3mtWNexwHFOPhfJmS7SzlT0wbesk2oSjYkYcfHq
aWqfVgjVbLU++a4YHJwIjefYm3AuhMTMkr8C66yVGlPEyiFoTOywcGcfMO+U
dvvKtuJFt5E7FkNEVFcrSV8WaAXtWn1ic547nrIJLB+UTYNCiSbl1ZBOOCeT
PLZWEI5v/nFHc+3rBMPIu5aRlc142tFycmbVFaxl3TZoup2wNmYjqIQsDx8+
+8p6/FwZJvskdFPyxWHQ44Y8Umc/SN51n7iyFQszCrbuCi3hePyXbklWbA76
SryLU7xmiDSFW238nz4CkfY1g6laBtrrdgkTZpxBREuWcqOuEG0WymLYpsOB
57DwtJy0M0xFqksZZqSivUTd9kJqJoidkOA8qlwDPguZdiTiHWghJhRcxNgN
lpTNlC8MYvCT7duXc/VN4ORSw7H/Ri+uxZAuOobkggB1/MPwtB5Yz2HM+TDU
hApu+pcZ2BrRgMkqkHiwCujiOPieEIpgXpzxWKCKPyrwTIlERfchSY528/PO
arw5wEb3JW4UKqg7JC6/JqCoyOabqp91UBqqnesXlYEko3NXnJ9GIMOzO58u
EQMg92iA0U31Bhj6J5HnG9+EHwqV17d5CkDfw+C0tUsosgy1TErcK0AO1p+Z
PVrVWEjgFr7/0BUdPUrSDXY+otG3V2ePmfjDsuQyFwu7P8ibBEg/sMlDtzq5
c0xjnihfmXercywFWf81rGzyv0erZT1zitkY/C44vKipU4z3XsopCXCWQkNa
QUfDTC0q0Nw1U3BqQhMuj/f25aUwp2SEZi/o4ZVh8X8qWwnIeTvTjgw7Ibv2
qHmKSQW0jihvKRBGoKtBK+QpEEG9658IocAV2n15OIepA+DpJr3TY+ZuFDdh
f8p6pxkWNow7nsgQ0fsObPI35eGz6YEryumNeOGrLJFhvhb+cxikNj8ztOdD
F6OTU9owW/FQqlB15R4fLVG4nWvDX1Gnr0x7V4Kk4/khmQZnlBF24uBgKEIL
tpb9Ep61UDFFI7RwtAEZmk7MjuvUQNJfgsmSXCQqF9mzULwsxNbLTvIXk+pw
IInb+MjDMBD5e1Df+FkKasjfDkt4q4E5S4Kvsj4bYlO51ytKmhLsvJG8P+eM
H6QfYNDXt4nFdlK/D/aWyZD39aylamoFhqT6+87FVePThMaWe0EEyCAd7U3+
Xo+vn/7Qrq3uRHt23/z66WIIjq+cP2Bdh2arfMlglABJETffVcgRsbLf1O0w
mQf0fho/TGvbA7/bPHz8arIhdFO85sOXbnQQZc63SuvHY//UT6gtdsHf1iXV
0oxsNByntj589Tleardh4hbMA/LO7EEv62oQZB5KpdEn4rFot97SjV6cYHdO
oQwuw4TT0nfZ6qrhX5pceuxYE8yQ9DtvjTghIzNVuqJZKWjiy7NlHxvBWCi6
MWigAfboN7KssBr1MqExXrAVPt8b0UO3KPzvXIPw3e08bD32x0fGrxb/vtQm
3NnKgZ1Xi62b+VkYYOH8fpzKGX9Uy00spL4CilendY9/KETpk7eOa6q6wQ4V
abWqcCw2zEhwKci2QGbsscX48WSkdVim+xudhTRjTqF5DTmgfHurpU6zDp8M
lptQ3OnEnJxuC4q/Mdgmn/PelbUK5fznOvqVXEDoxb7Tv+92o3J7yKcTz+uR
aYW/+gNFFzrMnS/775oxBuTun5IU7gLm+ER7LalkqPotOvzfnTqoiTGLXbra
hvRTf/n4F5pBLPyZ3mGOfpQ9afv0LGMP7rx2cZTsddnLeT/JmlEuzGV2nQi9
XwW3xnxpGi9kYLm6+Gx5aiOGyjI0UO3lD7+Q7ErtELHHz1la06Ya639LFraz
VYLtqYlR3vOl2OJNnar8sQtObHJdGXH3RtHRNYN9LzIw4fwMQwxzFV4fPJAc
EJcL6RG/jkc35WCE3FDmxRuuaEBa5Fh/0Q3pFeTmS42zcc7bipuBxBMaqXrl
S0XisOJ5R09dTBc8GLSjzm7MwUWdYy8cfOOwtMFuOkbeEB9GPZAna3mCJILC
Tku/cnGUcort9N68xd4Kej7PVY5v5zrDbUIJuFFUoiR0shn1dQvvfIgpBYf7
r/tuFPei6ADTKd+nzchAGl9g6PYJm+YEFgsPVUN45vuNUrsuPE5yT/QMUzfw
uryXi9rNR7XCWxnJu93gO9E40Pp6COi9qeoMUhugcLI18dhYKYgaFB+31nWG
jWU9o17yArwjodShZ7vnOVxaGukhqVDG2Hj/+S9lmFuN1ClMLIFRbjHnImwE
yfFi2aONafg1hqhMHdsDo+s8OTeueUNP/r+UnaRYVAz+mtxqScCTX85L/51J
Btr9x7nN61Lx20hv4itDc9xJzKbv5goAO6N2BzNKEYzNEg+HuA/AUuXPzXYg
BmwDnA79YuiGMsGNNWVnPxSR3itiszw4fbrUjpakCWeqvytay9XAQYqzana8
nRCZCBqyLl24b8IpblwlDd7qLfp9EasAervMX1Tl/cC5Qp5AnOkB+cyA3IM+
CXh8002YLroQ1OgOO/084Ajn7/5moj1CQLW6GgO1E13QEGjdGxdVCyZxRZmD
DyphnZeO6Z5HM6w3vdM6P92PrGRFG0LaVbg//QIFhTUB1S+Q8fJ/dofpImKi
rEQ1OP5w1jC9kounS4eWl62t4IyOwHD97yiUIT9/Lz82HR94fnw1mk+EuVrS
iuxgF6A95EBFItYLA8uzp57rJ8L30dvPT2Q4g5Wottz11Fg4mj5GbfY6DHTV
mw7VnjbEry4h+1pueWO2gnplckDCXr7iM1bW0iB/6ExHfb88ZrzrnIHbqeA6
+B/HhkkLiF/OtppJ54dQplceTtk1IJ6X9GO4lIBFist50REZeDnDctBxqQdm
jiY7uTyMwJqp6i1G7w7gZbz9fSiyFCpp6MobSsqAp0HXUKTGF20krJ+yMJaC
5DU786pnzZC37ij9ObAahc6noqFQHiath23ykCC6TrBus90aRG8BedrnoaU4
P/icg3V1AG8fY/x3l7MHBA0rQrwbEcpnPXIeqXuBwc2XYVk/oqCLSKXMJ9K9
58MZQ1/oS0Fq6/7kJWMiHhp88nzaMBhMdiWIuhlhYLkZzD3fVAu5U/13x04V
gNgjCYMb/3XB7lHPhUsReTAe6vz445cscJyvEjg13ACNzeQiorGJyPx+n1Bg
UiJk13wCd85UrHbbYH+vX4i3Zcqs1q8RgelmyW7EC3/UUXpzInBfEWyVq0f3
3sqAE96v017EB6HCiZ9hT4ry4K93c8cAaSYKe9yuG97zOz6mjvt3MjshWOZo
3/3GdnCIWj/rdqQCmP4mPXr5vRDlTzS56pV3YzZ1hMyVPQ4cMF2IeUBdD0uy
8Y5Jf+oxsFTzumV9Jdwo1zqQIVqBgqbfuo2jiHhC9/OTr/lpoKNnwm7TkQHD
PJ+4/nP1h4xTt3fIG7+AujoZa+KFTky1875OM1gD04x9/77czMWZZUklDepR
sD7f/K0ioBxt3JNLft/ohro+pkz/wCIU/Nnv6FGQgR8W3OtnlxpBfu3ldUEB
BDX107Lq223A7jB+MFqxEH6ek1S/oF8GyhIF9cNRnVCd9LpPurMA9USDxsQ5
CBCWdPRvT3E6pg4M3SezL8Pz5rTLF67WAYnTxIPTIy44Tyk15x5YDKfs3t74
TF+CigzXipTeeOB6Ps3R9opcmGXmkLGsCIaj3e/zjzjqAcd/NOVamwlYVV5O
M3C2EyxjNA3fMOVinW16/XZrOnbq/rSXX81FlsKz3qFL2ShFcvB+nFgMzD/Y
mk1IRKwsvR5jJNGNbsuMnDLHSsHuhLPP7WNGeHJR2H7uexMoPw2p21fRAKWf
v6fwvCzY8/wD5E6cvahyejPBj2sQLlvHrC8KdmOyy8TRVbkySDWM4FBR7EK7
5Ot8JwQQZW7vSq2rEtEimyARSCyAAs2phpWRXCBl3u+XKN8MgUx1Ev1Xa4Ak
3P3Y9c1GyH95s5RfowA0hPXSJ2nLQfXYrYHAqg64/oRek6qFgHOCFpzDj/PA
uJkqfGonFud+yapFdhWhsadG+0njGjgpNjJQ5xkHnfkrW5I2eVAfPBtkJN6O
mVV2m0LGWej+XOKEV2QQXLp6nIXoVwhb6hi8fr4ZoNXlevShYVyxeuR14EE7
Vvy90Mov043e42lz998jiNKcN+Q6PggpbklXpTTSMVZ1rce9uQZ11r0nCQdT
8JTQwBKVdhJUcTGZROzvwN8xUtx1ykRMZ/vst+xVh/Skq10yXIHg9synJJeL
gLkkZYxbWAlydgbOxIe5ePiYAFs6cxU0bQl56anFwVuzx5y5NxCWnr1kXHwa
AduarnGfbmZBiKd6wvKZWKzbEHAsMQnFS3l1T5JVmyDw7tsQ3Z0GOPBWQvR7
HhF06pMMx5iSYUvDTdV7JQcGdxKk7bXqgGarvbA6Oh7tjBcJY8zJEPqKm4Xs
heeed9NGhpYHoeZ4RltLfQbY4zD7W0o/cI9gZagaCgDeQLvA1m+NmPax3uuc
gQ80p7m+XL6Wi7/GExIrqJIg30LTylMmCQp7WEpX5iqxwFPWHTbyUM3cTpc1
pASsvP905yu04fQHPbXtby2YOuq6eZyvAzR+mRBEmRGun/um9mOjHaZk1VP6
ybshtoamR+1XDxhpTEHWziBsrvGUtHAkgm+aClWKWhP+aBZp/zySAjIfzrWJ
qhTA6+CzymsvmlCP3lbZcbAQnIlM+kPKVSgp2ef49WIrvv/zYDTmBRH6L962
CRshoJPGaKq5QSrqr5EN00nIgOPKc9rMpS7oNZE2WMxvgJGUL4Qx1jgQoBk5
vjuUA4akrCRHsQxqS/UoGzn3fCzZweeQcg1uXts3/rywBC7aWCelP66GYKkT
NF9dy8F+sHt34fMP7PZgvqN80Q1M+T8wSHDkwkDi5cCPIzUQ+rGW7LBTPp6p
1Fsuv1IIsn63nnwX9cZ8J+3Z8/sz4TAz2xrTbiY6c/CINcbnQ9i74VnBLDFw
7V6/n+tihLIMZNcbv8XAhoHlcfNgf3SMDLDODfSD479MlcgWHfCIHpVQtJID
TvUoLl2efoe886eWCp64o2drpO1n8EOWyOFnuWqGIC761tQRfcE/5LJsPpMl
RrDu3xDl1QDBhgMVXjFWsP6QSedviwLopZizKP0zgMFTMpR1KVJIO/L77C0p
Z6i8RRu39kERG+0qJtdlFeDMoYtefpPyaBOsoigPzTCunBKqYpmLbxe+pYpV
RGEepyAd/49Q5DE2mCN6xeH9wTfMgaTBcMP6fYHuXq57xn4eEKeNAXZt4nze
Xg/ce/2Qav11Mfr6HYw+fvoh5t8pJ/E3qcb5moN61rId2Gx0SfS0ax5MTc3X
B17oR0U2pzOf8kLBf/2CAFlsEyrmjTlGspbAADuPLRlZK7J4PUsTV+yEmutD
pUyjEejsHaWbop+Hy6mdjfsMiaC48cVsn0UZGnq5lytrJqPFMX966u9N2C5/
6Ne3UyW4yPFmyTDCGYJvcuZHmAzgPpobW1bPC7BfcUWU7k4bPNWv4htcK0DN
JxYZjvKdIOgzxPSA1hgFXrmqyXUhTC6aPREmKwQeu1DFl8ktGMhw2uOIWzt8
VBhtH4gpwybmm67M93Ixi49Wz1WvE2b8LD70azbBw64gebmWUqxju7jSPR+M
p7482H6YHI1UHEaSUzYZWDckQ7iqlABvf3sTJ87EY1jHYTE2rc9wQJTsiqN8
CXQ68dXvd8lDT/bHG0FUe/tJBj6v71Zhw40Q0VGSWpxkGY39mZELk45jsoLV
tUh6zD/754UgeCSoOpltU4hPv79upnzRBLdTbF9MkRaipiTmEDYIoFGwX6hM
dO9/8QnR8bUzhdvlYTdZKEIw2yqw+CJzDo4x5XHbNNeh65pZhL9YPHjYmJma
ZHSiUWWfHVVsAbJItzY5KLVA0HTusrRcPxwOvjSQyFyL7zJzjIev5uBabif5
0HYO5gjoF10cb4c1xt+ujcN1mHv+NsX4DwcYmKSfPkzZBmE9ApJ118axojW5
8L9LVaCZOzG1+r0E5GxxqGqpEw4qbsY8mGiELm1rI50jiBuWB08zTvhjTtnk
2Yzmc3Ckcaz1v6J83FouSHcLDYcU0oNL2wXByCWTZOfW4AE0cQP3NR8XA/3N
/0xKSePwp/JS24vHIfheMcxfS64Mzyits9QLZGBblXCBMqkS/vnGq57eRcCB
GwNWjucJKHjZuOnQnUSsie6bu3YhDRqCOJ7ejS5Br+kjg37hRDy16RA5EFMD
xQ9KFGfep0LMQ2eLnfBPmPgsKOR+BMIA1cEbhz7XgZmSlmHLl2i8fIGzwfpe
IxS/m3af2OvnX6aSt8xSB+HRet4JacYuiHTLcu2qHEDuerKSkIVOWOPhPqNo
lQLXjrELfzbtRBpiTrdUfhOMvpWlOfsiEz7NR0VwOcTAy/awHZmNHmC9e/zJ
z9oqbAyuiLhS24mfGJ6JEgKbYIIiMHLVqhGuPxRhz/uPiB4k5zfUCw1xv/dx
ph/muihYYplOe6QQW8tOPjVaSADLsOLrp+xiUDyDuLbl5A83NyS5tGjzwH/0
sYpevQXcOX2LcnEwDCfp1O56rhSikS7pyySuIiBwCaYKX08BcS6XRwyz/sBJ
dYty+2wi8DbkTZ8Vi4BzpwJa8kNL4OrZuRoTLT8MNXHru/S2Hnv7WQ/v900G
eD+iujsVDzUKJhKvJzMxg9qlOfxrEb5a/zMXsJ0InyIEDcQbS2E3WEfH83c6
zA3xhr0ur0Ft/hsPW846o6VKbm710VrcfFlcnSNAxIWI00MtLcX41iza+cLn
biz5ThNqRd+IJ9iLe1/rEpDytF4huUgNrvTzd/rqDeBR1dNPFcbqwXddXL1O
uB64u3ZMtE2nQCaBj8hwpxXizl4dv3WpEXhe8L280lCFygf/Y1m/+hjFRjS2
tiL4YGpS2iL2YAnmvlJ2J3onwWHOR2bRpbH41d+R/uDOJ3i/mfncqnSPsw/J
/tAUjINVzie27nLh2Kdx/t7VyCKksaSIWlCvAf2Mc3yUGnGQ8IBKP6IzD8hr
fYfbFhMhXDfCvXW/O9RcMnxbVR8Pge//kVCGVsM18ruz1w3qMfv6tC1VbxUU
J9l5Dd8JgKWM2sPHN2vxso9C2FGXEJSKSY1y8SBg7SbnUxOVONRq9Wu0lsrF
OH2eixfmSlFk7bF0Pr0DtM3mydeVj2LGpn7n4/B6mN/pWRo8mo7pH2jc0380
4MMq9WMnGRqwpr1Io1k+E7UNVyd/k+fhYesrUCSRisdtbSZWBnuw8p2WrU0I
EY1oRPUbNb8he321yzP1LnhCFvjp4HYD2MzRXT8sWo0z817CllOuqLNVsK74
2R5kO26qLLiXYedd+jTpnkTQlx56q5+ViNdl2IUawn3ggOYNn749DqJ5Xkn/
+UI2nKo69/y8SCRun1H9MrORi5vpv8k2j9TD8RyNw33D2RD9Tv7SO0qEK7pC
7N9sdXFlLcJ30DoR2gZqM5jGQuHYSrRUX2UHPDhzslmqohr1o775nfKvhi+u
q/Hz9pHQV1Dr3W9ajJ5idOHNH9KA7vJp30YdGzAJWaCYv1IEOXdI53R78jDo
0ef0uvgmEOy/cISaOx3pGWaUHqkWoHej2K5PYAVYj10ZGKxrwFmF6x9UvZug
cly8LLB+AGimldTz/vVCH+l58585eWi809DU0z4G9cw0scplXaAWwXAsOS8M
Un0vHv3FUwvX9TuZJlTr4I2G0Nr98QaI01EvHFOpxgiZG2xqklHIPUVXrH5G
G2rIyJf0S8uQl38hZdspGWYYGi4+I03A3h7Pnn6OQPjNZXKuwjUD7mu9vMlf
VgDXOk8XMMh8Ru23Mikih0Iw1Lo/PMavBd4XRReuTSXs4faGl1BGHajyd56Q
ORQNG5d+2JJnRgLPK7qMhUOFOFJHcevl03q49tvvoWlLJu482q3lSSfg2Yh/
1V+Um8C4rkw/8kIaKjd+rUnqqQCzntW242Wh+KKIgW400AHbQs3OaTY0grR0
Dwv7+xZoIrtiT8jswK40pUXpeyPg6XferbO2E5wfTeSUmfUBZ/jnqiNFCGev
t+GJinJoJRYxGyy3omH+e4uk/QTINjM9t3KpB69/M7qGp6rQsf/fS1L7WkSW
U9b75dLg14hrvKBVETjd+brZkdgAfT2ng9oZqvHuL+I2NRMBZfku2tKsWkCV
l1Lf9uUyzGDVFj7Xngo3Jrzpbz/LxcADV44L/HWAbnsecvfoGAixp2pivZsP
HLyiH2mFvOD5gm2+I00cJJ0lF3CXbISqJeb0VRpF7Ll3vXhrsx4ELKV6CAX5
6M7/vplXvwXIDwm/stHvxBPHDVOl6Btg5WytARuhEkisQ1JTBcfR5V0CF/1U
Pk58eCC5szAEPN93Q1gu1KFTnKjDTdsiYErSmizcacRHWQsMarxVyHugS9cl
uxkv6KZnnmEn4MQN4fOVjjGQQKh3PaffhoQbJqabdyuxPmnmpqxH1N6+R2r2
4XlYrUudO2kRj9us59KUVaqAUkgzQcy6GIQWI3er+0pgyyWfLSEnEWr8GDk6
tUvRPMl1jsyPAMHrWRSj/+qhaV+7qE4FEedvTr5z9KxC57f0Ew/53sPCrQjD
S85laFx46UEKbzpQH74qXZrki2+CSq5RxfsBT8gzud8/QtB+jK+G0SgDdjqV
3nwyqYcDVwv+E/3eANpd/7YunSqFM6OXGPJkWvCJiXpAdVQtKLALrbixZeCA
RNLZt7rVYGDbFdRzuB+LOyvSJdm6sITho2s05QQYLgQ5m/v0wIPM4x3/pmvx
eM7OWIxPHW6drZn5Di1gvF3b+nq1Ho+aqn4UXHyFU6Vc9ZJ9CVigdYW/NNwJ
uhZ6WKX+EOFCRnHtr/uBSBZHm87ywhh+sJyh23mdhKrf7+uc93NCZYMBk5eM
DhC0+mDUXSUVGN+a2XOmJqECQ2YMFX0+cliKXfrtEoOSQvVttFUJsJOiwj1T
nAMHLtuLVqRngMgT3zPme3Oe584vHXGxFAV5ZbbgSSdK0DK3Va6koEtOdgOV
fiZSnC/5QsecCllJWw0b9YEw3dPFauBRiuTigeW7akRccRmONth4DzorBkzn
1ohAzs8hYRk3DMvt7854qyTiS72H9VZqM/iZ53iQ3R6f5W/0px+VyMJU3+yU
mO02fEKu4aM92QBNTcMpd/srIIXhHX8bJRED/V4k1dqWoS/xjv/ajRpg4ZW5
zCTmDRqr2QGbT4no/OPHdlp8IfweKqnqUS8GA711lcqAd7iwP2Jf2qADhqbG
+clZBOCc+FPqyCAP1PhXY5Eclgh/enb9OLxV4KCt2Kef4l6wHPDdqo5HD/hU
ibupl3SAbTfXO7QkCaUvkv/yuRAOlld5C8p87fHYZSuVl2ShGHQho0y8yRw9
i2eu9BCcQSyf8x7J4VKosHPa7kpORr2sNLFexwH0yvJYeOBYjVpPj3ge2syC
FG2HDRKpHPj1hfFg2F49JJn95TJaL0NJo3B5Pv1veMmIwP2MtRp1wq6KrP7I
hZdZihbtcwPwyBL4zkIpLP49cPL41gSEr5pTnc+rQpvGBQM24TR4E/n+VOXc
R+Qx3f+MlN4V0kksdWfU93iT9YUvlVIxJhHYZUXYzaAnO+MB8Y4HNJfPr3s3
2UPWbhT5Sk8WFK+J3NcLCMGr93SHGyMtcbqG+JfH4hP6VpfuGwj3Au/WoOf2
+hHwfXIn/OOaE57h+Nb/pCkGP5iR5klQB4CSkZnz6ntz8FxYapfyt0DKe+n7
PfhcsNEsiTv5jBwaveQozWkzQieJkKnrKY6Q8uNk0i0yX3CN+rm8SghAEV36
pfLqIKi6Glb5n38sWM5eU8m9FwINqlb08Y8GUPdK/Osp/0F8RE4pr3SiAdQ6
g+yTdxSQnyS7OW60CKxCfgoVb9dh0Z+DDTon+zDj11/+ddc8rCu92xnWOoy/
yzmsvK+M407cU0rjHgKaH3zX+7ikDcXi/VRIuVvB18dDTZrgg5rsv0v+GWcD
YUD3V9zhPQ9yTvpirG2MWZYCf/VDc6DKVPcW7/1oGGNqvGKkooNKtRXEo36a
IElU/xB30g9FxCNqUzc9ICKmm6P+hgv28Z4tXNYIhXISw68tvK4A/h8G0gJd
USM9u54y5ygSL54fpaXzAL3EyfmuAx7I9iR3QPOeDSLpoJnDUSUs6Lf6aPZO
G2RMFVbxeggkSMK19KNWiFWqnifPKSNVEl0gg5kdMrxRW2/z8oaN/0ZfzsQ7
QYnhQdtdigBkYJ228r2VBe4cTN9PG/Qjt5RH4f1rA3gJHo8WpzdAVDnNk8Dn
+Wj4nXGqKH4YClyrXJbf5mNO9c8m7tgpoCybm7ObJkK4yIupT4uFmHS9o8tY
px0sViU7FMgqgJKe8CF6hAiXdvi+xJSUYUo07wMRt3xIl765c2izAChdCv+q
Lt9CxvLn8nrSoWjr9/XkN4YUPKH9t2RD+z1Yfv36wr8lEUmTkrRVE91RYlVn
w5skBkSuZHgF3/fAK7pahvWGwbjG5JzzKyQIT3dtPCmYdUGbEJtv8c8/Ysu9
paNX3LXwRYKF8Ml3hljYZfMhIcMC7IIl6Vac7aHaJ0LzUZA69M6vOn5P8YMd
AcV2kdMu+IB6aXt1xAXIFNVsM3xl4YzCq9J6CyN8+O+tS1iHIfrd4NmJ+mQE
gppn8s+uJSKH/HNziqUcCHPYYHw4NoSPKQZ961YqgTmtwviuvR9QsQycpv/Z
jL2D9lr2fZ0woUf94KxdH2RdGKs6JFeE3gn+dSStecAvIKxK5j0NKUMXWriP
DyBL4K8nfV2m4Pfs+/c2YiJMpDtruVHmAaOhobYsczHGfU/bdRIiIJ3okyqh
6iQw2XlH8uZIGkhMx/rTemTjvJ9ZIuVpezzK62M+u88BAnoY/3JeiYGrzR/J
NA+F4YMj/iE+pY9B+IVHlr9rMKyZS25ZSephwtAIh9w1Hfxtkd5XaeWMhGTt
taYT7jBfyNNpd8sEPIiZrbCrA2fThPd/um2OxwRInjuauaAA+0uHkmgPJIbM
OuYRr+KMtmvmeadHKM5L5PrEqAly2zTvzb3ew8myf6dIfFUwVqCD9ayIDYhQ
NZr5u6fhn8up9//0pEOfW0dOtuwA0iozOk+3t4CWhu5x139773slI77t1gAW
fBu47/PuK5KnT/MK03+DoOFtjecc5fCXnj58WqUS1Gwmkl0WBvHNYTbBk+EV
ULPoHeW8Y4hJd+P1o7bTMD0n/eAtVy805EiZY+EPhmehYUt3kx2R5sO7z7Ke
jqDx6Mw7CrkUfBLwwPWKlTdmyv0mJyNRRNGTFXTja5+QEAUnDQfj8MJ/9hSF
KoJ4IGR9kE7KHtONGLg1xvxRjcXPklrTErJ4nWY2XnvBJ9NMYy1OG4C6v5mF
ZIH4otCbKS/sE67ba494ENnQ/4/SvT/HHJCbh1yM8+NHUOc8c27jijSsvbr6
V2zfLcxJ8PdRcNEHkVNHxEii7dDtcE75TRZbzHk4MfftjzH8ZxRbuW/AAToW
oh1JdjNxKKjAmLV/z9f7DoxTW3dj4bv6m1u0o7Cr3dbFtoNY+6PJ/klMNwZ6
KYmera7HM8/ODa2vzaJs60UfX5VG0Hca47KlKcayif2ZJ5uyIPb6Mepl7lIs
Hhc61rWciDq7ZrxtYomw+vzUhZJVAlz4F8D2LjcOjs4ld7m1eQEFBbWV37MA
mH+/wpnz3BCf8dCUBW/5g+blze8NYyo4YtdCFKpzgxQl760kDnN0ItGQ4yD9
CFpUaz4/p4PwaGatcVL/R3C46THJOa0Nvb/87S5rKeF7bTbGz3/8cVbzn9Oj
XR20SLK9+/2yNbzVani3aKMIjiIHkeKSA7ornwjz+2KIZr/muLq67+BNppyP
bvvNkDN5Snt62wDe8rwJnNPQBO6ejLbMBFV84X+LL49NEi6WjOie6DYDnQbH
Gn7FFHS9uLr/4VAY1Fwedzq62YS3F86pq2hOAk+pIt2t2Ho8X3fwF1n2AJSo
2/i8bvkGjD5sw6wjFbDt155zbb0cBw8urd4Y8kel07YMOvN7ueXjesBx7Qvo
m1EGXolJAMVUVZ75kzHwhFSw84BDMTaeE/3+j+sTqD6TKQyctoZ6qSDlH398
sTXI8mFZyR6fqOldaiKLhnWf2cifArZ4rdS4ld/bCoIbz7+3PfUGrV3MD9DJ
XcW+L9U/qF+Z4oxTTBrrF1PcuC2jnBIRhi2JP5TELruBdH3s9Fa/B8hq37zE
nqwAWk1a244malhzYONyssA7lPqUMqtD6ojlIuESWVTP8MRwOnvyr7d4tPcE
e2QWP978T2tfbosqnn/kY/Xm5B24O6FAfbDRCi58JguUsxRHTtO7TzkWLeB/
1KFRLg==
                   "], "Precisions" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAADXPTPKV+emP0mYF6ERALo/0/FosOqsyj+v
dMPw/bfiP8eJI2PmzvE/4zcctxE3BEAJmyq7BkkLQKRG27tUMhNAG/FUq8qA
HECuglm4FswgQF25JMNAhCVAKDcef738OUAMmZeCPIpIQCPN6GINaklAXZlS
CX1JUUBiZraoVbBdQDjTujK0XGBArIRCNlVBaUAQ3c92D8puQMoCLpSaWXBA
D45svkdveECesgrbGAx7QLIiVrp1xn9A94wkE5tbhUDy+ynoV12IQAsN90TP
LolAEIDElHL8kkCRLKUFeNuTQAMFutJ2kplAYWkPBUMlnkDxUx66FkugQJpl
9eo2vqFAtvPl22JapED9a8StvaymQCCD4vL/kahAgLGfKqu1q0D9u0TCplOw
QBS+W+pL3rZAswHtb9IovUCziMOYVM/BQJ/qRwFrVNZAA6qbbA==
                   "], "NoisePrecision" -> None, "Processor" -> 
                  MachineLearning`MLProcessor[
                   "Center", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAABBFtZd2NwjP4SA0b9Xoia/caH8n9VEJT90
oH6furwxP7DKP5C3LiS/N3/OnlSyMr+ldkjEzb4jv/ZIB/u9Ijm/GdQSvIAl
8r6jKRkVHb0wv8p+1AeKeCe/PtLAANl5J7+asadF5QnuvuNm6AmvIT+/ncwG
VccBNL8b0AWfz6cLP0G6BFcXaCM/ALwf6xOXJj9eVqDtcC8jPwtMpWRsSxK/
edzXsQxjJT8DK/kXY3klv3zXyFtZjDE/lti/l7/HFz9yf9LXZQwrP6Jk5yJ/
1TQ/XpLv8+PqJD/Hot04VBLuvjXaEfsdaSw/JIgNrsvdGj85R++o2uslPwKr
73VnqQw/tTIc2Pf6IL9yj/XXc4ouP2oJNokIgCg//HJW+x0GQL8BXdaFRTBB
vxy2BABVyy8/x7v2i1/KFb98fg56PSMjv9UKRkisctK+BXKbKg==
                    "], 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Version" -> {13.2, 1}, "ID" -> 1210029810956485142|>], 
                  "PostProcessor" -> 
                  MachineLearning`MLProcessor[
                   "FirstValues", <|
                    "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, 
                    "Key" -> "f1", "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
                   "Method" -> "Multinormal", 
                  "Options" -> <|
                   "CovarianceType" -> <|
                    "Value" -> "Full", "Options" -> <||>|>, 
                    "IntrinsicDimension" -> <|
                    "Value" -> 41, "Options" -> <||>|>|>|>, 
                "TrainingInformation" -> <|
                 "Configurations" -> 
                  Dataset[<|<|
                    "Value" -> "Multinormal", 
                    "Options" -> <|
                    "CovarianceType" -> <|"Value" -> "Full"|>, 
                    "IntrinsicDimension" -> <|"Value" -> "Heuristic"|>|>, 
                    "NaiveImputer" -> 
                    MachineLearning`MLProcessor[
                    "ImputeMissing", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAAAlB9Zd2NwjPxKA0b9Xoia/+5j8n9VEJT/r
o36furwxP0XHP5C3LiS/Bn3OnlSyMr8lfkjEzb4jv0lPB/u9Ijm/a8QSvIAl
8r4wMxkVHb0wv0uM1AeKeCe/JszAANl5J7+FFqhF5QnuvlFl6AmvIT+/sdEG
VccBNL+8hgWfz6cLP8WcBFcXaCM/48kf6xOXJj8bSaDtcC8jP45npWRsSxK/
i+zXsQxjJT+mHPkXY3klvy7XyFtZjDE/hvW/l7/HFz94fdLXZQwrP0Ft5yJ/
1TQ/d4vv8+PqJD8uLt04VBLuvr7iEfsdaSw/yqUNrsvdGj/lOu+o2uslPwHe
73VnqQw/tEYc2Pf6IL9BmfXXc4ouPxsANokIgCg/pHRW+x0GQL+iWdaFRTBB
vyG5BABVyy8/Edb2i1/KFb/5eg56PSMjv1+ZRkisctK+sUabCg==
                    "], "StandardDeviation" -> CompressedData["
1:eJxTTMoPSmVkYGDQBGK2nCNmTn/f2/N/8eSY++e9Pa/LmZwqhg/22wQbDiUD
6WOq76/o/Htvz62Xq5/C+MFeX2Xtka7/7+2/PnlakAikhV6UTeMH0v7np2V9
//3enrGa6dAOoL5X7wIuZAL1ydjV16sB6fDbH5inAOljvv8/dALln5+0dC8D
8kNnvbo9Bcg/L7TwwlQgnS2m9qUOaN7u4infnUHu2sFkuhwoHlcU9nEpUDzy
wzpDHaA7zW/ETv0E1G+ae/+aFlB+dfqr+I9AeqXUjJ2WQLq07sc+EN0yk0/S
C6iuVErquz+Q/uXUyyANFPeYyRpxE2hekZeZ2HQgvaol/SofUD7f9sFBayD/
wSz9E5ZAevujeSEOQPW5nHIf5gL5hvO6i1KB/KyYnReXA9XPuG67UAoYLgDp
Jq8g
                    "], "Method" -> "NaiveSampler", "VectorLength" -> 41, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Type" -> "NumericalVector", "Version" -> {13.2, 1}, "ID" -> 
                    2628110491450176983|>], "EMIterations" -> 1|> -> <||>|>, 
                    TypeSystem`Assoc[
                    
                    TypeSystem`Struct[{
                    "Value", "Options", "NaiveImputer", "EMIterations"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Struct[{"Value"}, {
                    TypeSystem`Atom[String]}], 2], TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer]}], 
                    TypeSystem`Assoc[
                    TypeSystem`UnknownType, TypeSystem`UnknownType, 
                    TypeSystem`AnyLength], 1], <||>], "BestModelInformation" -> 
                  Dataset[<|
                    "Configuration" -> {
                    "Multinormal", "CovarianceType" -> "Full", 
                    "IntrinsicDimension" -> "Heuristic"}, "ModelUtility" -> 
                    Missing[]|>, 
                    TypeSystem`Struct[{"Configuration", "ModelUtility"}, {
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[String], TypeSystem`AnyType, 
                    TypeSystem`AnyType}], TypeSystem`UnknownType}], <||>]|>, 
                "NaiveImputer" -> 
                MachineLearning`MLProcessor[
                 "ImputeMissing", <|
                  "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                   "StructurePreserving" -> True, 
                   "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                   "Mean" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAAAlB9Zd2NwjPxKA0b9Xoia/+5j8n9VEJT/r
o36furwxP0XHP5C3LiS/Bn3OnlSyMr8lfkjEzb4jv0lPB/u9Ijm/a8QSvIAl
8r4wMxkVHb0wv0uM1AeKeCe/JszAANl5J7+FFqhF5QnuvlFl6AmvIT+/sdEG
VccBNL+8hgWfz6cLP8WcBFcXaCM/48kf6xOXJj8bSaDtcC8jP45npWRsSxK/
i+zXsQxjJT+mHPkXY3klvy7XyFtZjDE/hvW/l7/HFz94fdLXZQwrP0Ft5yJ/
1TQ/d4vv8+PqJD8uLt04VBLuvr7iEfsdaSw/yqUNrsvdGj/lOu+o2uslPwHe
73VnqQw/tEYc2Pf6IL9BmfXXc4ouPxsANokIgCg/pHRW+x0GQL+iWdaFRTBB
vyG5BABVyy8/Edb2i1/KFb/5eg56PSMjv1+ZRkisctK+sUabCg==
                    "], "StandardDeviation" -> CompressedData["
1:eJxTTMoPSmVkYGDQBGK2nCNmTn/f2/N/8eSY++e9Pa/LmZwqhg/22wQbDiUD
6WOq76/o/Htvz62Xq5/C+MFeX2Xtka7/7+2/PnlakAikhV6UTeMH0v7np2V9
//3enrGa6dAOoL5X7wIuZAL1ydjV16sB6fDbH5inAOljvv8/dALln5+0dC8D
8kNnvbo9Bcg/L7TwwlQgnS2m9qUOaN7u4infnUHu2sFkuhwoHlcU9nEpUDzy
wzpDHaA7zW/ETv0E1G+ae/+aFlB+dfqr+I9AeqXUjJ2WQLq07sc+EN0yk0/S
C6iuVErquz+Q/uXUyyANFPeYyRpxE2hekZeZ2HQgvaol/SofUD7f9sFBayD/
wSz9E5ZAevujeSEOQPW5nHIf5gL5hvO6i1KB/KyYnReXA9XPuG67UAoYLgDp
Jq8g
                    "], "Method" -> "NaiveSampler", "VectorLength" -> 41, 
                   "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                   "Type" -> "NumericalVector", "Version" -> {13.2, 1}, "ID" -> 
                   2628110491450176983|>], "InputDimension" -> 0, 
                "OutputDimension" -> 41, 
                "Log" -> <|
                 "Example" -> 
                  MachineLearning`MLDataset[<|
                    "f1" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 1, 
                    "Values" -> CompressedData["
1:eJxTTMoPSmViYGBgBGJNIK7Ist9ntWGCvemcK7WVOVPtDzoe9X9/dqb9dtXC
4F/v5thzyYT8+XJvjr1GearBxM2z7I8BZTNtZ9hfKk1UyXWfZh/BJmy5mnGq
fbrZ4pd7zKbYcytnWm8Sm2I/71b/ej6dKfaHPe9OPx42xR4k6nJmin2u64WC
oO9T7U+E/Pv14dIMe/loQZM5V+baN7VO2Chit8hes7Y8zXjWMvtU/b5V//+t
sb8360JhKMNGqDkb7BVTdFr71622///n25N1PMvsT8WIOZ+MXmwf/P3pRlHH
xfa225QyLFYutr89catCktpi+19vjgFtWmC/UdB0/t0Zs+zrKnOALphkX5qk
Xpak3ma/XSXP6/7cSnugZ641dWTaT92l37+WI8r+WkvfaiYOD3vTBQ8WPt1g
ZK8C9r+UPQMUdE/arlYS89UOxgcALneWhA==
                    "], "ID" -> 4635246341379078022|>|>, <|
                    "ExampleNumber" -> 1, "ExampleWeights" -> 1, 
                    "LogDensityRatios" -> 0, "RawExample" -> False|>], 
                  "TrainingTime" -> 0.131417, "MaxTrainingMemory" -> 1617784, 
                  "DataMemory" -> 296520, "FunctionMemory" -> 59376, 
                  "LanguageVersion" -> {13.2, 1}, "Date" -> 
                  DateObject[{
                    2023, 8, 1, 10, 14, 14.118747`7.902371141325471}, 
                    "Instant", "Gregorian", -4.], "ProcessorCount" -> 4, 
                  "ProcessorType" -> "x86-64", "OperatingSystem" -> "MacOSX", 
                  "SystemWordLength" -> 64, "Evaluations" -> {}|>, 
                "LogPDFDistribution" -> 
                MachineLearning`TailedQuantileDistribution[<|
                  "Quantiles" -> {6.07088734253851, 6.07088734253851, 
                    6.095422220961959, 6.139582333771467, 6.150821740348716, 
                    6.166772593140232, 6.176929859830782, 6.1923097388355615`,
                     6.20425963698722, 6.216873024332063, 6.318474894752949}, 
                   "LeftBoundary" -> 6.095422220961959, "LeftScale" -> 
                   0.012267439211724351`, "LeftTailNorm" -> 0.2|>], "Entropy" -> 
                Around[-253.10256688054784`, 0.891433624356406], 
                "EntropySampleSize" -> 10|>], 
             "Output" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "EvaluationStrategy" -> "ModeFinding", "Version" -> {13.2, 1}, 
             "ID" -> 895810465636885430|>], 
           MachineLearning`MLProcessor[
           "LogRescaleNumericalVector", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Indices" -> {24}, "Centers" -> {0.04314593098342069}, 
             "Cutoffs" -> {0.00033538463930567197`}, "Version" -> {13.2, 1}, 
             "ID" -> 1295242045016063173, 
             "Output" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>|>], 
           MachineLearning`MLProcessor[
           "Standardize", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Mean" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAACzypZgfu+XP9BIt2NgL5o/FbGuiAa3nD+D
+clcUqGfPwkfZWf8W6E/yozpBxY0oj9X8bwxz8aiP8j/dbZD86I/WV0uoATd
oj+Gm9dmKKuiPw0y/Kn7W6I/UlpiP3HHoT8sKD3m/OCgP/3CySr7cJ8/W2aO
XlKdnT9ZHJM8zm6cPzQ/PK9SkZw/fZKae8zUnT/oCMg+4P2fP9uwnEML76E/
LzUTTaPioz9reOhNoyCkP1a4q+JTGqI/B1Ez/2hMA8AEiMCk+D+fP0BcLLMl
HqA/dT7ZFK2ioD/ozGQh40+gP5aWGrebJp0/9+MerbAhlz9xo4ZSyVaQP3Oo
KEEjU4Q/8XWPWSYyeD9wd9QjUdNpP5OdF1H/Al0/DtOG21IgTT8eoV6P8HxA
P429KDkWqjM/+F4AMmWAKT9/W2K81nsjP3eTQBIumxg/s8CZ+Q==
              "], "StandardDeviation" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAAAIQ46QdQ+AP1A0Za9+/nc/YwHlmJnNcz8e
tU0hU3F3P4nTZmYcZH8/QOcuO1TEgz9GFFguRzCIP0/oTX65Bow/xcoK+5xw
jj+yhtenIcOPPz0JPmtTYY8/vayUQOTAjT+7o+6G9JiLP9W7S69WqYk/SwZj
iIbOiD9hmymwdqmIP9floHbyAYk/ESULVVZIiT+YaRZNW7aJP57HOgRuh40/
nDik6aakkT+gkUnvb12RP7kTLcbotYs/E4XLS93v/T/lnIgXLhqNP+cMNnvz
CZE/PK/VBXTukj/fFJA0GHSTP9YmLjoExpE/ys89UBAkjD8h6HUkaGODP7/s
bHjt+3Y/89BVz/KdaT/+OmLvXeJZP3IB+rRcMlA/4hXanuYaRj8QVTaAkh9C
P0dslVNaIUI/Gteieh37PT9o7vdEsD05PxFhqaNPXTY//nGWtQ==
              "], 
             "Output" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Version" -> {13.2, 1}, "ID" -> 3037891080026016735|>]}, 
         "Invertibility" -> "Perfect", "StructurePreserving" -> True, 
         "Missing" -> "Imputed"|>]|>, 
    "Output" -> <|
     "Preprocessor" -> 
      MachineLearning`MLProcessor[
       "ToMLDataset", <|
        "Input" -> <|"f1" -> <|"Type" -> "Numerical"|>|>, 
         "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
         "Preprocessor" -> 
         MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor[
              "WrapMLDataset", <|
               "FeatureTypes" -> {"Numerical"}, "FeatureKeys" -> {"f1"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"], 
                "StructurePreserving" -> False|>]}|>], "ScalarFeature" -> 
         True, "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"|>], "Processor" -> 
      MachineLearning`MLProcessor[
       "Sequence", <|
        "Input" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
         "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
         "Processors" -> {
           MachineLearning`MLProcessor[
           "ToVector", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
             "Output" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Version" -> {13.2, 1}, "ID" -> 2243861272990366060|>], 
           MachineLearning`MLProcessor[
           "Standardize", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Mean" -> {8.396926503340762}, 
             "StandardDeviation" -> {3.100408284980153}, 
             "Output" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Version" -> {13.2, 1}, "ID" -> 9003256909179662445|>], 
           MachineLearning`MLProcessor[
           "FromVector", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>,
              "Version" -> {13.2, 1}, "ID" -> 5068397814240598494|>], 
           MachineLearning`MLProcessor[
           "FirstValues", <|
            "Info" -> <|"Type" -> "Numerical", "Weight" -> 1|>, "Key" -> "f1",
              "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
             "Missing" -> "Allowed"|>]}, "Invertibility" -> "Perfect", 
         "StructurePreserving" -> False, "Missing" -> "Allowed"|>], 
      "ProbabilityPostprocessor" -> Identity, 
      "InverseProcessorFunction" -> (8.396926503340762 + 
       3.100408284980153 #& ), 
      "ProcessorFunction" -> (-2.708329268767424 + 0.32253816532631324` #& ), 
      "Name" -> "value", 
      "Quantiles" -> {-1.8890823288385883`, 1.6007806199921208`}, "Mean" -> 
      8.396926503340758|>, "LabelSplitter" -> 
    MachineLearning`MLProcessor[
     "FeatureLabelSplit", <|
      "Processor" -> MachineLearning`MLProcessor["ListSplit"], 
       "PreferLabeled" -> True, "KeepLabelsFormat" -> False|>], 
    "RecalibrationFunction" -> None, "ImputationStrategy" -> Automatic, 
    "Prior" -> Automatic, "Utility" -> (DiracDelta[#2 - #]& ), "Threshold" -> 
    0, "PerformanceGoal" -> Automatic, "BatchProcessing" -> Automatic, 
    "Model" -> <|
     "NeighborsFunction" -> 
      MachineLearning`PackageScope`NeighborsFunction[
       "BruteForce", {CompressedData["
1:eJwUmnc01f8fx+34yipZZVZmaGrRq4yQIkkhM1IZJSUiI0UqksxSikQ2ZSTy
vkIS2Xvefd1h7/37/P5wzuXcP+7ndZ/j8TyH/NXbF65xsLGxqWA/zdgL7Yqi
5fidg+i8Ku+7O9+XUJtlp8iM/STKzFI6+eLNOLLxGlHCN3Yg12NTn4dTyVDf
H69z32oEuHn+xf4LwiOl7exuW6/RgeWtMGrHYMEB495Rj0oKuIlfv3lmiQmP
2Dn29/mxkFl989SmdDo0E98NHPzJBK+NXXvJcThQddzmpBhJBVONnaKudZPI
Zpb5nmnPBJnsuZN6TQSY/Y+inVpFQYTvIEH/w0JdyvrfaTMs+HuIXrDFnxsX
FBn9eCxsCRnLGHrVVbFAo/vMQz8mHjiOeTi6W+FhlM9KLk58AEwsHcoOPaYh
+6Ali/FfdUAjV5TLL/XAziu0j5/9B0Dmw+t3WjEMOHXJIHD7qSZUOsgeLzHb
hXTyBHO8QvCQd05zdenwCAiarFFyFWmI/dE0F8OABsz1MWlOYyIqqz01lcjT
CoZdVy5FX5tFh4ZUytsaF1D4hEvXoUUa2LoXotCXBCg5cSc9I3QJObdNfjzR
ywTVPw7E20YMiK6h6ec6MlCqnd7bqct00Bk2jO+6MoF+frhghrIpEKK3Ve5e
PR666wq1VE7QoPJp9L+faByNRs5dHC9jAoey6ptdDmPwrjHBd/uPUVg6Itmd
tIUJZB9zSh47HT2S2ac4MEcGKbOWzbe3sAB/ZvJNqPUqUvivZ07iJx1qb55X
uHV6Hn0zbnFmcpPg0Yl3387nc+K8wqWW2lOZYGDbta1QYxYNt9w+UpjPgLqD
N908n3fCSnP2jrRzTOhQvbZX8/YUkhU5k2SoxEAJPbncoW/xqG9xNkLdmQzK
jdGb8M7FIMS+oW9XzYKrk7OBaGwMDh59+3MK0x/9lNDS8/Ix1FoSeL6OhD3P
VI4ZPoyGHl03daHLsOD3pOg1Z9kZJGBsonA9ZhilPM6U9lSjQu2Ndlx4Ow20
zGnv7ernkMl2rrn+kGl0bWrxjkssE931rnq1oTaFKk/svPm6hR33Yl7j5EQO
BcpP72C5fMX0yberU7ObH3chljajtJsA1q/NJINUxoC6yzvjK40O5yhnL/zm
ocKZsYWuNr4GEKh5PdLwhwBRrTOSG8Nk0Ans2LEKI2hffNCud7Mk8AsjZ5+I
xKPMBtKHhOox0PAN1zw9RgTl4Ii3uxaJyLjY4m6b7DRqTEkOtchnQdVgcq9a
DjvOv9txf0naJDIVkyZWHx0F1cKSz6dvlyGTb0ZNNZ8G4MFRPhP6Xxr8Kg2W
q24bR0F2W96uLRBh32vR6EJNErBzGf1stuiF66MHphOURqEpVpX7JhLBiY2b
lVVLNKNY2vS20AtM4NvjAX8DaBB6+Uvf4jMaOrR4h8fUlwVvNUgGsg+bEGVB
upy6QoQ3xjtn9n0YQ0OisSIGXxcRfb4yQCeOCE5HNJ3d2YaAr+rmms7WcRTh
Mcu724oFITczWvcdJEHkBrvBzlIyGnUtMpdWZYBUjLmWS/EcmlGIN7p8cwji
izgOPZMYht25YkE1olS44ZYr9cBxFE0HAHlPJhmcE6gtYpIs2OA5f3U1hwVZ
Fg+axJ5QYb9m5Q33CQoyuPbOxz6TAh8l3RrOvKXCMZf0H9aNFFTp9PqeV/QQ
eC+xiR57OYYWyzxjay/gYcjkAe561yC6vO7ip3aGCmHPD5+YLZ1ENRkPJQc8
GCCZ6DwbQnmPOO2aJscXKPBr37EcmSwmIoQ1eFGeTKIea+/DhcZdyILb7VLl
BwZUVtpQz9T/RXeW1Krb3PFgkP9vq0kOGYQTHmhzz9BQRpGCXVfDJDpm1L6j
wZkFO1pGz/VQZtALOLP7uz8TIDgQLLZS0Ip67sffMa2I+8uB85UXSFDibpFx
+OoY5KqH14z++wZlrq+PtftPoz7bhqhhh1H0+87V/DJOKlI4Lnz40atO1GIV
9ys1iQbZuuZ/7DA/jpDI6vGRw+j7wC1Rk1dUGKn173bTYkLK2prE53UWjK0g
uVB5JtyqaXrKUdINqudUVK13saCCr8Pr7hoRzo88/Dz5uBN5fzy448PZUWBj
WkRqC3Wh/Yyv4WT+MXBtCdx4FvAbhq5J3uBxHkMba8m3bLD7XIv49qR3gQQQ
WRi+5UQzamk3e919YwJtj18Zbb4yDmLvXGVSPjfCBVH2xXeHuuCdeDf/D2tM
30+Mv8asM5CfxpEdtnOt8KbteUb4LAXkzTnKl/eMQJ+McPNXHgY0qHEEzJM6
0FHctjaD063ocshD1fov49BjarzRTBgCkeEmFN9MQLId3FqV+lgvOJ/JTpwZ
RWLtsfqh3r0w+NUrWmP3JOIydLd2/jqJVGeeWv+5PQpXrSY0t5cSIfEdb00e
/xTKilghVsoSQY+g84hkTIcoo0SefcZk9GHu1uPoIBpMnNkv/+xEF9okf/x8
SgIVDm270G5+igQ9VmypXh/o8JLvYOTdWBoScFrVNJShwHPj0tvGZ+ggq/Jf
Mq0Zu/9nuRGRdgoUGeEX01kz6MCJNI8D15kwaMGpsszLArPiHVK3t88iOWXx
sw8XGPBuYVzUZ24G5SRd2pkkTIJATQERy1fcuJmKF6EPOxlg8XvVSrWDirJK
+Xm/X8B0TJD3jZOjQn8vT3s1PxOuLN7+q/BoClUnX8dLKUwgV/Vd9ju/jiD8
zTTzhUIqnPUTMIInFUjqyks+Qyy/pf79LMBdwHLZ9RapbroJ4dRkRw9fnEHz
MxePp2uxoORx155PPFMoXOfOwBEFGpzrfbLb12IGZXRFTKo8ICC+LXfpLhYU
EPj2K/awLxUC9m3WPas0h8Yv8325Sp5EBQkOYmMnppC7hgFv9ttxlJeOfyoy
2oUyytZaHfVJkB1m5NpEYIK9Zc6KN28j0qxWm8gABkgsb7l5jYMGVtKVPy+b
MyDvpaq16SUmlA+ywr7eqYBdedoTNrU0oAlrer0NZYLmtTMpu0X64ObV2nKj
KTq8GtHRk5rEo+K+e8cHy2nwUaXs4c9bzZDPt8ft9bUaVBUUNlN1rxEJaW5t
NjQbA7Ve1tQ17ik0+KdUwnnTGNpzlNL5xZ0FW9fpMWovRsC6oyj8hHYraD8b
ZjuvRweq9MUHMlEMNP35zdbdbHiglLa+KBEeAo7qS9pf2bF85v1MZetnwpZA
m47aVh5co8HdfQ4VTegm6+jtvAoK6DG/Dl2KZ0DM6g/cZg4m+t51SPD9GRJs
alCKfM6koss6tyyfF+HhqYbzq9dNdJT2gTZZfX4SfY/6Qb0q2gX6ya/nSzBO
ynjhIv3s6QLa9L7WXmGYAMURCzNvaCSYtFHjFVFmobmLhTNhZ7Ccj2GYpJzo
QWbX/BRETSnQO7vsEX2YDutfWpspJkwQ7Zkx+5HPQJ+d+OU2bSaD76qGVH/I
GGRxOr67L0oBn5Y5Iv8HJmhH2FDucTHRaEZgT9ENJvxSXL9xn84EiWuNl84c
nUJ5rub8JMIY7P/w97r6xCbcmbKhbXefY/0x1ZwuWbGGAq5uO3hZlAXOLQF+
I/6zyDssZSi7hQHO1otyiZ0E8HK6evxhLRPcuYr83n6eQjt/Zg4e7J1FQX8n
czb+tALvC6IxKWwMPmv93GnQ0gUUy7L+I7fpwLHLJqeoggRnukAwrWoK7W2k
ebuMTiLrw3n7fdhoQNdc2RZMnETPiPW2sm5kuKO7y/2Q1QzKuuD0PnaNhsrY
/2yrSMXulvkpjBg1Ch2fLdQ3jWAZM3koUJI0hRQ/vNq9ODeOAsXLI14aTSO3
XQ3KnOJ0FB/5Jc7nORXcJkpXUjE/vZIva7XcSkKR+zfCT3cw4GOB1hubU2MQ
G1K0JdWVAaae56gFTSy4k81FCm96A64r1MptfWPgGDuQxxtCBHmiEk0wsAep
5M3iF4NZwE/CTWwMT6KPtE/qd6JZ8MMnWk03vwU2+Gvv2WozkNvZU3zELCrq
6fEP/WBIheLjPmm3BrlxRf3Ee+1WkyhcOOTyIcw3WedYjqU3/kKC058Wvot4
GOC4aP4orQ9ihGd6velj6E2GQbz2IglI7HYxodb9QE8XR6/eDgPQ+gw2GZKB
p/ze9wWbNlQVcnxWnd4EkjeS1o48HoXSxq3flzQZkKKXJPgOR0Wc/NcZrmwT
QM61fuq+m4R0xs+qOcaPwHW7u6sjpD50scQ8zrVtAaXfPnU8e5wF7qRM0p9W
MrxeObRjmbGK4rQ9zv17wQTfUlbdpB4D5FMi/Fc4GEif1/n9XjEmCN1z/Jz9
bR7F1KFsNUsabC1+53iCnwUS/ucbLfeQwZVL49t3k2F0VH/oSJMF1sPue3tS
TrBAk2R8Q3P/GBwK4xwrth6He7d9JX6/7kZTjPZTVQwG7H6pFPge45ZdC8JP
annn0CvFun7cQwZ8e0NQsV0aQK75jLXPBwhgZRJzfs+deSTmw4g7cJwJ34+c
ytIcXkAG56v3ymGf98Xx83PtBzpgYe/bqT1dDMxXSuU7fvaiM1wDOnNBU0i1
tGD85PducClDTgtYvmxaH+zLbcRD+MmafcStDPCmc12LfzgGJvEOD6RZeOTP
YjO6LDKBQr87Tb0KYQKVT8OSTJxFzZfTpcfaGXAv6aDSTFsv6vIt/NwYsoge
amyOEy1lweY4kkOF+BhcaZcpsSGzkI7BNJ+p4wxK/yFxd/zwDOodD/75/uME
Qv+0jw2PEdDehLnEXRgfqjwuWwyaZcDQUZ30gEtU9GZE7UjSHiaE8b2tkU9h
QRpPmdrPTBJ8SueOKvpMB6VbV8XG1xkQYTL2NstlCO4qlIQP8WDvf6GeqxRF
h2CnsmuPWxrgn15mpKAHDc4MPDm6nzWGhndsEvzeiOUA37xom+5vOGecs++x
Hg0NSRkFvvQdRifL/23aivHCj2hxs0t8c6hgV81SYNkUSrT1jLx1lApcqWkO
A2N9ME0/SJO++APwt1sHinZTQY5X/Easzyz647auQWDiYFA73nHhxD8gzEXc
vlpYA88M0/+27SOBfiCBczJyBAUr/DI83ZoL8/Gmr45U0cEnN7gu8AgZ0FI1
x7z8HDpSrlVrgCYQz8OA53xPWSDipphzgN6E3HbPPkzvqYQt7iEus2ETqORF
sFcwxyxaDN7bUvuABDgzXc+PeDx4pKaX5cyNot1PyvT525nwe45N+9Y4AzTX
BTdv30JC4+ZPFT3VBiExmsspsq8XiXUXjw6Ht4BT7vU+l7cEKIzUR2FGg0Bb
mZJlFyOjlRXL5BBRLC/pcdve6hCA45DsuR/p2L0/b574d5QFl1gVPpRUMgri
jWSV0zFdP+wQPqzFAINL2mnbhcmIP3na5xWmM8LBLg/d95w4t6kTXAtpWJ/Y
Jh+zO9CCbtS0CExIMWH/Q/1u/LZ+FLDwEEgeo6gxsq74Lo0JxKMvv9i+qoSK
rZtPanyjQP2Du3pnkhaQxHkOSaFzNMR/P/hJBaMUsuBxNYnEAsHyJLEv9sWw
9n6HnDyWE/3yT5ZzMb5L+iN6py+LBt6v8KkRWI4ZH8D1F2oywVz2xEGv93Po
p7RZ5ksJbNc7C1WMvx9D3V+erV+5RAWr2mMUWQUKjN80+8k4NIvi98qtc+wd
RxsOP/a9lvmLmgnu11pzy2Fe4sB1GRwLDpv4qL6sG4PqN+WOrvIDqNgx1Sjg
zDJ61poW16k9jpizRgpOxpPISHfIIuhFLxKdzTdlYP1Iql+pEc6jA63svcHG
zxW0dq/K36sKD5FBRzv3NTBhzHe9nIjxmmGBkJUmjQh+ou6Z36SrMT6VMosY
p0N9qF3//u2jIIekKbC5A+bfCLWV/cE+T8i2Px5RLHRqd+2qjSIL7pvWRgRx
vUcnfnFcc1aeRO7xhbWZyj2osKnL6ASLDitOA66SAjy4jLtOsqvCU8gmhHhE
g4MKy1KEqrNO/aAS1bL3emIVmCf1JeTr4oFTtPWbCGsWbVYoHnzZSQS38a9r
Az+JcGTt/eaS71XQs5ZgO/OWCHF21C0uU7w4u0DpGWP+IaiXLm90x3p/sx64
0E4x4JJYnLqPFQMR0mvu1nyjgrZJaIJC3Agilxu9aGjGwzfcQrbkrt/IYt17
f6fLEupXI2TYPRqFqvKG655fe+DjQt+OzdGT6LX7qShxjA/UAkSFgz71g7LC
5DMNdyLyv+3Xc7KTBi5fHj89FLkFt62d8K99jgLst7c/NTMhQUR9co1Y5SgY
W17ml2efQjK4rpOvLzMA2d/Q8iulAfmmCO0XA+uNG0nbfS+xIIf0/UP+Oh1J
K+/MVJPB9o43vqUf2znup4qC/57eQBemFrf+OYX1qVtCDV9iL9pyv05WQ7UL
wt7Ku4Va8uA2DZm2HlcbA63JvraPhrNocOg44TiJDkunjSP+DRIh3eiIcvcN
GtzjLX3f3D+DjvBZV/K4rCArVlnEYlgnYuGb7vTlMuDApnP3n3qmAl/K0Mx1
zH9HKOOf9unQQHbVOMqtcQwlbU5aeLQ8ja44wtCHbeOgCF+qO45OII0YJfOB
TSTQ0dZzGUgmIx2ZxKXjfTS0f/6M1wLnKKxbrcmc/DkGwzIpGl4a/1CJvpSA
1+oiUuK8IJiN9f+tJd+t/aNz6NLQa+TZQEUttgHKZasE8Llpofu+kg4dPiah
2k0ENDU9SZ7ZyoSeMzPrn5QZoNHpU4dCsDy4XFjeWj4GuC1WD2UUumA46XLP
gS46tCqJ6fwnMQY/47tserNq0PVZpcn8Ahb02lfh7x+nosUOKuvl7zEoDJmW
6mTvAE73yv8qXo6g5+sDJRGcU8iw+cVRBW4q3PqjNSP9cxLd0Pb5zb55AhXu
EFRmbcN6W+YTf2pGEVSPc1uwH+2GGKEgnn136EBx9M/5iXHJ7iS7ilUqBaJo
ey/39lMhOmvyRNP+QYjdm1t0YpQOV0ScLR/0zKN3uvM2wo+/QmlE8NB2TTys
VHJU3iXS4BHb8nnpe2R09jGP28BFGhSY7fNiryejc6KRiQ/m8RCHe+Fo9psD
R7deTH6bw0IuHFKRT0qoEHTiS9bh2B5IiRKK9uiZQLN6o0xuHTxknUm6HVww
Ck+LkFshBx6xwurTL/ZQ4ZvwsqiMwySquJKteNWyC1KvC4zaeBNhp85be71U
Omz/7vEk34GOFF9xqYstMcGqQeoQG50OT3EOnxxuk8DiQICSjQcT3lgoNj8Z
WkRXqauXbt/B+ILnwoTfYRYkhm1I7pAcRcdvUo+Q7Rigoi2ad4sgght9sAAr
30ZAtJuQ8JJTDEdvl782EcEC3bDXDz89X0WkuCMdK4V94Cyn5Dt5mwJGN+yf
R03SwT1DIDA8bQUJmBqVPTy8hNrv/e682NeNqro1L/Mdp0LjiTOvb4b1AfcY
IaZhgAmdB2yFDipS4fqPsV19jGF06/rdXYGN4+jg1tc6eupU2Db/ZsJmkoKm
BfzqNAxH4V63//Ht24bQDlvLa4Rno6iz4sYdqRUaejOwwLz+mB2Hu3SkKT5p
EUXs7No8Vb2A7F+6Ry/t7QUx89zrTBEiKHleONUlNgLFu5N4N23Eof6Zn1MW
AnRoj5e83ifLhBRXo5j71mSQeBXGvzOGDgPCqxq7MU54P7JXwCEL2zVsH0/S
XejweF2S9/gNHLpimWz1qo0Ckqvs0frXu1GUgzNNVWQUWjuD9+xDg8BM2/o3
csssSk3DC0a09aNZZ5X+zSF0IPpPbXJwoCJ9nuI2jTNsuDP3Y97E/aDDTEdp
5+Aglr/lUdMTFf1gKnhWZtCoG3KObaldEyKh1zv3VJq5l8FZn2NBTtJdQP4+
kyKc2gGh5vnI/zMNrtPLOWaih8A1d+e9tHki4sk+5GaVgYdbzQ5FTFM82M58
jiyeoCKiy1Wzu4YU+OV9f512tQBGwqW/9XnUgKaQeikZN4o03WG7nuIGypOf
tM1zo8KOc9zzb+Yxfwx93M9fzYGLEzwgJjuL5eiB1zf+w/hW6GayEelAFyps
/d0pemsUVH91BCqz9aEDduI8qxQSSEScLbE+MAwjluGK6xQKfC55IXwvaRi1
99jb15XR4WOU0D7t7Qw4URU5GZxDAZHxIQ9N/CiUlYft2jTUgbZwhu8XbyUB
X040bqID48NGZfxhdXbc+xfvnK8/pEFwXYSmUi7WK6kHVysuE0BCePXsP6VZ
ZBNktGB4D9vVfx4pm4uuoVsEm4Cfuxggdzin8knaP8hkdCfv4mSAF2/ByYx/
IyioX1f2W18XOq9OaagrZSAVtsOmj1MJEKOZtIcj7jv6ceDgdNc7JuCMbXBD
8kw42O3036lTTHSVOfwpK2sCSRg55OycooOCX8TFe1VMpBVsMv/4IR3OtJ5u
2uw2h2zc2diUP2F9+TlYqECfCOr8fF/+rZPBh3OzlrTrOnrDEzbfobSINKn+
ls71k+i+b5GGZMES2n9Cb/CZ4CSqX+cR2jZFAq/8gR/3/zBg3fRW8YjqNtyH
KY0/j7TwYD1umstfzISX69uJE/F02OLy8++eMQr8MHxju/NXDGox19v2iI6H
A57sxJhdJNgq1SGyaZGF0t/n7f2kQgSX8Gm/X7mFaPtLR66RCAbY/Dn+sPjs
CBy2PfIu/L8p1CahSXe91IlEJ3IfCAszINdNoMQuZRU1zjkIPQyeQ+WVdiFl
ItheTNPzTkANKCoqtfhPSxu8DzrrzGtHgZBPXzx6WqZQbimVzTJ2BJLzDgr7
buChu0HKbG95M5h5yzfW69EAV1e3gUsWxm0L/q2aJIj5hqlA/ZSP5UvXzUPX
jKjA8lE8VbdzANW/klL4Is6AynNRioKX+mCodSWjfREP5y++EFelkJCbMrVk
jraBrrq//FZjjod4L/35bTHdoKiW+X538Cx6kR/OvW2eDtyKTE/xQiKUVbFt
X+ZoRwKMAAmpIApohAVVXA+aRb8u+7lPvuiDwmeuFpvf9EHV2/dbr50kg1tV
2Fe5WApSqg37IChDhmXlC2onFRgw7PjzmV8THWK++lkF7SaDV87RwFfJOKSg
ucGm0UaEvyJvz4d7EkEwTKWx6jIZ8Zpt+cpYHARnZrzmq5Fu9D5Ql7o3ZBA0
2B78vczxHRzsOgevaVPA+ajvNsaLJRT+Mn8eV0KHVbykdcLZX+jYGz/YIUiG
98TTvpxsdWA2V1UWpDGNds5c4f5UREItqt66yjgqWD8KMrZI6kVvrhe80VnG
Q7p395dwIRJ4TpQ0aJybRUlPtheWv19Cngcvy/PYMIDhmZR/4Te288TCojXE
R8H7vFzhzFQX0sd5Zh0O74fVii+Zy7V4sEw9OsGLce0vaa73se31aPVFW4to
8yrqbLT+MIxq0b8XG+2XLaaRamdZZ8tqL3j+0N04m0sBX36JtxQjBhSkfald
M/oNSpeGNLNeUmDObEl+2xs6PGFGzrhiOzz0NX/Iq090MHFuzxwW/AtJETOp
tscxLhJeVpi4RADLpiinTlMqqs3s9tl6gwKinzU5Xws1AUOyPlf+K7a/Dxil
cT7/BpZ7JdhYWQso3zZ+TvrtCDqTbcz3MYoA+/f13bntOAQzg5axsqrYfY76
3vKoZcIXLtlOn4tFULzcbPENNYK1rOS8334aeKzfvZheQUbuz/zts9frwew9
k5rdToK94ym+nWM9IH+HOSxyjQZefxq6/Ja7wLiaxKXRNowkTC+clhhlQv6p
WDUVrWHYL9czzzuTBH8d1VlHMR0aPDf4yd5Rgy4f9j3zs7kZprgvhjtjuaYd
fMj8ztA8Mpn6ab/hSQXh7PeFp/TwcGkjI87j8CLiKQ7begDzUU22L3XaFOst
t3KzyrlcZL+t56kLLxWMClh8Wjn1sLukTsnyNxn8fv1ev6FFgA9T4pzOl0dB
SDgxXv4gpjtxnu9soWQw+2RLDHChwZPnnYUL3+iQJXLjYO0BCiy92V4ZjN2Z
0r3TsFieAfu73F6KrY3CJp+l3o0bLBTK5cJ6hfHH0LtzyU6bh5F6xamIyCMY
N33aFxODm0Zab/S4eG3pkBgwPax5eQYJzXcuvtamg+SlG6axNBJEf9ji8PUt
HSoMb67MaA2hAry+mgN5BpmwmaYnKY+hiAuqXPlCZBDI1eA0XW9BVKVoJIXp
znpsvw3X8ChIPKq4E+pHRLc/4tSihFeQLcvhmVUbHQy157wDLk4gc3xW+Mtm
Mvhn/vw9HTOHVDYyz+bNpYJn2f21tW1E4FBND0tTJ0Ne+dDuTd/XkeJq0TF3
0UVknuPq5lE9g+LXnq9cOYL9fitxqw2xB4Tb/T9eqcZ8pPuphF7HAJz55URL
9z4IOHWo/JUIHeOxB1pP8WRwkYlSgJVR+POVg0rQp0OgxQxJxf0XCua9xhns
SAN3hydZxdl0UGmeXr+m3QQ5fBcLek6MwkHXWEfR5BpQ7UxWCnSmgKpjj2G6
Gw6ei2f4ZdzsR3LSTzWH8X1AVNWnSGBc0RWQpDXyZRJFfFk1Z6tkojtjpped
H9GB8ST7h6ZtD/y48fTk0PIvMFJiE0r8QQPXxxct7ocw0ci/76cbfvZCVKj2
saGoXviM+7Z63W8IUs7fyWSvo0NBcP/YOS4e3FpjbI9bwDCyPKKmwqNPgihx
XxFHQwZ8aDl8rSvkD2JujT3/vpAAjent+2QPt0NR4U8+97Q+0Au2nk779gdd
X/Vc87o9i0xCBD66LrZCpLJMjdynYVgr3qV7krqBNgm8eun6GQ+bRRwn9BNJ
cDyw/5RuWzvyDrW0VcF09vksbdVx92/g3sFGj50jQozwfkZNBwVuxhxjxfPS
4chYiY6iDhkZ4mUl3KlEOIEeuphMMSBTUzUgqYsE5vL16vKbmaBp27bl6K8u
FMF2bpAjgQHR5KOlK+xY3lhVd4tvZSE9vZLnSUEskCfzvou5K4hL9HN7Kb6K
B3aC1eOc3lVEy6ls1cT6f8ecc/ba+CraK55Y9/QsA3irNQTUsLvleH2o8v1F
B+Vif4vtA8Po46D1obyQecRjUuAf9qsQcMvxau8NGLCz5bKz0UodvO0jPQi+
Pwof/sQNcvATgK+hzDEej+nsvdapmMcLaFUg9IB1MAXC8aWmuD1TSE7UZvXU
f0Q4XFMgszV8Dt14eDr0r0ETuuuy7d05EwJcOphws9mKCnsP9I3bPsajr+cI
2jpGy6go6eAxGTSHKhrmbkjaryDz6nfP/VzLUc70WO5pKhm2yMe3B2xiwA1T
kx+R6kXgv+WYHq2RAexsdyVtMK54cUzo9MU/dHAlLy6JLDIglCvuVc0jHCq7
b0zL2DkGY/gvx2rJBPA1Ke27UUdD/HjuwWPY7poLem5cPUVE3Df+K95rzoB7
+O+HVF3+wchzRc60l3OoVfRig2lKCWJ/WxXP0ibDttbZOw7ZU+hdiJ11Q9wC
0hBNXN9CpINtacexQscANOGvvznTqRe2P3g4YeveDdMX9l3w8qai1tstvHIh
BLjxIqnuFLTD8ktnqtDXLjBws8LvxnIjijI7HyM2BNFeIXi9o5EQYOSnO0Ch
QfjuyIp4Mh02uKwthQRxaE2uIaFKlwVWY1ozR8VTweOea4S2cA9sT//xc29B
G6TVP5Kt52DDeTz7rS2azAB1vU/ftz/Hvrc6ez6OnVy4craBtL0fGNA/r7+1
I5oOUrhph6t3OtBuXa2jlUGj0M9OrbmZTEX9jfXsnz5ToF6K/fbp3XSY9Xqx
/0L8EOR7+ELGWhkKuiGZfDedAZpppNqK+1R4/eYWtZKbARPvr5pF4Jlw8+BF
BZlmHAR7WGruGaeBiE2WvrEaDbRQ5XL25BJ6s8L2Rd+LDoq9+hK0pjbgtw50
rL7fC+TPsiqHPafRFo6WPCknBrARloSHt22gl/zKHy9M0+GSxKJmJbMB7n2t
9ZLB00HgM424/F8HGDyei1IiLaISwfjLcrv/Qub+4yWE/FE45rMzn1TSDxEc
Jd+5f41C1zk6sY3JgGM6If/utY4jg/o3e5XdZ9C5Pa77n1swIPJJjHSY3QQa
alt7Kn13FC6sGtYc6atHXk/uPX/2dBrtiLfP2PcA65VJEl/aFwZkrYmejTy6
gPYTBTddEF9FHYHhDuH9K2j2uIs1+TOmDx9/I7F3ceAUavX5ZwQF7oeYvJ5d
pUNG7O+ve4ar0QkLT0bENwYYBF+JOIBxhOLrtjmNDyRot+DMGHHDcgN+LGZq
MyCjt6Gn9nYHRAubiz3OoEP/k/arlc6jcMLg5a5z7U/Qn437P01iKbBmWZ99
/R8ZTQ0z2qfMGDCzEbq48KEInjTHu63FzqD5Vh/P1tVsaK5U4BFAZFjLEq4+
3EBBV6u/PHBWm0HLa9H56/kkkFnzL4tM7oLlmZZTQ6wc9OH5+Yu3MJ2e23bn
RfTGPKr0nvjxhVKOhFanbpgvVIPNygHJ5Ns5YK2wbHyXnQjnpJ6ZJnq2gtQ+
O/6XM38QcPRxKp2mwyn3mcf5mzG+Ytuxv3XPGhrI2j+7cJ+MLJKthB/wMMGr
wuSSdUofzFa9+Rr34xG6Hfd4KWxtFPmwOAaqX60grYZm47I8AqiGD2z3EhgA
3hkDUEgloBjZ1raqcWxP6ZjrhV1lgF/JsR/Nce3odsT309Q9fXBGefr40upp
SEn7pLtt7C9Uh+bv3E3Cw/b6b7ePD/XA2ll/l/VLQygtbMdKD8bzhUsf4/Lu
jECsbZrdat4oFJjJZW7uHQUTrt166f/S0CfpIN6UtlGQ+naMMzkG466I3q2y
vCPIrCqwZuortsMPJOrGDPPjzF+/a4v264RR6XxPhsYAvJdX075TNArdQb5+
OP4O+NLx0d7w6wzK3Bj35D6IPT+vofGU7BvoPxkiZXCYBG9MxjKSTRjo1YLL
2bIJAnLVvGnAdqMWDQWOPUzE9uEnYa6nVS6YPmtdP7YlYnyyFjFw+BENmqLk
0ugbZDjtewvkCHOo96H8M5zyKMxawObRwHX0vc+w0g4YkNDd5+wdO44UDC5X
nLxOhoTEtXZeOxL0zVqU5evNI4fb/SOKg+PI/IHuqcNFw2DP08inLPgHOdnk
zYtg/uxhwfD333T4rj4rk3iOjsSZCtqCeey4vyd+b+JsnEZSOhE6DKMllOlP
OPxodzeItl/32YrtjuuqFp+QCh3qfS8WL7fNIv/SwdrJMwToKFl2YGvBeIFf
jPVfPx30m7LN/G8T4b/Z4JZHC8Vo76fTPP4Yj5zs28PkxXg3r3qvdrUhArPD
FeII6zX5vGUZ29UWlM0uQpzA8iHecvTKddNfiJj/1zBbbQkdTWr+w0xtguIJ
/soTmTQYNkPFepXL6D+h21fD986g+jFy8d44EtBfOFKDRFpBoF/92fBIFfpw
3vXdvMMg7JW1k773FuurfXdIOuV4uJaa7juHceQmHzsNPdt0sI/6Sv/iTABN
lZnDJb0rqFOInSvIoQPk9nz4NVhBgo61NE3hVjq8vhvg6lVBQlc5Hqnb1JHA
yjChrHCyExbP5ieFL2F5FVz9vm0cD58F4vo+q7PhfiVuXTy1hQaq6nfiOMJa
gf3suBnTcgG1+cm0G6dgOekWUPppfgjK52YMjm9qR7KOR7d7FFAh2XOpTgcJ
4Y785s7l/UiCJc1L535UESAxXsEup5kKzcLaLcsONISLehOzPkIHZjR31Rqm
my/BoUpuUmRoSlB938XAfNuqIdyq2InEnkk6clynQ8/zDhv8IB2SSW2n9CQ5
ccdlJyKGXjNg8TVnIkdaD1hSTu8y120BQcKwbO7WJTRHO05TYmOCS4X38cqC
VVSyJnVOAOOzTtle+zsEPGzccrAV2EcBRja5hr+QhbZQtntpC7HjbqlURW3q
I6L3r7uSxrQwXTRpPhfYXI2+4GTb3zrT4ZNxgcGFWDJ477HjvcNYQB9+O67g
VpdRqFGpGTxgwvc9a+8emY0iiaN1jWqpBEioilnhP/AD4S6asnIUEfpC+RV0
b4ECnt+tJCaiGJAecCSSHkVErgcYT5y2suOiP4xY3qGRkdEVl70pk+uo41F7
YoZ9K5KvKC7mO4iHfwbXqTMpo0BZ+9Dgrobgp0HD4o4xBtiXUds9GKMgFueS
pob50t3JMy0migm6eYJS6TW/gFOpR2K+iw6+L9s/x2N3EeAP8/pH70L7tw+F
dq3R4fzFz6u7d1SgIcEuUrQuA+44ru+yb/wNBamMLwcbWGj5TtnF6EdEpJ8X
uvuxBwmuuewxF1UgIgE2Zwe+fxPoe7a7R9QeBmwOtBBKHvuKDhfmXxWL+gNG
S1znOiSwHkxMedC3j4oOPwir9ponAQe/XJOgAhlMDu71+2PRAVqynvtPlFDh
2ZE0ObRnAs2KbzJ8sNSIDiI510sv8HDRpzGAy54GDIG7zgVCfegWz+Cxv31k
2CmWOnxEKQPZDUgIX+HrB97NDTHFofMooMKwyjV5HE0qNPj6m5Bh0971KolT
7dCxVcfmQd0s2qFVq6tBGQaB9M/L+iQa+GQlXvUfeIRMk9b6S/UowNw1JGZ2
oB/VGg9E3XrdDBMvr+q0eY7A89b8rwX/aLBbv+BMxKtetNruzJEiyQAvbfJB
AezvTjUJ/DfHCXA3cejNj1o68N3vm6mTXUDX9Vt8DZbpkHlITVVQkQG5Ez4i
UT4kZM4yuCTUMQo/L9iX3Z0Sxp3zk7qZH9wL1r+i9eekRHEqXwbq5viZIJtr
cvzQTw7c9h1xTm7LA8AW+2dP2DIJSnfxfwkwHAX5zyprSzxk9GTg/rhsxTqy
MWLhzQ7SEKMu3FWXjQzKv1p4rLlb4Z3LAzHVuwz4LhnrHb9KhNyAmht1v0dR
zlTK3+i980j36TfpPGwfBJkei5jV7EKpafG+L8MokN2/3fySRD26F48/9733
A4oXsim+IzqNXqm5ZyZyb8J98tLmWEtnxwmICuR2lLDj8gu6N30JmYUTjCO8
ld+6IVr1T7OB2gDY+XQrRmE5mzIU661XRYbZZokQ828U4LVp/nemHg856hWK
z85hu/Z34+GjHeso59GmMF5rCrg23k7gJpOgNqW4uSCTiHyf+ytHCBEhNuuG
YoDDEAj+3CT6z4kIRw+E1nR4/4VA7z+RUs820KLe9+DMlC7IW5adr5omQX69
3YUYeRpasvKRu7KPC9cUrD90yZAC9o1MeU7BWrBvVot7L/4LvJlk43cnW0Dj
67gXu9wA+jjEE+zRGQApRTu08efqIEj13FZlnQTQ4REvTZwlQKpVVfwPtnlw
kn1llVk6hrQimaWmUQMQqN262mE2CPp21hptqllI7qhtyQtVjAP+eD5NqRkH
J74QO/a+DDSzvEmSp64ErPFMGacvnLgv+c161bwjoH+yxzDmUCPsMPgnubab
B8dUsXWv2UWCk6ty7TJFFOihybmvpXWDu/edwut5RBiI++/R+Pl2sCErGXeK
D0BHRvblxEtd0GrPV7fzPh7OeGhuUigdBFX+3iv7xsngN/KOX6eICNyUcLEO
Kzxw35NzHOUlQUL0Fe9sjhEo0g2LOnmAAEduHRDOcCbB6stnCTNRnLiHn/e3
JmH9cnW8eSGhAQdmWW+r9Nw7YdB852+LLSS0/wSnTiLW7wGGPxzvVXLiPtn/
zf/pQIVxb5+o3rJSSLzAKpL0oMCPVb3YJJseUN/1PkXxfisEZT6v3VMyjfgM
PeiKR4bg9q5NKVby3YjztvRTL0SFhxuVw3iMI1/Lfm09lTiPDhC727VOTyCL
D/peX0zJELsN4hW3TCKSWinRu50E5Yc0q3f8XkDHy4Wmz/rNQJSaWPG46xA4
DK3Fq9vjIaXJff2/Si7cwrDmsdidbDjvN/HmJ97OIavU0ReokAPnJ3mDdFKx
DRl2fO+SyeiHmtUTuNSPFAiy9fn06p4wbsdhN/uWqSGQMdw488ySCmz36PPp
qmS4mHbnyfkCAngqX6bkU/rRIqhVcbKNQOC1Y0HnLYfBMtn3+kT2AtbX+l8t
l0fA6tx/k/986PAraW7f8wzMF/Tm1rDuZkguzDKQ/m8VJYn4UX60kkCn1uNw
tD62T7c8/VGyeRZd977oF3xsBUmtbA29GTACagK3zh85OYC+Tpzt0ZZJRd2G
rM6GhmFQDd757lj7HMpsbTrHI9MBj+OJntoV7YAP+rk6IFKKPi7cMChSIcHW
F0ric8o8uBvHOK5a55CRsLakn/tvCuTespSt6yTB3+npQw2sj5Cr5kQUkKcA
ay3rbvKDGdCgmjwuUmkDF8n3N3SaGBBzi7ZxlZ8LdwGqcwpJPRBZRb78t6Me
doTEKLyzWUU7rdQkSk+QwTCZ4+DRm3jY+sXAIM/4HyzF9tYbBg6DP7v7SVmZ
EcSbcEUnkPAPvtSW2xwK6IDrSsbtAvUDALmnax9vHkH4d9Z7UovwEPqNbwub
DxlCnhysbT5NgpzsI1VnBEbgpanHJTvMJ/yHEo0eZI5APp+eSFpSP/Ad58qR
LSShe++EKpb6uyF2s7bHxH+jYP9OKHhndR283vgBavXNkJXiWfcfljPahwe4
/AkcuFwd5g5NLwp4bxZc0fL9hdx8JMfP3hqGX1sjHv3//7tEnc71iNnNop6s
E24ZhpOIYHd4zX4bCXrdGwhZ94iorvOKwMZ9LBee4EPfcA+BpFa5jTqWU0sf
1c0rBzhwT6pOdd3C7nq6X/jVhOVHOCFvOy+B6WhDx6u6RzYdnIkXLT5xzkGP
qUm6xtQgsKWJKpZokcBTwvhD+UkyGhf2xF1K5cblM43XI5XJwG7I/UqQtYoc
tu10k9mYh9TJU1qe5sNgamztqIHtw4bRDKGCwUl4H2Q5sWUnCQY1iiiCL8kQ
rhQtkXyFBi82FRkurZNA8cg1zwC1GnSV0+3Ix+8UIBQ1bkvUHYT+W59L/JNm
0RnW5cZkIh70srodr+WwYOTj/CN7cwqY7is7d8kfoVClST7vdYzTnUZsmru7
YXojPGFsegh6pEjZZV/mYPNdLQGNKBKoyv+6t8iiwNWG4v+KqutRwrW/jw68
+4bwJl3iNDs8TEqZuEFkG9L0HN1K31IOd3N/ySyu9EE7KtRwVauC3Z53W6c1
iTC3VbRydXgW9nwrjCupoKH3sUaLxLdUAHPl/OO6/eB+QKdPJIsGQ8cbaAO+
FNCeM1Rd66TDLaWPIuWQhjKq1JfOtvSBeDvhY9fkKhpR2b/d9vcwrJ46fkWh
oQ3YiVdGnI3YcWybuHXtfg8B5QGntoo0FYrj2ItuXMT6/NAzPgIZD60HfSoP
KrKgPJp3/b/tg/CmeC38P70h+LrgKuqiSIRmp15htasNEPAr3f/WYwIUmn5+
rMskQkikxVtUSIKDpklackQCHApQaJMMKoLwdVnLxwEU+MzO+HnHhwS+uELl
CEOsD4me47fuUeBiZdsYSiuFt460ER2FNiCF1ZjZK5Si9Il3dVs7yLChtVlw
+NA6so023P14iQJzU9v141mDMHjFcV5RkAIhUgGX9BOH4PCSBVMoYx7F2+xJ
lAtcQE/DHynGH8D0mtLc3TvXi4JsgR9tx/rjgJA3zyUSMK8H0eSlphFd3N8l
ZYYDV73pcCsJ2zVOHyK+l/QzkDCnpB0fFx4urwn3fM+bR7I8BrdHI1jAhwbN
2lMGYU9IgK7Z8CBYMfnV7q1w4VhKzzoMndlx/P8pJ0WFzCPt7Q2uZ49w4Iyv
ZZ/33z0HmguPXrDS2yFaV/JfHoECjfucfN1OzMCl4yc9imbJcFvwVaOCHhF2
qYY94/9AhpR7dV48mB5F6inZ7GJEZD2EMxy8QAZc6DMbLuw5xNVxif3PcShc
Qf5HFpEEKfpcrvPxLIiI6X/ptTECe/YOOF3kKEZBW3cs7JFmoU7bs9Z5ndPw
M/eBTPZxEtz7qr34/FIacs4TUJs1pCL8rMRd7pdEmL27Sc5wRwZk+KjnT4yU
oVB/Mpn7HgG8w3Kt0sZYSHHvvsXlhFaYGtPOMndogYQyxd4J2z9w2tpfGHee
DH1Vz15Yqq8hhyfntClcTKTR5l2M0oehzmTX71dBmJ6rxFJz3tJg8bvhUkk6
1iMnM6Rlv06Co5VkYLAAgrgnGebsKlTwU5rctWUvtjvFDvi4dvwBxq7VlVjP
P3BQfZA4d40bl62isnE2cBACooWYDIwDBnecKV3XIMJixynfFC8SiKXFwF8j
FoRafMrIyO8DOw7xjjoTPHwJ36/2FuuNoGf6I7wpnUhe0ODqm0MEKLiys+Eq
pqeEJ/oHJrkJUJd91troEQUEz2fHFWD3PBZIuaq8RoXHr2J8nsaQ4OODgE7G
IAGRQqsEv96lggLDM7UX4/S3zgZzCvRO6Ks2whVGTqAH77Qyl9fJcCNrVlDk
Oyfu329pW4unFHALNT9n+7EelA8hP1ExrMc2Kywrb+uCfDvBB4+1ZtDK1eLb
rNIOJPIg8MQdBzJsU3Gv2spXi76/Wg9YXyHBWSVD7SxcL7h3bvDf6d9Ap9NP
Htlpz4aL5HlxZEfDCFRu5+qs6J1Crrd14qPXhsFQrICaje3hF92MgtFXZFhK
YX62jO+DnfLWJ4We4sH5rt15SgcdHWL9MoqT5sTpzsf6UZ3X0fjrv+INXhg/
7b2glv0K02e1+YH9lkNgbtVnsec2GSyOyW+NvjUFWa1cQmWKFGCPVAhk+0bF
dDEuF5SAcXDRtgUtZ0zH5msRE109yKPBVvTwmVH46NJz0v/4CNTmea5388yh
858fXO/D9rfuyOBV+k+s94yXmNmHyPDLRb+kfv438Gu9Fn4QwoZ7Qfhq6RHI
hLA4/usdonj4MDm2i1D2G4lnyYtdSmXDiTzUnXqrToENIzJfcVofUp9MSyqS
qAY2ct387vQmuDtAUHn+bQTtdlGweDncCVrZX+/GyZVBiI9whPCJAriKT32s
s40Agqe8o870zoHcwavbvpX3oIrie5RoIRKcm6QDQ5MC4bOmHbaH+2BROyEx
wI4K0WFN+EM646DI2hb1IbsMjr9ydeXbOQ73xrmUb89w4byfv+9wNaLAzn//
DPB728FcWLLeepYPt/vFvfTtWB6Mt5imi85RoEgszZfkQoChI6NJN/dheZSx
euz4KBm+BUo52N4agpMoe28Qpj+VTudDI8PYDp2Xn/ovuQuynx7Ci5+lAPFN
al/dYzyILTxrIZaQ4GKXepN6DBXa3n50uhhHBQNnT+/BZiLQXfB/fAcIoF69
I0Ocjw3XfOrdrlN7yECdFPg2kTkLoqw2J8375SCjkUnAn6KgUsGPtRp2FLD6
veTHhuWlyEKWjTCBDFxsz8ICmrPhFTFygDhGhjW5j+NnrachIF86QLuSHVcZ
LMdjHZSLmtmrdp3aSYTX4ke4XxOrgSyiUB3+mgSLsi8Pn7Yiw/MnlsPTa4vo
xsXot6amS+jrM3LLR3sKtMtPzl9LGUInL1pdOP2XBG4J/w094a9Fb532FHhp
ENG2Xf84j8kRoEE6SZT/DgUye7ocCkjsuK67byR4KJw4tz1bjGbXOXAvDAs2
lXqy45zzZIpXD03DTt+MLKLUIIjFxCdrYXuKu8juxI+JUehPuLwSvk6Bu3dU
OZ9h/PpBdiM69hEeXgtzt/O+I8PJQ+ePCttS4RVf4J9/Sjdho3tN8lUqtmuM
Jh50OJHhYIt6l9xcH9KyWcyS6MTD7/7a1WvKf9GHhKlIL4yT7DUuGAf8rEKS
Yz9FXmhsICLPp2EbPwZIxRaMclli39uGVeOFh2QQ/vrJxFhkDlnzfv0YFDMM
Uu3bOne41UGVaQ5X6qM2lBCr7OfV2geiVdszGRGL6M+8oMJ4Ch4p73vK2JSU
B42WhzrJD2rR0YKgoGcmg3BGLLG88vwszH7xIxiNE1Fm0HPYsYOCcc+bZ4G3
8GD/4XvHhQ4K2i+vciJs4w5URB4dFr9NAQeOT2yn42agkju625JVh3pwT3Wt
rQmomSR02OcPO45Zm2T5gjwEHv3WEC3xF0QmhwbOnmpFrZ2S0iEpFIgOLeLQ
b8L8+N7b+sLJX9DzuIMcLdqF8eLeNt/nZLgEUnctwn/DZ7smGXpxLxxlpFy9
0t8Jj7Jf5n8zb0L8l1+WUUdIUC1nFC6zqQ+2XV3isfxKgte6BQfDBEggVaRq
c1maCYXF4pfy9UkgK3jqz/HXBEiZHhDP6GpBDqZcKkPYrjup27Dw9AAnru9u
zfC3nc1gned7jffAHHC4/aA7lGD7xGNLaCJuFva7zhS/dl1Dc3p3/u74S4Uz
jv78H+UykKHsdF65+RA87lK7+i+1DZI9lI228/cgSp+PevwDEhJhnt/7Gds5
bP80t1U9JqGcXzzZDlpk8PrvmmrhGBGeleuuBi/gYZ9Mxffz/Oy45uVb+m14
IozXSSe10rlwhD9PXgZjnC57nccfVTDRq+13nlRHECDqVl7d4tVeGBu8YN/9
dgE9Es+mO5xgoe0XFdazt86B44tq++RZCjIedjq+1YwC620Fn5J7ScA53FRv
Pj6HlNRzeemlPDjGSlnmN9lVdHEqvHdakhM3EJGZ+S1tFtxyex++ceuHIIMr
3vuzycArvec+w/YBkhhNqdPnG4ZPL4ylyqcoENe6qEffTIE/KuthtFsjMMy9
++m7K0PIY356hlRMBnN5qwwtLJfqQ3HTRdub0CKH3VIAkwKpC0tGqlLDYNwQ
R7iK+WP04lUcf04P0rcrbP/3mgPHV23DGes3CYyf183kMe4pM0/CBR7tRt1c
4+0OaTMo7PQQ0dNlGI4evHLGIb4CEb3Qj6Rn7Siu1LEl4nk7FAXfilJyYsM9
rJjz0u3uBEsOrcm1Ex1g5G8Q/GpTDXLd8/ZJ1lI/ZDu+INVMFKLtLYRrycnP
kNnvhON/rxAgfN/zjbtcVFBXifVg+DVBMNpe+ObrCLjczZdgrmO9KPa5TVeh
BgSkk8bNk+ZgXMX3vkkdJ04xl5prZk+A9GxSgolmPuQp3tSO8GDDHRe00uXX
p0K96/lLHuO9cMWuX2UptwoqxVZ317/GQ+2/T291Nk2g1IhOuP+oF/40SiXc
NhoELvHv30u+DIPHomaI2b5K9KMpmetNJwVqBKQr2PPw0DIXIl9ThocCw3hd
sSAyZCz6ck5h+yJv5UGTEzcF/Djc9/lRSWD81/Ve0xYenMetKtDC9PvOTgJ3
Z98czJvrNCoV5EFBZd6uvfqjqN1y9vOqBgV+aDadyRfgwvE1dTTKcGB5IOgi
nfqmC9Rbf0+LTuKB72BJHI23CVxk9xQuO3HhAhMQntIwjmI2hz53TSaBlyXn
ebOoTjQnKtLse5gCs4gtdFZkBJaV2MIOd7HjZpYONlxJ5sBpozD1fj4qnHMR
ZApf70dcnPgcqQvDwHda5vwQlh/iVdYy746Owc7t832JJQRAq+aZFzGf83J0
BqYKT6PTRxSFLB/w4KKr7plevj+JKC/u5OUUceHSj9DolodIsNsnt7zOsQ0k
X+4uqGgiQVy5l5pL0CSY6ChXP4ikwt34hf+aWCQoYj6PG3xKhly7RDmVr1RI
T8qOnR9pRPcUJ7YUV5IB77Q/YdiAAob6TXS5XDIyabAmrgaSIdmylBw9SoTT
Mz26fdJkOHReXMB++Tm6ferIq2mnBXTliISJin0nqIRwnW7cPQR7Ji+u5z0f
AqGcHqmeexNI79s+hRpXCsTkb+b/JtGKiq9cHD7qjUPUs8n/o9A8/Kn+vzhu
ZpfKiIYVJSOpkOgIoWSEMsreUZTRooFEoaKyNfhGZM+M3h97y+biuvdyXXvv
/bu/f+Dez+fcc16v5/PxuFf5TgyBatiAik4aDgm1cIw5X+6H+UT+5G//9YG1
9pZJoEwAYourJHtQ+avr1cLyZEYV2i8ZMMrnM4JS11eoPNgPG53K6s9ryJBo
GcXpPpwMoaEJMZd5CLBJVti3rjMNDw7VnLh59Q/sgYzaV03DKBP7qG0gMYf0
y4utxuj7QJI1zlyrLRt0Wjj0tf5uIl2rVUf29D4QbdhXu0Q7Aor8e6LiDcng
a6jYo9xPgAv7LDxv3SMCLcMpz2/3y+FBgo7SI1IvHIrgMR2g9nGDb+yR/OV6
4IjaksiqGYHeL2lyu6dJsO02z32YCw8FspUxDmpk8GtjMl//MIGevos2SUgj
w7djZonR4mS4ef3wlEXZEHpeGjNlcooMwZe+y74L5MAieiUV2+4UQsPdyQ4a
sWE0uvA5bzJ8BI5F7+/S92TC9n0O2I1S6oMpwy111ZN9QEz8tynkTgZrHP6V
z2Iy4oplM7UVo8Vo36frSCUvITbrQPMC6p3bScnlqnxLRfQCiVwNd0aAx1vm
x+D9QdBWEtvq/rSIFOLH6S3ydpDeh87DhXcIMJfkIoh73ArZjt/txydJEBX/
MqyXsRic3a1o+ZdnQcM86l1ryQL6Np/g5ZbCiJkPcJ2qb6XD0tLyQvY60GMN
o13eBVkb0O0Z4WD97htcduvwvbTaATKkLE8Oz2V4fplh1GK+B5r424LN3QYh
p+Ts32JyNxj8ubV3IwIPdJVz6weatxDj0GL7sgvVz5eQmxmV+1eXbsaOSE4j
0y8dzF7P+0E3ZvzoEtsYhMhNLejODMJNoVxjtaBqNBpzSEOjjQYbL+XsuDI/
C7WfxumPrBChTXMp7BU131lOdRgHfKPD3C2ZG5SdCKD3+ur+tza1aGiv8EkD
vSaknLPlHP8ZAzmu9vsuN1vR1MzoBo1UBlqZZJkllX+Hs/mlmb0tXYhSTs9q
ug8PxGM0AfQaW9BQ6Pt1rWsWKZrMJ5kROqHAucyFi6YLLn95Kycu3wa3wkQW
fD2IUPFNyYvQsArxfkLxhPZGNNvI+oZCzcnfun7fRSh0mNgBft6WN5Ww3J9j
odVTjvTfv6lWAkaM25qxEFPuhV5NPr2iFBwMh3hxiWxS4NA7dq+b463AhZ7a
p7JRc8uWubnzZzb0jxyM+OjTAdXLjF/dJVthyOIpRxrLBJy9WK++NwEPMyYX
1Ypo+8H4LuMJlutEqG927x8tHoCTY3v6y1ymoVTC/4uhWC+ERLouvRocAEdN
uRxRNjrsKXIwuNbeB2a0nh3hz5aA3B7/x6A2Hpk+0WwR1J1C2wczSU6Efhgk
hz+Mf0Pl1Clt7za9PsiX9D23wZuNnqS/+BcpQIAim5ZQVsc5KDryxa3v7zBk
7bIZXlheQNufJQzd9xLBJ7D8yXNOPLpkZyt6YR0PDeQje+o8B4Ey+47Wec8G
UijqZD4+PIXMGGJf5AcOwhH9wbqJB7NI/EX7p+Q31H25YPZr7eoimj92UIfv
9TqY3Ms7Mig8CJPOnl6ULySwrTexW2NnwA5MGJkrJNFgjV87v18MWkGmR4rW
Nq4zYCJvj0Ux2I6Dz/CG3OHibLjeP5fH7YqH4guNuK4EGoxs9in9kkAnWA3o
8N7+QICK4LOGW0a9oMWT7M79qxeilqNG72WOIt0DXLnWix1gZ8KnKpfZDzwC
h0SaYQs1L3eXMxcNQIrQwA3+vDl4TakbVJMmgr7huyWbcyUo+Ru9RddxGqy0
zor9RPMoxCT+iaSl+ruXzUUz9Us4VO2HeR1P2kQcInuErzoTYVimqNnVoA/V
Tw1z/dzTg0ZV2IMV3ZuhJCPOJ2puBQkp/F7i9/kIL41vlMx+SEP/vZouJeoN
oKnekUyPi3hYTQ3am/mgAWVLENoNE8lIloQ3SgskwuiJrTvcW90gFES6In6m
B3bKVkPaJYjw4UT2Yu6XNTjSxrXxdvkXsv3rfM2rcBVuBhTw5L2mw/L4msLf
b9fCEWn1vmeFRchUGrO0EtlB7BXntyf24kDMPT2SK7kDZg4GBe+lvld6BEvA
nG83bPYUiXyQq4XG28yadS8iIaqC5lJVSj3IM3TZivkWgn/Yhs1v4w7knBls
J3+7G5ijBRIc7ftAmUviX6UAHm6FWMp2ew3AbEeF9zXBRVA5+nKMmWcQjJj2
PXH70A1smjW+uGdV6Oaj68Gzhp1wPC6XUFG1BuqNe0UubNWgde6//Y7nR6FO
d595sg0O7K9z/uKJZcAU6Aduv47rhQGf1ZbM7wXovlo4qdMXD/r3+5ZfdM+C
e5jbWjdpHu2lc3jBEDqPfqgblUy5EqBF48UpNdshpLiXZfD6rU5gPDSfyF6F
Bx1XEU6/GlpM1KaYqH2PAfMyYa91EKL6GAtDUr4iCTbxD7KRNQGW8nfxvGP1
oL5A1Be33YSzT41TvA8MAIdMxfmUk1S/cTN9WVQ+hZb4th6tX9iDbTgz8dnq
zcPTkFdMH4RpsPaG0Wnys21w8VYZny0rhwsRB/JXt3GgOj198bXSCjjk40Kd
67tA4J/5pfe5OGjTZrvErkTl4JHc/hX6AVB7EnXrNiMRCd/aiA3PGgDzBpF9
TxIHYElL42Nw/DrVq57yxa0MQKfwLsVpaB42sp+oVtkQIS4Yc3BTaUD3s4vf
fDzMgFUfvPf5zcNZIJP6GslaRHDo4O/+QdwAyr3MtxUNi1BicFfBN5EEVWHB
P90DepDhejg3p2kvyrU0ZSoobwa6p0V5z6UDIWL64AHXG+/QLbtlZsJMBjiN
xl7nXW5Ekc4PDjU/HYS8V/8997+0CSOd6V3SbuOIcKnDmpFIAvMufrOy8x3g
0BJ8dlhmGFbXxXKVXpCAjklU937/KjTk9mt+Ze1FK/SVP84lr0D9IOWeysgO
eh5LUGHwbITUmO03dr8Kkabum6azcXTYtQ/eXDOneyEtaIVm3ykcVLuNxNx1
WwApx9X0pwJNILGpusVmtACmV24d+DddDaHXtGJtCvvhLHO0UF1wKyTIOfha
DZBg40mNoZtfN8yxupTlU3DwVJC3vCmdylegI8vo0APxtfuY1h4R4E+Y6J4y
/CDY3U/pif/QD4zNThu4KQpK3EhVK+7CQaAis+kPBwoQHJKDSeWFSGO8dA+L
IBGm3o5zoapBuJZx747RMg0m3vkt7gE1h0IKXpolG2BwvYXIzn+ZAO7Oj39X
uSxAp02foVbDMgp7tSxHZtlATz1rEhM7iLC+P23RSbEXxdFSRswLcSCdc3z+
TQgRenp//HzLtIpkNqJT3o/SYzZlAvjGv3jI3xVEO+wktMbb+TXZnwihkay6
TMQFJCddVqr6dhlKh2Xat1yonLU+2HeuiwB7m4+7bloyYo9him0vkQ5zNsxR
u/R1BanSN598JMGA6dn8a1tM2YBaEcO+ofk8dH83siN4vB+UMn10o7nWQChf
hCYrrA+0We7kiLP3wqslusqnMTh4+OrqzW4JAmh3xnXV7kwiW94I+9NCfSA1
d7o0cwIPRli48mbpABIVecVtQOVKrfkzqSe/L0BS0ItCQSo32PtIsKXkN6CP
zZwdsQsLaDEolu6/S6twIyDV+HYlHnq5hkb6zo4C3XRjEfIkoSP5N/+RFfuB
1H2jQbayHaXo1Ok5Sbegu3/1wo6LN8G+yRSL6/snEZ/v2bPnrmQhb8XITy6+
6WCRKteAF65ADxo+7Imh/l7iz/yCfugPoak3sn9GlqfQ/q/RPWEHu+Chk0Rm
U3cfKBx69pKvdxIyXL1KR7kG4EzKHU7dpSWgEZnIzxRpQZm80tpJSfNwijXi
c17yJqoz0fIpW62D7PnvbZ6nq1DP+7BnM70MmLLmyWYlVjzsfxci1UvphFhb
iQPlsnOQ8PCxgL8hARRtqi/u7FkEHS/ht1M+ZaB1dnm6SLQP+qXUCHkROEit
TYs0V0xCsuI7cu4PemCKkdNO+NcgZDW4dX3Z7gP58YipWDMimDNxf5RQWoCS
OGP9mxIkaAxaTr/EgIdK/z+eVemtaNtu9dpoAAGyE9mctFRKgJKrNxyw/xsQ
woy7H8U2od52i9oV3wGweB9mpSlBjxWcKLzBvdkHy5NVXDql1egLcTkIVAcg
R2XQzVt3GubfMPo0Z4+hvWEhhypOjaA9FyficYeJoGskMvOjrB/dH5LjTnva
D8qvaK5+X+sDc73oY5wF26hc8scglx4tdrxj33mjFwRQQwXPT92cRtIL1hpB
FCIsPCz9ry90CUXePXl0TW0RCEtHebueD8C7/MoHLiEkeBx0okghYxZ9QFL/
eKleWfMFjfhK0mCmR/mcy6nz9n1mK/uGaxGWvl14bZSAoFqr6G9aby8c/uof
0iGyDqEKzR6j/L1gdP1T5u0IIvQPNb6nuYWDnfp32qSYPuD30hiZeTWIXpn4
m8ZR50rk+WxNdxoPw6EqXzP71lG5U0DsKhcBHodybZxInYTWJ2SP7VECpDht
Oi0/ywTHw7/srynRYedLphSW6lYg/GNvZZ/LINjIH4sOa2kAg9FGdj8TWiz+
1Gia6TkS3FevF/9dPooO58wWNKvXo5tgcvsqNTe6sk1ZyiL6UE1FEOnc3lT4
hl0WlKv5iqxn5d9M+rShhdM/l9hM++BxlVivvPQmqIqkcQ1cpObV4h2a8Uoi
RMS+djA/0w1aqzqnI8fH4Sr7xUWnfiIEMjt0vXuxCti/x6VnQ9sQzfuhDg/2
cXj6OKtThtqT3wzn4porCCBSomCN84lFjIzq2UejmDBPje2vfi8GwRRz+Nkf
1Afkl7oyLi4zYC3DmkgoJ8C6wfPoXOVRkFOhL/9AwEBscVcojKcPNHeKB7+a
tYP4x57bIXlDEDJ6bFx8lgAGBnafU1kHYPhFTILJvkGYkPb8eusbCepGZ6/s
d5yGU92UR+e/94OXuO0bVawfmiLb84xod5DHiVOlvHep+ag23RpxcAtqLGSU
OgvKkXGQ3xR6GwaWyhr3w3QIYCQ08OR9NQ22P8PKm+DZC7kaEomPr2cgW+mN
0+JJBDBvpnwgPlmFOd4sSpgjHVZ9eKKYoasbCZ90yR2X7YejAROXtv42oMfX
pAMf6eDAtvHkY977A1CvwxN/fmQLHTLPpxMQ2kCp9l7K9RQCaHD8e0MXkYam
/LeyWetIYGRUQsETq2HJfcLZf7MKmvA1/3jVcMC30ZKH+0qA41d2fN+R6TGm
Eenif56MGBhtbkgkMWB1L0mX85jpsd5LUmxDsxug9dHh6f2WMniocUHPn3sQ
lEU1bp7nXALivScfrKn3SccoG9+kjwO/iEkca1EX6BM+LhoScEAbWjNU/pT6
PTcOsXOrdKDIEqNjp4T74eTzLa2SjX4oPWfuffbIKMooVai3/EYAjtov/iDY
Bvb6dhpZ1N8/QUzVMfNYA3LSvPrtRAYtRr6G9bQfW4B9nwqLutVIcO1V8jvG
5jVIPPJsbE/DEtqSv7Sm9GwQSrsIK5XMeSjnBudoWi0eZRCLTWSSUuHJrl6j
oPoyahm2ka/UmkSYoVdsCl8YRLkL7f1xrxX59Mb6/qnBwfeDFzbfJ2yBhY1A
xt/WCbQlyNLPV0gE3rnX9mrQA6pvZH1cJGvgkwnztedMRMh4QPkdqk0E4RJn
h+uGazBidpWc/LkW8UyG24xrzsGJI9FTGgQ6rCHXy27auRHqJUyrLU1KkbTw
7/sGkxmo8HjaWRbdAcg96fhyaLgb9teLq/i9wsH7aLwoq1UzyPKysMpqzEH0
69ze61dTIECHIhbE3QXb71v+ZLB2wJYpQ05CYDbaOrTw85BzP9T/XUvSONcF
f/+OdfxmI4FoAYeukyIefOwCrX5kLsIj5X8RR9j64ZKpUdazjj6QFVuom4+t
Qk5F90iPPlP345eIlu+eCXRn7VdCU0gzyJkLGdaXbgDHqrChiwYRvrZUP2a+
sAkzGqc+FenRYCvv+euEvgyAaLdxCak+DTmtH3aa0O+H3mR+r4eaeFAoqDoo
bW+OUlwjHm0XTCOliECC7RYB7n731Fbvm0FND+vlqvt7YdFBTuCpAhH+sFqG
LqoToeHeZMP5vfTYtcSKndC9/XDO0k3UWIURE2Xuig61IoBodJuU3UcKCqka
4Fmleq265ef4+Ykc6EwXDDfzXUC5tps/lZlGUdLSZlPogQ2QleL2PH53Fuke
SfIVmhoENvUWb2tHam+1mklrnV5HujxM3DKdjJiOVn6dX/sGIuYsOqT7M2At
2NhyHt0WfMjBzXPvL4GMn13iyeE4OCsRYO0bOQclAT37Y7g7gbwbrvfQlgjf
hrpfXSnDw4C/4jvR8G7gEmZOw4ooiDdd3+U9NS9/j5/ao97YD2Vt0cVdkkNI
DVJ5dISHIDnGUOX4tTGwlX7kH9aCh/X8HJXwpg5kFzP0s2uRHnPjnxF7cHYF
OvvKnPSoPp/6Xji+eBgP7rGZhEcG84iLpnpznTo38amP3T+EBxGF++bbpqs9
aOmQ/HiXZTnIVPiTU1R3UZXooZnJ/jRQXfFt3ekLRPHu6cGs3fXIze3D7yJq
3j216+m/qFpAnYt/4GWZboQpyEiby/cCxwG8hdISDjhlo3msF2aAZdpuhCZ3
AMYXH+MNsTmocGzmnVmrQ2bXbok0ndyA8kDOx+4idJhY6iF6JeYGcFOLlxOa
rUYxFXRn8em0WE/MvLy9Gx4owdUplXXt8GTVt9FBphtsb30448fUDAdnD5gd
0W1BTI21+snGP8BxX+GnMpcuCH9P/kKerwajtvustw63g3WFYdVqZT+YWmvE
868R4GxechzrTD9wOK6Yt54jgjPNZFE66wKoZI6J7i8ZhDj7GeLZ53i4kCin
fP4KHZb6AtfIEIIHG8u7V38c3YSGr+oV36ryEYusStDZRQpcKfzSkztEBAP+
QJaqQnrs6bJ01zsGHHT/PsGJwyIh+V/UyR9deLjKG8OK7xiHMelZsjInHZaP
Bbm/4plHuhwGvQdqB4GDu2ToSUg/inn3yyArbQACGLWWxiWoedp1TmYtmx6r
lWY/KOBPj6n0pakyhZPgwNmZR5czshDt6OqQ+XovFMcU8lT+RwamzV3rQKU1
qJ4X2pdAQ4AqS6NYdWwQdOcS+Z1uraCXoTM6fxIYsZid1nKxF/OI3HiAfmaC
ATtxXu1k7PVl8E6IrP6QF4we0ZBPHWTrBdwTyy804atQ2Mb3k2DeB35DP6vc
bg9A1OvYe2qcvWDo/eTCuDwR3tWo1p70GkKPe0nfPmn2giVH8t2o5/1wm2Zf
3IuQUfRYiI2grUKAzeyM9LbmCbgofm5e0JMETWFhqWFj5ehGaMIOjmMDvdtj
vc+ucxbEjJ+OvhMiwcssNh6NugXI8BgVteeeQMs2a94hs4MQUyxuPCbYg6rC
FdjqhvEoSne3VrauA6yGnwvoP6lAq1Y1PXibLDhLcLG5YZgLQnNifUH53Yjl
K2+VzlU8qLx57vKcMAH2p4+clbObRUuotDVGpwdcExV5Zkm9gN1+fUnqWy+Q
8F5rgkepe/K1ChOMXYaDh8j75RxbUctRX5MfPnnQcH6wIptxGg04cNUYnqiG
DNI/qVT1fGT5nulsvtw2uh5GY1vKhIPimrNFsz1UTzwafa/MbBryTXzvBrxo
hxZm4dWYvhmoMOtnamLKghOOJNcYgy5Yudzkf0+uDWLPSJJKiYPgLs/F9ciK
CD+u3X+RfKYNzvusMCc9G4AK0Yf3tI2oc/34PNDFtAU12bGscx4kwAHH9mfd
VA/pUMuxfq7ShaxWvyU2v+mDTc5bw1z/0WJ7720cSPzRhjZ9OfVaHrWimB/x
GunyJCAE9Xkb0zBidTek3dI22mH37X+cbWy/wT96bxb5ExEWEbefLdV3Y9lv
LsSobSNx8cwDiGUduSvq6IhR7538z4dveacHXXzwq6kpmrrXkutCccpEePrT
boFHZBkFig94uW/QYBrxabaE1kG4XPE2YCcRB335tF4am4PgW7NbU6xdBx3u
2cSbN9bAPsrD9NfrRTT6cuzQO0FGLDF8ucVnknqX6tpp16XoMbzhQcX2mGXg
lHvH2LlaiUhGyl/1X7SCcBjJ1JF2AXalMs5Uv+6A5qMOEQaxw8BTY23/72w/
3PqyNWvwexiUThI8hbTXkcRQ3yG/8D74/OoYz8XVUch1SugpZJ9HRw0PDuVn
EKD613tN7n3D8G/W3m02YRwyxp0a1bW60aw0dmTejQYLmJw2t7KcALGaJ537
pCfgT5ZMk73AFOS928T/O0KHPfojq3vbhwJKeoy94NiNrNoYHOo4+pBf/0XR
kc0cOCqW6uvv14f+e35H+tMIhrjtFkStmpIRU1NE1mkjIvq+NcjK9WUEXIIa
SvhvrMCDjKMflLvmkHaJ1OBhuy54q2wVzdHfAikuh69f56iHm6u5HJ3PxqG5
jVQ99WIRdL842llSutCfPpXJPccnAffyeeKeN3SY5LO6gilOG3R7+b21c00X
sg8QMlLNYcBCT7efzi3AA+0rJzHB1TZYqjHUjJIYggMR2lx003VgQ4mYvndk
BGSTLMNHWtOR+tSXgsv8A6DVKpDCh68Db1n1tjjVfqBI/MnWOTcMwT4cQS4f
R4Bom4Zonk9AiVJ3juFJMgjJHYx6SZ0L3WVCgMmzPuiSt5L9dX4YDjrQDtFy
0GJ5+iU2odEkkHS6ZGqvPg+WBYccZxSaEYHZ9IXvpxnkQ/ZQsH9Ggi9R3Icv
MtBjjpXFlxQe9YAG7RC7EUc1esMbbpG7MgTdPw1n3jROgUVGeZqEHB7suH6s
MOEW0ULCFea0C+MgvMr2QnSAhOQSLoiNC5Bgy/KiP7M3hdrbUXfSxjZQ+uaw
fPP//89c4fbWQ2QUTn2PIOLF5pGTSWTv73ejEGyxdEvBdBGtM5t2Cn+fh5/i
BdYJpHG4NcZrpnt9CvI5/t0XGKDH2o/puruE01D98lmvEnEVmedu9qx4MGCO
zVxfbeSn4GUwlxR7QgnSObxu3FdDhLorNprXJ+fQAxUyd4xoG5gJZl7W/E6d
52D7HoGsHiDph/oW6HdDt12u1Ll/U2hv/A43d0E7yH1aNdzdQ4ax8oECpddb
yMQk16ng9TAMos0mXb9xeDswGChE3fMTh5pyP9xvRwkxiaFhQTSY7mTFoT+0
PfBD7fuCZuIE5MSLm6ymP4bu4wfMDxpvoUqBvGABznGojeoSEd0koFMtzffq
mUloSPBk8iauBmxCaQs8dlbRlZOiR8zFypHGyG0nyeYWlJQBQ142w6i8Kl3G
/R6Vz/MVo7EVHMh2C8S8yqCg/bE7hLLdYXB3WepoS26FhcbKCHw1Bkv75G9+
PkGB3FUFYbd9i+D0fMrx3c1W5PFYn0LUXAS+jrqdYmqfqjwuFpFsKwfjfvjc
X9eMAu/8ONhOt4sE68JD+OTx4PfoNfnuzxYQyxNXyLTvBW3Zhd473CRIcqi9
oHy5CsaN2mpxnHnoa4MVk+rfRvDT8nb9ZJqHyudexbLaD6Lf/laJ15c6oJWV
L/hKCBF+Pax0Dr5MAQY/T4azgSNQqqLxhKA2Dd4dBnGLBWQ4hufO9/AjwVXP
y991XYtQwXvvdJbHvZA8fvn0vqFlMBHK/FwCPSjqR32+ZdswEOWOMSdd6ofp
qwJasgkMmBz/Q5V6oW64GZ956M2+akSMUbIxPkqGYB6l7J3JOeChuLhvGy+g
IMeb7bhfC2jtTV5lnsoo9Lo49vfWDiOZ1Fw+j6E2cLQdr5d8NgbSR2QTc0dp
MUvduJvPLzFgDpbYty23Udg5XrNQ7lQFV9MvStaOjoOEte25cLefIEfSTBTV
WQYun87Fx2EjILc19WW/6Tiw5nQ6Sg7OIgulc4fH3Rix6i5uTZNv03B8Q2DG
7R4Nls60P0KtchVucMf/Hq8PQnSyrD+XzXBgcMQHrZbMg8jrYp/OgC7Yb/Lw
UZ3WIPivDC/ZblH9iY7VBChDcOFX4GUL/hF0kUlHKz5+EKRvSb1bOjgMgTKh
l2NoNlFT9c4lSjAFeMsWcosvT4DzJb31cskJeEJ8qKN5rhMVd0+8DOFgwJ5E
i1bk64yD6bmnN9plJ+BhWqDClZPLUBj/VT2VPAd7fUWHBIUmIMWB1ftNEh6F
1w419ZWQkMat/fdPilbCN85jqtiNWhSmUdDTIl+CrF5UJuhf/YtWWxnqTqri
kPbAhcYS6nOUy/h/DVBbBnfawpknwZMo5WVg6yVq7mqb7ZZX/GsGvfjf8s7U
O75+djTm44UxOKTg9UnGaxFEQk934G6QkPQ7i4CXgcvQcFoy5YHBLnLwPpyo
7lwFG//lyHXmtqF7Xm/untygw57e/86nadEPHhM0aZmP2uBO5sEHjdOzkMRb
0lw4UwjVjnOt1dR7tY2LUv7PLRGKCp9dUN+hgKLTk5JAUjXoZx1kL7caAKe/
n4oattvB1C/+Rv4wEZK/sscLs47BAfN407mdHpgy9k517OuB6y9o64qWhuDt
Z/XS0AvDsCUQ9T1Ibxbd3Bsa/TmyD94w/l1dox2FDIKCrKRZGwq4aLrLsL8Z
lvixK0+eDUHi1IS+ZTAtlm/+sWYqtAditEwUzbBEVDKw6BtlNgwkd82zh4Rm
oUCO1u9x1goq1K/H9udtoCMBEtwPZSdh4+C5n25Mg6hxMVVXVLMP2IyUpSe4
JwBq+XVOGK4hJ4OZC3pD9FjsM7NHDD0jwB/Io4l1DqMYniNy15Qn4eNZVcHz
N5ZQ5bVzu3PkeViY/W+iGD8O6mva6Wy74yBuYSp6/RQjht9TmPudmx6T+/ZJ
wu/hGnoZMZEQKsWAZQqiizm6y6Aff/kOj38rYteUWx4wI4LJY+vwd/SLQDZi
WdpN7qX2WazUujx1T7mujAVROTzPbrKIUjcMZ+LypZJSZ1GLK9+28Qkc/Lpc
eeVv6jBQFiXETrcPo/DUk/sU/1H7dP27RXb2BPy20dK1npmAnzmnc8vyu9D3
LMovz51FdFV47Mw183lIfrbVlSA/Cnd/Vju+pUzAnkqF/vMBZLSoM80C30Yg
GbcwNU7Nqfu7dzI5OHqR5D+NEOG4P+AQd3t3xWkaSbMOuAmNNSNO+UjX61OJ
yCHkvmjUkW5037VwwnGOAsymmrIbih0QoLWPRfjXDAq8BEmkBz2QtCGaq7O3
C1SOdBZE9JJBte+3/ccvQ5AfwS4oSJqDf+UrvoySOKS2fWNfmeksRJ06ISV7
dgttDLuwIL02CP/w5szTtC60ffV7d6QOA7bvTGaSl9EwnLviZnryVgssGfGv
hGpMgEHo71Dt7FF4axVsaTM1A+ZCQR457Qno9gZx9H4kCVSFMjKrBPEguEiY
TC1rQkMRe5Ukawfg/lWvOLvHI3DdcwHLGCPCxxNWUo69I+CFXv7FdU0CTfKL
ae+/IxD96+rTS/fJYDo0G6cm2ItCyrRvXhUjQ5zh7nj3u2EQF1domBysRHet
7o4V/8pG6t86P0rKkOCj09qAUDYdVu6eV/anEQeoT/NFq3o3whFLR4zUhqHs
84uka42T4Fbz6cSFMyPI9GqfQlnrOKJj075gozUOH+epGX9pCH2lrJRKmwyC
MLEEZ1NK7eH0twNDk1tI0CaKNyiCFlv+4j75y4QCJuoScfyvZ5H67juTonNT
8Id2YCHYYhldNi4T8789BwppG1qbThSQ6290OmY2BRmsv4rLPeYRi5jTS/23
DNjnlo/xtx/TYKHh5PCoSAbstsfp/FMOs1D0M0p7xCELrT2xM1OX6oOlAAPe
P/dXICbz5fWzD/+B3PfxwZ+7ZCDKrxua8ndDXOs7uicOg2C4+LKI7+QwMrgn
1qzVQQQL3XuZb68Pw3n6+Oz92xvI0+D0ufUJCjgcDDBL1SIC+xEbnY+ho2Az
vW4rIPkL3Vbvei1vRIdZyat0le1dBMFSwxApj1GYYIvp4Awagj3JygmNrrSY
iNJCs0TTGDj/5N9cG5hEyd7/7dV9hUMfYhhuP9ZKhtPnDzsfoxDRxylXCWvX
EnTQJF6k6vUfhO3u9jKLD6BIjE3FNYcEMyL3AkJtVqCzd07O+sAkckUNaSXH
hkHj84Ud76UWeFfF1J+zQoEH428zag+MQ5yX+5Odi4vw4Mt3vm/l/ahiXVDw
hPg0BHoESpzC0WNMrZ1yZ/zJYP5KApqU6hHv+RMSNXOMGJeAHG3lAgl+9OU4
RSq1g3rCSS1Vq1FoVJY5wPR6FN6I2E72BA+Dqzu3YCLDTxQVtnm+1YwADlce
qB4VIEJ6R+u+cK9ekCi9VCJ/bQQGGcU2Dl+l9gnlzZfmsjFoFDw86E3tkeAe
ULdJJgNbg4wnv94QcFziO32heRhUI/NX+aV30Hb0gsmlfQQoVHhxdo/5ClQ9
aFvJamlButuWEVhRHUxdWphjjSWDxJv7F6poaDDP0thaO8tuKIlXm+sor0JF
5X03z9wdBiZ137Kp7gXo1IE9jJJ0WHBhNo1SJxGxPVR1GH9NAb8LjVN8r3uR
W2Z7Y/gcDnRPefGUzZDhAvN6tf3pbdTSPMZJf2UDMbE1XFtZIcNafu/VSU0M
qaRIJDXzTMD2MVXrZ7P/YNqGj7H6STcs2A+ZC74bgSkZ1fBG11EwJhdkli7Q
Y+tJY2eWbjNitj48m3p3GbAiot4ZQ0F67P1V/7qLDcuww9msOFD1E3krSf7u
oXJ6HNe004WEeRA05r84oNYPOfgBxUsaBGBeufQh7mIHaNxou3l9uxv4vX8W
F1JzpDP+j+vK8iCyqyjd3adPzY/dvTZfTQZASV//qePaJEo/IyaVZDUGGGt/
mNKeXGhiMr3MUTYKC3djG43LO5HZnPktfiItdpDruImD8jQ4RDw6vHduAp5+
un1/R2UFshz1xIuLlpE0jVyoROIo7DaVHGg/2oTsunn/xSUOoTFzFkvcH4S2
in8L6t5dRtdF+d3cumfQuczAzbY/yUihsvXIcUMcGlobOfHal+o9U5dX+RJX
wWLss/tB02k0MZpj707Nj/MN+qetOdrhfOSjjRvEJlStSpwT1O2GiYMFWAOM
QB7tRy3DwQUoIPc1cPa3oowzZey1h1bBTFeQ/C2IDuPkY+Qi0GOgz894p3Kk
DT389ef5aYY6dPr3RqMXmQBGxbonksubQeJ+IV74TzWomN3vlOvqgBtffs7p
ozF4aBe4rmVUgv4+xsx8TveDXWZsLuMxaq4UKcilDzWj3/e4HhxcxQOPocXn
DxMD8Dc94a6c8DgENWgufragAA63WBz4bQ5Si738cUVDYPeOZniTaRgyf9i/
WfLuQOajh7jmdfDAlHv7xf61JGgzWbXp9+8Fxmud9EdllsHCurAzxYwC2GIJ
7gH3CggRCN13/qPBLOQ32B0s8BCvQv8zSqYC3Yu6O3IrkAxDJRekmAoGYEL9
SIFZRitqHP4wtUr154fZulrq5DH4qW+bv244j+b5Fk3vt/SC25v/bIJuj4HH
Y5cjyvPjIN+492McHz2mpzsRPfRqGHx/3i20+MmAbZ8K+3ZNYQQ0bMRrcqIn
EHF++Uhf9jB818ynKLGVIxdzLt3I30tIm9tg6CjfOGK6ffgG139LoPBhsmjV
eB6ZSDjb3nk5AjffNK74MUxA0+vNls/7N9Cf6QaSywIDVjgWHXLBdRN9UCgx
/M+cAXuHhOTUBlbgEA166eH8DdnrsF4UbuiFh7bqrwoU5mFRnPF86JtWoORe
0jfTJcOc47MlbSBCZ7vRCfXpTuC72Hh8TnECcS+92HxO7AEFsgKHeQwecmdl
eaVuj6JJNzb5fTITINIYV/iwmwy/Mp8rXuYiQ4zSsPHupz6EG0gad6mkx0KG
X2Pno+dgQJ6M3iuPw0THJQ1Wsy74XmtUQDi5gDqDMkZ2tqk98DtVn52djEyZ
7FKUHPrR5XJDhqsSpbBHZp/dvfEd9MWGdi8DrgzJHb5n53q7FhXPDKY8OdSF
vvLQUXz0hyFF78ur01RPuRJ5tFSQTEReb661pHF2wYrCm6BTs+1w62Xkvetr
IxAorngpWWAEerrtf70upPrIjaiXwr96kUw9/1z8+yXwTmIb6Ee02I8DZow9
DfngYj4ym2TXieSXf9v0C9FhUfNaNef2EyC778LEGL4RQmRCvrV8rICBDRYP
hbkKaMgNSivgCUP7/x67ifj/oKmulND9wThozJybMRj9AaUh9IOCDysg29jt
ia4zHm4Nd8zUu48DoYkDFFuG4Lh8lVs5eRSKmlgzDt2egjuLIrupx8iw7wJj
FBOVhzxAVt4viBbjtzzvrokjQt8V3MPOnmV4ERgRSH+9Gel8sTFX7h8FiwCt
FPPyUdAtfKW0QUePkdgKzmnYdoLj4iO+stJKtJAcomzVQ4ZWw4CKjNRx0Gih
V/ovnhajZE/dCWmYR9O650qcY0bBViqsulSUhDIYWrcd04ng9if+WLfJGCSL
7tkjW0WPvZz5s+cEoscefPYMY1edgGkI/S3gV4nye9hEPosSgQa/Xs87RoDe
IYfW8VgqJ+NyLc5Xj8C8z1k3ydoxwOV5i39NW0U+QbXFt/IYMMtdljBN8hxa
LJDlbr3MgJX46ZzSDpiHxtSM2EnmWiT2LfXboDIO5JOVmPssl4E4Izy8HNwJ
cf8dovgJkqAr8XiKNlsPXMzfuKbzcwROXglUdokfRTK2b1oc3XqgHbYOD1Hf
Y8/bU/R9oePoaKrCgUf6oyCfU2X1m20UtJ63m0oVTMDtv1+5tuPb0D9+oqRi
xwYq/92kJu45CXREAnP3j0l4McQd+bJsBjLVBJMn7CdRoeLh+Nq0YeBXUgyp
9iagpeBjPc8lyOhEwKGrZOZOOKRkRV7nakPqBi/+/qv/i/aRayerKvNQqF5U
SQgtCbnPyXiS1kfgvP1a3J2dSTDQrzYfKp9HIh+9A1/5D0DP8YyzvGfawOha
a6Nl5D9Qcn3IIKcxDq9s/8Z32y2CpUDFhIP9AOLsrkVHoBdMzgvUvCqfRTNz
mt+29hTAx8SfZZXJTYjecVI0dO8OynjIpPszGw/RrlUFA3zt0B0WcvPzFAW0
e2MCF+U7IKL2Px/PuEmIomTylNu9RDVyNKqj/+FB1maJ74lYLbxuubH4L64d
fKpff7r9HxnswJIU96QZ8l1a0R9RCszo0SgrzozAs5yfvGp/clB1ZOXL91pk
COBouI+nkOBEznnJB0Y4dDb2wZNIu34o2LgmYnM4FbTM8A/YJPBIcT2tv7IM
AzGfpTdJJynQldb/VE6TAaMwvewI02sCFtbDZj4MlcjeslchQ5oMwrbdH15H
tcOI9r4sz9wt1FVYHhEfsYHIMqGcD6eGgUDHmydVSkRm2Vubh7ZJcIxB++i0
6RTwDJeEPd5aRiftHkouNtBinmmDmx5dFKC7eUV7qa8BImI/ZYTupYDz4ALu
wksvtP1z1ZtCzdXGc04G3QcWkcIvzbfh1D1tPiIUMspCj1HSLxk1DNJhrleC
6yZeTkPrnjvST57WoqqJkwwR+R0QybHzNCVxDEpvbO35o9MNpsU97imzY/Bc
02YiyIIILeNEuuf243CuOrHBxnkdKR578ETFmAA/cv492UyeAefTR/mflMwh
uVeXWw7QD0Ofa4Kz/LVecBxO6O3LmgODP/FrS6q9aOHobvKMzS7a7nR6Uz5D
AnHWLzpDNPOwdWETVli6oZjF2rFEhw579P14V6XiNJw45twhc6oXxeaN1JTf
70cHovWejj/B4Ny70/LNaBh1/eeRvGFcjap+kPM8Az6gFaJezz4/EjIOp6XR
052CsAbEKukzCx7LkkLPaOdRsNpFPzSIgzK7mb03ZNvBz9FN+C9LPXBLlF6/
enkOxkivZaNgAj7+W2KfkupG2fV7xaP2DcMHrw1eJXM6rJXmxpanXzhafX+1
EO3pQYkvTTAHdQbsSvgPrMt/GLxkLuO6PNvhYe8LZj6ZdgiU0C17O9UMfafH
zOpGcPDuiZtq1lQuWntWk9OYQgKHxoNh9U3NoMTYpLjfsArIek3LPyZGIfu8
VN4BiWnYv43nGjsyD5c2NFjMb09AkU/2Z8TfD+OK9/5b+UeA8eOu4LQ1Bl8i
7RfOXKbFbm9O/jKg9sluVUzvkgEZKGIsI/dKW9GU8kSDDUMKMOvTf4qmcqvk
2KAR5kqH3bZ596FalMo9z4kGQvbUOd59RAh/NArXe/0aVEeG4Frlh9yJa3Vw
SYXN65rJIlr4rCDgd2cOfJWknkpaDaFSj/+WRkLIQPN7NDjh2zR0C6zGOyts
oO5yvbI4ywWk7Cwl9jaamr4+zlsPlBfR0ZTSI/Or0/DkYmT0u3tLSNA+Zjf/
1Rg86qIZPiI4D9G1P1QJPAvwMmCFjXKKHmtBEsVX6Wmxiu3IWXaZdfQpTWBf
riqVW3Tt2sWKieBAvnhNTbMMlaovjIx7kkH3uIPCNSrHTHhsymwe7QTvUMn5
zuAxOMYv26Hyqh9CfPexGnzpg7jySTURuyn0awc/f2OmC9jrmrynqb570dco
FFi3UIUAQ/lBjzFIKt8T1LN/APwj4+K7cTPw5zt7hn9DB7LB9GaKxWmwREtF
PgOGJtCp1T2XfnIeNt8pWaXNlqIsM+47p4y3ETmZs239wBx8qFNeqygiItN0
mmFr6n7qWpPUs9r+webBqy9NpNZRyutnh1vZKlGIiNwhQ8tWpMjCUFCcQEYi
cQaLD71GgN2ls2WEgwTKRwdNuiVH0fOSAvPa6lFQDPzLqk3XDscWLWP4yRgS
do3nKzKYhOaUL5kJLWPQXR2gH3GqHbVRDA8x/qX2I9cxgxONtNhjG9s381tV
0GW2XTWS0Yy61QjnS6t20ckeuSvc9kNQIzN/LC2wFY6d8Q/ivosghs11jYV1
FB6USjA9N6iCpFWrf8fKCxHu7hfahYY2aPj922txOxvdws0H/sNGkOjD46Il
Mb1Qq7j4wN+KmsN7IpA6lWumo9J/rTBOQfatYAvOMBL8mnMbivo7AWnLh0sd
AynQNLr0MEClC/1RFfye6jcINQEqjmw1MyDF1NHBcqwPCasyHpepHAD3UPLx
5RSqzz9S/N5owYCtaX/irn2Kg9fm+7UPogrU9G0q+8yLCUiMsQ3UXydBu8nE
t07hJcRopHGGZe8CUnz41J2gOQMBN+OP1J6nPm+oq0c2gepbP4CpZXkW3v+I
8Ex5SovFeHHck8HTY/jP9G+DqqZhJ1HsecWTNqQY2jwv1TgHPII15c77m9Fx
W4ZT1QnTkGfcZRT1YhK+Hxi+f6ViDlybvlqQ2WZRp8e/GN9EBixe5RRH4uth
2AwbOKZsT4OV1X6+bbY4B0bHDZhrU/zQGY87zEVNg2AqKuy+7TQKe/yGHl3N
6IN3z4QfHad6xkHxdGtXWzIkvzLeUGGl5vPZnJCawBGU831QKePOEJQalKUr
541B+XlL1Wm0gUQLfkT70ExDsequXvhRAkSc5tB2CJ0DEYtnzucZOlGzCi7n
SgjVT3mI6vyaJPiUXMsi9WEOUi4zJ/YGTcOpjCBiifM4bD/OJR6wn4NX61q/
zDkGUcT5YUV23SHkNKJ9XC6rBrzz/M4uO/ehqYWvXg+TSpB6DYc+Jl+Jqhts
2jv7+tBuA3NlGes0HGTXrv+VOA35q19GNnIn0PZtXZGH1Nw923L4gODvVhDN
3Ni5/2wA+Dh/Wj7inoEp0k3n3IeTcFtO5HD1hyH0Pb2r3Z08CfsFOVJDenZR
/ZevFieONcMZfibvMOpdjro8W7QZocM0jttHs38iAh+3/JgsfzvwvqJHKw4U
+D13uJU19w/oHHRW1GEZhOcnG3YbbyXDRoff3hihaeCnM+B58rUeCqokhq+x
V4GjVOa7b3e6IHtddAUXPwKuAo1vopZmwfcImdaaBg+Hthw15P59RvV8a48/
3xiFSe0z+83vjQEdD4mX78I8aq9VEuRfJsAHq4rVTwX9YCupUXCNphP9anmz
HfKA+p71r54z7qHAgvBS4mVVWizQa1ygntgPioa+wd3b39Ch6TRCiOQYKLWe
nskeIUPiAoWNhmON6ufqRv8y19HlnFbNY+rzEJph+Yj0A4+O++j/VPcjwo0z
on8No+bAVvb28fOkVeTPw0s0INNj/VdtG3SPUvtfUk377+9xZHnRxkotdB5o
mLn6zuxZQdh1Y0L8oTHAB4uJUMhz8MM5LqWgn7rnzAMxtUkMGMuoBtPsIXrM
t/ikS/fEBmKfyZAPb6TH4i1044yp+0KqlLnhcbcDOQVvsbfuJ4OYl5mj8aUx
ENz97MjKjoenD1g3bvYPQUVSoUSMEx7EWhbMNTTHgPMyxwO7+7PoaJbez1Me
AyDNVrefjprbIhSRGz28ZMRZTGF7HjIKvibZ+yIFhkC4EYtqyZmHJIkdx4/W
3chIrPYXr8ci+sr7xSnTjwK/RNzTDLlmQKOp+0PRp354WX5L/EPTGNqM9TBV
Oj4N7KIk9il6IloaOecxXN2D2rNURqZYiyHhu5VcO8yjRzKeDutPW1Eq52+W
opVI1HJ/fH9iUTc6K0iXK7Z3GnJLdis8+zvhk8M34saBafT29Oe3zY/x4NTC
E5/7uhsMftGQDfB4uJ05M8UnMgpfXz6ik0keg64H5+QOne5Hf42nRultyHD4
T436yeItJGyXVYX73gnP8YO6Ab49aMa9x9JvlB4Tmo9cni8fA+d/ddaenG3A
ObRu9GNuECTa7ZnHpGfhgXpHiCsrGe5btPj5N3xHV6o1Te9+pUCPaE9/QfEQ
+KQ0/SDz4xH9XDjLVi0JVAfUlA32TYKt2ev4tUYyXLOvOm5G5WktwdjKgSEC
dJRwzVNUJsArpueE5Po4aG7qfH8mNYImSlc+tAyOwYWGeSm9u72wFCZwRuVM
DWorCb6rF4+hLx5P8vmMR0CxcOCSHi8dZnwlT7RTDw8FqcT7Fdk9KEp64VHf
8XFwF+9YMg0fBmubFdX2xhG09rUro59pAt3V6my5eHEOVkcObT11GUKHKbKt
X/cMAX5KRT/19AQMv5PMMJXYQhxNkyH3ymmxrYsXvS/FTsFC+YjRhc155Epb
esN+fB7enb/yorBzBRVa4xXvqYzA8djlaB/RaeA7aaOUMTgPDjJuf6RezyNJ
X//N4R167O8a7e0ziTSY3iTJgFGPAXPgVJA2tqRy9Uu22FjaApR5laGQVoMI
aweSmE0V5sFqnqs8rLMVCh7QReP7xkGx387R+zUOTEXE/UckhsF04or/e91h
9Mlf0XZGhwx6eH1lY4cxMEoRaLiTvoGarGTFAk/MUD8Hxcg/yAbXOz9MHsXM
gI1ZSccz1ViUcmG4zLWEFuM5PGE0pjYByyYSV0Mfz0Dn6byyE4Mj8EautajB
khYL8vP+akKcgcO8wQmFiZOIK2zQ+oZ2Hzr3i9yvSkoHnlVPi/yKETQfluZr
FF2GTOgZNPdspCO1/t5Lh2IG0eU3apVTgiPwIEfh6MzYNPCK1N1la5xAHNf4
TFJiKfCTnJVQfaoNovv3ehprd4Nqklq6/zlqL3xwjzWZGYdTr0zcnbvwiD2A
k82lbRIaUhpUDnvRY26bt1ROHByHPV8YqhQ86tERvSPipEEGjMDu+q2wdARE
9vp1KjzqgOCFX509gv3Abflo99CHaRDw0CVk2BDhklWOo6/ybyTLWMWp1DUM
X63/c/OwpkBlRLRytlE5MCw5LXucmYB9vVzPLY7OgJLia1ON/XMQfdmL95jl
HORqjNz+mNAB74WsbF8ajUKFTBbjBaNxqHM8rHMjbwdN2MqrjncOAc9z6RCD
F7Nw4oHz0tOyJlRqURet/ToPvFa/i7XumwCHWkFS2MldNCJ9vDc8GgcvL3OK
kb0q0ZEq6cJ9B8bAf3enIaBuHNQVaHIcJOiwWZ7fmb+WiOhepqpSyuUZ0N1H
Mn6t2IcUmpY3LXIIcHdG9gjOfBJsLkZoJkRuoYuuy4cHozZRb+xx7KPoBLgH
W3jdIXYg+jv3XhnZzMHnmzJCh71rAT8p1CRk0AKd+aGfe55Nw9MzSncP3J0B
rQKaKzsJ9Jhz0lua1yQGLFj9zvOEkwwYbrnAc5GXHstS/cRnJTwDcrHeP/Qy
khE+SfptUQsZbDYIB273j0FFa/U6M7WX9hvJxq+aD4NY0R2FyPRuiMpLcKwX
HwBaGmHT8kUqtyW8N8jhJaJg1/FQzzoi9Edq+BQykuDL5oNqcfdJFC3lM/2P
Zxbq5B90H4M6xBNm+WL6+AyYPH3kTeveiczQyQj1u7RY1b/bqf5pQ5AtoDqh
9Gwe1E5J+bQwUL0w94CoUtMqde822A5azoAZfsna0rgFPTH1DqprGEJ37rkp
hVlXIj4DvgCiyio6PXkQd+/ZDLoc/PIBWfs/dDh7YWD1HA4FZ2xFP6oaAeun
97CSrjl4HeDseK10Cq1mtaqddaYA/lPsHWlCO7y96SLnONCJVN/d9zwekQOs
15LMH1ZNwK3YgeXw32Ow93lqRvueDlScVmFCiqfywLUUDUoU1UeTODMK5Evh
oeHpp4FpHag+dNalKAyHsrLkNZZFh4ErW+Xj765/8I72F0flaAHyuHs4TM22
B55Znkk5gOGB5buzPp9AMdouzc3ijiGBTNmr1PNnSCAx6i71xnUALX7VfM/k
NQT55N/3jn4fAtPT566IXZ2DQWvKk36+Gaj8wuNeQeXBSe9/OQ16YxC6x0+I
QWMMjNN+X3duIiL2/g/W76m9WHPBLmBK+wuis/KeYz9DBEaWem+96Smga5C5
FJg9BW8/mtl3U+d+NmhOMDyEBrOjyPKOHidB1t8Dcrjvlcjmicg3+fYJMLSf
tb7dS4Rd15gcpRoKUr6aERU/P4cEmu+m/Dk2Bz68vX13js+jSPGftgxP8WBx
8VTgrfFZCKdwljtSecFbZWWmOZgOy7szIBsyPwbq3YY2k5cZsExTRWG5ogkI
kIwSfJU3i059SKIv/TgGr2b6x22zK1FFFmF2bnYZxW179+6Yz6L21ItN3num
gN/CR8qXdx5l3XpurUU/CUwuPjiN6jn4+3Ig+7LPOhKukzgwz82A2fiIWhXK
bqGaNP3/OtkYMD7svwduR+bAL9J/6Oa3/1DbIsuzxzl4WBP/HNR4ZxJe6Bxe
V1LrAoPWqI/CJuMQKzW3zvRyGM7tMgS3d/eCQ7lFwCHaCbSEy5P7QjMA9zP/
avndIcElV2n6nxujyP3gjfvXPOdgmLB12Me8G+Y+d9uX/R4H6/YL3LuufWjL
O6ov7iw9tnTqTnneJhl+h2jUzwzPQrrqPbpDHk1gHFccfffXMoq0YKOZbZqB
xdzSaVHOEWRZ9vrcQ3kcOjP9Q4JZpAq+DrvIZnXvoqEQg2aPjXI0+4FUPS9Y
j9jO6J1NLuhCYrd+HTD7PgaR7iamHYpEsNfuvO0SS0KhI0Px/3H3gq7H7gmJ
7XY4O9z1SMC+BZrNJH9eW50AFpXdF+Zpo8DumpnzFeFQ/eiDsPKnU3D0fxSb
dzTV/x/HjUSZGWWWkgZKUSnJq2STKCNkZjSMEslofJNdSNGQPVNGdtb7g2yy
t7i4uBfXHTbhd39/3XPPuee83/d1n6/n8/E8534y8zN6Mhix2y2C54bvlMAb
37y1TdMelC9Q7fB6gxH7LKcm7xE8Dj+27CoDe/6AQWAp+9i1anReuL12Wr4R
mBLOeVwUiEEkC9uTn5wrkOnLBJfqoVGYeWUQYOH0E3L3b91/PVeJvCTK25uv
joF86IFQ9hcUeOnsZjRtOw27a+2o65fmocDoDOH/vvPqsrBl2zwBHirpDLrr
EUAmZtRY/A4j9jffD3fw/CSUFV9+0MxGhnlb+dHp+y3o2zPVl+tLY6DX8DBI
kXUewnFSAcIGTBi87Mu5ZNkL2SR8iCfxN3rIYdXhQO8Xq2qPDvvvnwQVOK99
yYQRs/xBkVj0pHPgubd7YqbIsGNTsSZMbgzxPh1T/3oLD/hURZr9IzLMvlwM
fJvEjPE8/i99YYgZMzIZK7MOoUAgc/nOq0Z9KMOzUveCMh5yEofvPO1tAcuy
l5alRykg84Ti/ktvFmir/9LzTCjww23LSFhjBe2bsWcZl9qBRc9I8cp+pCIm
uXrShRhmTELi1G3nISJcD9UM1P7YgNjrb0W8sBqFz1KbzFtXyZBjA/a0gh5Q
calWrXg2CX64y31mo4OA4zlq43d0FrZTdJ+cKppGkkpnHnNbDsMX5eCQ00aT
gG++5ZF/lN4DTlXsaaHn1q91aqHV7wEw0WSVZtCiQlxp9075iA4kQN2juNq7
hi6y6F+T9xoDXGeDyqceKvQpM2xeyZqEHp0zUl3PyEhDrzP+Ap3bm8t52gWb
RlDqoJnC1zI88meQKlPa6AeVjSLdG3GjSOYm87fxs9Uo10bqrqJBHmrw9CyZ
WRhDE/srjx04MQcKUz6Fx979hdI7JFvnACrq4vvZd//KGBSG1piz8nRB0+d6
f8uzPuB9z+Hs79MUGHr0ZH8ImoVsbefptlN/0eL9vtuvDxMgsy3QT4CXhhrV
sqRsgzGo2Ptk6FtbC6r0ktXXu7mNrCz/ukxxjsPAjZRotYpOOPZ+STiwtw/6
50sFcTN90Pb5jQ71LA5S/LTjq330odhS4x6ZcRyK7yadsQtqhoyjhx4ke7mD
i9WhLzOviGDcaBjyvakDSAmqu9Lk5kArsOS/oNhZcAxkFwrnbUE1vz5ffU4g
AInL6V7wxWlgqaRerD03iYrayyR2kXHQceURO3dAAZxWSX4u0jyKPO/9dz4o
xgsN1iVsq47PQta/d2drPjNjyMVar/xuO1SxfxZoK65H8h4HyIr+BLhdWNH0
RiYS9PlcRXKvbyIvnn8PtnPWUTJ7JbO3AxG8U/v4R83HkAP3QVNTuyngVV4V
lf9Lhd8kr/0iTUvI6lvkk2oHRuxhZkQBB3kOavc3/5V2i0GKGjBsxTsHsg98
cDd42tH9y27K0RVUCJszZ9lnQ0Xn7vNG5A8zY1/Lnqed42TGpFctXrfdYsJ2
H7eyafqBg+reCiM+0RKkXom1xUcNgqBicPCVC8Og/YR6zv/kCFT7oexdT+cg
SdxmYI8PHkpvtr4boZ9v79ZwQHx0BTmErWxZC4yDxU4xLX51KhwW51YWqZpH
Re+lr52ongK1WcaDrY8yYIg/PZ/pFw3wM3G7guM6kFX+yvGuz5socvXIxrxZ
E9RWh7R1FdLAQkoxWuEdDh2LKuU9cZQJC8zLiDAHCuxbesjhGdOJyt9XYzP7
elD2MdIvB6wFigJbH40JzyBjfYn0gWPfUOY+FmLh00Ko6Qw3ZJoZRoKjZU/r
f5NhOeztLdfocdB5rv6L034eWbA49EW/wMH71TjXJkI/PRcX9Gxq0tH7QG/H
tFkqQNT3STn7vyAud7Nj5Eg70ufibV0oaoTmtG9BXYpMmPQ70VlTjQJoXi00
1VTuQGKEFHaoZ8asB3dxZbJNw6PR7zK1RweAN73Ui8IZAIGmd5ybM3ogRWeD
R0ynBPRCkgweqcZB3AOd0MvHJuFLVaDLYHs34K7VvPnXUY3+1Pp1/o6aBblo
G664xxQw2uHuoUyhQeT+yOFcFxJUjO2ginCXwfd7amfYX0zAQn9gE2YxByy5
Auv/STFitdrSG7+6iHAMl2I5r10NR3nkn8uG1aGwMvJFUaGfaHvz8wU2HSLA
V9+1K0WM2GR8tyj+Pg4MxFcEakk/0e4P09JsSrOQ0H2cwDLVDC3OQgW+2sXI
/fGA0t40KlIvztRO4KGB3XrmROHlvyiIRd/8+B0C2ISoTyQb0X0zCb95KX4V
rc2drSqLW0TFfalROX4UKIiKvC9/aAm5pf0h2lRQgODUPZh+bRkR/CbPuEuN
wxfnfPFaMg1SmqJ3yk8sQDv7I/83N5kwf8ZVgR2XGLHI9iqXd4nraLtU9uuL
VWZMVJnXrOlNFxAfvZx4WpeIZoX7EszoOWWybCWx+ZWKilNchG+JDsHT7BWN
14RZ6LIwbQqqHIPk2vyNlXQcqDc7kh6WEdF4uAH++eRfuONhfWK6bg6O3o7e
cf/xOtKKrWvY0Uufg6+u7+euH/BD647WKAcVUrVCP51ybUbJrhvV88lbiPS7
p3R3FgZxlCK+jkwacNqkcTzo70YXVng+Xjq1hZavFCdrr1MhksfaTg83gFqK
2XTmPf6isIWa3LTcHtDWqsqjfltHd+i0ZvDnB0p48dBP83Itmi4g7h50pftv
/4OVR3S+vPFA00DXrgAE37I7V3yeQH4OPN8WfOjcZZPEWBY3ANB6/U3H0wH0
2zRXv0KQDG9UdhDczQahZC6wq423HnU2KXRZ63bDa4nEKbVmRsxctlPF5nsH
FA1/jC5drEbXCSQVN3YGbPqIrIlFMV2XX2LTN9/0g2ESZ4ztVgVyjHD3Hdad
Aau7L7Zi7tbBxI1i1xnSf6Cbyt/e6EvnapvZveLwCQ5EZ0jEZc2izpMs5tdg
FJQ4ZQL9mqdhK920VL6EAhd3fh2yCSHDkKdTQ/9SI5DeyObwbZIgTPl+qiY9
F/UwD44uu3HU4GPmRd41AQHrj/3ZJCZAsdyDa0CyG+30GnPYpPu5k5WhqHzN
BJCTrfkbJXdguTf+q/l4CgefXCgjrPdyUa02ud6Ihc7p5jfde1oG4Rp2NE56
eQkt1D2qtDSkIK+3OuEfOinQ0vGY6Ht9DNEux+f+/znCBwXLgQLpVHDNSDXV
bWbAMsLvRZQeZ8ZgQsMtsZACS+yVDVJf8OhQ0cGrWhU0uH9M6Wnz0BBysSuX
xHjHQD2gwPsQnXusDvb3yIbQQIJR747k9CwKSJjWkmtgxkx405UGljtAR7mZ
EhKwjWTCYqjCJybBakGaseBBMex417ARWzMOmu2ZLgV5vRAZZnCvaQwHMZu9
iU3Dk6B51FQg3X8avj7a562hSeckbdv2r/LjKGOHWPZa4yREXpD8RVyYhQBO
s7nfFmuIMyB4reoWBahD2Rd+fMSgP0kJxRCpwFhQOnkutBGZ3CCF1S8zYff4
Ut6NjLbCOLcQzwdPGtDqrw3ew+Pg5Dda+6jlELw4I3aSSZ4GlQerVOTO9aMD
xRZLM0dHUdvpV0dzUzrgkmR+//dAPMJWPS6d0TuCKgu8rQl2aci7LuO6M1cP
SuTcbbVM93NV4XchpcFjEHXQ6uCE4DSC7LkRkQIqBGy7qcle6Qf2UPtwG9YC
+Pf1bfvwMwp8YLzRN7I8DGqV58TkakYRQeFjyCUcDgqVkmwaTzFgF5d9dh7V
6gGJZ63fY8NaED9EkEOmmLCahB5o1MODZNaT5Kq8foi4/dS/SaQXPuKfl3Tb
NkIL7YPbbZUq6Gb9eYR0oRp4dfrfMwZRwCy+XuybehfcauLZLpOuQiWiZ8X9
ZP/CiMCEMk8rAVaf2T64HkkFO/bEwzd2j0PLj4eWWgf/oKV/0ZcZjWYg93eV
f4nJHIhvR8/lCK6iI69TDEqJEzBr9ugRy6tqeJv1ZMR0ognNh0TzUMi1YMM2
vF92lAiZjSav/31mwAJu7DLis8PB7Jkc1Zdf04A15p/5axW6f+UFdLA6dQBl
gvnwbMYaKk8Uk7S9uYosNkka5T/p+Ro+GXRTqB8VhRo4EjPwIFz90r7ZmQbS
CWAdcWsZJYhVj616M2MNr+41emlTQGWm4iXjDjKSPRHNqKOyAJb+7B2S71fQ
9QcaxBjyAHRLujHn6tDgVnlj9wJdD7aYspmPxA7snKFrxU0SExZQmLGqb/EP
Ke289j1Rlxnbfd8yQpXl/701yfnQbCPC72MWLfg6DZxdJ97de9gHMHv/knHj
GFxcLbHWvDsFmKDwfB2Mw+O3GrspgbOA/R77LhU/h8RM5ySvJI+B0XO9Was/
s9CaXRnYbjKG5F0usXotzQCXmNbT/SYdIPpAaLZCewE4Npjsyn+2o+jUC7bx
j6mITashtEG1F8I5xQcKuKhAwf6esw/ohHtCcO3pxXnEf+cs4a4PBfaMn/F/
tDKAvuyam6N6daJwVhZHPtlmIIkL3X20vYCs73wiHodaVCXJwjdfUwhVR3ib
UhraEXjE/V6k94lkoa0veZ7egD239WfIJSAJUeNU0vY43FixXvKJH4J2w2jl
gdR0SNU/LDtXNAOQOBpwsn8IrL8EH9jX140+mmM65tR2uFLi9tPQaRNRsifs
blwfBu5mvwdAaUeSTge06oOZsXin3INh9nOw89Eg0/3lfrjDej1D/2U9RPiE
prddosKJOdeUuYhOoCy4M17Xyof7SpKx4ZNEqK85EHR2ahLq065bvLObRGbH
eZc08iaBjy2a4nRnHkTaFGsunyGAm2BabKoVGfpvWgpw0PVYPvnvsdcJEpzc
w9EQlU2CPSonHGOaZlHg04dS+0zn4BZ+NdTNqQalfSMc1kwoQu+S8eudtB5U
qfs8ovkCEfp6DK9du8+Ive29O+/MQOeuXY6ZZVkd6It9x6by5ByM1z0U2ipp
g/9MrcPqZqbRm54YrlDFabTHFIuZ6Kb3G60Po6ksI+h64iv82f5J+MC0Khgm
QgLNMLnr5U7r6NvN64dm5xkx8u+zasfZKTBzvXUuwnMRicv0xww8XoC/PvEf
b71cRS9C7+AE1LrAXtTN4YonBQ6snuNATQuwKnrzHRMXBb22h4W7dcxY5462
M9oTDFj8+cNPPnYxY3lLr1uSonEg7echr5H0EpY6v7MySONhV9fvTM25KYjd
eX70gFYfYLyREUa3SeD0QFD7ZtEoyHBVt854TMHY8Y0tJSUcsnOtOWT2ZRri
17301NTmwCjpSDkTyxraXXopb7WeAjtk8nee5viN/D83rz75Rve58T8SxY45
oGP6lesBDyM2IKSXl4ej93OBEqvVMQr8Sd2t8tYrBUR6Ff9T9mDEemdrRfQH
KBD3jDHwrQIRrZzZjEpo6Ub6GXxRg2dqwTH8uOjh7Rkksjtqz0eBT8j4YkGt
TkIe8OZSjFta++jcZiF+gt4L+S7d4b7OTe/l51wOHtlFQPzqfw48U5+BkLfT
HC9T+mE85dVBFeFfEOhSdsN1hQoiAfgeNqshUBNztm+e6kMxT0+ynNcchEFd
80qKDDM2nLVC4FGZAyXRl6o6xmXIpmaIOZzKjDHx5kSXJxFBrogoSqMOQPUB
om2aBT3vipu5d1tQYHHhptV6ZymMnBDb8epjBvy8U5eQc2Ua4uLXcz13z0C/
vfRu1ugqtKl6uu9pGgneXQyb1q6hwEGtb9m8eCqs/1HcKSRMg1P+0hlCQ+fA
4CzLkQqdWWghYMo5dK77XmEhkM2xjeoFmJ0VL0+Bxoc+lxnqOLQaswXdHv+F
dr+0a6aXU/RvQ56fa4IEn07tLm+Z3kSO0ULKrk9xYJeVVWh3JQ/FaT4fLf8w
C7JXH7w5eXkYKkrF7CT3MmHDLEezVgeHEDO/QHiRFBVYPllE/J3rQnVI8Ivx
+Qn4sc7Q76dAhjiecx7PLm4gyTeyIT8i/6FBJMXSrU2C42bNLEEW46itWGXg
GIUKNAq1xFSjEU3PBX3Kv1+IwH/KqaiY3qsztX6r0F8fuAnPqrHRe0f34o9i
lx2YyZuR9twWZowt2jubaZgJ81Dg+eeVMAYW10oNmENTIMt/LSAHNw0O1mo6
Vy8OAuvbL+ky2RPwSPlL1r5PU/AwnYX4+u1f2Hh1e1PYcwxM+gpuMnEQ4Lmf
7qnwB4OoqeEqZZMZT+/hU5PSt/Hg6Xk9X5NMQGejFcUX1eh7KzcedtBtCPmF
obBd7yhQuToU/d9YK5If7ng0N8aALV47lNlt3QIGbxjCPXYtgKFMCbFkfgJK
xmPCc3pXkQC/uY3oIAW8Q5MLjEaqkftTw9St3Tg02f0TTapnoQnDCrdqt1X0
4PKDp7XWs+iw/rssBu2fsKAtduYJUxfi002vK+MjQgReSSYgBQ/kvndP5h4Q
0fc9JoLbFCLYap34vj00AAEaNWKv97cDYvy8wnerCZ1N+OnsGT4PtzRc/t3v
HwBpOyXd3sZaZKmdfGupswvkyMX2phlMWCSO+cC9X02grFVgXvOnCS29aWSZ
Hx1HBntEBDyypiCi8pR0ukUvJLG1jpmH9KGCpScb3vR5Eq9p9Lm9+Q0/NLJL
/J64QRXXOV2/NjwIDlid7ujHQ4n4mChHKh7FB2dqyXRNAu04zz6PkUkQ3rWd
XzxBhbT9Dq+J9N+be5FJPDlxAH7/ShZgi54FQ6uzX/5rmoWVs++HFmOn0L6m
U13ZTZNwo/Hl9dFryZBQknWvqHMCbJri02roHMdgz/lUtZMMhSeWAq0tJ+D6
Bc2FayvbiPD2HkvdbzzMPTsnqRebjrZ+dP2agXlYrHTcp/GwBXKGD01U1M4h
vvUnVvv+zaN3s+ttWn1UOJUnIzEyQkaBJa/u8miPg4dKP3nOmgqeDQH2vt40
MD71vf1pNyOGk3aKTZmeA/leXd6ZSWZs+4fdvIraPPg/X7AMcKCh3AjTWF6t
ObjptDz4H2su0m8lpYa6rKC6Pzn+Pm9oKHmfqEpo0QgE3V47XCFPRoXRKlhk
4jxMe+5yT/xDo+eI8SuHlBV0SnsobCOQGbvdM2aiiP1DDVcbvlNcmDHzeIvd
na0T4LvD4Msv/Z9w6EDKZP+ZcVDRD/z6oW8YvOXyuZUkhmD+6BUzffo9j3K0
KTtQp0A5yq61umsUdv+Nudh4egpJPH7xs5p3HF7ICO1Rn8FDu0Vu3rkNPHoR
FKQdukGFFoWvQgwni2E+6ZLcVXESCF6R4Jync4VJZ2hwczsT1vuEYTi4rAtS
pvKobYgK0S+GP9rKFMKeYRe96dAV9EnNnbuM3i+fDJw53Vgyhl6Jz1/J9OlA
RxdLeN94dQB7GNNd28xtZGmefvEfZyKKOyLmHGxbhuruu0QrO7eg23E1stLW
9Dmf/MojN9MMshFBKca5w0iV92i8ReUo+Fi9TQhwHITdF/K6pDULUaxs8Jdv
X+fh2pDjw5+m3XRdAp8SUzdCxUZ7MmJxIMwVVTcWyIh1jhZk1zxogve37v2z
PNeOXoxzeU4yMGGDr+a3kg9PgVayoWzjhz6onNg0xP3sR2KubOJVz7ugd5ND
r2ujCMR15qaobjYw3PykyMRhAhYJoZbu1b/hpd9K+tUy+udPpBDr0vBQrkRY
IF6kgal3160T5Blg8hm7Mj5CAeT167HybC2QFYyoiGcOdu3EX2FtmIVnpxs0
j2gyYlMhtrY9/gQoq1s5kndgDPYqcCtsiFYh79xDbrV2HfA5QAfqP1Dg2G07
Z4dE+vc5lhbqKjoC/+Rmins5CtDfSo4GWsE8SJDQ5y6RDqj0CPiZbMyIJR/q
MKieJiMZ+UsbWWFUgNGmS35pQ6gwruCYg/A0mDiTM3Nt6L1lf/8HgZ3MmPyZ
IU+BD8zY8VGH/yqO0UDvVb9swp4JJB0bmQEXpgGbMlcfkSlEGlotwtb5eBit
sEm+XDwPvNkvVJ8dpwFztMesnsQyGmAtzXpTyYzxbZwsGpNaQuV+N6T++DJj
NUV9h3bpjMEQT0h0hkYZ+uXcdza2bgI8q02zNS7gYTdqadixNQQ+bU35yjuI
IPu6a6v5OQ4Wfz8zMPg2Dyump6QqfPGItOv49dX2MYjPeqRnO0uAR55nVKuv
TKHZg2mil2YpwNS58PiaUgEkrQUMsEgtAHfY9wTz8/Wov1lH2dtoFcWdVeDp
JjSDmPaQYH30AoypLcy8c+mG8eAuyq6dNKT6yObW6clZuNPqzMY93ofk904l
OE2MIQ39aI272qMwUMup6rk9ifjn94FrQzoanzmkrJeeCC+/DN6783gErWrs
jbd6Tgau4J+Vi8ntkLyrK0qdiYLYhpQ9xr7hQYVAkjEPHYTu/iMvFHa1IjOm
qx6+p2nQ/kRsVze9f2euedgvdvShlPsmLelOeODfJytj5LKI7M9qRZwPb4WI
7MDTrAoYClLtGBMXYcBWZu8FPbOcBEPreIWNpH5wWbOg6kvHQuXLmx9+7RqF
dCaJ5CrxWmCRtRhDY6XAeNvAXCdgEkSHD2g6/OqGTHSD08m2A/kd/6HtwDkH
SUfvuWZ+7QdCX1D0aVUyOHYqzi69IcPmgMPHSo5xVJjsK/nObA5Er+yxu7c9
A0NaT8UmGImIiCzqQhPp+Xp59NKXjN903kvVNTAaQFmXvISTccPAkugo0cZL
Ble/g/oe9L6e9cm8UXy+F15t1OfKr5Wg3ePZKTMjsyCtxeXDP5mPCtoTnF4M
biLxEGblr9Fr6Nfw29Dm4Tnw4fCy0Pf5izifXLNZwoigsCpU/qRhAX6PEgtv
Dy0gn2cvXm5cZsQaNQ/e4ZeiQA+H6NmEyA50u/HzyN2XZLh1/gdhJmkUTZJt
+Ulh0xC+dyvPyWQexSJvkbIrzJhIRAJVGceEeYcrnaRUMmKLI6zfHn+sh6XE
Y1rMQt9Aj/K46ePHMfAu+HE6WLUaGlJ+KgcVjUMmITNNfsc87H48e1NfZBqe
+RUOaObPQzvfxyPDT5bQhXHi7nCbSWi45LGYaUQF9/1Tz4ZkZ9CjSdtfR34R
oGFroUCQ3I56E6RzndJokCjuBL/WqtDWDsbXtVYbKK63QElFvwBxmz41j6fS
IKxm7reCQhPSu5TG/3KaEavfryFvl08BqWTN8bPOVUgoa3KPRWU9CuV88iB0
dw9ElMu5dqvPo18SweR3VQXAO4Q/xxXbCsWf8kUc+LpRVRiX4I+jFLDzszWO
zfoDF44PJIpEzaCJpMzJix0TYGgz1laxgIOWvXjqo3N/kH/v3suZ+2lAuKHm
QkithPn1b00beSXo/It5gWd1P9CL34Ws+lxMWM/evqTrK00Q9Zjpk+ypKmQU
dktDgocZG1Cc45n5Q4T1xxYPD9vhQM6F5860Yyfi3keqkiMMQ2a31brFoXa0
9CduVY21FmiC2W9eLU+B/b2aHQMZQ5CmyFHz9n43ms4WbtTpmYMHIfiVNSIF
+PSzx/MraKBGUyvSPUmGCMHGIQ3vWuS8cfTScXs654i6NaA6ErA6i4q45DFg
AeAT9TJ+FmyMPc8aHG9Bpo6d77Zn36Nk5r+P8bE9iPy1Ot2JdxYG84QO7fnL
gMmfq+UPzpsA4esl6RLtWSC/cu6YFf18z+cWFX3umSj8DOfHw6U9CH/w5rSc
DxkNxWpHGivSYPPj1oXSxG7Ua/1epsdhBkSNW6MHxynQGngtOTR9GX2VYK3m
lVxGpGlO5u1VCnTIFl5kqVhGRXEu3d1XqeB/5ShXisMKOpBxtlVBpBMKIwtb
ZzgWoMIjIGhhaAF2f4tjUg9jxIhuf36OGTFiTjlXvEQ6NhAxZDH+aDIz9t+k
jpfa3nSQJN4NMgyshFED04nV30Q4fVyoHxkuoCHLvUade8bBPPRgxdlzJBj8
fMx2U3YSugRFfwTb4GFRBZ4SRSbRcFenyvaOCXDkaQ069YwEjodUXMlvV1FO
U5a7uCYJdMsF4tRu1iBXl/YVfycqqDbu8YyS+YF6bzP117FvIuns0e5klXfo
c+yHw+0kGnB1baTqfR1GTUNX8pLqt1DpYPT2u1UqUK8fNXep6ECVTtTzX0ld
yJPitKWo8xeWZT4MRGVtoIOEo8vLm7/g22CFebd4HGK6lTMQ2DOAlEuKHTir
ZmCEanr7CqkdYUr/KTT6jqBFhWxFASESrIrx67UU4MDn7rn1nPUJVKnjeCli
ggyvF1jZA7ZLQPpboqT2gx+o9eyjqOzzNSAiZHfXu4sRM/vKM3TJcQCOtapr
7jt3Cw3fm9Dj1WfAeFnzJcP3E0Dqobakp/IYSEf+84vT7UND3NKzoVxzcKGD
tYC/rhCNOjTumTL+DWPnqM5RjiNwZ/50pDe5BpqXtD7xmFHQi2zjyAtvJwB/
8CpX/SMihN4uWDHgpsLC8MCQgCUFGkyHrDoEixD31oBV3UMyXDY3mo8VIQHb
nsxyQ+E5ZM4r8Xd+Ywowq6J9+7PaId6UtlwD9ajQKUlC5X4+sG+VxmqmT4FD
o5NZYQkzJu46/r6EHQ8pwseyjvwtgpjO5iFGNjKI51Ub/W3/CrLP7WN2fl1B
TIZ8n37S5hAms3RxZo1+j8RT3JUeA+iuh/zFlqtjUCHF5rQsQIPdtLOSwUvb
yH2pJvaHMxN2mF/w8Cq9DxH3GoeZ3CEhQY9br53+0eDHD5ET3Ix4FLQgoxnv
0wJ7By5fD+8lg9xCWcnfMBoc0Iocf2g1jb6mfSy3ZWLGxHzDFNs8LcGz99uF
puZN9Cg7Tm16uBv2NdzjM73ZAsUPBR//+28SUvqd2oyMckG2PzbK6A4eJpZE
Wr6UEcCfk5zlX0AEhzP1YmPEOeDRCxH+ljKELu7lz5LgJcBZcvaHAVsSMC3Y
/C33X0GM7Lg9An8ocKT3rjjfjUrkf4rGnsZP56GA0H31MXTeimIJ7tFgwgRT
XHN9tlNR3dPB9QdBNFguyld7yNIIHMlq77/JI8j/79Z41AUaaDSYW+6504p+
q4qwZj/pQ3cz7E3Pb/XDb87Q7Gf5s8jA7I5VpEslSG7edMGel4P5WVHZycxG
pPrG++hmNwVeGYQ+P5/SDESWP5/sU8bRANmnQbaVCo6c/whbmTgoK6XVvZls
R5x/jlyaGKNAnJjT9j7ROugeeWY+n9GLmqOsc5dZm2HCzFa4SZ0BwxFz5KpN
hiFbx0nxuHQRCsgtltfzYMJGPtr/MXk2DX+GQnyx6ziIHhx7zjPzA4LxslGS
t7ugQndy0rWhCr3HdGIpBR2Qefvwy3PMVKi3J1wo1xkEZPQ2uCWrD8XwP2yo
ER8H7WlDaxnLGVAS8iRs1tD5c1X9iAkZD6eK77TcCRtCtgkhYrf2zUFxzZMT
FVYkEB7Ya2++tozeXlfNOBc/BTsnzZSuHKlGLUxxW98DctGXqkL73uJ69KSJ
hUBEs2Bl6lCie2cbHSx+8pSQjocXNzuIh1zrwF9F9ntrA51Pis01U2T84UKj
rwyXzzoq7m0e+nFyGWXVHeONG6fBm86I3FCJPyi9/phPge40xL+lvlWm5+4O
2abRvhuLyNrxmByDOzOWJHivJZDeX9ntZJcTBqnIRkjVaUVkAe7wtliePbiG
WOzGBsIni0D0CCuH8x0a7C1XF6mzo0FyoG+z9GNm7PUx9QPvOpiwcClMCGe+
ibQ7ju97RX+/uMlwy+dGE3zxHpe49DUPZe9b0ZmtIYIh9xeXw6Z5ECHf+9do
AQ91noyyi0NE6B0NMTSj88OhMdda11AS4JfLpWK9CIiHUmuqmD0JjaMsW8df
kaA0XPL99x0DiGlEzDd+Lwk4eO13KhDzUUvW67oE/gUo5PjGtNZaip7Gq1wc
+T6P9rFM9PjWfQPW0DOPRR2pgIsRU0/TrwTvZ6/ZG09Q0YcQb+3NaQosNXvR
bD62I9kb+uW0eAyd4TbUNvbsBRFLf2luhWVk1dZMm7/mj4R9j90nKTWD7jkP
YuAchkwmj7mJzlNApVL+WpTZMDrk4iW3UwaPyDbBJc8rJ0Hk6OMOnOUYSJQf
Dt7P3YDUD7CHDHvOwfR92az2mBr4Ud6k82WqHm1JG/gxE/IQ+03O1RrRLcSW
9wP7QOeRiAuvXJqKqlBJ4u20dV5m7AmEvH8fQs+hnljxuxk4CKIWpLW+KEOs
b9++EIulQkyX0fnHDtHQ/WNtOnVfM4TESj5Q2DULGods5tT/TsNiZNxUYsQs
Yj6h63WgnQCneLUvnLtKhnvmx40Nns3Aybz4iYoDFHC/yfHnMUMpOvzGMGHH
43nI0ic41omQ4cRlviVGEypSedZ6vreXBNaaOUP7/foRG/lqPctqKjD0fkMn
3uMQwU246gPnLOzyWG70T2HAKmT6DRL+4YF1+j+KsDqGXpFDKvrC54Fb5oxy
qsQ3hAUYHTkdR0Irejd0t3+Moyc6HzST6T1tvYq10+FGN3oioFMWO0CA0bWE
L3+ez0Povfj0O+9X0W3MuPjoCCOWm0+QysMoMCVRlWgpv4ye1Qg7/M1YgON8
L3hFe9fQwUfsAY1nI4HgYDDxOYECjmYZNaTIBTh0yOHruvks0t+noSFjzYxZ
Lw18tB5nwC4rBS2CK33eozrrFWat4Pz8meuSag08Ndz5XlN8GsJODj7gPzgA
L8vJ7MTCUaipAwm2nHlovHa2aH/qBBQ8C1iekiICzuynFMu+fvTvE29K+BIR
TLTbj++3mYeciAwZNt4V9OHtxdYAGSp81vB/11DQgy73WSj3SVPhwbX7QR87
GiF9p8tFNh0GrBXvfXxWswGKdol/O29PhXw+m2qF0R70r+DZCyFLRmx45EJb
3nUqCFdGXv5rQNcf4ZPjhmo9ij84peVn1Qk8G88d9N3ISNDhxZfbB8vASkQi
10SpCVSu7qFcG2pGMbs1eXafmYXFxn0mJ+79Ad+NrYnStAnkHc7/sICuV8l5
mpaLLw4+x7lZfORqQmudCxUuBCqM8lTq1JSWAO6jz6bkWgvq/i+a55lcFXDX
CrXnjzNhe29EnE6OJgEpbdGIcDcVeBb/uauzMmPsUW9d7Z/Pgr3QNSYnhAPv
1n0smik1SF/+x36OKgqU5f17eTWoAYmK7ctKeVQPmU9uH157T4Qz3BOdWcz0
/XkZOtGI70O2Hq77SKvz4MzTestsmQL8Q1V4AU4aVGHW5f/tpkHeycXK9Ix2
dHgQt/y+eg5ueKhKhj6Zh4cBpmfd6rbRSeeYhFMsRIjZ6jK9wdsB5Vxjl4Nk
U8G4nHLIqxiH9tbfSE4dm4eljZ2hNK5/SH3hFWepBh5KR/kHmRwKwPo1ftR+
Pwl8EoKUlo5VwdHq8B3VE4yY9bOgB2ykTpTu5CU+YUIFl+3HFdf561H2Icv3
psemYFR9z5y4PgWCtUV5C+zXUNRwl6ryjU2Uns2luidsHh6V86o87SaiqLSw
+NOuNMh5ba90mTyChGYO1NxU7EK3ng7FvFakQtOmW2QvjQKDN1593z7LhJ3Q
2QVJa8yYkDLF+5U/M6YYYWzoHMeE5ThXCh2eb4b7Y12PBmLq4Ws08Z4wzwy8
TMOxH+EqhggD3MWS8CmoanLh33OACB7s1q96pceBj2WHzos+PEwdvRhecWoG
eGzKFHzcO9C+KXat4L4p0M1xZ9bTmAZLsfWvH17hUc+Q9Be3D1S4buwceIZp
EukTnSt/0Xl/SjYBrs0XIY3PRrVFY9voyPWonSopv1C1XhCPkOkCPPkb3qG9
6w9ktIwmZ3Ssod6HjaWu5lSovO/ra1nzAPoFG5wDLveiW4tUjqPKxdBtFLOy
P3wN7WzZbt6rO41ON7pH2t5vAJfcSqtZUjWaTTscE64xC0mzzV7cLt2g/Gqw
IuYfHjXNuEfkBsyBL5+YYLPqGPTE/Im4u6MMGew3f63cP4hsuK6tfhwhQ9N/
V+S2k0pgxntP3a36BFSQUc9q6l0IJjFyXPG2dF3LfLfgHumB7PnD4St62Ujf
Kv+1vSsRcXXK5wrZE2HqJnE9xHQUOBzLB6f1x5EDcUPti+84XJp6dUVbugLp
/sk6WJL5G7oOnq69XTwFeM84ng2faXDnOfaBf5mIWNXyglVaCKDCkUXN+DEN
3ectX9iZ0PVs//b+lgoV3ofRWpxDCuFfZD870ZjOd7Uak5fiSYBZRocsnphD
ushEtecwAR4Fe5DW+L6jr0+Vfj1VnQbe2b0NBy/Wg923UHTsKQUCeq32t0m2
Q731HeOtqi2kpHEKTzg6DVx8kpRTJ4pgy5wgaaxJhiCjygOfcrsQw2ezc32y
FMQsWNMdcXcGqSxv3jeboEKxp99+8cv0XHERjA3WnoQ24k7nPT+ocOOdUaBT
Bg0UGZWo7ocZMY9/Yd9OOsxDd3SOJ7smM9a3zNBnZEwGTHEHQ5zhIkq9bV/G
bUqCByaiSm898sHwAq9QWuUq8ry6V/pQ9yJiT+LtaBCvhU2TrS6HgBkUORbx
RjCbDJU+KSIxiTTw53pRsCd5CTV8L5kRO8iMPTLZ895WfxMFXPpVv0L3IyFP
2d9U1g5wL/2mkLfcAGrV3zHX+EkgPEgNeuNSC57lW4PuwuPQnPn8T9gafa7F
MxaGNQQQ+MG/pcUxAbmqbCzeN8aRUEy++K69k1B1sVjr3dNp0GhWW7u8F4d2
Cd6Mv6FOg8bhTxkerE3I+QD+o+yFeai/ShsY1qpGqokWUdarjJjttS8nK29/
gmA/3QhdNhp8W1Upy3nSiFTszrnu+7iG7lbyHxZ+TIWx6jWTzskBROGvzIn8
XIEu/XtRKX2vD+5OvH3JycWAiVawpm4VVoJUWE3UDC0RPtxzC2QxLUFSY0rX
tbpIcBvqU7RCvsOqaCwnz4VuxItSUkgnJqAZj0uVoOtfKOGk5Z+OLqS3k+OU
2TIZLJ6wDgzQotAhCUN1ffN6JPTKT5I3uw6m57rfzn9hxJjt42Jwuj3Q5Mo+
yfC6GH1dy/YyY2PCdLMGPlhIECH7KNxcNsGBZYXtNTuTCcQjLnL17okB4P+7
Oeoflw3tb1Q+KZKroCSpVKXpyBQoPaJERvN1QYRon6KY2jgSm2It8nKbhh+C
RsI7P9Bg4+RvtUfxc7Dp0SAlpU6FHcr9nB9KKxAXwef4ZTsSiAY3Rl3OJUFa
4s1ExyuMGIkn6Jvfd7pPlbw4xpHcAsf6ooa+Ll1FMhacDQ4vrZCbVGcNkYUK
XM7WRlzVDFjqKy07DrYJ2JDm8HYe/wmxBQ5mI9IUONTd+sZvoABl7Q4vOH6e
ETupiO9uV5pFDmff5xg1U6H7ZHdD8FYHamO/2pJbRgTGuhl5xgwqJL08UDdl
wYQtuZk4RLswY++9g5iPXqJBk5tiL8cKAeU2s7sP+hJhh7R0+/GEHqS1m8ix
2NwHWaxHZG4MkOGG2TEhGjcNrN5+N2wUXESvexzJHXLMWOrsM0r40jKKZaQV
du5mxoasP+wodm0H/yrFkRGFFBC+9yhF7foUiC7v/5Or0AMzTl5qFtNjMJPg
l99ROgOjoytoKZru47uD7/bkkYHjPKcjRRSHCrizJA1OTYJX2dT3L90z0Bq4
ymdJHUOuXvez/U7QOUNGrCaKoQ5dEsw4mIOjAcX4UDsP92eUWHei7+2jZfS6
MmmompSARkVu3Wf2X4BHhBD+wNmvsPvFsqXT6ALy2xUGAcskQNTw4yXRfxDD
pxkmzudDKGxkqCL1+DhQgl3PR8EsCorT12A2LgKTjf96/9X9hoEdfBKdG93o
s8Fg95WTdD6fN9zLIPsF6V5nibOizqKckLkdCgbToGgaePTXHA4Me/OiXSlD
iJIgQdKVo8GDzolfg75tIHwmRLH6XQs6HNWTSRIdh4upcTE6S0to/OrzxOeo
F5QEd9ffkXADgQvZXyftGTCD8bOUmHMEqHis0n1zHAcWC+I8MYUdqIPb8t04
0zi0eu6JaW6sR/W361JS3dsg43r6HnLKNKQI10T/0xiGtbVfK5+FcMgxvrK3
lkwClw2BEB9GHNSTyfpulynwdqosRf8CBVa/hUSm7MCjSxe/3Wj+R4LkM3KH
v/nPwf37GyNW3BQ0U/ZXZefzaSjR+x6zXN2FEj7H5H760I48nLlGGl+1w+8J
g82pTTL4Kfvipc8xYY4+tjdiEnBwy+vD8tfwRBCzuHT+jDUJ0nW0RweFGlDt
EAN/issWyiTyxuRPr6BgNs+JPe7zwELgmoof7ULZj7DnWauzYHutK8ekfAGU
Uk9xLrtS0Y9dnhvsDIyYWQ3bPd/nFLBwno23nMehhvq2SoGrFPpecjz+HD6F
Ro9MV9a5D0Fh5B7q+a4Z9JnLMiAnigmbP5vMOh/DhLWSl29zbTNgx91Zg7z7
X6MdQRW+Bj41cEDJ2DdMDw8/qEwHdWUTUdlY35WIl5PA+yPxhgq9d3jhby33
XCVCZUJhZH3cPIiAd/TO4AVkVp6OF7g6DfOheMV+BSr8+VagTaLfA/kzZnE9
nIHXYY9vFb8cQqe3srg1pWjQzLHNk1EYiS5UCvx1il5DZSfcs6Ym21Bv6eFD
TG40iOvBVWUt1aJKnfcRIrGMWJvkn0O0Agq0JrKyRFxIR+PXW30zt4qQ+3CH
kb3JEAT5brlfEKWiU33DNIpBPZiIF+rm1naB++PZI4d+NaDB5BIv6fMUeC7G
xqLyXzIkrlo835U2hRyfOJ/P0Z0CBxlJg/MdE1B6KyiAhdSNbI+8IWhuUkFm
7WOnpEsJeqfH4pFvHQHhz1nLuZWaUGqwh+gx+r0e+Xvoitp0AwdiXGe6GoOc
HcSpZ/yZsKr8e31/tGZgSxlvN1QwATj0UIOheRA5Vwhxff6Ggyk3gbff9PrQ
axZDjbCWdsgqeL/9xo8AWavu9UolOBhx2fdpg55rSs8uCQVwz0NI6NNrCxUU
KFL4mM/2ggbw4LIhsYgM0TqSJjv29iE2zSrCzUMECAt5deBi+TysLZmsmzUz
YGnkkTuPb81BxpPorcqCTNRRZlJ+ya8Y2j4+jIp5RkA74zO9W9nnwJ6k1HtT
nAE7c1696tzMJGCfmbpt3GrBLyk01eoiCRhtLZM+jLeglIoLwuJHcejkL5n3
mlqzqIDkcudeCxXiXO0jt583ouPEmfDLfrNg8w5PxRVSwEEHs55XWkJcdVTa
GeIyesLHwmK+QYGT8mljErEryJibOVlanAqXT6jXn6xbQQ82snXjzmQiX87l
M13faSDFxFOQZ7wAxNR9yVc3GLAjcsS+w/vp+jdKvxMs/w85/Vl6pyzAjDk+
Vp4ve1mNLj3slhkrbIETH8kWfLqzoHTyh7ccjYb2C1hmPJrEw6tgnPipa/Nw
JbfnTljbFNhL7iO5uk7B4HqaeZLUODryl++nUNEkEP3U2P7Lpc/9bURW6OQy
mtLJhws9JMg7M691LqEbGT9gYkvcSwVPWaaXp/TSIYJYY3U4dANJovdK5lId
aNAX538wnAa9uf3yljE4ZLjTuOx20RZa5GCRaCmnguhRJZP0xRq083Hoabf9
jQiFZLOZ5OJA87qUgNH+f8jnutlfb95GGJz86aByuxgWP9wMPU/sRBn4nz6x
TbMQJ038sso7iv4obPw88V8fOq+tYkgKI8HOsfXKyMUJIAdsv0y1IiC7R38S
X6tSQCT69bbzwi9EFmicML2RCcpS1jgBuWyUNI1KpPwZsTu+K4EOJ0bA/tzJ
Nzf3YBB//uax+BMMmA8+li1rgwiZ+GD/iZ4JCLhWkxLNikP2TbcQLWQOijZL
9QSfNyP/lAvtDU1tsHGpc2QsZwyaDO6KS+1uh8qfERT5aSp6n6ZeLvd+EtK9
OhMNhWZg9wX7ykz6/OwcqQnq7hTocanK33W/EzEKMr6VqyLDrmBhVU0jEhx4
ds+aLEZBr6RXJS4HEqBOlPNE9LF8UJK0W6wWzEPtzKF7ugeK0NtstW29jwSQ
73ZUpqoyY2L1VHenu1MQzp/sXLJQD18i3eY1L5KB6TgJ50YtRCVWPC0WFquI
MZxTYbGbgFr41uyVGKlA4A39YXe4C5WpmGquXMRDRw+T+dYMFT5dnRqZeruF
OCIPa0hMMWL5RRG5ZcxU0HoTYGDgREXmEkIg84oGEU9LWM42EtCsWcmimuAX
aHMvaAnYS4ELh+bdi/RoUJFXy6BbMoEeF7yKStRmwhaClz1CYhtR8rvj3tRb
dD1bHnBspBXCAfMciZ2D3RDmqZ8mT5gG8n+lDsSR32j1qsHw/P0pODLiEK54
ZQb+6LO1K5FngLC78H56GwlOJ3tvVuC70a8J99CkozOQ+NbRRcN0Hob5hAc+
9S2h+v1/Nf//v2wWU6W1T+K9SPLlMcnz2XSOs2vnZFtPhe+7klDhV0aM0fk5
zsu5HRH6BHZJKNDgIq/CaQPvCFTK5zthxZqHxsWtbVM7qHByfHTr6vgvpFzR
dK7Evh3phRYpWvwdgYXHZ9dOm5DR472FQWrHWqFQNcX2PLkZytr2t+wW/4me
vnNTu1tGgTyGycx3nGYo8OhD8e2hv4jP1Wp7+CsV5m204q8y4aF/cH++k0E/
siFmEkPo845TU9Vy/JiBOu/PHnvr3Ibm2HmpAcK5oB1YghyuMGABOgvEI544
ePjh7vDxTyng9bVM+7gqE4ZLEDo+0USAqTIb/WHuCTh0csc12tlq1LXOaz1y
fBCeM47yF3V0oz58osTxhD4I+nLZ0IJIgTcKbGGNZSPQfv39AZanYyjg1H9f
RbbxoGFMlp/cOQtYQBeMplBB2Ijr7U/WaRCJP1Up8XoE7fwrbk6TJcHfJBk+
nwUSHO/V4BQxWUbiqWxPY80IwL9PPrKluhF5WK/UBbhlA6ncTelfaB/af1RU
StxrDvgeZEdxTmyi6ztUfuQ0TYHY5IPofUkdkGD348g4iQSqHcEmAY/qkYvd
CZ4DYhuIwOVp7vF9EbEaVnxXDaHBf9kn5DeYEbo1p564a44ArQb6lmt7aaB9
o6r9dCcNtS+b625JM2Oj91zu3aqjAL92pP27tzR0+UIXKz6ABmPWXdplDmvo
8pzYrm3hMrRepf5Yx4wGeh/eBGuepMGS6mF76iATJopXOZDlyoRdvfDv5Ir0
Jkq536WxfZoJOzMgpzjm7o28VDhLfXl/wEWGI+elx2fg4i/b+V7dakT4cajy
nPc0TH753vXUYAYi25Niwj5Ow8unM7ICp+fh6D2RkY07k+iPmHBdvvs0wKG2
fBs6v+nYXiHmn+pAez2dVfL/I4GWQ7bXalo3Mrr35J3zJxrcqlE/95XijWJ2
sM4Lz8wg31SDfp/dtchpXA9zZaeCopxAUV3vT3TTlkfviCsNTeF+cTtVU2Bc
/J3kgUPV6BU1VbNKIQ7VXz7Y+/PqELwg547I3VlBJ33eHymcLqHvl/jVtM9d
wKAwyHMla7Vy519H9sZhCtAWjwtFrY2i8a2zP7Sf45B8J6H4Z8E0dBpQ8YZf
8OCb3p6IoBdlXrfKsvQkgeEl7rtT/BXo8BJP5tSRfKTgQs7OkO1EQYyFDo4K
W0jnmYZwVc44vJZZT9tN+IQucEFviyMTNvpYPsF8mwS7Kcd2KadPwLPaAPEr
Wl0o8XwXh50fFdRracVrxbVo/2sf7qOy3RBi4GhqqzsHzcdO8DqfJkLWLaGH
EkHzSOrrI+46xRno2HVmItuPDKRikTeRJrNQeidDLFeBAgWbw+pfhDpRi+ep
Gz7SZHh2L+Of7ksyVEnGm5o8oSG99uGsF4XzIDVmsV/bbBxtknxjF0drwFVs
r4X/BTz6L5lt0rdhFl4JF9doP9hGgsZm4/LnpyGMPDS5lGkH9rpT12+sz8PO
+7s1fgY2Ip+0PyMhmlQkd6qCcfrJCGLtW5t1KKOC0VWezGWNRjQe+XsmS2IG
bgr51L6ln/ug29Bk7Ncy0hmP2VrPYcQCupWGJV9TIMb73gfDkmWkrnLkZvw6
Dcptr5QRutbQ5M46PumsGuSzmj1wLIECRiuyfApHF6A4bS5wVZGALi4uyNiv
MGGLNXmcfEMMWL5xIXWqlQkTr83ymPueDXPh5o1lxDaQfi4RwhhBgMphru6P
YY0gPPnHZdh+HNbaPZJPbM7D8zVbYn7WJPSKL7wQSpmBkXSG2OelbehuPqls
UHEW9HwqR141zEOUbZtggOsSslrby5d7gApPaA51/74Po5QPosfK6HrCftZH
jEd1wr+qBmZj8hYS5xUk/QkJR4cXMp4kiVDhdJxrNNO7DlTDX3xQRJgRs7++
aRxH79Fl80/Lf8uPIR2HnxVCzT/RrKPmDCmpHy6JXYnjWKSiB433Gc86NIOv
YbvPxrtu8EhO38suVIm4/UPZg87Ogerp/xQH2z/AxhvsYLw8DqkX24cofJmD
v7SxiT07JqDO9u9l7St9yG5MIpGHnoveOXz2sba/EPF4zf7XahjK4H6pmxVU
hu5JJw1UWTNhXhMRfa50v8K/Pu0o61cNr7/9jhjWZcJm3w10Lj2cg/NOKWeb
yiaAp22+3bOhB/EXbLv8pudTwqRefFRKP3I46sssXN0BpO6BW9V+M8BWlv/k
mPsc4GxxZjvlcEgLiL3ORmSYeCBdKLtFAR/yC9b8EiqYNN36zttOBXufCyM5
CkOIqKdspf+FBMbN17xzmMmgil8wdxbYRkNDwqOvbs9AdYvNX098Dly0aTl/
yKQKDsjIsf76iEd57OrNtAtkOLtCXdxwXkfBicEK9axT8PtJ6Q3hU/WQaZe0
u/svCQZ+i2nILhej6c9trr+TGLECHklV7Yd16EsDqFUKUOHf3mObLgLZyPy/
DFahP9Pg1npRzE6GAm3tV1WYhlYQxwj7laGPm+i4dFaoHn3fRj7rGvPvIiF8
C5vxUwEarO5skbvzGo+eZgwOLT0bQkKvetpipyjgFXDO984kBTxf3n/f/IYR
m9o7WsvnwYw1HTq4P1eWGWM7t6va4iYTVm29//flOS8I/CB8XLm+A/asSEes
Bs6CpKCb2qJ0Dfo+GlQsKUIAu9tpN0y+ECGk9filc3V4OBqwowpXPwUvkt4M
MSfPQkTUR2Vh8d/ILkxdNdqbADWfdy0liRChZNGFspCPQ2/Lnvg73KbCsZ4j
2vLGBHTFadYjLZMChj36Zx0uh8Dvopu5WpFbqN1n4J9/aSc6UbGY/yKOBvpf
eyhh/IXgNLiXPVl7HY1TM/3uSVHB/JUcc3fOLxC5ZhwI91vR+x0kAdqlRsj5
eZCqNryGCPyNNp4+E8hwoQy0SZ1wYsfoBCksGU0RiWZ2VnMQJxDkf9GqACz2
+DTJFeLQdlm3wFVREsRH8l4JEMTDlhyOZlbQimxHz5E7+seQruJiueQkXR/5
tJZpmzI0FSfGp9mXB/gCC2vB1F+Qm+rA1yPFhKWWaO2W6B6Esdwv1P/y0uBT
iakPXwYJbQ4WXvH5NgOP5R7btz8fB82C9U+Y/DRSnelRUK/Cgzr7JcE3HZ0o
/ObEL9OkNvo+iXuWvyTA5rLiI+n7BMBlJa4fiCWh+taHSZInZ8Aut8KwSI0I
0Qta//HQ9TxhWmb7mUSBwwcCkt9fRogpw7Xofxyd9z/V7//HD5IkM6VCiqgQ
aWjqSShUshMqJBqUkZRUEg15lxAalBJJKFkJz0PZe+89znSWvb/n8/0Hzu16
Xdfzejzu9x/O67U2eRTOOR/xmpVggINh1GHRECZ++7Nr0eETBaSli343Ovbh
xTsmA94qZJj+Jfq54vFHTAbZdpN0FiyZpkiZJyVB+LV36KOxgMfDJG10q8jw
9tkWqwNppZAlUhiv2sqEF+d60gJUatDQ7624nRELf++zvdphSEJBGXv6GJcf
lVTdzoXxkvG1wK8Te3JIcGHlkFrnRTbc3fPzEm0bB/ZtrTQyNyUQf75Z/7mf
zYCzN/N7r0fxEocWo2M7uR7bZDyo/Np4Ai8qju01UGfABfvO0IOm5TCfcFTS
JWgG+/wnXptGT6Dbm2WtBxbfYe2W6T0NESO4jLjiZb0YC5rG34VPnOHAQeZW
g+XUMbRur/k7Y81LfPh826Xni/PIrx7zRcCAl+j2jlxyMCAZxrVkT9572gAN
jPRTCm9JcPS0TPf9mQiQWW+vt6x5CMpvf+ve9I4BgXqfW9fJU4HuNJNgsjgM
56PanWl83Th+r0nB/xgJnqiKfr7C5avUf/U566Ta0UM9eunsABtM/9zMvKvR
gZs37l8zF8EAx6asdf/t+og7H9n0d2/nIaq6bj7034lSTHnspxn4HxtYzj8V
4/2ace97+o2DQ7MYMv/j7KuzbNinbx97jNvvOmcCKc/Xh8IQdSC78VA3nLS9
4J7Ss4Sl8p9iB8sqYdm/suuWlEJYfbj81l5qGFw/IqoteIUBV0Nn7y8tFOG2
Y5s3i3uX4WpXWofA4DAk5WYrZL8bBLO8b1IJLg342dv45kAREzjvUk6fLM/H
jAzhJu2bqZj86OWFbZxEnP1Y/XSfOQ8xXl1YeWxjJxz9YuvXyR8OD+R2DORV
8hANaD3uUt1UOKo4GvgxahCezer72EeR0CPjvseqiB7Qian01NbtxR517bJP
G6rAvqH4v/v8JKAd8Nm79XQbZLprk4/Yj2BuoW53fgAFRg2nLynxcUDDmtas
HT4KK4bCmnI5LEjO+Dxl0lWPSspxg4VHuX5+yeuh82UGuG8tcONwCMQXayOn
Eltp8DHkMOOI3QPkzzuY9VmiAPKjnN+3LufmcyoxT2iaBftWryn6KUUgVkry
+o7dGQalKIvvJ+XKoDk1OiWFyz8rXZ/nvCI3oHuH54NxaR6iR0Fa1ubXJESr
hdHgT2xwDqi8ffB1CYrnl+0yJ9DgbWT+biFtNtz+6X5NjutPBx7ufjy9jI+o
trFK3WQHB4q6OQrNjqOYtyy4cciBBkH7urTITr2IMW4jDvzFsGl53v2KRibw
TCwUx/Wxwd7GLLxgEwd9eXdl7svlJXa2jM9HnZ7Ck4+sFQ6/5SXWOEjQwod+
AzvJ0UFQqBhMiQO6bcZkcA3P/EA6QIQ3pzPcbt0bgml6Xd7l/XT4PvhO6Jza
CKQZ/BFanc2E5DblMjuVDlzb+PtGlQMJzoX6rfLrp0Gw5dH7LmVd+Dbn5WcN
CzakrjVakcDXjvpbqbydCRxwMp/frWySBc2vzY/trxnHv9/rzqnsKMc3LRcH
psgcSInzO11UWo4WCzoKEv3jOHkoTnsTjQFLOhs/+MkW4ucaJaui1EZ01Nkm
6Tc6CI2/Tt00f8dE20PtCt9J5aCieOl8/rl6KNrc+nXn0Uo8r0Y8KW/BArMv
n2ueEytwllakE6hCxu0vfioT1Slw/LaipCv3d8YulTQOjA7g85731d08HCip
ZbbxufhA2eWi3rtHc9HvcLrPlQf1kB2S5E6fm0SztbAh4FUXbEx3rrralQdK
sipsUWsCcXfNstvlRApYXzdU7N02CD7/ZNrMCnuwzGB18aYdQyCU33zkW2Yb
BlG3nHz4owl2n0oQoi+R4emenY8v+vXB0wP93fuPjmBFs/ODzZYMCEvPqhxn
9oN65DpVAXkWON5yG9DVYoF7iEcyMXMA72msfFHtwAA2dZ1jQ8gosBZ3C0mZ
cPAgb3Xs2UYyWHGMpOLGu1GCEmcj6FuIwd5TTjrtA5jgsM7Dx5gFleOdDa6+
PMRP/mtmX8YNwsTVg22Tcf8gaZJ9hm9uFEQ4vML8//rwDU+j6lbvRaQopiuR
/ScxTOvFxYkCBlS1tGrp+lViyv49Zh7P6XCVvHH9wP4xsFOgZufwsrBsyL/t
JIVA5Jlw/br9JwuS2l4OGkwO4/PT+uLntrFgXHLviitfqeh+rOdKz3wN/Dor
47FpMxmXv8swEezlIfbWVcZPyfASTdmw+8RJAjHa69/Qfutq1L0gaZppXwv8
5FT+Rm4eyU8tL8n3qEZb1XivUjkS3F57J/FfKgOajkfsL3lGBZ3nQpOnFJkg
Ze61pvMxB93X72wlHaPAhbOzLmUkFnxa1zp+uXMQlyKjt+Rso8Ed6wHi8/X9
yPr+ITFjhg0F4vvPnbiVBkmvUuythqdwV8gXlkhFF6p9F/Sx7WBDTqjwTxV3
Eqb+i/HJUOf6RNXGmPRUFkzfMPDmvPsBvxbzPCWIEdA457q+e3cvSCqpZD48
z8FA3S0T2qoNkB1ssHj3bRtwJMT9vW7nYKC8Vk6bOAt4S4UnfK+UoKKXl+Fs
3CBerbhgGdBMgurguPUrnEZgWZrY5HBzL2aL15x/95ANGYxDrSjQhMTb5J0v
xv9A/e5Y4xqTKnwa+9O9S5eHyPbbyju2px1OxZ5z+XPmF2BxVG83N39r/hMZ
5H9Ag5rEHSEnLg9DxJ6i3Kf+/ehM4h37ETwA4netQpdi+jGtyfry6r0t4PHr
EpFDIUO51YlNMu8GYD/P4rG+2BHcQLT6roCjEPDa8cwuNxZobtrbNEDgABzq
+NerwQRPuYobsSm9yA4ZM7tynwLudm51vY3cc1Jpb60yJhCvxB6Pk5mjw9pn
0mPHRBtwmr5B7sDtUpDNTpOWG6Rg7OPmipZGOhyif2z9+GER95/8TfibToI/
khYS6yTrIX/CWsKNNAr3B8+a6z/oxHvlBc8Ve4eRz0KgnT+ZjHeoPFa60dz8
XVu7pHrsDw5e0+BUJ9JhX6t30ftnLIjVfievcn8MwX1wwa95Cl/JWDKzE1kQ
XlDjkWEyjcTBfTtXVLJAQtGgIosxhZ+yV6wqb6vDIqPTRcdUOWBqd9Hqez73
ecsffnu4nkC8ljx/NK6LQJxwFbJ+kDCPE2DXHv+Rl1gW7XvZxbgZhbv+27xm
rhEWtysPfOH60wqHEfu0bm5uE/eM7RInwcac35qpPgzwqqjV6TtLhjKxha/6
kyS46rr22rK6bpTtGgkwjyHBj3ma5mcnBrxvuFnr4TCBjToH7XdfZ8BOnu3h
QZv6sFXTuzuphwXNYgyj4++KoC6+/jH/xAzSbcTDJ54O4K/AnC0fuD3zIF1N
9eFqMtqWCfQMP1vEM97Wb2/cYIPb9/R3QjI/8DOpJ3qnWx6uo9f07csfAOn2
INsDJvPo819WjntsA2SFTDS13S2GCotLBiXfynHUN3lA8QAdiqqX+240Gkal
ZZKWRM16PL3mIkPBmAElIYkepG0jsE2VJGS3mY4tAjOrnmxggX6nfshWyUY0
eh680t3oH1jffxKVurUeP46Zs19u5CH2C3ZoMzl9oOGZ7uLzohI+0hP9uyUI
xO6v+tf4J6hwrXlpRb/RCLw7aEd4NjiIz+u8LwQ5cHvslsHJ+YF+vDagar2V
twUCIxful0UOQqDZ9xNa9GaQR09WG5ODO9ZrKsFZEvh7+3gKytOA9+CdUc8+
7jwrVJkZmbAgis/S4tRYN+YHuJ7pCGXCtbqemfXcvHztFRxwMJCFN1y6oneX
U2Dl9d3/enaVoEK5p9qnJ58gosxzRK34HyoWHF89M0UBfHPaXpfbxz7khcf4
HwmiBV4ZnjGqh95fC6tbPjDhSPnDERPXStzbRrepXZpGhmMon7zeCDaf+fMm
vpgFLKNDjg2UUoza/fbRzn0j0NuXOdcWwwZ9Lx+5fIEFLCxrQSMtHqL2kzIq
qZrLJYwVkqZpHDxVGKRgwM217TeWdI0k6BgoVxF7saUc9xbVx10ZZ8IBucbE
Yy1saA79Gv1Fpg8tqYd9nj7hIXrzHx+/gG1odtPm6Ja0WbRYoa4rwsrH5omJ
vLw1HeD0O23Pbl4KfBL2G7jwowW7epRrFJaRIecLS+KiHA3uf0h6r7ZIAxmZ
0x3OUgxYeDTrt5hZhb8ZInG9q2gQX5Kr7wAMsJzopyRqjyNpm9fLnxdZ8Ods
QkZObx8+FrrqeyiD/b//9dfwNBOhKgkWZQYJRE65URNFrgNXO4jU5zWyoeO7
RkVbRBWORBIdy7fXYwhVJ9/wCxt8hfvvi26NQqsaOyOdliKsHOrtj/HuhzKr
lBAzZxaKjO0qT8tqgtLDOqO5xxuhc+s1JW3ht/A8V6jVOJwFF42HX/+brEAR
8lVe77ZWDFXpEF28zAaC1euT8v3DcGC8Yl6Uvw9PuUkv7OBhg3uqHCpF1uHO
5/ocbZFC7F0yX9X24R86y4iLHF9JIEpYb5bteTMAbg7f1MpniECdC1U0L+Ih
npDR7/XLocDJ/LwjPmHDEOJopBx0oAW3ib3e23+nB279XW46QejDb9Uxj3bf
7YTuF+lycQUsMBZI5JX+0Q/nL9QYUt4Po0xFt/1Q7Qicihc80FpEg2NGlAfG
Hv97D6y3/51EMtQ+MR2eyxjC7c/9YHfKKCzarBJ9YMeAdL5X0jKsSbTMlyvd
lkCBa+tKLCRudeKmJSuFEdcicPyrRxQf60Rj7TXxZm9HYV0rZ8BPbh5FGn5n
JduSYZyv035GqA0eMAlx43oMUHBbJ3nQph319nedqNw7h+45VhsfiY2hyI/S
xvpZNgh5rIumb3+Lqm7lWbRlVDB+5iEzyD1ndf4HQ8d2sPG7xhjMJPISTy15
/HL8xIIivkutJ2vG8F/3g3Sd9RyIKFm9WEydwRlHo4WSgQZs687+GdbDhur/
KBbRf9kwzsv51mvKS0wuE1dMFOMlGlRMR+x6N4/hywaO1sTzEANqYwLDb1Ti
UxmTdYYpRWA08+zBFjINvJWfS+nSmzBXbbuWkS8ZPjUcU02roUH3xfODG0rJ
8GfBu9zangEGs+W3XzX2447Jl88PAwUMtzwc2bSfAR9U3pyZ0S/FXaeEpW/W
jELs393JTMdefDL6xvnCcQ788dXyyPmaA98piatjPUnIcstjuNY244urugRV
Mgs8bUVsDn6txxP/Rf6QPTKGwfV+LsaeLPDb/fHPC2oS2vQH6wzX/YJnaoEV
BfJ90Mp7YO/XY9MYEizWEtFaBqsOHX+bqtEO/xL3RMokZYKfp9zx+RgWdPgv
RLXf7sNl0uWVPuXteCFI/EWQCAXWhrF76y+NQPC+25tkGvsweZjnxbz3KORd
jDlT3FKProlT46qR0SAXu7g8zagLxRLvOCgIL2LYVLj9setDoPTjgPGyw78g
UefjZ3dRXuI3k/rWrLsMsNI4kBBlNgL70vx8K/x78eeM6PLly9mg6XGjYM/G
FoxQFxeu/K8Nbtpk7rXj5vQ09axHzhAFUqWVZ50k2fibv+Ory2kaXGowHeNM
MMFY7Obf9pV02C2r9y1FmAUnDOsVbXW7cY25gN0NIybkfvUjBCcy4Zm2RPM2
xzEc7/w9+zORAf0Zr5pf5fahz6qPWmdcakD5ykCET9gIJtZq/FJapIP40SSR
X9ULaP/NsuP+agpsuHtqt2dODjiLVP4+mc6Ad7oy2oqGzehgoBroUj6ObPXB
SaXuVpR1nu70fcmGAD7fx3c25eBjs79XvvHRIH3SfqhiJROOZYi+XyY9gT5t
wSfFDXmIlZVaU2KXWHCaUTn5TH0K3R1uWn+4wgGq33zYpMEs+v3rkbzs3oax
9w2uKl9jQeLODj6xbA6oXFWXfTU1hG/EvSRKfLhzbLfaONafQNT5zGvxcy8v
sSV8n3zmzb9496Tlap8nzZAtY862X0+FjB5L+fU85rD97eAT26kh8DDi6fnO
3R91A2uLSm7PSU8coG8vocG0dHr73gv/cFWP7YqEWhr8jvq15d4pJhzPMeuq
kh9HWLnwhjbOAn+7v8RmpyH88Q5oxz+woFaP8pVQ1wZCrx8GrL6zgKMuKx82
HqtGQyNOXSORBfIOemvum9Ug9fVSFGWEQHxtJeGf1sKCTT7Cn01cOvHm4bRn
DZfi4H2qAf29dTeYR+Zrb33HQaF743yN3o1Q9zQ35JFxOzyyFlr94kM4NnQJ
uBiM0uHexL5CIbUKXJ1VLL4rph0th/ZcJ3G9vs7oHMxLDgOFtOFQqkYfmute
6drkzAb5BIKuwupGzHOa3GRV/xJFzBbONxUX4ofotU1ZJTxET1Gv868/MUBw
7+lUllwd9zknhL7e5/LGmn9Zm9ePQlAMwUGmYhiCRjf9yhEbwDXubUXjt1hw
HZ7Ib1Lkcta6DErF6zZ4teattHAnFSJ1KlTcyugwKm7Js5o+hJMq9zdZUpiw
7eCyhVOPWRDtZ5IbfJcNTRVrHa7dYcPRr0fKIj8MoNejDZdjmKOg0G5v7v6V
AbXEJlIcdRH3mvCnnlXicjpZp6j1yT9sj/DI6FSohdPJXWue7SGja6+w/0t9
Johahqn4sqaRld6vgmwSXNf6QB+0r4fqxdMZzOFRMBWna/HINKDYBU/xDm1u
/u1b21Jo+xNPbJp+k1zBgnSBQnrco0+QGbRfqYhOhhiFNttP0izYcfLAf1el
J9Hh4G1zbbMFNDjmaf87kAlfYuyNTD+w8LW0Rc00l69f71sr/eUQFa9Tr4Xm
qA3gzrTnvPQkFtzK5TMNq2PBPEno6//eA7MoJezcncxLbGokXFV4x0v83o0b
H5fxEJM1bLy+XavC53O+4pHfWkFb8/eeWD46bJfy0fC0bcfYowtTJ4cpwFw2
uCsxgwpEniSzA9JcXrvLdzLmExl0g27Q/hnQwWCS9ek9pOAOxfHzl6spUPbe
hmU0SgGBVwc/JLZ3It8eySFPYTbk3tTN2PySjn2Z2e2mXN5/emT297qGfJD4
XeBatjSPF4Vdzrx604vjk4LZ09s4EHOL9mfFt3w8tC7vxNPGWawIvbJxVS0L
LO49OJv/rxyULSZzy8SK0E9J9MldvQYQp7waOHxoFu8oe26/ZM71aZnSMMHQ
NnALvpBDVUmFG9MCWhe/06HQMdmbl1iI74eP8aU0dCLNiW9LveMoaDc8pXud
4Obn0tcQ4kIzSovSd0rvIqGtyi67mHgmNPntdnWKakTTuzvuOWiXgIr0hq3P
yhtQtNk7OLSDh+jjq+85r9ELa3niRxpvFsEuS/qZmGgWzgSYbBP3oYFP70Ov
ufdDMMDOadl5hIobfseXrtw/Ape2thLSu7pRXsSxPgOawZaqpuUYTAFdh6Qt
8Z8psE7x0Pq3Yiw8tHvswcRBGqjYPD/qfoMCA5Wc6etP2XDv1epw0zIup3av
nA883YwKzoOESlUGhEx22a7n8t/MWwhrMmSjJyim/u/7x7lzgSvlfw3jUtKC
6H1JCij8oWUb/ahDVYPBtGQPFmS+XSEz6VGMOzoTlDoj51BbPinxpTwVTmcF
jFGa6+Gyq3wxiZtrx615y56l9WFb1pgUc5SF3w/x6DsIDWFo6F9BihkbVv1p
N54aH8LiRzmmErVkmD2aIbfaksvNv++ZbqGwIdgx6Tfp+BI+PGtperCOAcdI
YcYuIrzENVll8rcSmPBUreJi4Z5JHG1yv/YzggECCq4ny/Xqwa1a8SU0zOCF
zPOn+XdN4pxiiOr3e7UYa7g/ptBiELu+7b+cpM6C+NdCrKB5Ntx/3nDuymEO
ThtMBSm+4yHurP/CY+a+gLeUhB+9f8ND1Py1gvfRwl+c5N7G54ZtsOaRS+r/
vy8apxdef0V8fiIrNq1qBCrUnBWY25kgHxO+Tu8VDb6M/vW7XkWC54f0eBZO
teC1gobxnzfJQBwgvzHm7lefZsTghWONeICurjHsw4bbwTNOYaw+HDkw5f70
KQMye8L8h+uTIFD+e/NJPwLRZr8Xc2prG3YEb0uIvMmGyaOH8jpvtqL3P6v5
ZWpzeP/DoMESiwUpmRMrl3mVo6nkt5rOFXlgtSbStTGwD5ysHli/8FhCR7H1
ThXyjeBy7H1axdYa8J8+t5uPWQC+VfW1SgEM+Ler+Zj1sgYcMAj1y/XKQbe5
WUuRRBLwXHEZsD84Al6tZUd3PmxCp8u6vflcT1GN9SQeCmxAhq+B/rGjn+H9
pecFMZdq0ezo7TyfDgIx6nH+hsblvbD36FV9jy958EXB8+5FLx7iE05IlNpF
GlQdviV7798wtEwaTw99pmH8j+rcsw/7obYi+8z59E5Ms7wr5prRCIwtb3Mb
rpJBykL4346/3SDIOfxK1IiGwWKth7pOUeElj+LUr29seGqT0Px2fBSuHyl7
ajPFApmaV53Fkd04VyawJy6EAa+2mD5+a8sA6NuhnutFIGrkrgwMu0YH+dWU
OyWPKlH29VZ+WZ0KEFleYvXVvxQz5Oum5Qe4c295Wd3k3SJmva6kHeSe96hF
qHmbUz34Kz2WeSnDgnM3zkjeu9uKC4q2Nq7fCETDI8UpW1OGUF0oOdsX2GCQ
8VLn4qZM3LD3zG6ZSRrEjXE+N0hze+d+9QWxWQLxvXH9eu17vETO4m2/PWls
8KR5w8YdLHRbFz9uJkkHj7DUdK/cQcy9/Ofmv9w4vHMk6EzoGm5Ozu3902nP
hsrAIlXHLBbuOnZ59jE/L3GV4vV45WNTqHh5PGl0iIf4tiJr8+XBfPxd7/Rs
C6EOJN3UeQP9KPDKLTDHLiET9eWSdbhmAWqpQqEL1XSYy5k/TZYhwymVc7+z
W5gQXGkrH0hvwPi1wQap3WS4uW5sB/yhg+Wfk8nx9i24YVfp0gERNnw86/q4
x6cfKX2rG9et4UB/oH/Rv1ul8NzFMTd34xherh8kHYEW/GLitO+LMwd+D4ut
ajjeguPRlJ6dAxO4YYt0dRSDASn1TiaSkq8xR//hE6/wKpwoERQcdB4GwW1J
PeTLbHT5L3XJWagBImy1zwS4tUCCufH64aUCnPemHcs/woLiF68SPi804f2H
txlulsN4faWALfMcFYKu34vaJzECk7GhNhuejeC8180J/ng2HBF733u7huvf
e92Ybib+KPbG6uQu9yo4I2fLXlk3hYmlpkzv1X1wSbp4YqdtJbx2cLosYEYg
3iOekjQ0psJgQAFb7eow0LccVxLbPYyvZ3+U/zEYBu3MfV1p3P59Ohc3bULs
AFHmwoeKKxQ4+O7MeOdoP6gVTD7Ndaehi+GI5B5JJlwrKOa/LDYEPUe0Eo4s
Z8EVpbyQ09y8yhW6EfbvwSCu39k8VrGGCWIzn4WOcX1RvWE06bsrB8We7jxl
wuX1C63T4jsCulHvuOayQ5tTkP3x1P7zG4fx8/lPTQHHWLBt2/DIh0QC8aeS
p6z58hGYfqZTm3mwDg6/mf6vhMIAT9KXL84eQ9gxHSl3buMi6iU0eFiWjuNS
7xQ1ookBfMEPYsMk/uB51+s8azePwq7gtWYG9zggVbNeOX6Kjio9v11afhCI
0/yriwqvssAk2C3mRRAFPY1vLTuvyQL1mHWxHV8YWH0n/S6nIAUSy0Q71fqG
ME9AKi1pHw+xWS1WI/MxD/H8x316lUOLSGLoLV0I6MKLLKtC+kgj0G/+ymKc
IEH/2dZ+5lA7rigfrvg7S4I12VpBci5MMNE+XJVWToXDz5ytj/IyQcdT491l
YKNA55h3/jUqrFn2sfluMovLe9Tcbf/6MDHzjrtKGw1ET2zgucLto+pgW2ZA
GBv8pXY+WeQrhIOymvc79k7ii/cryr2jBzGi44DyxodsuKi275Ft6QgK0PLu
jb0gEN9IOpRlvWJBXWAxfdlkAYwvLLpFKubC8U/9omFH++GnHsVV0nsM6w4l
jx8YaYZYO+UNATVd8Gnx5B85uRB8fmip3EuFBdaY3JXd0YZZ+sobBCf7cFFx
IuPVBzIYh1HU/42SoOW//VKNASNoelruvYojG7JyCdHE731YEvRKbbS9BCxV
pTYIvW1CVZ8qR/YHAtG/6LWcmnw3ePbvccw0LQIlD97rtut5iHKp2wUFX9JA
cvRyzSoPEvwhnmiRluf676XIh6+587fJRrL2UO0wBm4wfDSY0Q4cixvKmzoo
IGz5h+U5MQhaZGtd0KPh0Amq7zbOKLxp/rKt7ygLws7c8pFoYsMlHQNN2c1M
2GgWaXS1aggdW6ZtL2ZTwaREWEhvggFi4+k/kjqWkBl+nVnG9VsX44DbO1YP
4VBdeXuEVj08vLK6nlI5gOqP6piKhqPgKp57q3bjAs4VOOKmKjLUkV7GLN5v
gqV2fcknE6OQ23T4TE3cIC5/6KYvsp2OchGt7O8vhtFOJ89/2IYNGn1OPX+T
P+CIGf/6G+10kD7yuX4Zdx6de5P2efxlY9GtDy82z05hcmxMk40PCx6MEGjl
5dN4VcbnIu8dFkQSnqUYCU3j9JPLd0KdG9G4qCOn4SsbsrusRYf1OHB2YL9Z
f+0isqhb/nzl+uDharmTiuXz+Pv4hi8NVB7i2NUmptWZDgx2PrQtUa4NjFL6
xXZk04GyPpxXuJ2BAxuNrzmYkMGwojeo7gIDCKxqV56dFLDTKjzr00wGH7Vv
b49fbUWRt99s9u6jQNJz3e2EG0xoDZfY2pE0hpaGb/QsUxhw5aT+i2Oiw1gW
db2ciCwoyGkrnKoqB8NJQWbEqmmUeisqcUpzEM//WNbzPYkNzkzB/CUCCa2r
KtN9ti6ihvl1BQstNqx4tF9Xb6MJPA2jrjW49QWfUg/p864cgj989ZKGG+bR
/etx19P2LYCBQ6Pa92ohgCrie5KCqG+RJpgWT4fJ7T+uNG4exIwHF0g2baV4
A1xEhpwYsCNEqIt2gQTORx+w9g0wsaBTlXxXiAXaTzVNVa/14qlzlvcGqyrh
7cfJ3i8G/dgdo/ZQzIdAlG0OpE2VDcCV8j4lonMD2Fn7+x+OWsLNbJWvpVze
4h3/z+WiHQlyqLK3231HMOLGToIq3yjUmNm8uN3fhxV/eTfY9rfBQO9mKfar
IfgRSrj2obgdDqlFRJk2jWHe8wHOKq63WJ2rnk/ooEGJmExu9hMWfHurEqR3
ngVdSt+SCr4Nobwp6eC2SCa8DTtdQZFkwJ0w6YXlRDZ3nXdlBDfT4GCrN5nU
2YQpsQVpQc35UPVfZ5IToQ6zF71GB9uoQJppOxjK5iFWWXjOB0aSQZssZlRs
0Axpl1Xq+JqYEHitqefzYCeeWBOtEGY6g0d35NWknx/EcFLSHxNXFqx8sqhz
4gO3517ITd4IIcG2AAXpZic28ItcrjqqM4fWx015o+wJxPIVRaFOUSzokGol
ixZw0D4M1I8UsSGh7D839GRirtBSUfSGdlSoLmde53rlTb5ok+wYNnjrSk0k
ZHZg5sduJcs4AvG+aPFB0dMDaLdiiHliywzq0bamdse24Mdm5Y7Jvh6oXh9U
NWxKBSshmY6xzAG8cqL40V4fCojkNknml9EgpSnF7MUtOoTZLdcqfcwACzLv
c7POQlyoOSJxKpIGqx7eyGMtMuBwxHMOxZ2D8qe9Q6MPs4BRHf6NkD6CaZ12
q8K5/LR4aXuHmlsFSFbu+LSrfQklTTekp7wcQGfJusfaz9ggILsJ1+h2oZCN
nVRndjeqSBiTLt7j+kTF/R0V2cmQ/OFkVXLCT2xSSxNXaxiAwvXzjr2DbIzn
8O8697sVDpuHlJ/MaoGd24+8KUvPhKLw/lcEbp7vSvoUVGDTgU4XhxQzVjai
3CfaaLs+G1qr80w4SyTQNvOX29I5jKXfDl8OymKB7oDC+4TjXF8zfnBWkOcH
vglveBt0tglv6FfIpukt4WGtvxqaU4Nw+/HZlxsqy6AqjiC4VpKH2Hf1Wtzl
CCo8q6/q/TcyAjUhYRNLYX1YNEtyZfH0Q8/+k4XtCsN4q1Qo5c3aXgj4r79i
XTAL/m56uv+p2CD4vorJmfan4G2bAi/tOhJ8E8SMtTJ0WOOxc6CSlw3Kw+ft
ym0p8O90SumbHBLuy1449lyTAfxqlpEp7xhQ8aDV4pDTDAZfSma5l1ChrDUp
rnakDy35NTb26FSBnFz1oZOn+/He6wi5Cm7e8y9e9hB+O4tPk3/9V1hMAc2J
++150An/3VPkNXFnAIk9Lp68cgDNfAhC4dvm0Htr0ZnuQ2xUM58RdGazQWlI
9NzXlFQQ/xHytXIXDeZ9gh61P2eDPR+Ld68gE3+XLFmenuchjshdYYh4sYB3
6K7omN84ru4NuHWqiw05lWv3rROdxYgKJ36er30Yvrpgz4H3bDD/QAl8Z8vN
e+MD5JJQHmJ8uJrX2DMe4olz1pkXd8zjCdHOp6L5BOLZPx0H05d1oYpwinKg
cDWUTY/Jq/+kw8efJVM3HftwuK/k3iV+Kmhu+2nvw82zoabHr+oUqHDG2Drq
+jMGuFeUD2+hdmNp/v1nLSUUENMY77uADBj+ETqedi8HTX04rV7c/X0QeKDn
eOMQJt586fC8hQ2HL2W+kRUshZLPrIukriG0UPy2a/nmftRY6tsnk8iCu9Zn
SBeut+JJgmvBBt1x/Jt5x8bjLAuOtN0/1bTtA4yIbNa+cbsI6BcE/rKr+mGZ
77e/8soz2HdC/+Vus3rQuDFy5yW9C85Nh0YdWv4PyuyfdhjHseDaJ/5KHasB
5DyZS10d24iL2RfEO7i8uP7lDu88IEPmqUmJQL5h/M0JMN07MAq2hVFK20S6
8L26xennYrnACshXF1QawMQgw5V8fQu4n8fKx+j5MKyip5n93f8Xsi/1//ul
wUMcviIj09rAgHWtoXrvuklw4TQ9yDh8BPmnJ5bv52dDbunAg7a3PYgyey6F
3ekCyTuHt/4JpkNx44j0IXMqiLfIwOw+DvaPtpxO8abDoW/xLxbPMEF//5e7
O+/TQcKL7bdvMwvigrdnrWsfRB0+ra2nPzOBFqwVlmnKhGybw8GJXePo0Kla
ppnNAMmjr8alg/vxocY+KOtuBJHHDYUhDDJqOQqHH+ihw2F/6Web1ebxakW0
zeZPFFhO9Unxri+GzIMXZJR7GfCMkvTmQV8fuvPl5Qo1TuL46Vt9V57Wo22h
4Ys3imxwINo1uNx+j0KQK32phwaqj8QFe5gMoOn/PHrnxhj21yYqDMwQiCVH
/frG/VjQnL++UebNFLq8yuLvnWLDAaNzp36em0WXoJW7Ber6cG0yUc74OAtC
jY5zQjdz4PJPIMhR+5GoZ1J1I5mH+Dflzuj2PVzevNktoHaFh/jSdvfIb0ot
umoLDq41b4eDNT5+/alU4O0P2CLGLsLFJIPH7O0jIJUb8XdJl9tb4TyNpQ/J
IDN2Uq/tCh0Ig6ee1qZm4q3Oc8dXnaODMr/NI5v7TBiyk8zd+IiDqr4SvG/9
WTAsI9+h7ziC/0lotPY8ZcHj0Cm5gKAukFPeF3lZcR73m21f0DfvQit9J+ns
UhaohoeIO/i1o82QjqydHYG4XaCHfa2TBbafNQcv/G5BRf41f98G5UG64WJz
tmofaHiFGhjajSF1bfjJGHUuH8lmGC5odYPkJv8t4cI/oHol2+FY+yh4/sw7
/m2oA0VN40tnrzdhsUruuoCkUXh/53C6Vc0IiL7dJ9b43xDm8/345cDtDZuA
37+K+ftQo15LpuDWdyjoqK1+k1yHGreOdWhL8xD7d920Xu3PAL/jt+6M32iC
c0Szh9m+BOJOJ6t5A5dRWDjX++GWLwkkYo933GomYe+Jt/Wqh1jwSVaG3+/b
IJo/3Lz33PUuIEc3+1ddpEHyY4OuhTA6rPVUv6fSScLkCevl31OY4NpwVejN
bRb8OMv/+YYmG9R/ufBZOrPhOI9Tu6M8GRccXix6bmJA9sGyNBqXmzeYfU+d
C17EVYVPImSsaLBcfl8J9UYrXvT1O2Ik2wTORmetbfWpqH72Di89ngmMJ+Sf
Rs5T6GRibLjnLxnybpOndv1sgpa7d+SfZjKgeOMjZTOrXvQjupel1BCI9u0R
n+LCg2DlFcUna4tYUKU7WZtc+xviav8JxZK5PfGywlCTwII/JH9fD59xHP7V
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
7y0+I7BNt89kaZiMdsdidhTJD0HII60zk0tTwGkuvr40dBp0ksjp2RV9GHrz
5BfvX2Rwpnhstimn4N1OSZW6T4sYS4zcVR5LB+7b7K0FO5fhYKAzl9IXOmS9
v3W75ucSjBxYmaw72IFvqc0Ly9c74Kb8Nx1tlS7M4aW//PvrF9B3t3JVG6fh
ilwy9+UsCj75/edpdNEospKsXDjOVeNZv0zzO8qzcGLT5+xj1zrQ/VLrmr7g
MDpMTVrOmcyA99Hair6sJYzU7Jh9uPYXmi9einzUyvQcQtvV8OhxeLAqa5hn
ugRVb4yTf1i248cvukJ+/EvYdYz3UXXcEFy7eeLi6iwFPo4eafzyaAF5sgn/
+uumwPL5udNf9cagtfm24U3heOBSOtOWMEWDrrji8/FMT9zfY3aRXWEY0j+s
+37v+RiTM475OMRTcBdPQKCyWwfYHQu3HSQTQUChvDKjpBa/Pd4ldyXlEqYE
V6rvOvIXhPitpCJL6Zijmz133cACV8xMOHdkj0Oi/lVXY9tuXJ1gOVTSOAca
3Qg5T2vg7rjSZGz5KOztjLPNt5+HFI/OakvXEZR733suYH8hzLd8VKzckQuz
8Urj0ju+oWOMDd/Vs/2we8yUU4XYC795iwIjWQkYc8VNsl+rBgKK9eQMjJog
peT3mcvuQ7jlna6I/JtlRI8kCxUm5ylefk+b+DmPVv8mp+/a/sb2sxf8T7eS
8VtpsZlFJhkTNCzy6Rvn4bhh6s2WLZM42vB0j4RpF36I/i829PUwfC0+eLv8
SQt8Uc6T2ZdIR7fnQ+URikzPcfs6ZSbxGxfuXStPtR6C937OR/L2MvDeGp/v
QbtauHrS+/HC8zn4sknmAesOCugf7vN2NF7ACMn6PJNJpr+POZ8YSh5HmzcO
ar7URewOf1Y/vmsZFsxF87jmF2H2gHQUxWUJ2z80e5WdHIOc/cFttzZP4DHv
b6pCYs0gXZi6I2DoAkg+iI+feE9Hcq+T+EbKPLZqjupvbqBBSdMg1enXEijU
CGmqKJDhSx+7VyKTpwS1Sv0WeHPgfobn2nnlYXhyVei/QbFB3B565bSiRQms
m1Iu3+2Tji6HDoZ/uzKFjRF+MvdILXihzE1C/BsNH8jd+lIePQNmJZdtP853
YBS9p1RWeBLvnTG5V7trFszXZ9tn3GSgMOsd36NlJXCqXqAn0nMJ9de1+B3V
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
f2MlIDYK0dhJjgAvFZUEJ1zqvzQB98x8+q3uTUDCs2aMWc9APp5fZnv0COBq
efCGbx8F/Z6QiIkXw6Dr26e1RkVU1EV3lZ+QHoWCgvjPvh5U5H1q7JvDXdyz
Ej7Ovuenw4G9CVp/CJOw9Z93Mw/OiYaGF44dLeSgWqvDu8SLqlHW2BH/4ttj
4B3YzJZ2I8FRtUxBk65pyCm13vsqsBKmBF26/zj+geBP/95uIDLRwxqhTZ4p
A5DH8lOYUmEgPm7S/jSlAciuvA0C79iIlvPntflbAjp/83jKlf/ztY/SibSL
DCTPS/vGM8dCWnoL3pYniIhhoej2JZWDUhtiTp+/TweF1ClhgSMYuPalEnVj
2WiqubJ6tgyDt46U07r0CdhcvK8hTIIAMwKZCUEtoxCbceTmnfN16KPGn/xk
fwpcMqF+77bugJqQUzN67qNwbJW6oW/mDDTtjrihtUJFm/N8Gx/4/QFGh4DC
jiUqTJdyylNb+9Bbf60mnXssFPkiwviaQy00CXxP7E7A0LE1oZffEthoRnMy
6IbFIFgNe4qOBFEhUvBSgNgjKuxc3hXRqoFB6Kr7UX8+c9Fmc9ltrt1UWP+i
PM+5FoPiU8+76/UxaDwlNlzh0wWfeOy9/nPEfVfsUXmW/zAcfDjae1d3AYRX
djxXxq8nkcNwW5uDn+9si8NCm9qAn1kzZveKg2asyU7/JWHw9d6NycPfZtGD
zAufG1lsZBQvJ5iSRwMiQWsx+T6e31rPhDZpMVFtSLBBwP/fS7/lpYJTBA0M
p5jNci9oiCajHFC+G4PTph4VXT/p6Az/M8dhPRoEvNSaO35zGrzUcjl8thT4
0hwonxFDxz3sw0WRfeNwf/Eq26WzG4IU5I+NkRtgvYlo2smTIyBNui0f1kdD
C9oLblU4913WmL4fTxkFjRChLeKaHDSaZL1q339TILfj6PzH/9ioNNSjdt0B
OuzNmSKQNWlIsCxUFXyngOv8ax/5EQEFhV/Vz43CQNEmXIoQToU1w+OBn0Mn
4e2GDaIRGmzEmyIV+wqfC7kNx7cEhnXAZG7idcf4ZoiazvJqaCaCiHLUI47a
LCwZx/wcMekBD213ScGyH4j3zK5U4yIG6nkm4Go03wPi2/7HwXmHU/2/f5wQ
iiQjIaVSykiFfFRelEIqlFCZKULKSkbKKHuUJIWsjGQ3ZOS2Qvbe8+A4nOEs
nHOkfuf7+9PlD+f9ej3v5/14XN7Xwd9LMmSihiIUKTPRD94aqYLiBkwkUubi
+jqcjmzaJspZavVg8W9jz6boKjBbu6OwJY2IDr4t7/Vke6M43fmUp9UaKmia
yFm7sIIspfpc/P0p6FV6tICUKxUELih/fmC3AIUY83s6WVRUVpQaZ8/eO1fk
R8Z4mzCwL0zMWyWQAPvkTU/zOBBBnuL5vX90HvJb3weIXWbzpaBLb4XfNERd
VeksyGhGbaTt367fngbtiNdVOYl05Cg2v8fMdhC6sbcUL6dRgPmi9JwpbQLd
8mT+lRAnI8Wpqn6HsBYQDh7THYihIHPyZ664cQYyydhnfTyV3Yf3u2PPehLh
SMcbVgeWCOt3BXNaUohwck9vYzFuDY29NHpKmaOAre2F9rkRKpzok+q1HSXC
ttrZZcI0228skvNs6imIOTYjMSeNg+7/Mt29zs7DhVdS54y1qHDKoVIuJZ2J
5p4BwUd2GiaGOd6/6GaiRPesVrk+KhgajcvHBK8hb8Lkbjd2jnVKrG++Hl8G
PtZIjE8OBRbcpU1NXdbQIU4Y26+4AKV2ewMpnRT4Of7noU0XFT14Znr/8KZx
MLn3vnV8Kxlpt9/LZTpRYMoj5mswPwHIC5tTJahUCDj7THn1F5s7dtPOWN0k
wb37HzI1yuYgXKY4YEl2CKbCVUKHTo8AH+98n8NrJor9K+mVkjoONvG6+wYs
JsBFhnTZtImKRjZLjB1oWIJd9vGP5v3pKI3fKCS6nAJ13HXbNv0loLvpiRws
tSXYaNfViWV7+f03VrbYs8vQGvxp4MwUu6d5Dt0ePTUJNeOpfXaPKUiS/Fqw
upKONLbdvNQ4MgittL7U6hN9kPK1R2IHm/O9kbHgI1U2B3HI7Tjo2Q1uV40T
pRfmED/ZKDdlKwVlrAlazuuPgPYDrsP+AlRUd3yG++VIA+gdPJo+ZrmKqKKy
l//KsxBNkJqg7DcMlZJqPyi0X7BosqCkKoQBsV3mwbuBgm6a3TqXnUhDM19u
cJrWTqKn8zVyD/OYqEj8+eNUZypsLrsqfCeXCIn3lfn/62Dz08TfQ5rxROgJ
GAjBqC7A0khBsRebGwKK9Wukz84A0ry5Zen5ErxO8tfxZfOfepp8enHPNGi8
6nPLJ+WgAFdXsbXKPsiNWoqnH2ciYdxFRJPpg+N8rvGEODJYSH6K5DBbRmn/
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
itm+KlBNnqiPXFHGYk70foXBmKv/0R93Jg==
         "], CompressedData["
1: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

         "]}], "NeighborsNumber" -> 2, 
      "DistributionData" -> {NormalDistribution, 0.13594235191862009`}, 
      "TrainingOutput" -> CompressedData["
1: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
vT4xtiwKp5b079qBcm1N+BdryJbJ
       "], "DistributionSmoothing" -> 0.5, "Processor" -> 
      MachineLearning`MLProcessor[
       "FirstValues", <|
        "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, "Key" -> 
         "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"|>], "Calibrator" -> None, "Method" -> 
      "NearestNeighbors", "PostProcessor" -> 
      MachineLearning`MLProcessor["Identity"], 
      "Options" -> <|
       "NeighborsNumber" -> <|"Value" -> 2, "Options" -> <||>|>, 
        "DistributionSmoothing" -> <|"Value" -> 0.5, "Options" -> <||>|>, 
        "NearestMethod" -> <|"Value" -> "Scan", "Options" -> <||>|>|>|>, 
    "TrainingInformation" -> <|
     "Reporting" -> None, "TrainingFunction" -> Predict, "EMIterations" -> 
      Missing["KeyAbsent", "EMIterations"], "ProcessorEntropyShift" -> 
      1.1315338076510881`, "PreprocessingTime" -> 0.232548`5.818057602264178, 
      "LossName" -> "StandardDeviation", "BestModelInformation" -> 
      Dataset[<|"MeanCrossEntropy" -> 
         Around[0.6010928344616291, 0.10262609002406797`], 
         "StandardDeviation" -> 
         Around[0.6819812184680533, 0.0960616375264216], "EvaluationTime" -> 
         0.000015319500742540132`, "TestSize" -> 360, "ModelMemory" -> 
         250472., "ModelUtility" -> -0.3382139985497399, "Round" -> 4, 
         "Iteration" -> 5, "TimeStamp" -> 
         3.899873654315649`16.34362552641149*^9, "TrainingSize" -> 718, 
         "TrainingTime" -> 0.019952623149688785`, "TrainingMemory" -> 
         3.105653333333333*^6, "ExperimentCount" -> 2, 
         "MeanCrossEntropyHistory" -> {
           Around[0.5547151430892348, 0.11623721752356975`], 
           Around[0.6474705258340235, 0.14857505313245098`]}, 
         "StandardDeviationHistory" -> {
           Around[0.7127201764963833, 0.12392306514392927`], 
           Around[0.6512422604397232, 0.134095171116258]}, 
         "IterationHistory" -> {4, 5}, 
         "TimeStampHistory" -> {
          3.8998736542903`16.343625526408665*^9, 
           3.899873654315649`16.34362552641149*^9}, 
         "Configuration" -> {
          "NearestNeighbors", "NeighborsNumber" -> Automatic, 
           "DistributionSmoothing" -> 0.5, "NearestMethod" -> Automatic}|>, 
        TypeSystem`Assoc[
         TypeSystem`Atom[String], TypeSystem`AnyType, 18], <||>], 
      "Configurations" -> 
      Dataset[<|<|
          "Value" -> "NearestNeighbors", 
           "Options" -> <|
            "NeighborsNumber" -> <|"Value" -> Automatic|>, 
             "DistributionSmoothing" -> <|"Value" -> 0.5|>, 
             "NearestMethod" -> <|"Value" -> Automatic|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[1.7445555388730765`, 0.05838169582204861], 
              "StandardDeviation" -> 
              Around[1.3596907757529535`, 0.1492099197273478], 
              "EvaluationTime" -> 0.000012589254117941663`, "TestSize" -> 100,
               "ModelMemory" -> 9256, "ModelUtility" -> -1.0221247913496532`, 
              "Round" -> 1, "Iteration" -> 1, "TimeStamp" -> 
              3.899873654255489`16.34362552640479*^9, "TrainingSize" -> 9, 
              "TrainingTime" -> 0.005011872336272719, "TrainingMemory" -> 
              78744, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                Around[1.7445555388730765`, 0.0412820930129409]}, 
              "StandardDeviationHistory" -> {
                Around[1.3596907757529535`, 0.10550734605950803`]}, 
              "IterationHistory" -> {1}, 
              "TimeStampHistory" -> {
               3.899873654255489`16.34362552640479*^9}|>, <|
             "MeanCrossEntropy" -> 
              Around[0.9939604331657146, 0.11847947149246746`], 
              "StandardDeviation" -> 
              Around[0.7877040877862165, 0.19879553045507775`], 
              "EvaluationTime" -> 0.00001, "TestSize" -> 100, "ModelMemory" -> 
              20008, "ModelUtility" -> -0.5037678425079507, "Round" -> 2, 
              "Iteration" -> 2, "TimeStamp" -> 
              3.899873654265691`16.34362552640593*^9, "TrainingSize" -> 40, 
              "TrainingTime" -> 0.00630957344480193, "TrainingMemory" -> 
              127080, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                Around[0.9939604331657146, 0.08377763772372197]}, 
              "StandardDeviationHistory" -> {
                Around[0.7877040877862165, 0.1405696676543623]}, 
              "IterationHistory" -> {2}, 
              "TimeStampHistory" -> {
               3.899873654265691`16.34362552640593*^9}|>, <|
             "MeanCrossEntropy" -> 
              Around[0.9237837560445621, 0.2152296466865349], 
              "StandardDeviation" -> 
              Around[0.7181382835114438, 0.15533826612441895`], 
              "EvaluationTime" -> 0.000011294627058970831`, "TestSize" -> 200,
               "ModelMemory" -> 59368, "ModelUtility" -> -0.4044216929851917, 
              "Round" -> 3, "Iteration" -> 3, "TimeStamp" -> 
              3.899873654276094`16.343625526407088*^9, "TrainingSize" -> 150, 
              "TrainingTime" -> 0.007943282347242814, "TrainingMemory" -> 
              613368, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                Around[0.9237837560445621, 0.15219034268443357`]}, 
              "StandardDeviationHistory" -> {
                Around[0.7181382835114438, 0.10984074135433719`]}, 
              "IterationHistory" -> {3}, 
              "TimeStampHistory" -> {
               3.899873654276094`16.343625526407088*^9}|>, <|
             "MeanCrossEntropy" -> 
              Around[0.6010928344616291, 0.10262609002406797`], 
              "StandardDeviation" -> 
              Around[0.6819812184680533, 0.0960616375264216], 
              "EvaluationTime" -> 0.000015319500742540132`, "TestSize" -> 360,
               "ModelMemory" -> 250472., 
              "ModelUtility" -> -0.3382139985497399, "Round" -> 4, 
              "Iteration" -> 5, "TimeStamp" -> 
              3.899873654315649`16.34362552641149*^9, "TrainingSize" -> 718, 
              "TrainingTime" -> 0.019952623149688785`, "TrainingMemory" -> 
              3.105653333333333*^6, "ExperimentCount" -> 2, 
              "MeanCrossEntropyHistory" -> {
                Around[0.5547151430892348, 0.11623721752356975`], 
                Around[0.6474705258340235, 0.14857505313245098`]}, 
              "StandardDeviationHistory" -> {
                Around[0.7127201764963833, 0.12392306514392927`], 
                Around[0.6512422604397232, 0.134095171116258]}, 
              "IterationHistory" -> {4, 5}, 
              "TimeStampHistory" -> {
               3.8998736542903`16.343625526408665*^9, 
                3.899873654315649`16.34362552641149*^9}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.000015319500742540132`, "ModelMemory" -> 
             250472., "StandardDeviation" -> 
             Around[0.6819812184680533, 0.0960616375264216], "TrainingMemory" -> 
             3.105653333333333*^6, "TrainingTime" -> 0.029966545857749778`|>, 
           "Index" -> 1|>|>, 
        TypeSystem`Assoc[
         TypeSystem`Struct[{"Value", "Options"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Assoc[
            TypeSystem`Atom[String], 
            TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 3]}], 
         TypeSystem`Struct[{"Experiments", "PredictedPerformances", "Index"}, {
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "MeanCrossEntropy", "StandardDeviation", "EvaluationTime", 
              "TestSize", "ModelMemory", "ModelUtility", "Round", "Iteration",
               "TimeStamp", "TrainingSize", "TrainingTime", "TrainingMemory", 
              "ExperimentCount", "MeanCrossEntropyHistory", 
              "StandardDeviationHistory", "IterationHistory", 
              "TimeStampHistory"}, {TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
              TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
              TypeSystem`Vector[
               TypeSystem`Atom[Integer], TypeSystem`AnyLength], 
              TypeSystem`Vector[
               TypeSystem`Atom[Real], TypeSystem`AnyLength]}], 4], 
           
           TypeSystem`Struct[{
            "EvaluationTime", "ModelMemory", "StandardDeviation", 
             "TrainingMemory", "TrainingTime"}, {
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], TypeSystem`AnyType, 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real]}], 
           TypeSystem`Atom[Integer]}], 1], <||>], 
      "TrainingSizes" -> {9, 40, 150, 718}, "MaxTrainingSize" -> 898, 
      "PreprocessorEvaluationTime" -> 5.4921875*^-6, "PreprocessorMemory" -> 
      77040, "InputDimension" -> 41, "OutputDimension" -> 1, 
      "BaselineLogProbability" -> -1.4189385332046727`, "VariableBudget" -> 
      True, "CheckpointingInfo" -> <|"Checkpointing" -> False|>, "UserStop" -> 
      False, "NaturalStop" -> True, "AbortStop" -> False, "LastReportingTime" -> 
      3.89987365425531`16.343625526404768*^9, "RoundPartitioning" -> 
      Dataset[{<|
         "TrainingSizes" -> 9, "TimeBudgets" -> 0.000386091374154917, 
          "ElapsedTimes" -> 0.009589, "ExperimentCounts" -> 1|>, <|
         "TrainingSizes" -> 40, "TimeBudgets" -> 0.0019304568707745845`, 
          "ElapsedTimes" -> 0.009799, "ExperimentCounts" -> 1|>, <|
         "TrainingSizes" -> 150, "TimeBudgets" -> 0.009652284353872926, 
          "ElapsedTimes" -> 0.013589, "ExperimentCounts" -> 1|>, <|
         "TrainingSizes" -> 718, "TimeBudgets" -> 0.04826142176936461, 
          "ElapsedTimes" -> 0.050454, "ExperimentCounts" -> 2|>}, 
        TypeSystem`Vector[
         TypeSystem`Struct[{
          "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
           "ExperimentCounts"}, {
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Integer]}], 4], <||>]|>, "AnomalyDetector" -> None,
     "Log" -> <|
     "Example" -> 
      MachineLearning`MLDataset[<|
        "f1" -> <|
          "Type" -> "NumericalVector", "Weight" -> 1, 
           "Values" -> CompressedData["
1:eJxTTMoPSmViYGBgBGJNIK7Ist9ntWGCvemcK7WVOVPtDzoe9X9/dqb9dtXC
4F/v5thzyYT8+XJvjr1GearBxM2z7I8BZTNtZ9hfKk1UyXWfZh/BJmy5mnGq
fbrZ4pd7zKbYcytnWm8Sm2I/71b/ej6dKfaHPe9OPx42xR4k6nJmin2u64WC
oO9T7U+E/Pv14dIMe/loQZM5V+baN7VO2Chit8hes7Y8zXjWMvtU/b5V//+t
sb8360JhKMNGqDkb7BVTdFr71622///n25N1PMvsT8WIOZ+MXmwf/P3pRlHH
xfa225QyLFYutr89catCktpi+19vjgFtWmC/UdB0/t0Zs+zrKnOALphkX5qk
Xpak3ma/XSXP6/7cSnugZ641dWTaT92l37+WI8r+WkvfaiYOD3vTBQ8WPt1g
ZK8C9r+UPQMUdE/arlYS89UOxgcALneWhA==
            "], "ID" -> 6515543852639189880|>|>, <|
        "ExampleNumber" -> 1, "ExampleWeights" -> 1, "LogDensityRatios" -> 0, 
         "RawExample" -> False|>], "TrainingTime" -> 0.371797, 
      "MaxTrainingMemory" -> 3850040, "DataMemory" -> 510304, 
      "FunctionMemory" -> 395720, "LanguageVersion" -> {13.2, 1}, "Date" -> 
      DateObject[{2023, 8, 1, 10, 14, 14.353265`7.909525688515608}, "Instant",
         "Gregorian", -4.], "ProcessorCount" -> 4, "ProcessorType" -> 
      "x86-64", "OperatingSystem" -> "MacOSX", "SystemWordLength" -> 64, 
      "Evaluations" -> {}|>|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8998880187587433`*^9, 3.899888054388913*^9},
 CellLabel->
  "Out[615]=",ExpressionUUID->"b233200d-f4fb-4320-91dd-90f5e40b801c"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   StyleBox[
    FrameBox[GridBox[{
       {
        ItemBox[
         FrameBox[
          StyleBox["\<\"Predictor information\"\>", "SuggestionsBarText",
           StripOnInput->False,
           FontSize->12],
          FrameMargins->{{10, 5}, {-4, 2}},
          FrameStyle->None,
          StripOnInput->False],
         Alignment->{Left, Bottom},
         Background->RGBColor[0.96, 0.96, 0.96],
         Frame->{{False, False}, {True, False}},
         FrameStyle->Opacity[0.1],
         ItemSize->{Automatic, 1},
         StripOnInput->False]},
       {
        ItemBox[
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Data type"], 
                   TextCell["Data type"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{
                 InterpretationBox[
                  Cell["NumericalVector"], 
                  TextCell["NumericalVector"]], 
                 StyleBox[
                  TemplateBox[{"\" (\"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "41"}, 
                    "RowWithSeparators"], "\")\""}, "RowDefault"], 
                  GrayLevel[0.5], StripOnInput -> False]},
                "RowDefault"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Standard deviation"], 
                   TextCell["Standard deviation"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 TemplateBox[{"0.681981218468053263`3.", 
                   StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.096061637526421606`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                  "RowDefault"],
                 
                 TemplateBox[{
                  "\"95% confidence interval: [\"", 
                   "0.4898579434152100509`3.", "\", \"", 
                   "0.874104493520896475`3.", "\"]\""}, "RowDefault"],
                 TooltipStyle->{}],
                Annotation[#, 
                 
                 Row[{"95% confidence interval: [", 0.4898579434152100509`3., 
                   ", ", 0.874104493520896475`3., "]"}], "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Method"], 
                   TextCell["Method"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 
                 InterpretationBox[Cell[
                  "NearestNeighbors",ExpressionUUID->
                   "feadc535-27cf-4bc5-9d79-c251ae703135"],
                  TextCell["NearestNeighbors"]],
                 StyleBox[
                  TagBox[
                   
                   GridBox[{{"\"NeighborsNumber\"", "2"}, {
                    "\"DistributionSmoothing\"", "0.5`"}, {
                    "\"NearestMethod\"", "\"Scan\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, "Rows" -> {{None}}}, 
                    GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{1}}}, 
                    FrameStyle -> GrayLevel[0.84]], "Grid"], FontFamily -> 
                  "Verdana", StripOnInput -> False]],
                Annotation[#, 
                 Style[
                  
                  Grid[{{"NeighborsNumber", 2}, {
                    "DistributionSmoothing", 0.5}, {"NearestMethod", "Scan"}},
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                   GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"], 
                 "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Single evaluation time"], 
                   TextCell["Single evaluation time"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{"3.02`", 
                 
                 RowBox[{
                  "\"ms\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]",
                    "\"example\""}], "milliseconds per example", 
                 FractionBox["\"Milliseconds\"", "\"Examples\""]},
                "Quantity"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Batch evaluation speed"], 
                   TextCell["Batch evaluation speed"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{"54.`", 
                 
                 RowBox[{
                  "\"examples\"", "\[InvisibleSpace]", "\"/\"", 
                   "\[InvisibleSpace]", "\"ms\""}], 
                 "examples per millisecond", 
                 FractionBox["\"Examples\"", "\"Milliseconds\""]},
                "Quantity"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  TagBox[
                   TooltipBox[
                    InterpretationBox[
                    Cell["Loss"], 
                    TextCell["Loss"]], "\"Mean cross entropy\"", TooltipStyle -> 
                    "TextStyling"], 
                   Annotation[#, "Mean cross entropy", "Tooltip"]& ], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 TemplateBox[{"0.6010928344616290886`3.", 
                   StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.102626090024067973`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                  "RowDefault"],
                 
                 TemplateBox[{
                  "\"95% confidence interval: [\"", 
                   "0.3958406544134931426`3.", "\", \"", 
                   "0.8063450145097650346`3.", "\"]\""}, "RowDefault"],
                 TooltipStyle->{}],
                Annotation[#, 
                 
                 Row[{"95% confidence interval: [", 0.3958406544134931426`3., 
                   ", ", 0.8063450145097650346`3., "]"}], "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Model memory"], 
                   TextCell["Model memory"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{"398.`", "\"kB\"", "kilobytes", "\"Kilobytes\""},
                "Quantity"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Training examples used"], 
                   TextCell["Training examples used"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{"898", "\"examples\"", "examples", "\"Examples\""},
                "Quantity"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Training time"], 
                   TextCell["Training time"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               
               TemplateBox[{
                "371.`", "\"ms\"", "milliseconds", "\"Milliseconds\""},
                "Quantity"]},
              {
               ItemBox[
                
                DynamicModuleBox[{
                 MachineLearning`file12Panel`PackagePrivate`pos$$ = 1}, 
                 DynamicBox[ToBoxes[
                   Show[
                    Part[{
                    Graphics[{{{{}, 
                    
                    GraphicsComplex[{{2.1972245773362196`, 
                    0.19101768233957284`}, {
                    3.6888794541139363`, -0.529484358094329}, {
                    5.0106352940962555`, -0.5748309228481138}, {
                    6.576469569048224, -0.5345727327105566}, {
                    2.1972245773362196`, 0.411381369456112}, {
                    3.6888794541139363`, -0.013592340502517895`}, {
                    5.0106352940962555`, -0.13527399620702096`}, {
                    6.576469569048224, -0.25097367149505556`}, {
                    2.1972245773362196`, 0.19101768233957284`}, {
                    3.6888794541139363`, -0.529484358094329}, {
                    5.0106352940962555`, -0.5748309228481138}, {
                    6.576469569048224, -0.5345727327105566}, {
                    2.1972245773362196`, 0.411381369456112}, {
                    3.6888794541139363`, -0.013592340502517895`}, {
                    5.0106352940962555`, -0.13527399620702096`}, {
                    6.576469569048224, -0.25097367149505556`}}, {{{}, {}, {}, \
{}, {}, {}, {
                    EdgeForm[], 
                    Directive[
                    Opacity[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    GraphicsGroup[{
                    
                    Polygon[{{1, 2, 3, 4, 8, 7, 6, 
                    5}}]}]}, {}, {}, {}}, {{}, {}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    Line[{1, 2, 3, 4}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    Line[{5, 6, 7, 8}]}}}], {{}, {}}}}, 
                    
                    GraphicsComplex[{{2.1972245773362196`, 
                    0.30725730312542116`}, {
                    3.6888794541139363`, -0.2386327827646577}, {
                    5.0106352940962555`, -0.3310931330581916}, {
                    6.576469569048224, -0.3827531604210252}, {
                    2.1972245773362196`, 0.30725730312542116`}, {
                    3.6888794541139363`, -0.2386327827646577}, {
                    5.0106352940962555`, -0.3310931330581916}, {
                    6.576469569048224, -0.3827531604210252}, {
                    2.1972245773362196`, 0.30725730312542116`}, {
                    3.6888794541139363`, -0.2386327827646577}, {
                    5.0106352940962555`, -0.3310931330581916}, {
                    6.576469569048224, -0.3827531604210252}}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    Line[{5, 6, 7, 8}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    Point[{1, 2, 3, 4, 9, 10, 11, 12}]}, {}}, {
                    Tooltip[{
                    Opacity[0.], 
                    Point[1]}, 
                    Column[{
                    Style["NearestNeighbors", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"NeighborsNumber", Automatic}, {
                    "DistributionSmoothing", 0.5}, {
                    "NearestMethod", Automatic}}, Alignment -> Left, Frame -> 
                    All, FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Opacity[0.], 
                    Point[2]}, 
                    Column[{
                    Style["NearestNeighbors", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"NeighborsNumber", Automatic}, {
                    "DistributionSmoothing", 0.5}, {
                    "NearestMethod", Automatic}}, Alignment -> Left, Frame -> 
                    All, FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Opacity[0.], 
                    Point[3]}, 
                    Column[{
                    Style["NearestNeighbors", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"NeighborsNumber", Automatic}, {
                    "DistributionSmoothing", 0.5}, {
                    "NearestMethod", Automatic}}, Alignment -> Left, Frame -> 
                    All, FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Opacity[0.], 
                    Point[4]}, 
                    Column[{
                    Style["NearestNeighbors", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"NeighborsNumber", Automatic}, {
                    "DistributionSmoothing", 0.5}, {
                    "NearestMethod", Automatic}}, Alignment -> Left, Frame -> 
                    All, FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Opacity[0.], 
                    Point[9]}, 
                    Column[{
                    Style["NearestNeighbors", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"NeighborsNumber", Automatic}, {
                    "DistributionSmoothing", 0.5}, {
                    "NearestMethod", Automatic}}, Alignment -> Left, Frame -> 
                    All, FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Opacity[0.], 
                    Point[10]}, 
                    Column[{
                    Style["NearestNeighbors", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"NeighborsNumber", Automatic}, {
                    "DistributionSmoothing", 0.5}, {
                    "NearestMethod", Automatic}}, Alignment -> Left, Frame -> 
                    All, FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Opacity[0.], 
                    Point[11]}, 
                    Column[{
                    Style["NearestNeighbors", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"NeighborsNumber", Automatic}, {
                    "DistributionSmoothing", 0.5}, {
                    "NearestMethod", Automatic}}, Alignment -> Left, Frame -> 
                    All, FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Opacity[0.], 
                    Point[12]}, 
                    Column[{
                    Style["NearestNeighbors", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"NeighborsNumber", Automatic}, {
                    "DistributionSmoothing", 0.5}, {
                    "NearestMethod", Automatic}}, Alignment -> Left, Frame -> 
                    All, FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]]}}], {{}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.05438122368222, -0.43675039502352403`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    HoldForm["training examples used"], None}}, 
                    FrameTicks -> {{
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], {}}, {
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> GrayLevel[0.5, 0.2], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "DefaultPlotStyle" -> {
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02],
                     "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
                    Scaled[0.05], "OptimizePlotMarkers" -> True, 
                    "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{2.1502557457957505`, 
                    6.8001700683022}, {-0.43675039502352403`, 
                    0.30725730312542116`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.01], 
                    Scaled[0.01]}, {
                    Scaled[0.02], 
                    Scaled[0.08090169943749476]}}, Ticks -> {
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], 
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0]}}], 
                    Graphics[{{{{}, 
                    
                    GraphicsComplex[{{2.1972245773362196`, 
                    0.5224619640216486}, {
                    3.6888794541139363`, -0.1329818731542961}, {
                    5.0106352940962555`, -0.3445288510554665}, {
                    6.576469569048224, -0.6962184030641927}, {
                    2.1972245773362196`, 0.5894171320207474}, {
                    3.6888794541139363`, 0.106555715314438}, {
                    5.0106352940962555`, 0.13016245149949804`}, {
                    6.576469569048224, -0.35137625753949725`}, {
                    2.1972245773362196`, 0.5224619640216486}, {
                    3.6888794541139363`, -0.1329818731542961}, {
                    5.0106352940962555`, -0.3445288510554665}, {
                    6.576469569048224, -0.6962184030641927}, {
                    2.1972245773362196`, 0.5894171320207474}, {
                    3.6888794541139363`, 0.106555715314438}, {
                    5.0106352940962555`, 0.13016245149949804`}, {
                    6.576469569048224, -0.35137625753949725`}}, {{{}, {}, {}, \
{}, {}, {}, {
                    EdgeForm[], 
                    Directive[
                    Opacity[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    GraphicsGroup[{
                    
                    Polygon[{{1, 2, 3, 4, 8, 7, 6, 
                    5}}]}]}, {}, {}, {}}, {{}, {}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    Line[{1, 2, 3, 4}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    Line[{5, 6, 7, 8}]}}}], {{}, {}}}}, 
                    
                    GraphicsComplex[{{2.1972245773362196`, 
                    0.5564998176945697}, {
                    3.6888794541139363`, -0.006057878786124841}, {
                    5.0106352940962555`, -0.07927726498460928}, {
                    6.576469569048224, -0.5090058897173907}, {
                    2.1972245773362196`, 0.5564998176945697}, {
                    3.6888794541139363`, -0.006057878786124841}, {
                    5.0106352940962555`, -0.07927726498460928}, {
                    6.576469569048224, -0.5090058897173907}, {
                    2.1972245773362196`, 0.5564998176945697}, {
                    3.6888794541139363`, -0.006057878786124841}, {
                    5.0106352940962555`, -0.07927726498460928}, {
                    6.576469569048224, -0.5090058897173907}}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    Line[{5, 6, 7, 8}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    Point[{1, 2, 3, 4, 9, 10, 11, 12}]}, {}}, {
                    Tooltip[{
                    Opacity[0.], 
                    Point[1]}, 
                    Column[{
                    Style["NearestNeighbors", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"NeighborsNumber", Automatic}, {
                    "DistributionSmoothing", 0.5}, {
                    "NearestMethod", Automatic}}, Alignment -> Left, Frame -> 
                    All, FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Opacity[0.], 
                    Point[2]}, 
                    Column[{
                    Style["NearestNeighbors", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"NeighborsNumber", Automatic}, {
                    "DistributionSmoothing", 0.5}, {
                    "NearestMethod", Automatic}}, Alignment -> Left, Frame -> 
                    All, FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Opacity[0.], 
                    Point[3]}, 
                    Column[{
                    Style["NearestNeighbors", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"NeighborsNumber", Automatic}, {
                    "DistributionSmoothing", 0.5}, {
                    "NearestMethod", Automatic}}, Alignment -> Left, Frame -> 
                    All, FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Opacity[0.], 
                    Point[4]}, 
                    Column[{
                    Style["NearestNeighbors", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"NeighborsNumber", Automatic}, {
                    "DistributionSmoothing", 0.5}, {
                    "NearestMethod", Automatic}}, Alignment -> Left, Frame -> 
                    All, FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Opacity[0.], 
                    Point[9]}, 
                    Column[{
                    Style["NearestNeighbors", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"NeighborsNumber", Automatic}, {
                    "DistributionSmoothing", 0.5}, {
                    "NearestMethod", Automatic}}, Alignment -> Left, Frame -> 
                    All, FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Opacity[0.], 
                    Point[10]}, 
                    Column[{
                    Style["NearestNeighbors", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"NeighborsNumber", Automatic}, {
                    "DistributionSmoothing", 0.5}, {
                    "NearestMethod", Automatic}}, Alignment -> Left, Frame -> 
                    All, FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Opacity[0.], 
                    Point[11]}, 
                    Column[{
                    Style["NearestNeighbors", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"NeighborsNumber", Automatic}, {
                    "DistributionSmoothing", 0.5}, {
                    "NearestMethod", Automatic}}, Alignment -> Left, Frame -> 
                    All, FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Opacity[0.], 
                    Point[12]}, 
                    Column[{
                    Style["NearestNeighbors", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"NeighborsNumber", Automatic}, {
                    "DistributionSmoothing", 0.5}, {
                    "NearestMethod", Automatic}}, Alignment -> Left, Frame -> 
                    All, FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]]}}], {{}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.05438122368222, -0.59238775809909}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    HoldForm["training examples used"], None}}, 
                    FrameTicks -> {{
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], {}}, {
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> GrayLevel[0.5, 0.2], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "DefaultPlotStyle" -> {
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02],
                     "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
                    Scaled[0.05], "OptimizePlotMarkers" -> True, 
                    "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{2.1502557457957505`, 
                    6.8001700683022}, {-0.59238775809909, 
                    0.5564998176945697}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.01], 
                    Scaled[0.01]}, {
                    Scaled[0.02], 
                    Scaled[0.08090169943749476]}}, Ticks -> {
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], 
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0]}}], 
                    Graphics[{{{{Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.6986721326928861, 0.19771696601796174`, 
                    0.6677306165580813], 
                    Opacity[1.]], {}, {
                    
                    Line[{{2.1972245773362196`, 0.5224619640216486}, {
                    2.1972245773362196`, 0.5564998176945697}}], 
                    
                    Line[{{2.1972245773362196`, 0.5564998176945697}, {
                    2.1972245773362196`, 0.5894171320207474}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.6986721326928861, 0.19771696601796174`, 
                    0.6677306165580813], 
                    Opacity[1.]], {}, {
                    
                    Line[{{3.6888794541139363`, -0.1329818731542961}, {
                    3.6888794541139363`, -0.006057878786124841}}], 
                    
                    Line[{{3.6888794541139363`, -0.006057878786124841}, {
                    3.6888794541139363`, 0.106555715314438}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.6986721326928861, 0.19771696601796174`, 
                    0.6677306165580813], 
                    Opacity[1.]], {}, {
                    
                    Line[{{5.0106352940962555`, -0.3445288510554665}, {
                    5.0106352940962555`, -0.07927726498460928}}], 
                    
                    Line[{{5.0106352940962555`, -0.07927726498460928}, {
                    5.0106352940962555`, 0.13016245149949804`}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.6986721326928861, 0.19771696601796174`, 
                    0.6677306165580813], 
                    Opacity[1.]], {}, {
                    
                    Line[{{6.576469569048224, -0.6962184030641927}, {
                    6.576469569048224, -0.5090058897173907}}], 
                    
                    Line[{{6.576469569048224, -0.5090058897173907}, {
                    6.576469569048224, -0.35137625753949725`}}]}}}}, {{{}, {}, 
                    Tooltip[{
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6986721326928861, 0.19771696601796174`, 
                    0.6677306165580813], 
                    Opacity[1.]], 
                    
                    Line[{{2.1972245773362196`, 0.5564998176945697}, {
                    3.6888794541139363`, -0.006057878786124841}, {
                    5.0106352940962555`, -0.07927726498460928}, {
                    6.576469569048224, -0.5090058897173907}}]}, 
                    Column[{
                    Style["NearestNeighbors", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"NeighborsNumber", Automatic}, {
                    "DistributionSmoothing", 0.5}, {
                    "NearestMethod", Automatic}}, Alignment -> Left, Frame -> 
                    All, FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]]}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6986721326928861, 0.19771696601796174`, 
                    0.6677306165580813], 
                    Opacity[1.]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.1972245773362196`, 0.5564998176945697}}, {{
                    3.6888794541139363`, -0.006057878786124841}}, {{
                    5.0106352940962555`, -0.07927726498460928}}, {{
                    6.576469569048224, -0.5090058897173907}}, {{
                    2.1972245773362196`, 0.5564998176945697}}, {{
                    3.6888794541139363`, -0.006057878786124841}}, {{
                    5.0106352940962555`, -0.07927726498460928}}, {{
                    6.576469569048224, -0.5090058897173907}}}]}, 
                    Column[{
                    Style["NearestNeighbors", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"NeighborsNumber", Automatic}, {
                    "DistributionSmoothing", 0.5}, {
                    "NearestMethod", Automatic}}, Alignment -> Left, Frame -> 
                    All, FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]]}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6986721326928861, 0.19771696601796174`, 
                    0.6677306165580813], 
                    Opacity[1.]], {
                    Point[{2.1972245773362196`, 0.5564998176945697}], 
                    Point[{3.6888794541139363`, -0.006057878786124841}], 
                    Point[{5.0106352940962555`, -0.07927726498460928}], 
                    Point[{6.576469569048224, -0.5090058897173907}], 
                    Point[{2.1972245773362196`, 0.5564998176945697}], 
                    Point[{3.6888794541139363`, -0.006057878786124841}], 
                    Point[{5.0106352940962555`, -0.07927726498460928}], 
                    Point[{6.576469569048224, -0.5090058897173907}]}}, 
                    Column[{
                    Style["NearestNeighbors", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"NeighborsNumber", Automatic}, {
                    "DistributionSmoothing", 0.5}, {
                    "NearestMethod", Automatic}}, Alignment -> Left, Frame -> 
                    All, FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], {}}}, {{}, {}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.05438122368222, -0.6143664053752155}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    HoldForm["training examples used"], None}}, 
                    FrameTicks -> {{
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], {}}, {
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> GrayLevel[0.5, 0.2], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "DefaultPlotStyle" -> {
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02],
                     "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
                    Scaled[0.05], "OptimizePlotMarkers" -> True, 
                    "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{2.1502557457957505`, 
                    6.8001700683022}, {-0.6143664053752168, 
                    0.6518099974988946}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.01], 
                    Scaled[0.01]}, {0, 0}}, Ticks -> {
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], 
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0]}}]}, 
                    MachineLearning`file12Panel`PackagePrivate`pos$$], 
                    PlotLabel -> Grid[{{
                    Button[
                    Deploy[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.25], 
                    Line[{{0, 0.8}, {-1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]], 
                    Graphics[{
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], 
                    Line[{{0, 0.8}, {-1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]]], "LinkHand"]], 
                    MachineLearning`file12Panel`PackagePrivate`pos$$ = (1 + 
                    Mod[-1 + # + #2, 3]& )[
                    MachineLearning`file12Panel`PackagePrivate`pos$$, -1], 
                    Appearance -> "Frameless"], 
                    Part[{"Standard deviation", 
                    Tooltip[
                    "Learning curve", 
                    "mean cross entropy for best algorithm at each training \
size"], 
                    Tooltip[
                    "Learning curves for all algorithms", 
                    "mean cross entropy at each training size"]}, 
                    MachineLearning`file12Panel`PackagePrivate`pos$$], 
                    Button[
                    Deploy[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.25], 
                    Line[{{0, 0.8}, {1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]], 
                    Graphics[{
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], 
                    Line[{{0, 0.8}, {1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]]], "LinkHand"]], 
                    MachineLearning`file12Panel`PackagePrivate`pos$$ = (1 + 
                    Mod[-1 + # + #2, 3]& )[
                    MachineLearning`file12Panel`PackagePrivate`pos$$, 
                    Plus[1]], Appearance -> "Frameless"]}}, 
                    Alignment -> {Center, Baseline}, 
                    ItemSize -> {{3, 20, 3}, {2}}]], StandardForm],
                  ImageSizeCache->{330., {122., 127.}}],
                 DynamicModuleValues:>{}],
                Alignment->Center,
                StripOnInput->False], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             ColumnsEqual->False,
             
             GridBoxAlignment->{
              "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
             GridBoxDividers->{"Columns" -> {False, {
                  Opacity[0.15]}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {Automatic, {Automatic}}, "Rows" -> {{1.}}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], 
                 Offset[1.1199999999999999`], {
                  Offset[1.75]}, 
                 Offset[0.27999999999999997`]}, "Rows" -> {
                 Offset[0.2], {
                  Offset[0.8]}, 
                 Offset[0.2]}}],
            "Grid"],
           FrameMargins->{{10, 10}, {10, 5}},
           FrameStyle->None,
           StripOnInput->False],
          Deploy,
          DefaultBaseStyle->"Deploy"],
         Alignment->Center,
         BaseStyle->{
          FontWeight -> "Light", FontSize -> 11, FontFamily -> 
           ".AppleSystemUIFont", NumberMarks -> False, Deployed -> False},
         StripOnInput->False]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], 
          Offset[0.8], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[0.85],
     RoundingRadius->5,
     StripOnInput->False],
    StripOnInput->False,
    LineBreakWithin->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  MachineLearning`MLInformationObject[
   PredictorFunction[<|
    "ExampleNumber" -> 898, 
     "Input" -> <|
      "Preprocessor" -> 
       MachineLearning`MLProcessor[
        "ToMLDataset", <|
         "Input" -> <|
           "f1" -> <|"Type" -> "NumericalVector", "Length" -> 41|>|>, 
          "Output" -> <|
           "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
          "Preprocessor" -> 
          MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
               MachineLearning`MLProcessor["List"], 
               MachineLearning`MLProcessor[
               "WrapMLDataset", <|
                "FeatureTypes" -> {"NumericalVector"}, 
                 "FeatureKeys" -> {"f1"}, "FeatureWeights" -> Automatic, 
                 "ExampleWeights" -> Automatic, "RawExample" -> 
                 Missing["KeyAbsent", "RawExample"], "StructurePreserving" -> 
                 False|>]}|>], "ScalarFeature" -> True, "Invertibility" -> 
          "Perfect", "StructurePreserving" -> False, "Missing" -> 
          "Allowed"|>], "Processor" -> 
       MachineLearning`MLProcessor[
        "Sequence", <|
         "Input" -> <|
           "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
          "Output" -> <|
           "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
          "Processors" -> {
            MachineLearning`MLProcessor[
            "SynthesizeMissingValues", <|
             "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
              "StructurePreserving" -> True, 
              "Input" -> <|
               "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
              "Distribution" -> 
              LearnedDistribution[<|
                "ExampleNumber" -> 898, "Preprocessor" -> 
                 MachineLearning`MLProcessor[
                  "ToMLDataset", <|
                   "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Length" -> 41|>|>,
                     "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Preprocessor" -> MachineLearning`MLProcessor["Identity"],
                     "ScalarFeature" -> True, "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
                  "Processor" -> 
                 MachineLearning`MLProcessor[
                  "Sequence", <|
                   "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Processors" -> {
                    MachineLearning`MLProcessor[
                    "LogRescaleNumericalVector", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Indices" -> {24}, "Centers" -> {0.04314593098342069}, 
                    "Cutoffs" -> {0.00033538463930567197`}, 
                    "Version" -> {13.2, 1}, "ID" -> 1758109800256407757, 
                    "Output" -> <|
                    "f1" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 1|>|>|>], 
                    MachineLearning`MLProcessor[
                    "Standardize", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAACzypZgfu+XP9BIt2NgL5o/FbGuiAa3nD+D
+clcUqGfPwkfZWf8W6E/yozpBxY0oj9X8bwxz8aiP8j/dbZD86I/WV0uoATd
oj+Gm9dmKKuiPw0y/Kn7W6I/UlpiP3HHoT8sKD3m/OCgP/3CySr7cJ8/W2aO
XlKdnT9ZHJM8zm6cPzQ/PK9SkZw/fZKae8zUnT/oCMg+4P2fP9uwnEML76E/
LzUTTaPioz9reOhNoyCkP1a4q+JTGqI/B1Ez/2hMA8AEiMCk+D+fP0BcLLMl
HqA/dT7ZFK2ioD/ozGQh40+gP5aWGrebJp0/9+MerbAhlz9xo4ZSyVaQP3Oo
KEEjU4Q/8XWPWSYyeD9wd9QjUdNpP5OdF1H/Al0/DtOG21IgTT8eoV6P8HxA
P429KDkWqjM/+F4AMmWAKT9/W2K81nsjP3eTQBIumxg/s8CZ+Q==
                    "], "StandardDeviation" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAAAIQ46QdQ+AP1A0Za9+/nc/YwHlmJnNcz8e
tU0hU3F3P4nTZmYcZH8/QOcuO1TEgz9GFFguRzCIP0/oTX65Bow/xcoK+5xw
jj+yhtenIcOPPz0JPmtTYY8/vayUQOTAjT+7o+6G9JiLP9W7S69WqYk/SwZj
iIbOiD9hmymwdqmIP9floHbyAYk/ESULVVZIiT+YaRZNW7aJP57HOgRuh40/
nDik6aakkT+gkUnvb12RP7kTLcbotYs/E4XLS93v/T/lnIgXLhqNP+cMNnvz
CZE/PK/VBXTukj/fFJA0GHSTP9YmLjoExpE/ys89UBAkjD8h6HUkaGODP7/s
bHjt+3Y/89BVz/KdaT/+OmLvXeJZP3IB+rRcMlA/4hXanuYaRj8QVTaAkh9C
P0dslVNaIUI/Gteieh37PT9o7vdEsD05PxFhqaNPXTY//nGWtQ==
                    "], 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Version" -> {13.2, 1}, "ID" -> 64935607783415987|>]}, 
                    "Invertibility" -> "Perfect", "StructurePreserving" -> 
                    True, "Missing" -> "Allowed"|>], "PerformanceGoal" -> 
                 "DirectTraining", "BatchProcessing" -> Automatic, 
                 "Model" -> <|"RotationMatrix" -> CompressedData["
1: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
J9l5Dd8JgKWM2sPHN2vxso9C2FGXEJSKSY1y8SBg7SbnUxOVONRq9Wu0lsrF
OH2eixfmSlFk7bF0Pr0DtM3mydeVj2LGpn7n4/B6mN/pWRo8mo7pH2jc0380
4MMq9WMnGRqwpr1Io1k+E7UNVyd/k+fhYesrUCSRisdtbSZWBnuw8p2WrU0I
EY1oRPUbNb8he321yzP1LnhCFvjp4HYD2MzRXT8sWo0z817CllOuqLNVsK74
2R5kO26qLLiXYedd+jTpnkTQlx56q5+ViNdl2IUawn3ggOYNn749DqJ5Xkn/
+UI2nKo69/y8SCRun1H9MrORi5vpv8k2j9TD8RyNw33D2RD9Tv7SO0qEK7pC
7N9sdXFlLcJ30DoR2gZqM5jGQuHYSrRUX2UHPDhzslmqohr1o775nfKvhi+u
q/Hz9pHQV1Dr3W9ajJ5idOHNH9KA7vJp30YdGzAJWaCYv1IEOXdI53R78jDo
0ef0uvgmEOy/cISaOx3pGWaUHqkWoHej2K5PYAVYj10ZGKxrwFmF6x9UvZug
cly8LLB+AGimldTz/vVCH+l58585eWi809DU0z4G9cw0scplXaAWwXAsOS8M
Un0vHv3FUwvX9TuZJlTr4I2G0Nr98QaI01EvHFOpxgiZG2xqklHIPUVXrH5G
G2rIyJf0S8uQl38hZdspGWYYGi4+I03A3h7Pnn6OQPjNZXKuwjUD7mu9vMlf
VgDXOk8XMMh8Ru23Mikih0Iw1Lo/PMavBd4XRReuTSXs4faGl1BGHajyd56Q
ORQNG5d+2JJnRgLPK7qMhUOFOFJHcevl03q49tvvoWlLJu482q3lSSfg2Yh/
1V+Um8C4rkw/8kIaKjd+rUnqqQCzntW242Wh+KKIgW400AHbQs3OaTY0grR0
Dwv7+xZoIrtiT8jswK40pUXpeyPg6XferbO2E5wfTeSUmfUBZ/jnqiNFCGev
t+GJinJoJRYxGyy3omH+e4uk/QTINjM9t3KpB69/M7qGp6rQsf/fS1L7WkSW
U9b75dLg14hrvKBVETjd+brZkdgAfT2ng9oZqvHuL+I2NRMBZfku2tKsWkCV
l1Lf9uUyzGDVFj7Xngo3Jrzpbz/LxcADV44L/HWAbnsecvfoGAixp2pivZsP
HLyiH2mFvOD5gm2+I00cJJ0lF3CXbISqJeb0VRpF7Ll3vXhrsx4ELKV6CAX5
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
1KFRLg==
                    "], "Precisions" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAADXPTPKV+emP0mYF6ERALo/0/FosOqsyj+v
dMPw/bfiP8eJI2PmzvE/4zcctxE3BEAJmyq7BkkLQKRG27tUMhNAG/FUq8qA
HECuglm4FswgQF25JMNAhCVAKDcef738OUAMmZeCPIpIQCPN6GINaklAXZlS
CX1JUUBiZraoVbBdQDjTujK0XGBArIRCNlVBaUAQ3c92D8puQMoCLpSaWXBA
D45svkdveECesgrbGAx7QLIiVrp1xn9A94wkE5tbhUDy+ynoV12IQAsN90TP
LolAEIDElHL8kkCRLKUFeNuTQAMFutJ2kplAYWkPBUMlnkDxUx66FkugQJpl
9eo2vqFAtvPl22JapED9a8StvaymQCCD4vL/kahAgLGfKqu1q0D9u0TCplOw
QBS+W+pL3rZAswHtb9IovUCziMOYVM/BQJ/qRwFrVNZAA6qbbA==
                    "], "NoisePrecision" -> None, "Processor" -> 
                   MachineLearning`MLProcessor[
                    "Center", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAABBFtZd2NwjP4SA0b9Xoia/caH8n9VEJT90
oH6furwxP7DKP5C3LiS/N3/OnlSyMr+ldkjEzb4jv/ZIB/u9Ijm/GdQSvIAl
8r6jKRkVHb0wv8p+1AeKeCe/PtLAANl5J7+asadF5QnuvuNm6AmvIT+/ncwG
VccBNL8b0AWfz6cLP0G6BFcXaCM/ALwf6xOXJj9eVqDtcC8jPwtMpWRsSxK/
edzXsQxjJT8DK/kXY3klv3zXyFtZjDE/lti/l7/HFz9yf9LXZQwrP6Jk5yJ/
1TQ/XpLv8+PqJD/Hot04VBLuvjXaEfsdaSw/JIgNrsvdGj85R++o2uslPwKr
73VnqQw/tTIc2Pf6IL9yj/XXc4ouP2oJNokIgCg//HJW+x0GQL8BXdaFRTBB
vxy2BABVyy8/x7v2i1/KFb98fg56PSMjv9UKRkisctK+BXKbKg==
                    "], 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Version" -> {13.2, 1}, "ID" -> 1210029810956485142|>], 
                   "PostProcessor" -> 
                   MachineLearning`MLProcessor[
                    "FirstValues", <|
                    "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, 
                    "Key" -> "f1", "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
                    "Method" -> "Multinormal", 
                   "Options" -> <|
                    "CovarianceType" -> <|
                    "Value" -> "Full", "Options" -> <||>|>, 
                    "IntrinsicDimension" -> <|
                    "Value" -> 41, "Options" -> <||>|>|>|>, 
                 "TrainingInformation" -> <|
                  "Configurations" -> 
                   Dataset[<|<|
                    "Value" -> "Multinormal", 
                    "Options" -> <|
                    "CovarianceType" -> <|"Value" -> "Full"|>, 
                    "IntrinsicDimension" -> <|"Value" -> "Heuristic"|>|>, 
                    "NaiveImputer" -> 
                    MachineLearning`MLProcessor[
                    "ImputeMissing", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAAAlB9Zd2NwjPxKA0b9Xoia/+5j8n9VEJT/r
o36furwxP0XHP5C3LiS/Bn3OnlSyMr8lfkjEzb4jv0lPB/u9Ijm/a8QSvIAl
8r4wMxkVHb0wv0uM1AeKeCe/JszAANl5J7+FFqhF5QnuvlFl6AmvIT+/sdEG
VccBNL+8hgWfz6cLP8WcBFcXaCM/48kf6xOXJj8bSaDtcC8jP45npWRsSxK/
i+zXsQxjJT+mHPkXY3klvy7XyFtZjDE/hvW/l7/HFz94fdLXZQwrP0Ft5yJ/
1TQ/d4vv8+PqJD8uLt04VBLuvr7iEfsdaSw/yqUNrsvdGj/lOu+o2uslPwHe
73VnqQw/tEYc2Pf6IL9BmfXXc4ouPxsANokIgCg/pHRW+x0GQL+iWdaFRTBB
vyG5BABVyy8/Edb2i1/KFb/5eg56PSMjv1+ZRkisctK+sUabCg==
                    "], "StandardDeviation" -> CompressedData["
1:eJxTTMoPSmVkYGDQBGK2nCNmTn/f2/N/8eSY++e9Pa/LmZwqhg/22wQbDiUD
6WOq76/o/Htvz62Xq5/C+MFeX2Xtka7/7+2/PnlakAikhV6UTeMH0v7np2V9
//3enrGa6dAOoL5X7wIuZAL1ydjV16sB6fDbH5inAOljvv8/dALln5+0dC8D
8kNnvbo9Bcg/L7TwwlQgnS2m9qUOaN7u4infnUHu2sFkuhwoHlcU9nEpUDzy
wzpDHaA7zW/ETv0E1G+ae/+aFlB+dfqr+I9AeqXUjJ2WQLq07sc+EN0yk0/S
C6iuVErquz+Q/uXUyyANFPeYyRpxE2hekZeZ2HQgvaol/SofUD7f9sFBayD/
wSz9E5ZAevujeSEOQPW5nHIf5gL5hvO6i1KB/KyYnReXA9XPuG67UAoYLgDp
Jq8g
                    "], "Method" -> "NaiveSampler", "VectorLength" -> 41, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Type" -> "NumericalVector", "Version" -> {13.2, 1}, "ID" -> 
                    2628110491450176983|>], "EMIterations" -> 1|> -> <||>|>, 
                    TypeSystem`Assoc[
                    
                    TypeSystem`Struct[{
                    "Value", "Options", "NaiveImputer", "EMIterations"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Struct[{"Value"}, {
                    TypeSystem`Atom[String]}], 2], TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer]}], 
                    TypeSystem`Assoc[
                    TypeSystem`UnknownType, TypeSystem`UnknownType, 
                    TypeSystem`AnyLength], 1], <||>], "BestModelInformation" -> 
                   Dataset[<|
                    "Configuration" -> {
                    "Multinormal", "CovarianceType" -> "Full", 
                    "IntrinsicDimension" -> "Heuristic"}, "ModelUtility" -> 
                    Missing[]|>, 
                    TypeSystem`Struct[{"Configuration", "ModelUtility"}, {
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[String], TypeSystem`AnyType, 
                    TypeSystem`AnyType}], TypeSystem`UnknownType}], <||>]|>, 
                 "NaiveImputer" -> 
                 MachineLearning`MLProcessor[
                  "ImputeMissing", <|
                   "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAAAlB9Zd2NwjPxKA0b9Xoia/+5j8n9VEJT/r
o36furwxP0XHP5C3LiS/Bn3OnlSyMr8lfkjEzb4jv0lPB/u9Ijm/a8QSvIAl
8r4wMxkVHb0wv0uM1AeKeCe/JszAANl5J7+FFqhF5QnuvlFl6AmvIT+/sdEG
VccBNL+8hgWfz6cLP8WcBFcXaCM/48kf6xOXJj8bSaDtcC8jP45npWRsSxK/
i+zXsQxjJT+mHPkXY3klvy7XyFtZjDE/hvW/l7/HFz94fdLXZQwrP0Ft5yJ/
1TQ/d4vv8+PqJD8uLt04VBLuvr7iEfsdaSw/yqUNrsvdGj/lOu+o2uslPwHe
73VnqQw/tEYc2Pf6IL9BmfXXc4ouPxsANokIgCg/pHRW+x0GQL+iWdaFRTBB
vyG5BABVyy8/Edb2i1/KFb/5eg56PSMjv1+ZRkisctK+sUabCg==
                    "], "StandardDeviation" -> CompressedData["
1:eJxTTMoPSmVkYGDQBGK2nCNmTn/f2/N/8eSY++e9Pa/LmZwqhg/22wQbDiUD
6WOq76/o/Htvz62Xq5/C+MFeX2Xtka7/7+2/PnlakAikhV6UTeMH0v7np2V9
//3enrGa6dAOoL5X7wIuZAL1ydjV16sB6fDbH5inAOljvv8/dALln5+0dC8D
8kNnvbo9Bcg/L7TwwlQgnS2m9qUOaN7u4infnUHu2sFkuhwoHlcU9nEpUDzy
wzpDHaA7zW/ETv0E1G+ae/+aFlB+dfqr+I9AeqXUjJ2WQLq07sc+EN0yk0/S
C6iuVErquz+Q/uXUyyANFPeYyRpxE2hekZeZ2HQgvaol/SofUD7f9sFBayD/
wSz9E5ZAevujeSEOQPW5nHIf5gL5hvO6i1KB/KyYnReXA9XPuG67UAoYLgDp
Jq8g
                    "], "Method" -> "NaiveSampler", "VectorLength" -> 41, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Type" -> "NumericalVector", "Version" -> {13.2, 1}, "ID" -> 
                    2628110491450176983|>], "InputDimension" -> 0, 
                 "OutputDimension" -> 41, 
                 "Log" -> <|
                  "Example" -> 
                   MachineLearning`MLDataset[<|
                    "f1" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 1, 
                    "Values" -> CompressedData["
1:eJxTTMoPSmViYGBgBGJNIK7Ist9ntWGCvemcK7WVOVPtDzoe9X9/dqb9dtXC
4F/v5thzyYT8+XJvjr1GearBxM2z7I8BZTNtZ9hfKk1UyXWfZh/BJmy5mnGq
fbrZ4pd7zKbYcytnWm8Sm2I/71b/ej6dKfaHPe9OPx42xR4k6nJmin2u64WC
oO9T7U+E/Pv14dIMe/loQZM5V+baN7VO2Chit8hes7Y8zXjWMvtU/b5V//+t
sb8360JhKMNGqDkb7BVTdFr71622///n25N1PMvsT8WIOZ+MXmwf/P3pRlHH
xfa225QyLFYutr89catCktpi+19vjgFtWmC/UdB0/t0Zs+zrKnOALphkX5qk
Xpak3ma/XSXP6/7cSnugZ641dWTaT92l37+WI8r+WkvfaiYOD3vTBQ8WPt1g
ZK8C9r+UPQMUdE/arlYS89UOxgcALneWhA==
                    "], "ID" -> 4635246341379078022|>|>, <|
                    "ExampleNumber" -> 1, "ExampleWeights" -> 1, 
                    "LogDensityRatios" -> 0, "RawExample" -> False|>], 
                   "TrainingTime" -> 0.131417, "MaxTrainingMemory" -> 1617784,
                    "DataMemory" -> 296520, "FunctionMemory" -> 59376, 
                   "LanguageVersion" -> {13.2, 1}, "Date" -> 
                   DateObject[{
                    2023, 8, 1, 10, 14, 14.118747`7.902371141325471}, 
                    "Instant", "Gregorian", -4.], "ProcessorCount" -> 4, 
                   "ProcessorType" -> "x86-64", "OperatingSystem" -> "MacOSX",
                    "SystemWordLength" -> 64, "Evaluations" -> {}|>, 
                 "LogPDFDistribution" -> 
                 MachineLearning`TailedQuantileDistribution[<|
                   "Quantiles" -> {6.07088734253851, 6.07088734253851, 
                    6.095422220961959, 6.139582333771467, 6.150821740348716, 
                    6.166772593140232, 6.176929859830782, 6.1923097388355615`,
                     6.20425963698722, 6.216873024332063, 6.318474894752949}, 
                    "LeftBoundary" -> 6.095422220961959, "LeftScale" -> 
                    0.012267439211724351`, "LeftTailNorm" -> 0.2|>], 
                 "Entropy" -> Around[-253.10256688054784`, 0.891433624356406],
                  "EntropySampleSize" -> 10|>], 
              "Output" -> <|
               "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
              "EvaluationStrategy" -> "ModeFinding", "Version" -> {13.2, 1}, 
              "ID" -> 895810465636885430|>], 
            MachineLearning`MLProcessor[
            "LogRescaleNumericalVector", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
              "StructurePreserving" -> True, 
              "Input" -> <|
               "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
              "Indices" -> {24}, "Centers" -> {0.04314593098342069}, 
              "Cutoffs" -> {0.00033538463930567197`}, "Version" -> {13.2, 1}, 
              "ID" -> 1295242045016063173, 
              "Output" -> <|
               "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>|>], 
            MachineLearning`MLProcessor[
            "Standardize", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
              "StructurePreserving" -> True, 
              "Input" -> <|
               "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
              "Mean" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAACzypZgfu+XP9BIt2NgL5o/FbGuiAa3nD+D
+clcUqGfPwkfZWf8W6E/yozpBxY0oj9X8bwxz8aiP8j/dbZD86I/WV0uoATd
oj+Gm9dmKKuiPw0y/Kn7W6I/UlpiP3HHoT8sKD3m/OCgP/3CySr7cJ8/W2aO
XlKdnT9ZHJM8zm6cPzQ/PK9SkZw/fZKae8zUnT/oCMg+4P2fP9uwnEML76E/
LzUTTaPioz9reOhNoyCkP1a4q+JTGqI/B1Ez/2hMA8AEiMCk+D+fP0BcLLMl
HqA/dT7ZFK2ioD/ozGQh40+gP5aWGrebJp0/9+MerbAhlz9xo4ZSyVaQP3Oo
KEEjU4Q/8XWPWSYyeD9wd9QjUdNpP5OdF1H/Al0/DtOG21IgTT8eoV6P8HxA
P429KDkWqjM/+F4AMmWAKT9/W2K81nsjP3eTQBIumxg/s8CZ+Q==
               "], "StandardDeviation" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAAAIQ46QdQ+AP1A0Za9+/nc/YwHlmJnNcz8e
tU0hU3F3P4nTZmYcZH8/QOcuO1TEgz9GFFguRzCIP0/oTX65Bow/xcoK+5xw
jj+yhtenIcOPPz0JPmtTYY8/vayUQOTAjT+7o+6G9JiLP9W7S69WqYk/SwZj
iIbOiD9hmymwdqmIP9floHbyAYk/ESULVVZIiT+YaRZNW7aJP57HOgRuh40/
nDik6aakkT+gkUnvb12RP7kTLcbotYs/E4XLS93v/T/lnIgXLhqNP+cMNnvz
CZE/PK/VBXTukj/fFJA0GHSTP9YmLjoExpE/ys89UBAkjD8h6HUkaGODP7/s
bHjt+3Y/89BVz/KdaT/+OmLvXeJZP3IB+rRcMlA/4hXanuYaRj8QVTaAkh9C
P0dslVNaIUI/Gteieh37PT9o7vdEsD05PxFhqaNPXTY//nGWtQ==
               "], 
              "Output" -> <|
               "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
              "Version" -> {13.2, 1}, "ID" -> 3037891080026016735|>]}, 
          "Invertibility" -> "Perfect", "StructurePreserving" -> True, 
          "Missing" -> "Imputed"|>]|>, 
     "Output" -> <|
      "Preprocessor" -> 
       MachineLearning`MLProcessor[
        "ToMLDataset", <|
         "Input" -> <|"f1" -> <|"Type" -> "Numerical"|>|>, 
          "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
          "Preprocessor" -> 
          MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
               MachineLearning`MLProcessor["List"], 
               MachineLearning`MLProcessor[
               "WrapMLDataset", <|
                "FeatureTypes" -> {"Numerical"}, "FeatureKeys" -> {"f1"}, 
                 "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic,
                  "RawExample" -> Missing["KeyAbsent", "RawExample"], 
                 "StructurePreserving" -> False|>]}|>], "ScalarFeature" -> 
          True, "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
          "Missing" -> "Allowed"|>], "Processor" -> 
       MachineLearning`MLProcessor[
        "Sequence", <|
         "Input" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
          "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
          "Processors" -> {
            MachineLearning`MLProcessor[
            "ToVector", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
              "StructurePreserving" -> True, 
              "Input" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>,
               "Output" -> <|
               "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
              "Version" -> {13.2, 1}, "ID" -> 2243861272990366060|>], 
            MachineLearning`MLProcessor[
            "Standardize", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
              "StructurePreserving" -> True, 
              "Input" -> <|
               "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
              "Mean" -> {8.396926503340762}, 
              "StandardDeviation" -> {3.100408284980153}, 
              "Output" -> <|
               "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
              "Version" -> {13.2, 1}, "ID" -> 9003256909179662445|>], 
            MachineLearning`MLProcessor[
            "FromVector", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
              "StructurePreserving" -> True, 
              "Input" -> <|
               "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
              "Output" -> <|
               "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
              "Version" -> {13.2, 1}, "ID" -> 5068397814240598494|>], 
            MachineLearning`MLProcessor[
            "FirstValues", <|
             "Info" -> <|"Type" -> "Numerical", "Weight" -> 1|>, "Key" -> 
              "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> 
              False, "Missing" -> "Allowed"|>]}, "Invertibility" -> "Perfect",
           "StructurePreserving" -> False, "Missing" -> "Allowed"|>], 
       "ProbabilityPostprocessor" -> Identity, 
       "InverseProcessorFunction" -> (8.396926503340762 + 
        3.100408284980153 #& ), 
       "ProcessorFunction" -> (-2.708329268767424 + 0.32253816532631324` #& ),
        "Name" -> "value", 
       "Quantiles" -> {-1.8890823288385883`, 1.6007806199921208`}, "Mean" -> 
       8.396926503340758|>, "LabelSplitter" -> 
     MachineLearning`MLProcessor[
      "FeatureLabelSplit", <|
       "Processor" -> MachineLearning`MLProcessor["ListSplit"], 
        "PreferLabeled" -> True, "KeepLabelsFormat" -> False|>], 
     "RecalibrationFunction" -> None, "ImputationStrategy" -> Automatic, 
     "Prior" -> Automatic, "Utility" -> (DiracDelta[#2 - #]& ), "Threshold" -> 
     0, "PerformanceGoal" -> Automatic, "BatchProcessing" -> Automatic, 
     "Model" -> <|
      "NeighborsFunction" -> 
       MachineLearning`PackageScope`NeighborsFunction[
        "BruteForce", {CompressedData["
1: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
ZWpzeP/DoMESiwUpmRMrl3mVo6nkt5rOFXlgtSbStTGwD5ysHli/8FhCR7H1
ThXyjeBy7H1axdYa8J8+t5uPWQC+VfW1SgEM+Ler+Zj1sgYcMAj1y/XKQbe5
WUuRRBLwXHEZsD84Al6tZUd3PmxCp8u6vflcT1GN9SQeCmxAhq+B/rGjn+H9
pecFMZdq0ezo7TyfDgIx6nH+hsblvbD36FV9jy958EXB8+5FLx7iE05IlNpF
GlQdviV7798wtEwaTw99pmH8j+rcsw/7obYi+8z59E5Ms7wr5prRCIwtb3Mb
rpJBykL4346/3SDIOfxK1IiGwWKth7pOUeElj+LUr29seGqT0Px2fBSuHyl7
ajPFApmaV53Fkd04VyawJy6EAa+2mD5+a8sA6NuhnutFIGrkrgwMu0YH+dWU
OyWPKlH29VZ+WZ0KEFleYvXVvxQz5Oum5Qe4c295Wd3k3SJmva6kHeSe96hF
qHmbUz34Kz2WeSnDgnM3zkjeu9uKC4q2Nq7fCETDI8UpW1OGUF0oOdsX2GCQ
8VLn4qZM3LD3zG6ZSRrEjXE+N0hze+d+9QWxWQLxvXH9eu17vETO4m2/PWls
8KR5w8YdLHRbFz9uJkkHj7DUdK/cQcy9/Ofmv9w4vHMk6EzoGm5Ozu3902nP
hsrAIlXHLBbuOnZ59jE/L3GV4vV45WNTqHh5PGl0iIf4tiJr8+XBfPxd7/Rs
C6EOJN3UeQP9KPDKLTDHLiET9eWSdbhmAWqpQqEL1XSYy5k/TZYhwymVc7+z
W5gQXGkrH0hvwPi1wQap3WS4uW5sB/yhg+Wfk8nx9i24YVfp0gERNnw86/q4
x6cfKX2rG9et4UB/oH/Rv1ul8NzFMTd34xherh8kHYEW/GLitO+LMwd+D4ut
ajjeguPRlJ6dAxO4YYt0dRSDASn1TiaSkq8xR//hE6/wKpwoERQcdB4GwW1J
PeTLbHT5L3XJWagBImy1zwS4tUCCufH64aUCnPemHcs/woLiF68SPi804f2H
txlulsN4faWALfMcFYKu34vaJzECk7GhNhuejeC8180J/ng2HBF733u7huvf
e92Ybib+KPbG6uQu9yo4I2fLXlk3hYmlpkzv1X1wSbp4YqdtJbx2cLosYEYg
3iOekjQ0psJgQAFb7eow0LccVxLbPYyvZ3+U/zEYBu3MfV1p3P59Ohc3bULs
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
3ekCyTuHt/4JpkNx44j0IXMqiLfIwOw+DvaPtpxO8abDoW/xLxbPMEF//5e7
O+/TQcKL7bdvMwvigrdnrWsfRB0+ra2nPzOBFqwVlmnKhGybw8GJXePo0Kla
ppnNAMmjr8alg/vxocY+KOtuBJHHDYUhDDJqOQqHH+ihw2F/6Web1ebxakW0
zeZPFFhO9Unxri+GzIMXZJR7GfCMkvTmQV8fuvPl5Qo1TuL46Vt9V57Wo22h
4Ys3imxwINo1uNx+j0KQK32phwaqj8QFe5gMoOn/PHrnxhj21yYqDMwQiCVH
/frG/VjQnL++UebNFLq8yuLvnWLDAaNzp36em0WXoJW7Ber6cG0yUc74OAtC
jY5zQjdz4PJPIMhR+5GoZ1J1I5mH+Dflzuj2PVzevNktoHaFh/jSdvfIb0ot
umoLDq41b4eDNT5+/alU4O0P2CLGLsLFJIPH7O0jIJUb8XdJl9tb4TyNpQ/J
IDN2Uq/tCh0Ig6ee1qZm4q3Oc8dXnaODMr/NI5v7TBiyk8zd+IiDqr4SvG/9
WTAsI9+h7ziC/0lotPY8ZcHj0Cm5gKAukFPeF3lZcR73m21f0DfvQit9J+ns
UhaohoeIO/i1o82QjqydHYG4XaCHfa2TBbafNQcv/G5BRf41f98G5UG64WJz
tmofaHiFGhjajSF1bfjJGHUuH8lmGC5odYPkJv8t4cI/oHol2+FY+yh4/sw7
/m2oA0VN40tnrzdhsUruuoCkUXh/53C6Vc0IiL7dJ9b43xDm8/345cDtDZuA
37+K+ftQo15LpuDWdyjoqK1+k1yHGreOdWhL8xD7d920Xu3PAL/jt+6M32iC
c0Szh9m+BOJOJ6t5A5dRWDjX++GWLwkkYo933GomYe+Jt/Wqh1jwSVaG3+/b
IJo/3Lz33PUuIEc3+1ddpEHyY4OuhTA6rPVUv6fSScLkCevl31OY4NpwVejN
bRb8OMv/+YYmG9R/ufBZOrPhOI9Tu6M8GRccXix6bmJA9sGyNBqXmzeYfU+d
C17EVYVPImSsaLBcfl8J9UYrXvT1O2Ik2wTORmetbfWpqH72Di89ngmMJ+Sf
Rs5T6GRibLjnLxnybpOndv1sgpa7d+SfZjKgeOMjZTOrXvQjupel1BCI9u0R
n+LCg2DlFcUna4tYUKU7WZtc+xviav8JxZK5PfGywlCTwII/JH9fD59xHP7V
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
7y0+I7BNt89kaZiMdsdidhTJD0HII60zk0tTwGkuvr40dBp0ksjp2RV9GHrz
5BfvX2Rwpnhstimn4N1OSZW6T4sYS4zcVR5LB+7b7K0FO5fhYKAzl9IXOmS9
v3W75ucSjBxYmaw72IFvqc0Ly9c74Kb8Nx1tlS7M4aW//PvrF9B3t3JVG6fh
ilwy9+UsCj75/edpdNEospKsXDjOVeNZv0zzO8qzcGLT5+xj1zrQ/VLrmr7g
MDpMTVrOmcyA99Hair6sJYzU7Jh9uPYXmi9einzUyvQcQtvV8OhxeLAqa5hn
ugRVb4yTf1i248cvukJ+/EvYdYz3UXXcEFy7eeLi6iwFPo4eafzyaAF5sgn/
+uumwPL5udNf9cagtfm24U3heOBSOtOWMEWDrrji8/FMT9zfY3aRXWEY0j+s
+37v+RiTM475OMRTcBdPQKCyWwfYHQu3HSQTQUChvDKjpBa/Pd4ldyXlEqYE
V6rvOvIXhPitpCJL6Zijmz133cACV8xMOHdkj0Oi/lVXY9tuXJ1gOVTSOAca
3Qg5T2vg7rjSZGz5KOztjLPNt5+HFI/OakvXEZR733suYH8hzLd8VKzckQuz
8Urj0ju+oWOMDd/Vs/2we8yUU4XYC795iwIjWQkYc8VNsl+rBgKK9eQMjJog
peT3mcvuQ7jlna6I/JtlRI8kCxUm5ylefk+b+DmPVv8mp+/a/sb2sxf8T7eS
8VtpsZlFJhkTNCzy6Rvn4bhh6s2WLZM42vB0j4RpF36I/i829PUwfC0+eLv8
SQt8Uc6T2ZdIR7fnQ+URikzPcfs6ZSbxGxfuXStPtR6C937OR/L2MvDeGp/v
QbtauHrS+/HC8zn4sknmAesOCugf7vN2NF7ACMn6PJNJpr+POZ8YSh5HmzcO
ar7URewOf1Y/vmsZFsxF87jmF2H2gHQUxWUJ2z80e5WdHIOc/cFttzZP4DHv
b6pCYs0gXZi6I2DoAkg+iI+feE9Hcq+T+EbKPLZqjupvbqBBSdMg1enXEijU
CGmqKJDhSx+7VyKTpwS1Sv0WeHPgfobn2nnlYXhyVei/QbFB3B565bSiRQms
m1Iu3+2Tji6HDoZ/uzKFjRF+MvdILXihzE1C/BsNH8jd+lIePQNmJZdtP853
YBS9p1RWeBLvnTG5V7trFszXZ9tn3GSgMOsd36NlJXCqXqAn0nMJ9de1+B3V
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
f2MlIDYK0dhJjgAvFZUEJ1zqvzQB98x8+q3uTUDCs2aMWc9APp5fZnv0COBq
efCGbx8F/Z6QiIkXw6Dr26e1RkVU1EV3lZ+QHoWCgvjPvh5U5H1q7JvDXdyz
Ej7Ovuenw4G9CVp/CJOw9Z93Mw/OiYaGF44dLeSgWqvDu8SLqlHW2BH/4ttj
4B3YzJZ2I8FRtUxBk65pyCm13vsqsBKmBF26/zj+geBP/95uIDLRwxqhTZ4p
A5DH8lOYUmEgPm7S/jSlAciuvA0C79iIlvPntflbAjp/83jKlf/ztY/SibSL
DCTPS/vGM8dCWnoL3pYniIhhoej2JZWDUhtiTp+/TweF1ClhgSMYuPalEnVj
2WiqubJ6tgyDt46U07r0CdhcvK8hTIIAMwKZCUEtoxCbceTmnfN16KPGn/xk
fwpcMqF+77bugJqQUzN67qNwbJW6oW/mDDTtjrihtUJFm/N8Gx/4/QFGh4DC
jiUqTJdyylNb+9Bbf60mnXssFPkiwviaQy00CXxP7E7A0LE1oZffEthoRnMy
6IbFIFgNe4qOBFEhUvBSgNgjKuxc3hXRqoFB6Kr7UX8+c9Fmc9ltrt1UWP+i
PM+5FoPiU8+76/UxaDwlNlzh0wWfeOy9/nPEfVfsUXmW/zAcfDjae1d3AYRX
djxXxq8nkcNwW5uDn+9si8NCm9qAn1kzZveKg2asyU7/JWHw9d6NycPfZtGD
zAufG1lsZBQvJ5iSRwMiQWsx+T6e31rPhDZpMVFtSLBBwP/fS7/lpYJTBA0M
p5jNci9oiCajHFC+G4PTph4VXT/p6Az/M8dhPRoEvNSaO35zGrzUcjl8thT4
0hwonxFDxz3sw0WRfeNwf/Eq26WzG4IU5I+NkRtgvYlo2smTIyBNui0f1kdD
C9oLblU4913WmL4fTxkFjRChLeKaHDSaZL1q339TILfj6PzH/9ioNNSjdt0B
OuzNmSKQNWlIsCxUFXyngOv8ax/5EQEFhV/Vz43CQNEmXIoQToU1w+OBn0Mn
4e2GDaIRGmzEmyIV+wqfC7kNx7cEhnXAZG7idcf4ZoiazvJqaCaCiHLUI47a
LCwZx/wcMekBD213ScGyH4j3zK5U4yIG6nkm4Go03wPi2/7HwXmHU/2/f5wQ
iiQjIaVSykiFfFRelEIqlFCZKULKSkbKKHuUJIWsjGQ3ZOS2Qvbe8+A4nOEs
nHOkfuf7+9PlD+f9ej3v5/14XN7Xwd9LMmSihiIUKTPRD94aqYLiBkwkUubi
+jqcjmzaJspZavVg8W9jz6boKjBbu6OwJY2IDr4t7/Vke6M43fmUp9UaKmia
yFm7sIIspfpc/P0p6FV6tICUKxUELih/fmC3AIUY83s6WVRUVpQaZ8/eO1fk
R8Z4mzCwL0zMWyWQAPvkTU/zOBBBnuL5vX90HvJb3weIXWbzpaBLb4XfNERd
VeksyGhGbaTt367fngbtiNdVOYl05Cg2v8fMdhC6sbcUL6dRgPmi9JwpbQLd
8mT+lRAnI8Wpqn6HsBYQDh7THYihIHPyZ664cQYyydhnfTyV3Yf3u2PPehLh
SMcbVgeWCOt3BXNaUohwck9vYzFuDY29NHpKmaOAre2F9rkRKpzok+q1HSXC
ttrZZcI0228skvNs6imIOTYjMSeNg+7/Mt29zs7DhVdS54y1qHDKoVIuJZ2J
5p4BwUd2GiaGOd6/6GaiRPesVrk+KhgajcvHBK8hb8Lkbjd2jnVKrG++Hl8G
PtZIjE8OBRbcpU1NXdbQIU4Y26+4AKV2ewMpnRT4Of7noU0XFT14Znr/8KZx
MLn3vnV8Kxlpt9/LZTpRYMoj5mswPwHIC5tTJahUCDj7THn1F5s7dtPOWN0k
wb37HzI1yuYgXKY4YEl2CKbCVUKHTo8AH+98n8NrJor9K+mVkjoONvG6+wYs
JsBFhnTZtImKRjZLjB1oWIJd9vGP5v3pKI3fKCS6nAJ13HXbNv0loLvpiRws
tSXYaNfViWV7+f03VrbYs8vQGvxp4MwUu6d5Dt0ePTUJNeOpfXaPKUiS/Fqw
upKONLbdvNQ4MgittL7U6hN9kPK1R2IHm/O9kbHgI1U2B3HI7Tjo2Q1uV40T
pRfmED/ZKDdlKwVlrAlazuuPgPYDrsP+AlRUd3yG++VIA+gdPJo+ZrmKqKKy
l//KsxBNkJqg7DcMlZJqPyi0X7BosqCkKoQBsV3mwbuBgm6a3TqXnUhDM19u
cJrWTqKn8zVyD/OYqEj8+eNUZypsLrsqfCeXCIn3lfn/62Dz08TfQ5rxROgJ
GAjBqC7A0khBsRebGwKK9Wukz84A0ry5Zen5ErxO8tfxZfOfepp8enHPNGi8
6nPLJ+WgAFdXsbXKPsiNWoqnH2ciYdxFRJPpg+N8rvGEODJYSH6K5DBbRmn/
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
itm+KlBNnqiPXFHGYk70foXBmKv/0R93Jg==
          "], CompressedData["
1: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

          "]}], "NeighborsNumber" -> 2, 
       "DistributionData" -> {NormalDistribution, 0.13594235191862009`}, 
       "TrainingOutput" -> CompressedData["
1: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
vT4xtiwKp5b079qBcm1N+BdryJbJ
        "], "DistributionSmoothing" -> 0.5, "Processor" -> 
       MachineLearning`MLProcessor[
        "FirstValues", <|
         "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, "Key" -> 
          "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
          "Missing" -> "Allowed"|>], "Calibrator" -> None, "Method" -> 
       "NearestNeighbors", "PostProcessor" -> 
       MachineLearning`MLProcessor["Identity"], 
       "Options" -> <|
        "NeighborsNumber" -> <|"Value" -> 2, "Options" -> <||>|>, 
         "DistributionSmoothing" -> <|"Value" -> 0.5, "Options" -> <||>|>, 
         "NearestMethod" -> <|"Value" -> "Scan", "Options" -> <||>|>|>|>, 
     "TrainingInformation" -> <|
      "Reporting" -> None, "TrainingFunction" -> Predict, "EMIterations" -> 
       Missing["KeyAbsent", "EMIterations"], "ProcessorEntropyShift" -> 
       1.1315338076510881`, "PreprocessingTime" -> 0.232548`5.818057602264178,
        "LossName" -> "StandardDeviation", "BestModelInformation" -> 
       Dataset[<|
         "MeanCrossEntropy" -> 
          Around[0.6010928344616291, 0.10262609002406797`], 
          "StandardDeviation" -> 
          Around[0.6819812184680533, 0.0960616375264216], "EvaluationTime" -> 
          0.000015319500742540132`, "TestSize" -> 360, "ModelMemory" -> 
          250472., "ModelUtility" -> -0.3382139985497399, "Round" -> 4, 
          "Iteration" -> 5, "TimeStamp" -> 
          3.899873654315649`16.34362552641149*^9, "TrainingSize" -> 718, 
          "TrainingTime" -> 0.019952623149688785`, "TrainingMemory" -> 
          3.105653333333333*^6, "ExperimentCount" -> 2, 
          "MeanCrossEntropyHistory" -> {
            Around[0.5547151430892348, 0.11623721752356975`], 
            Around[0.6474705258340235, 0.14857505313245098`]}, 
          "StandardDeviationHistory" -> {
            Around[0.7127201764963833, 0.12392306514392927`], 
            Around[0.6512422604397232, 0.134095171116258]}, 
          "IterationHistory" -> {4, 5}, 
          "TimeStampHistory" -> {
           3.8998736542903`16.343625526408665*^9, 
            3.899873654315649`16.34362552641149*^9}, 
          "Configuration" -> {
           "NearestNeighbors", "NeighborsNumber" -> Automatic, 
            "DistributionSmoothing" -> 0.5, "NearestMethod" -> Automatic}|>, 
         TypeSystem`Assoc[
          TypeSystem`Atom[String], TypeSystem`AnyType, 18], <||>], 
       "Configurations" -> 
       Dataset[<|<|
           "Value" -> "NearestNeighbors", 
            "Options" -> <|
             "NeighborsNumber" -> <|"Value" -> Automatic|>, 
              "DistributionSmoothing" -> <|"Value" -> 0.5|>, 
              "NearestMethod" -> <|"Value" -> Automatic|>|>|> -> <|
           "Experiments" -> {<|
              "MeanCrossEntropy" -> 
               Around[1.7445555388730765`, 0.05838169582204861], 
               "StandardDeviation" -> 
               Around[1.3596907757529535`, 0.1492099197273478], 
               "EvaluationTime" -> 0.000012589254117941663`, "TestSize" -> 
               100, "ModelMemory" -> 9256, 
               "ModelUtility" -> -1.0221247913496532`, "Round" -> 1, 
               "Iteration" -> 1, "TimeStamp" -> 
               3.899873654255489`16.34362552640479*^9, "TrainingSize" -> 9, 
               "TrainingTime" -> 0.005011872336272719, "TrainingMemory" -> 
               78744, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[1.7445555388730765`, 0.0412820930129409]}, 
               "StandardDeviationHistory" -> {
                 Around[1.3596907757529535`, 0.10550734605950803`]}, 
               "IterationHistory" -> {1}, 
               "TimeStampHistory" -> {
                3.899873654255489`16.34362552640479*^9}|>, <|
              "MeanCrossEntropy" -> 
               Around[0.9939604331657146, 0.11847947149246746`], 
               "StandardDeviation" -> 
               Around[0.7877040877862165, 0.19879553045507775`], 
               "EvaluationTime" -> 0.00001, "TestSize" -> 100, "ModelMemory" -> 
               20008, "ModelUtility" -> -0.5037678425079507, "Round" -> 2, 
               "Iteration" -> 2, "TimeStamp" -> 
               3.899873654265691`16.34362552640593*^9, "TrainingSize" -> 40, 
               "TrainingTime" -> 0.00630957344480193, "TrainingMemory" -> 
               127080, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[0.9939604331657146, 0.08377763772372197]}, 
               "StandardDeviationHistory" -> {
                 Around[0.7877040877862165, 0.1405696676543623]}, 
               "IterationHistory" -> {2}, 
               "TimeStampHistory" -> {
                3.899873654265691`16.34362552640593*^9}|>, <|
              "MeanCrossEntropy" -> 
               Around[0.9237837560445621, 0.2152296466865349], 
               "StandardDeviation" -> 
               Around[0.7181382835114438, 0.15533826612441895`], 
               "EvaluationTime" -> 0.000011294627058970831`, "TestSize" -> 
               200, "ModelMemory" -> 59368, 
               "ModelUtility" -> -0.4044216929851917, "Round" -> 3, 
               "Iteration" -> 3, "TimeStamp" -> 
               3.899873654276094`16.343625526407088*^9, "TrainingSize" -> 150,
                "TrainingTime" -> 0.007943282347242814, "TrainingMemory" -> 
               613368, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[0.9237837560445621, 0.15219034268443357`]}, 
               "StandardDeviationHistory" -> {
                 Around[0.7181382835114438, 0.10984074135433719`]}, 
               "IterationHistory" -> {3}, 
               "TimeStampHistory" -> {
                3.899873654276094`16.343625526407088*^9}|>, <|
              "MeanCrossEntropy" -> 
               Around[0.6010928344616291, 0.10262609002406797`], 
               "StandardDeviation" -> 
               Around[0.6819812184680533, 0.0960616375264216], 
               "EvaluationTime" -> 0.000015319500742540132`, "TestSize" -> 
               360, "ModelMemory" -> 250472., 
               "ModelUtility" -> -0.3382139985497399, "Round" -> 4, 
               "Iteration" -> 5, "TimeStamp" -> 
               3.899873654315649`16.34362552641149*^9, "TrainingSize" -> 718, 
               "TrainingTime" -> 0.019952623149688785`, "TrainingMemory" -> 
               3.105653333333333*^6, "ExperimentCount" -> 2, 
               "MeanCrossEntropyHistory" -> {
                 Around[0.5547151430892348, 0.11623721752356975`], 
                 Around[0.6474705258340235, 0.14857505313245098`]}, 
               "StandardDeviationHistory" -> {
                 Around[0.7127201764963833, 0.12392306514392927`], 
                 Around[0.6512422604397232, 0.134095171116258]}, 
               "IterationHistory" -> {4, 5}, 
               "TimeStampHistory" -> {
                3.8998736542903`16.343625526408665*^9, 
                 3.899873654315649`16.34362552641149*^9}|>}, 
            "PredictedPerformances" -> <|
             "EvaluationTime" -> 0.000015319500742540132`, "ModelMemory" -> 
              250472., "StandardDeviation" -> 
              Around[0.6819812184680533, 0.0960616375264216], 
              "TrainingMemory" -> 3.105653333333333*^6, "TrainingTime" -> 
              0.029966545857749778`|>, "Index" -> 1|>|>, 
         TypeSystem`Assoc[
          TypeSystem`Struct[{"Value", "Options"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Assoc[
             TypeSystem`Atom[String], 
             TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 3]}], 
          
          TypeSystem`Struct[{
           "Experiments", "PredictedPerformances", "Index"}, {
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "MeanCrossEntropy", "StandardDeviation", "EvaluationTime", 
               "TestSize", "ModelMemory", "ModelUtility", "Round", 
               "Iteration", "TimeStamp", "TrainingSize", "TrainingTime", 
               "TrainingMemory", "ExperimentCount", "MeanCrossEntropyHistory",
                "StandardDeviationHistory", "IterationHistory", 
               "TimeStampHistory"}, {TypeSystem`AnyType, TypeSystem`AnyType, 
               TypeSystem`Atom[Real], 
               TypeSystem`Atom[Integer], 
               TypeSystem`Atom[Real], 
               TypeSystem`Atom[Real], 
               TypeSystem`Atom[Integer], 
               TypeSystem`Atom[Integer], 
               TypeSystem`Atom[Real], 
               TypeSystem`Atom[Integer], 
               TypeSystem`Atom[Real], 
               TypeSystem`Atom[Real], 
               TypeSystem`Atom[Integer], 
               TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
               TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
               TypeSystem`Vector[
                TypeSystem`Atom[Integer], TypeSystem`AnyLength], 
               TypeSystem`Vector[
                TypeSystem`Atom[Real], TypeSystem`AnyLength]}], 4], 
            
            TypeSystem`Struct[{
             "EvaluationTime", "ModelMemory", "StandardDeviation", 
              "TrainingMemory", "TrainingTime"}, {
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], TypeSystem`AnyType, 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real]}], 
            TypeSystem`Atom[Integer]}], 1], <||>], 
       "TrainingSizes" -> {9, 40, 150, 718}, "MaxTrainingSize" -> 898, 
       "PreprocessorEvaluationTime" -> 5.4921875*^-6, "PreprocessorMemory" -> 
       77040, "InputDimension" -> 41, "OutputDimension" -> 1, 
       "BaselineLogProbability" -> -1.4189385332046727`, "VariableBudget" -> 
       True, "CheckpointingInfo" -> <|"Checkpointing" -> False|>, "UserStop" -> 
       False, "NaturalStop" -> True, "AbortStop" -> False, 
       "LastReportingTime" -> 3.89987365425531`16.343625526404768*^9, 
       "RoundPartitioning" -> 
       Dataset[{<|
          "TrainingSizes" -> 9, "TimeBudgets" -> 0.000386091374154917, 
           "ElapsedTimes" -> 0.009589, "ExperimentCounts" -> 1|>, <|
          "TrainingSizes" -> 40, "TimeBudgets" -> 0.0019304568707745845`, 
           "ElapsedTimes" -> 0.009799, "ExperimentCounts" -> 1|>, <|
          "TrainingSizes" -> 150, "TimeBudgets" -> 0.009652284353872926, 
           "ElapsedTimes" -> 0.013589, "ExperimentCounts" -> 1|>, <|
          "TrainingSizes" -> 718, "TimeBudgets" -> 0.04826142176936461, 
           "ElapsedTimes" -> 0.050454, "ExperimentCounts" -> 2|>}, 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
            "ExperimentCounts"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Integer]}], 4], <||>]|>, "AnomalyDetector" -> 
     None, "Log" -> <|
      "Example" -> 
       MachineLearning`MLDataset[<|
         "f1" -> <|
           "Type" -> "NumericalVector", "Weight" -> 1, 
            "Values" -> CompressedData["
1:eJxTTMoPSmViYGBgBGJNIK7Ist9ntWGCvemcK7WVOVPtDzoe9X9/dqb9dtXC
4F/v5thzyYT8+XJvjr1GearBxM2z7I8BZTNtZ9hfKk1UyXWfZh/BJmy5mnGq
fbrZ4pd7zKbYcytnWm8Sm2I/71b/ej6dKfaHPe9OPx42xR4k6nJmin2u64WC
oO9T7U+E/Pv14dIMe/loQZM5V+baN7VO2Chit8hes7Y8zXjWMvtU/b5V//+t
sb8360JhKMNGqDkb7BVTdFr71622///n25N1PMvsT8WIOZ+MXmwf/P3pRlHH
xfa225QyLFYutr89catCktpi+19vjgFtWmC/UdB0/t0Zs+zrKnOALphkX5qk
Xpak3ma/XSXP6/7cSnugZ641dWTaT92l37+WI8r+WkvfaiYOD3vTBQ8WPt1g
ZK8C9r+UPQMUdE/arlYS89UOxgcALneWhA==
             "], "ID" -> 6515543852639189880|>|>, <|
         "ExampleNumber" -> 1, "ExampleWeights" -> 1, "LogDensityRatios" -> 0,
           "RawExample" -> False|>], "TrainingTime" -> 0.371797, 
       "MaxTrainingMemory" -> 3850040, "DataMemory" -> 510304, 
       "FunctionMemory" -> 395720, "LanguageVersion" -> {13.2, 1}, "Date" -> 
       DateObject[{2023, 8, 1, 10, 14, 14.353265`7.909525688515608}, 
         "Instant", "Gregorian", -4.], "ProcessorCount" -> 4, "ProcessorType" -> 
       "x86-64", "OperatingSystem" -> "MacOSX", "SystemWordLength" -> 64, 
       "Evaluations" -> {}|>|>]]]], "Output",
 CellChangeTimes->{3.8998880187587433`*^9, 3.899888055392128*^9},
 CellLabel->
  "Out[616]=",ExpressionUUID->"e71b0006-2c00-4292-a65d-bc3f8638d492"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   StyleBox[
    FrameBox[GridBox[{
       {
        ItemBox[
         FrameBox[
          StyleBox["\<\"Predictor Measurements\"\>", "SuggestionsBarText",
           StripOnInput->False,
           FontSize->12],
          FrameMargins->{{10, 5}, {-4, 2}},
          FrameStyle->None,
          StripOnInput->False],
         Alignment->{Left, Bottom},
         Background->RGBColor[0.96, 0.96, 0.96],
         Frame->{{False, False}, {True, False}},
         FrameStyle->Opacity[0.1],
         ItemSize->{Automatic, 1},
         StripOnInput->False]},
       {
        ItemBox[
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Predictor method"], 
                   TextCell["Predictor method"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               
               InterpretationBox[Cell[
                "NearestNeighbors",ExpressionUUID->
                 "dea05d9a-a594-48f8-b56d-acf207cb555c"],
                TextCell["NearestNeighbors"]]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Number of test examples"], 
                   TextCell["Number of test examples"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], "175"},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Standard deviation"], 
                   TextCell["Standard deviation"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 TemplateBox[{"0.9854617577308217857`3.", 
                   StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0936687363627776715`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                  "RowDefault"],
                 
                 TemplateBox[{
                  "\"95% confidence interval: [\"", 
                   "0.7981242850052664428`3.", "\", \"", 
                   "1.1727992304563770176`3.", "\"]\""}, "RowDefault"],
                 TooltipStyle->{}],
                Annotation[#, 
                 
                 Row[{"95% confidence interval: [", 0.7981242850052664428`3., 
                   ", ", 1.1727992304563770176`3., "]"}], "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  TagBox[
                   TooltipBox[
                    InterpretationBox[
                    Cell["Standard deviation baseline"], 
                    TextCell["Standard deviation baseline"]], 
                    "\"Standard deviation of testset values\"", TooltipStyle -> 
                    "TextStyling"], 
                   Annotation[#, "Standard deviation of testset values", 
                    "Tooltip"]& ], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 TemplateBox[{"0.7014559785160564553`3.", 
                   StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.040350830825162054`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                  "RowDefault"],
                 
                 TemplateBox[{
                  "\"95% confidence interval: [\"", 
                   "0.6207543168657323474`3.", "\", \"", 
                   "0.7821576401663805633`3.", "\"]\""}, "RowDefault"],
                 TooltipStyle->{}],
                Annotation[#, 
                 
                 Row[{"95% confidence interval: [", 0.6207543168657323474`3., 
                   ", ", 0.7821576401663805633`3., "]"}], "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["R-squared"], 
                   TextCell["R-squared"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 TemplateBox[{
                   RowBox[{"-", "0.97368894651884208`3."}], 
                   StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.4389527247641069607`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                  "RowDefault"],
                 TemplateBox[{"\"95% confidence interval: [\"", 
                   RowBox[{"-", "1.8515943960470560015`3."}], "\", \"", 
                   RowBox[{"-", "0.0957834969906281586`3."}], "\"]\""}, 
                  "RowDefault"],
                 TooltipStyle->{}],
                Annotation[#, 
                 
                 Row[{"95% confidence interval: [", -1.8515943960470560015`3.,
                    ", ", -0.0957834969906281586`3., "]"}], "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Mean cross entropy"], 
                   TextCell["Mean cross entropy"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 TemplateBox[{"4.2569011879978564394`3.", 
                   StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.9518560047373298971`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                  "RowDefault"],
                 
                 TemplateBox[{
                  "\"95% confidence interval: [\"", 
                   "2.3531891785231966452`3.", "\", \"", 
                   "6.1606131974725162337`3.", "\"]\""}, "RowDefault"],
                 TooltipStyle->{}],
                Annotation[#, 
                 
                 Row[{"95% confidence interval: [", 2.3531891785231966452`3., 
                   ", ", 6.1606131974725162337`3., "]"}], "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Single evaluation time"], 
                   TextCell["Single evaluation time"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{"3.25`", 
                 
                 RowBox[{
                  "\"ms\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]",
                    "\"example\""}], "milliseconds per example", 
                 FractionBox["\"Milliseconds\"", "\"Examples\""]},
                "Quantity"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Batch evaluation speed"], 
                   TextCell["Batch evaluation speed"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{"719.`", 
                 
                 RowBox[{
                  "\"examples\"", "\[InvisibleSpace]", "\"/\"", 
                   "\[InvisibleSpace]", "\"s\""}], "examples per second", 
                 FractionBox["\"Examples\"", "\"Seconds\""]},
                "Quantity"]},
              {
               ItemBox[
                GraphicsBox[{{{}, {
                    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
                    0.009166666666666668], AbsoluteThickness[1.6], 
                    GeometricTransformationBox[InsetBox[
                    FormBox[
                    StyleBox[
                    GraphicsBox[
                    {RGBColor[0.34398, 0.49112, 0.89936], AbsoluteThickness[
                    1.], CircleBox[{0, 0}, Offset[{1.8, 1.8}, {0., 0.}]]}],
                    StripOnInput->False,
                    GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                    PointSize[0.009166666666666668], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}],
                    TraditionalForm], {0., 0.}], CompressedData["
1:eJxlVm9oHFUQTysRG2uUur39v7fbSnt+SFQO5Ao5HaqQWsR6LdYWY1HRgFXj
FaHQ9EMsGrTFcAh+8AJW6RVNRNLQUFkCfujZSjCpNYqeYqCmIE1NTUrkIgpG
d3fezONeFxZ2mPfmzfzm936zwXOv7nzhpqamplPRuyp6V0fvh48dq9bnfNBG
Omd7tQ2wufPNUvVMAOn++ULobYCrF99Zzsx4cHdXqVrPBGyHXrQgF8CebxZO
FPO3wHImXmBA9ZWvnu/udoRtQ2nH/f/+12eI+A5c+2Aw+rThZDHfUqtI+1oh
jmjD3JqX3y+bJhxONtjQl7k5OlqHaHG0w4aJgROXejVT5GfD1NjgUqYrBdui
6HGcfZ91FPPHdEiOG7Fg3a6frhZyOgyW48fi85L8QwuGnpqL4rRCEr5mwb0L
T8z0ajp8WY8LsGD/0Kq2bPZW2JlssGDqyP5TnbM62/v+3jvu9a+H7uSx4PRw
/ulS9XaRvwVnJofrGScQ8dLQ2jmQb9F9SNKdTUPzoR+iemxoSp4013dhKn48
zhf9Dp+fTwCx2U/4kJ/qJXyoHsIX8bLg8dxiITxusE39ovq2Tf62trZR53oI
H+ynxBPzkXiT/8ruo5fj9Yi3yXiTn9ZT/LcPzN2Tza4R9cj+YD/XQ+qTLbfV
KutE/zVY3DRezH8diP0+24m7X9pJfl/44OaO1CqjAWTjZ8yHz9fWd4Sew/WS
P6F7l8V+xM+DjpPnQ6/Z5f5lr4+frWc8wXcPgosf989Pu9i/R322k3Ke9GHv
axO7wuO2yDfN/cD+etwPvA+uwldpH0gKkjbyV94n5I+0kZ/SxnxNxh/xdpiv
yAeJD8aXNuIjbTzPh/fOjT4Y3yO001wv2Y31eFw/6oHkO+Ljwtbl6YNauyHw
dpR6pR4g/xy+/0l/szbvV+sn/SAb+SX1CvOT8VWb7iPtx/ykn/JrxN9mfSU9
feT39sNaj+BnPgAYml8qhC0ivs96S/rRqJeOgpfD55Me7L5Ujr5MwReJB9Zv
KfhKG++DCf88ZBzURgyBj3mD/46FyXfL5RbRP8knrN9Q8DZhZmjwjflpQ+Rn
sp/ibTk6cV92LCXw0VnP8HyD+0v7qV9Yn8n8Rf2TfE7wekniied5MHzoz78y
XS7fP8oH9cnm+nG97CfqiwErzaPRGCX+6mAvbI/4nxL56Jwf8t+A1SsPNNc2
GjwvCU+MZ/J+PN/kfpJe0n6ql/SY9pOdXM+Swf1A/hrsx3qlH/G+cT3hj+cZ
zFfkn6fMN0/B14Vzr2/tiXlI85/0jf4PWtt+/bFy3RT7JX/x/rpsUz8b5516
nx2FTzZs6vl2oFpP8X1Q+0s2zcfG+SvnIc0nwgfxtRS8pE37H37xyveV4p08
X4m/5P906a4/CjmTzw/tpQgPX+iry/hifyR/US98OLvSp428Jf4nnvUVPXL5
fwzvj6vMd2mr+COfpR6SPlJ87EeEb8dH22d7Df5fa5xPtoKX1EfkjwXtv/z8
Xcwr9f+O8CW9IPyJj8h3S8lHxkN+WfBM2+LluM+k9/8DjY6iHQ==
                    "]]}, {
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{8.454999999411767, 9.04}}]},
                    RowBox[{"{", 
                    RowBox[{"8.454999999411767`", ",", "9.04`"}], "}"}]],
                    Annotation[#, {8.454999999411767, 9.04}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{8.855000004670343, 9.06}}]},
                    RowBox[{"{", 
                    RowBox[{"8.855000004670343`", ",", "9.06`"}], "}"}]],
                    Annotation[#, {8.855000004670343, 9.06}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{7.7150000117726245`, 8.58}}]},
                    RowBox[{"{", 
                    RowBox[{"7.7150000117726245`", ",", "8.58`"}], "}"}]],
                    Annotation[#, {7.7150000117726245`, 8.58}, "Tooltip"]& ], 
                    
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{7.7150000117726245`, 8.61}}]},
                    RowBox[{"{", 
                    RowBox[{"7.7150000117726245`", ",", "8.61`"}], "}"}]],
                    Annotation[#, {7.7150000117726245`, 8.61}, "Tooltip"]& ], 
                    
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{3.029999993241102, 6.24}}]},
                    RowBox[{"{", 
                    RowBox[{"3.029999993241102`", ",", "6.24`"}], "}"}]],
                    Annotation[#, {3.029999993241102, 6.24}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{7.099999975787286, 6.99}}]},
                    RowBox[{"{", 
                    RowBox[{"7.099999975787286`", ",", "6.99`"}], "}"}]],
                    Annotation[#, {7.099999975787286, 6.99}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.12499995845782, 7.02}}]},
                    RowBox[{"{", 
                    RowBox[{"6.12499995845782`", ",", "7.02`"}], "}"}]],
                    Annotation[#, {6.12499995845782, 7.02}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.82000000184733, 7.16}}]},
                    RowBox[{"{", 
                    RowBox[{"6.82000000184733`", ",", "7.16`"}], "}"}]],
                    Annotation[#, {6.82000000184733, 7.16}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.82000000184733, 6.98}}]},
                    RowBox[{"{", 
                    RowBox[{"6.82000000184733`", ",", "6.98`"}], "}"}]],
                    Annotation[#, {6.82000000184733, 6.98}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.274999982446822, 6.87}}]},
                    RowBox[{"{", 
                    RowBox[{"6.274999982446822`", ",", "6.87`"}], "}"}]],
                    Annotation[#, {6.274999982446822, 6.87}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.8900000009545, 6.76}}]},
                    RowBox[{"{", 
                    RowBox[{"5.8900000009545`", ",", "6.76`"}], "}"}]],
                    Annotation[#, {5.8900000009545, 6.76}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.269999975487231, 6.78}}]},
                    RowBox[{"{", 
                    RowBox[{"6.269999975487231`", ",", "6.78`"}], "}"}]],
                    Annotation[#, {6.269999975487231, 6.78}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.589999952976495, 6.82}}]},
                    RowBox[{"{", 
                    RowBox[{"5.589999952976495`", ",", "6.82`"}], "}"}]],
                    Annotation[#, {5.589999952976495, 6.82}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.884999993994908, 6.67}}]},
                    RowBox[{"{", 
                    RowBox[{"5.884999993994908`", ",", "6.67`"}], "}"}]],
                    Annotation[#, {5.884999993994908, 6.67}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.8049999750408166`, 6.65}}]},
                    RowBox[{"{", 
                    RowBox[{"5.8049999750408166`", ",", "6.65`"}], "}"}]],
                    Annotation[#, {5.8049999750408166`, 6.65}, "Tooltip"]& ], 
                    
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.82000000184733, 6.68}}]},
                    RowBox[{"{", 
                    RowBox[{"6.82000000184733`", ",", "6.68`"}], "}"}]],
                    Annotation[#, {6.82000000184733, 6.68}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{3.7649999999079746`, 6.71}}]},
                    RowBox[{"{", 
                    RowBox[{"3.7649999999079746`", ",", "6.71`"}], "}"}]],
                    Annotation[#, {3.7649999999079746`, 6.71}, "Tooltip"]& ], 
                    
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.769999926323678, 6.69}}]},
                    RowBox[{"{", 
                    RowBox[{"5.769999926323678`", ",", "6.69`"}], "}"}]],
                    Annotation[#, {5.769999926323678, 6.69}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{3.3999999538546506`, 6.58}}]},
                    RowBox[{"{", 
                    RowBox[{"3.3999999538546506`", ",", "6.58`"}], "}"}]],
                    Annotation[#, {3.3999999538546506`, 6.58}, "Tooltip"]& ], 
                    
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.970000019908593, 6.58}}]},
                    RowBox[{"{", 
                    RowBox[{"5.970000019908593`", ",", "6.58`"}], "}"}]],
                    Annotation[#, {5.970000019908593, 6.58}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.380000030271132, 6.6}}]},
                    RowBox[{"{", 
                    RowBox[{"5.380000030271132`", ",", "6.6`"}], "}"}]],
                    Annotation[#, {5.380000030271132, 6.6}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{3.9700000080531135`, 6.62}}]},
                    RowBox[{"{", 
                    RowBox[{"3.9700000080531135`", ",", "6.62`"}], "}"}]],
                    Annotation[#, {3.9700000080531135`, 6.62}, "Tooltip"]& ], 
                    
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{8.55499999711706, 7.94}}]},
                    RowBox[{"{", 
                    RowBox[{"8.55499999711706`", ",", "7.94`"}], "}"}]],
                    Annotation[#, {8.55499999711706, 7.94}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{8.04500000333385, 7.97}}]},
                    RowBox[{"{", 
                    RowBox[{"8.04500000333385`", ",", "7.97`"}], "}"}]],
                    Annotation[#, {8.04500000333385, 7.97}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.769999978451101, 7.75}}]},
                    RowBox[{"{", 
                    RowBox[{"6.769999978451101`", ",", "7.75`"}], "}"}]],
                    Annotation[#, {6.769999978451101, 7.75}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.269999975487231, 7.7}}]},
                    RowBox[{"{", 
                    RowBox[{"6.269999975487231`", ",", "7.7`"}], "}"}]],
                    Annotation[#, {6.269999975487231, 7.7}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.82000000184733, 7.}}]},
                    RowBox[{"{", 
                    RowBox[{"6.82000000184733`", ",", "7.`"}], "}"}]],
                    Annotation[#, {6.82000000184733, 7.}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.970000019908593, 6.81}}]},
                    RowBox[{"{", 
                    RowBox[{"5.970000019908593`", ",", "6.81`"}], "}"}]],
                    Annotation[#, {5.970000019908593, 6.81}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.82000000184733, 6.76}}]},
                    RowBox[{"{", 
                    RowBox[{"6.82000000184733`", ",", "6.76`"}], "}"}]],
                    Annotation[#, {6.82000000184733, 6.76}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.970000019908593, 6.65}}]},
                    RowBox[{"{", 
                    RowBox[{"5.970000019908593`", ",", "6.65`"}], "}"}]],
                    Annotation[#, {5.970000019908593, 6.65}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.589999952976495, 6.69}}]},
                    RowBox[{"{", 
                    RowBox[{"5.589999952976495`", ",", "6.69`"}], "}"}]],
                    Annotation[#, {5.589999952976495, 6.69}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.274999982446822, 6.57}}]},
                    RowBox[{"{", 
                    RowBox[{"6.274999982446822`", ",", "6.57`"}], "}"}]],
                    Annotation[#, {6.274999982446822, 6.57}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.155000000215367, 6.57}}]},
                    RowBox[{"{", 
                    RowBox[{"6.155000000215367`", ",", "6.57`"}], "}"}]],
                    Annotation[#, {6.155000000215367, 6.57}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.12499995845782, 6.58}}]},
                    RowBox[{"{", 
                    RowBox[{"6.12499995845782`", ",", "6.58`"}], "}"}]],
                    Annotation[#, {6.12499995845782, 6.58}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.785000039601819, 6.62}}]},
                    RowBox[{"{", 
                    RowBox[{"5.785000039601819`", ",", "6.62`"}], "}"}]],
                    Annotation[#, {5.785000039601819, 6.62}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.769999926323678, 6.52}}]},
                    RowBox[{"{", 
                    RowBox[{"5.769999926323678`", ",", "6.52`"}], "}"}]],
                    Annotation[#, {5.769999926323678, 6.52}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.82000000184733, 6.56}}]},
                    RowBox[{"{", 
                    RowBox[{"6.82000000184733`", ",", "6.56`"}], "}"}]],
                    Annotation[#, {6.82000000184733, 6.56}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.8049999750408166`, 6.52}}]},
                    RowBox[{"{", 
                    RowBox[{"5.8049999750408166`", ",", "6.52`"}], "}"}]],
                    Annotation[#, {5.8049999750408166`, 6.52}, "Tooltip"]& ], 
                    
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.770000018723045, 6.43}}]},
                    RowBox[{"{", 
                    RowBox[{"5.770000018723045`", ",", "6.43`"}], "}"}]],
                    Annotation[#, {5.770000018723045, 6.43}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{3.7649999999079746`, 6.52}}]},
                    RowBox[{"{", 
                    RowBox[{"3.7649999999079746`", ",", "6.52`"}], "}"}]],
                    Annotation[#, {3.7649999999079746`, 6.52}, "Tooltip"]& ], 
                    
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.8049999750408166`, 6.62}}]},
                    RowBox[{"{", 
                    RowBox[{"5.8049999750408166`", ",", "6.62`"}], "}"}]],
                    Annotation[#, {5.8049999750408166`, 6.62}, "Tooltip"]& ], 
                    
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{3.149999975472557, 6.51}}]},
                    RowBox[{"{", 
                    RowBox[{"3.149999975472557`", ",", "6.51`"}], "}"}]],
                    Annotation[#, {3.149999975472557, 6.51}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{3.7649999999079746`, 5.42}}]},
                    RowBox[{"{", 
                    RowBox[{"3.7649999999079746`", ",", "5.42`"}], "}"}]],
                    Annotation[#, {3.7649999999079746`, 5.42}, "Tooltip"]& ], 
                    
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{4.6600000444830325`, 5.03}}]},
                    RowBox[{"{", 
                    RowBox[{"4.6600000444830325`", ",", "5.03`"}], "}"}]],
                    Annotation[#, {4.6600000444830325`, 5.03}, "Tooltip"]& ], 
                    
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{8.895000002597468, 8.24}}]},
                    RowBox[{"{", 
                    RowBox[{"8.895000002597468`", ",", "8.24`"}], "}"}]],
                    Annotation[#, {8.895000002597468, 8.24}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{8.895000002597468, 8.26}}]},
                    RowBox[{"{", 
                    RowBox[{"8.895000002597468`", ",", "8.26`"}], "}"}]],
                    Annotation[#, {8.895000002597468, 8.26}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{8.895000002597468, 8.37}}]},
                    RowBox[{"{", 
                    RowBox[{"8.895000002597468`", ",", "8.37`"}], "}"}]],
                    Annotation[#, {8.895000002597468, 8.37}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{8.845000013851001, 8.35}}]},
                    RowBox[{"{", 
                    RowBox[{"8.845000013851001`", ",", "8.35`"}], "}"}]],
                    Annotation[#, {8.845000013851001, 8.35}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{7.029999970752376, 6.58}}]},
                    RowBox[{"{", 
                    RowBox[{"7.029999970752376`", ",", "6.58`"}], "}"}]],
                    Annotation[#, {7.029999970752376, 6.58}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{8.845000013851001, 6.59}}]},
                    RowBox[{"{", 
                    RowBox[{"8.845000013851001`", ",", "6.59`"}], "}"}]],
                    Annotation[#, {8.845000013851001, 6.59}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{7.029999970752376, 7.69}}]},
                    RowBox[{"{", 
                    RowBox[{"7.029999970752376`", ",", "7.69`"}], "}"}]],
                    Annotation[#, {7.029999970752376, 7.69}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{7.25500000673588, 7.97}}]},
                    RowBox[{"{", 
                    RowBox[{"7.25500000673588`", ",", "7.97`"}], "}"}]],
                    Annotation[#, {7.25500000673588, 7.97}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{7.5399999876354284`, 7.74}}]},
                    RowBox[{"{", 
                    RowBox[{"7.5399999876354284`", ",", "7.74`"}], "}"}]],
                    Annotation[#, {7.5399999876354284`, 7.74}, "Tooltip"]& ], 
                    
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{7.455000007921428, 8.15}}]},
                    RowBox[{"{", 
                    RowBox[{"7.455000007921428`", ",", "8.15`"}], "}"}]],
                    Annotation[#, {7.455000007921428, 8.15}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{7.455000007921428, 8.17}}]},
                    RowBox[{"{", 
                    RowBox[{"7.455000007921428`", ",", "8.17`"}], "}"}]],
                    Annotation[#, {7.455000007921428, 8.17}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.905000027761013, 7.87}}]},
                    RowBox[{"{", 
                    RowBox[{"6.905000027761013`", ",", "7.87`"}], "}"}]],
                    Annotation[#, {6.905000027761013, 7.87}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.274999982446822, 7.5}}]},
                    RowBox[{"{", 
                    RowBox[{"6.274999982446822`", ",", "7.5`"}], "}"}]],
                    Annotation[#, {6.274999982446822, 7.5}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.155000000215367, 7.48}}]},
                    RowBox[{"{", 
                    RowBox[{"6.155000000215367`", ",", "7.48`"}], "}"}]],
                    Annotation[#, {6.155000000215367, 7.48}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.82000000184733, 7.43}}]},
                    RowBox[{"{", 
                    RowBox[{"6.82000000184733`", ",", "7.43`"}], "}"}]],
                    Annotation[#, {6.82000000184733, 7.43}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.82000000184733, 7.36}}]},
                    RowBox[{"{", 
                    RowBox[{"6.82000000184733`", ",", "7.36`"}], "}"}]],
                    Annotation[#, {6.82000000184733, 7.36}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.82000000184733, 7.21}}]},
                    RowBox[{"{", 
                    RowBox[{"6.82000000184733`", ",", "7.21`"}], "}"}]],
                    Annotation[#, {6.82000000184733, 7.21}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.82000000184733, 7.2}}]},
                    RowBox[{"{", 
                    RowBox[{"6.82000000184733`", ",", "7.2`"}], "}"}]],
                    Annotation[#, {6.82000000184733, 7.2}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.82000000184733, 7.1}}]},
                    RowBox[{"{", 
                    RowBox[{"6.82000000184733`", ",", "7.1`"}], "}"}]],
                    Annotation[#, {6.82000000184733, 7.1}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.82000000184733, 6.49}}]},
                    RowBox[{"{", 
                    RowBox[{"6.82000000184733`", ",", "6.49`"}], "}"}]],
                    Annotation[#, {6.82000000184733, 6.49}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.8049999750408166`, 7.01}}]},
                    RowBox[{"{", 
                    RowBox[{"5.8049999750408166`", ",", "7.01`"}], "}"}]],
                    Annotation[#, {5.8049999750408166`, 7.01}, "Tooltip"]& ], 
                    
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{8.55499999711706, 8.14}}]},
                    RowBox[{"{", 
                    RowBox[{"8.55499999711706`", ",", "8.14`"}], "}"}]],
                    Annotation[#, {8.55499999711706, 8.14}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{7.029999970752376, 8.42}}]},
                    RowBox[{"{", 
                    RowBox[{"7.029999970752376`", ",", "8.42`"}], "}"}]],
                    Annotation[#, {7.029999970752376, 8.42}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{7.029999970752376, 8.18}}]},
                    RowBox[{"{", 
                    RowBox[{"7.029999970752376`", ",", "8.18`"}], "}"}]],
                    Annotation[#, {7.029999970752376, 8.18}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{7.029999970752376, 8.4}}]},
                    RowBox[{"{", 
                    RowBox[{"7.029999970752376`", ",", "8.4`"}], "}"}]],
                    Annotation[#, {7.029999970752376, 8.4}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.7100000335350565`, 7.95}}]},
                    RowBox[{"{", 
                    RowBox[{"6.7100000335350565`", ",", "7.95`"}], "}"}]],
                    Annotation[#, {6.7100000335350565`, 7.95}, "Tooltip"]& ], 
                    
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.905000027761013, 7.95}}]},
                    RowBox[{"{", 
                    RowBox[{"6.905000027761013`", ",", "7.95`"}], "}"}]],
                    Annotation[#, {6.905000027761013, 7.95}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.82000000184733, 7.68}}]},
                    RowBox[{"{", 
                    RowBox[{"6.82000000184733`", ",", "7.68`"}], "}"}]],
                    Annotation[#, {6.82000000184733, 7.68}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.274999982446822, 7.66}}]},
                    RowBox[{"{", 
                    RowBox[{"6.274999982446822`", ",", "7.66`"}], "}"}]],
                    Annotation[#, {6.274999982446822, 7.66}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.82000000184733, 7.37}}]},
                    RowBox[{"{", 
                    RowBox[{"6.82000000184733`", ",", "7.37`"}], "}"}]],
                    Annotation[#, {6.82000000184733, 7.37}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.044999939503727, 7.22}}]},
                    RowBox[{"{", 
                    RowBox[{"6.044999939503727`", ",", "7.22`"}], "}"}]],
                    Annotation[#, {6.044999939503727, 7.22}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.82000000184733, 6.96}}]},
                    RowBox[{"{", 
                    RowBox[{"6.82000000184733`", ",", "6.96`"}], "}"}]],
                    Annotation[#, {6.82000000184733, 6.96}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.269999975487231, 7.06}}]},
                    RowBox[{"{", 
                    RowBox[{"6.269999975487231`", ",", "7.06`"}], "}"}]],
                    Annotation[#, {6.269999975487231, 7.06}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.884999993994908, 6.8}}]},
                    RowBox[{"{", 
                    RowBox[{"5.884999993994908`", ",", "6.8`"}], "}"}]],
                    Annotation[#, {5.884999993994908, 6.8}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.044999939503727, 7.1}}]},
                    RowBox[{"{", 
                    RowBox[{"6.044999939503727`", ",", "7.1`"}], "}"}]],
                    Annotation[#, {6.044999939503727, 7.1}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.82000000184733, 6.78}}]},
                    RowBox[{"{", 
                    RowBox[{"6.82000000184733`", ",", "6.78`"}], "}"}]],
                    Annotation[#, {6.82000000184733, 6.78}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.82000000184733, 6.92}}]},
                    RowBox[{"{", 
                    RowBox[{"6.82000000184733`", ",", "6.92`"}], "}"}]],
                    Annotation[#, {6.82000000184733, 6.92}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.12499995845782, 6.93}}]},
                    RowBox[{"{", 
                    RowBox[{"6.12499995845782`", ",", "6.93`"}], "}"}]],
                    Annotation[#, {6.12499995845782, 6.93}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.269999975487231, 6.93}}]},
                    RowBox[{"{", 
                    RowBox[{"6.269999975487231`", ",", "6.93`"}], "}"}]],
                    Annotation[#, {6.269999975487231, 6.93}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.269999975487231, 7.}}]},
                    RowBox[{"{", 
                    RowBox[{"6.269999975487231`", ",", "7.`"}], "}"}]],
                    Annotation[#, {6.269999975487231, 7.}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.82000000184733, 6.97}}]},
                    RowBox[{"{", 
                    RowBox[{"6.82000000184733`", ",", "6.97`"}], "}"}]],
                    Annotation[#, {6.82000000184733, 6.97}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.269999975487231, 6.96}}]},
                    RowBox[{"{", 
                    RowBox[{"6.269999975487231`", ",", "6.96`"}], "}"}]],
                    Annotation[#, {6.269999975487231, 6.96}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.82000000184733, 6.85}}]},
                    RowBox[{"{", 
                    RowBox[{"6.82000000184733`", ",", "6.85`"}], "}"}]],
                    Annotation[#, {6.82000000184733, 6.85}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{8.855000004670343, 8.58}}]},
                    RowBox[{"{", 
                    RowBox[{"8.855000004670343`", ",", "8.58`"}], "}"}]],
                    Annotation[#, {8.855000004670343, 8.58}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{8.715000009037924, 8.62}}]},
                    RowBox[{"{", 
                    RowBox[{"8.715000009037924`", ",", "8.62`"}], "}"}]],
                    Annotation[#, {8.715000009037924, 8.62}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{3.3400000551382902`, 8.}}]},
                    RowBox[{"{", 
                    RowBox[{"3.3400000551382902`", ",", "8.`"}], "}"}]],
                    Annotation[#, {3.3400000551382902`, 8.}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{7.7150000117726245`, 7.94}}]},
                    RowBox[{"{", 
                    RowBox[{"7.7150000117726245`", ",", "7.94`"}], "}"}]],
                    Annotation[#, {7.7150000117726245`, 7.94}, "Tooltip"]& ], 
                    
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.82000000184733, 7.23}}]},
                    RowBox[{"{", 
                    RowBox[{"6.82000000184733`", ",", "7.23`"}], "}"}]],
                    Annotation[#, {6.82000000184733, 7.23}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.82000000184733, 7.12}}]},
                    RowBox[{"{", 
                    RowBox[{"6.82000000184733`", ",", "7.12`"}], "}"}]],
                    Annotation[#, {6.82000000184733, 7.12}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.269999975487231, 6.76}}]},
                    RowBox[{"{", 
                    RowBox[{"6.269999975487231`", ",", "6.76`"}], "}"}]],
                    Annotation[#, {6.269999975487231, 6.76}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.360000008360506, 6.86}}]},
                    RowBox[{"{", 
                    RowBox[{"6.360000008360506`", ",", "6.86`"}], "}"}]],
                    Annotation[#, {6.360000008360506, 6.86}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.044999939503727, 6.53}}]},
                    RowBox[{"{", 
                    RowBox[{"6.044999939503727`", ",", "6.53`"}], "}"}]],
                    Annotation[#, {6.044999939503727, 6.53}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.044999939503727, 6.72}}]},
                    RowBox[{"{", 
                    RowBox[{"6.044999939503727`", ",", "6.72`"}], "}"}]],
                    Annotation[#, {6.044999939503727, 6.72}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.044999939503727, 6.33}}]},
                    RowBox[{"{", 
                    RowBox[{"6.044999939503727`", ",", "6.33`"}], "}"}]],
                    Annotation[#, {6.044999939503727, 6.33}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.169999928694773, 6.42}}]},
                    RowBox[{"{", 
                    RowBox[{"6.169999928694773`", ",", "6.42`"}], "}"}]],
                    Annotation[#, {6.169999928694773, 6.42}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.044999939503727, 6.33}}]},
                    RowBox[{"{", 
                    RowBox[{"6.044999939503727`", ",", "6.33`"}], "}"}]],
                    Annotation[#, {6.044999939503727, 6.33}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{3.324999941860149, 6.41}}]},
                    RowBox[{"{", 
                    RowBox[{"3.324999941860149`", ",", "6.41`"}], "}"}]],
                    Annotation[#, {3.324999941860149, 6.41}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.8049999750408166`, 6.21}}]},
                    RowBox[{"{", 
                    RowBox[{"5.8049999750408166`", ",", "6.21`"}], "}"}]],
                    Annotation[#, {5.8049999750408166`, 6.21}, "Tooltip"]& ], 
                    
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.82000000184733, 6.28}}]},
                    RowBox[{"{", 
                    RowBox[{"6.82000000184733`", ",", "6.28`"}], "}"}]],
                    Annotation[#, {6.82000000184733, 6.28}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.204999977411912, 6.26}}]},
                    RowBox[{"{", 
                    RowBox[{"6.204999977411912`", ",", "6.26`"}], "}"}]],
                    Annotation[#, {6.204999977411912, 6.26}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.82000000184733, 6.33}}]},
                    RowBox[{"{", 
                    RowBox[{"6.82000000184733`", ",", "6.33`"}], "}"}]],
                    Annotation[#, {6.82000000184733, 6.33}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.674999978890178, 5.79}}]},
                    RowBox[{"{", 
                    RowBox[{"5.674999978890178`", ",", "5.79`"}], "}"}]],
                    Annotation[#, {5.674999978890178, 5.79}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.970000019908593, 6.17}}]},
                    RowBox[{"{", 
                    RowBox[{"5.970000019908593`", ",", "6.17`"}], "}"}]],
                    Annotation[#, {5.970000019908593, 6.17}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.884999993994908, 6.26}}]},
                    RowBox[{"{", 
                    RowBox[{"5.884999993994908`", ",", "6.26`"}], "}"}]],
                    Annotation[#, {5.884999993994908, 6.26}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.12499995845782, 6.36}}]},
                    RowBox[{"{", 
                    RowBox[{"6.12499995845782`", ",", "6.36`"}], "}"}]],
                    Annotation[#, {6.12499995845782, 6.36}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{8.55499999711706, 7.15}}]},
                    RowBox[{"{", 
                    RowBox[{"8.55499999711706`", ",", "7.15`"}], "}"}]],
                    Annotation[#, {8.55499999711706, 7.15}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{8.55499999711706, 8.21}}]},
                    RowBox[{"{", 
                    RowBox[{"8.55499999711706`", ",", "8.21`"}], "}"}]],
                    Annotation[#, {8.55499999711706, 8.21}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{7.7150000117726245`, 7.58}}]},
                    RowBox[{"{", 
                    RowBox[{"7.7150000117726245`", ",", "7.58`"}], "}"}]],
                    Annotation[#, {7.7150000117726245`, 7.58}, "Tooltip"]& ], 
                    
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{7.340000032649564, 7.5}}]},
                    RowBox[{"{", 
                    RowBox[{"7.340000032649564`", ",", "7.5`"}], "}"}]],
                    Annotation[#, {7.340000032649564, 7.5}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.82000000184733, 6.77}}]},
                    RowBox[{"{", 
                    RowBox[{"6.82000000184733`", ",", "6.77`"}], "}"}]],
                    Annotation[#, {6.82000000184733, 6.77}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.169999928694773, 6.83}}]},
                    RowBox[{"{", 
                    RowBox[{"6.169999928694773`", ",", "6.83`"}], "}"}]],
                    Annotation[#, {6.169999928694773, 6.83}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.82000000184733, 6.13}}]},
                    RowBox[{"{", 
                    RowBox[{"6.82000000184733`", ",", "6.13`"}], "}"}]],
                    Annotation[#, {6.82000000184733, 6.13}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.250000040048233, 5.91}}]},
                    RowBox[{"{", 
                    RowBox[{"6.250000040048233`", ",", "5.91`"}], "}"}]],
                    Annotation[#, {6.250000040048233, 5.91}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.710000027607317, 5.86}}]},
                    RowBox[{"{", 
                    RowBox[{"5.710000027607317`", ",", "5.86`"}], "}"}]],
                    Annotation[#, {5.710000027607317, 5.86}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.12499995845782, 6.2}}]},
                    RowBox[{"{", 
                    RowBox[{"6.12499995845782`", ",", "6.2`"}], "}"}]],
                    Annotation[#, {6.12499995845782, 6.2}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.034999925584545, 6.24}}]},
                    RowBox[{"{", 
                    RowBox[{"6.034999925584545`", ",", "6.24`"}], "}"}]],
                    Annotation[#, {6.034999925584545, 6.24}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.044999939503727, 6.38}}]},
                    RowBox[{"{", 
                    RowBox[{"6.044999939503727`", ",", "6.38`"}], "}"}]],
                    Annotation[#, {6.044999939503727, 6.38}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.710000027607317, 6.27}}]},
                    RowBox[{"{", 
                    RowBox[{"5.710000027607317`", ",", "6.27`"}], "}"}]],
                    Annotation[#, {5.710000027607317, 6.27}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.269999975487231, 6.52}}]},
                    RowBox[{"{", 
                    RowBox[{"6.269999975487231`", ",", "6.52`"}], "}"}]],
                    Annotation[#, {6.269999975487231, 6.52}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.034999925584545, 6.36}}]},
                    RowBox[{"{", 
                    RowBox[{"6.034999925584545`", ",", "6.36`"}], "}"}]],
                    Annotation[#, {6.034999925584545, 6.36}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.769999926323678, 6.38}}]},
                    RowBox[{"{", 
                    RowBox[{"5.769999926323678`", ",", "6.38`"}], "}"}]],
                    Annotation[#, {5.769999926323678, 6.38}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.769999926323678, 6.14}}]},
                    RowBox[{"{", 
                    RowBox[{"5.769999926323678`", ",", "6.14`"}], "}"}]],
                    Annotation[#, {5.769999926323678, 6.14}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.8049999750408166`, 6.18}}]},
                    RowBox[{"{", 
                    RowBox[{"5.8049999750408166`", ",", "6.18`"}], "}"}]],
                    Annotation[#, {5.8049999750408166`, 6.18}, "Tooltip"]& ], 
                    
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.769999926323678, 6.}}]},
                    RowBox[{"{", 
                    RowBox[{"5.769999926323678`", ",", "6.`"}], "}"}]],
                    Annotation[#, {5.769999926323678, 6.}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.8049999750408166`, 6.04}}]},
                    RowBox[{"{", 
                    RowBox[{"5.8049999750408166`", ",", "6.04`"}], "}"}]],
                    Annotation[#, {5.8049999750408166`, 6.04}, "Tooltip"]& ], 
                    
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.8049999750408166`, 6.18}}]},
                    RowBox[{"{", 
                    RowBox[{"5.8049999750408166`", ",", "6.18`"}], "}"}]],
                    Annotation[#, {5.8049999750408166`, 6.18}, "Tooltip"]& ], 
                    
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.970000019908593, 6.11}}]},
                    RowBox[{"{", 
                    RowBox[{"5.970000019908593`", ",", "6.11`"}], "}"}]],
                    Annotation[#, {5.970000019908593, 6.11}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{8.715000009037924, 7.73}}]},
                    RowBox[{"{", 
                    RowBox[{"8.715000009037924`", ",", "7.73`"}], "}"}]],
                    Annotation[#, {8.715000009037924, 7.73}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{8.55499999711706, 7.69}}]},
                    RowBox[{"{", 
                    RowBox[{"8.55499999711706`", ",", "7.69`"}], "}"}]],
                    Annotation[#, {8.55499999711706, 7.69}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{7.7150000117726245`, 7.33}}]},
                    RowBox[{"{", 
                    RowBox[{"7.7150000117726245`", ",", "7.33`"}], "}"}]],
                    Annotation[#, {7.7150000117726245`, 7.33}, "Tooltip"]& ], 
                    
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.759999964531918, 7.02}}]},
                    RowBox[{"{", 
                    RowBox[{"6.759999964531918`", ",", "7.02`"}], "}"}]],
                    Annotation[#, {6.759999964531918, 7.02}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.155000000215367, 6.99}}]},
                    RowBox[{"{", 
                    RowBox[{"6.155000000215367`", ",", "6.99`"}], "}"}]],
                    Annotation[#, {6.155000000215367, 6.99}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.484999997551553, 7.19}}]},
                    RowBox[{"{", 
                    RowBox[{"6.484999997551553`", ",", "7.19`"}], "}"}]],
                    Annotation[#, {6.484999997551553, 7.19}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.269999975487231, 7.3}}]},
                    RowBox[{"{", 
                    RowBox[{"6.269999975487231`", ",", "7.3`"}], "}"}]],
                    Annotation[#, {6.269999975487231, 7.3}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.269999975487231, 7.15}}]},
                    RowBox[{"{", 
                    RowBox[{"6.269999975487231`", ",", "7.15`"}], "}"}]],
                    Annotation[#, {6.269999975487231, 7.15}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.82000000184733, 7.01}}]},
                    RowBox[{"{", 
                    RowBox[{"6.82000000184733`", ",", "7.01`"}], "}"}]],
                    Annotation[#, {6.82000000184733, 7.01}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.82000000184733, 7.03}}]},
                    RowBox[{"{", 
                    RowBox[{"6.82000000184733`", ",", "7.03`"}], "}"}]],
                    Annotation[#, {6.82000000184733, 7.03}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.82000000184733, 6.83}}]},
                    RowBox[{"{", 
                    RowBox[{"6.82000000184733`", ",", "6.83`"}], "}"}]],
                    Annotation[#, {6.82000000184733, 6.83}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.739999976965498, 6.76}}]},
                    RowBox[{"{", 
                    RowBox[{"5.739999976965498`", ",", "6.76`"}], "}"}]],
                    Annotation[#, {5.739999976965498, 6.76}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.82000000184733, 6.77}}]},
                    RowBox[{"{", 
                    RowBox[{"6.82000000184733`", ",", "6.77`"}], "}"}]],
                    Annotation[#, {6.82000000184733, 6.77}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.82000000184733, 6.69}}]},
                    RowBox[{"{", 
                    RowBox[{"6.82000000184733`", ",", "6.69`"}], "}"}]],
                    Annotation[#, {6.82000000184733, 6.69}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.269999975487231, 6.7}}]},
                    RowBox[{"{", 
                    RowBox[{"6.269999975487231`", ",", "6.7`"}], "}"}]],
                    Annotation[#, {6.269999975487231, 6.7}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.12499995845782, 6.62}}]},
                    RowBox[{"{", 
                    RowBox[{"6.12499995845782`", ",", "6.62`"}], "}"}]],
                    Annotation[#, {6.12499995845782, 6.62}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.8049999750408166`, 6.64}}]},
                    RowBox[{"{", 
                    RowBox[{"5.8049999750408166`", ",", "6.64`"}], "}"}]],
                    Annotation[#, {5.8049999750408166`, 6.64}, "Tooltip"]& ], 
                    
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.8049999750408166`, 6.68}}]},
                    RowBox[{"{", 
                    RowBox[{"5.8049999750408166`", ",", "6.68`"}], "}"}]],
                    Annotation[#, {5.8049999750408166`, 6.68}, "Tooltip"]& ], 
                    
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.8049999750408166`, 6.7}}]},
                    RowBox[{"{", 
                    RowBox[{"5.8049999750408166`", ",", "6.7`"}], "}"}]],
                    Annotation[#, {5.8049999750408166`, 6.7}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{4.859999953269213, 6.57}}]},
                    RowBox[{"{", 
                    RowBox[{"4.859999953269213`", ",", "6.57`"}], "}"}]],
                    Annotation[#, {4.859999953269213, 6.57}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.884999993994908, 6.7}}]},
                    RowBox[{"{", 
                    RowBox[{"5.884999993994908`", ",", "6.7`"}], "}"}]],
                    Annotation[#, {5.884999993994908, 6.7}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.30500002420437, 6.69}}]},
                    RowBox[{"{", 
                    RowBox[{"6.30500002420437`", ",", "6.69`"}], "}"}]],
                    Annotation[#, {6.30500002420437, 6.69}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{8.469999997190698, 7.34}}]},
                    RowBox[{"{", 
                    RowBox[{"8.469999997190698`", ",", "7.34`"}], "}"}]],
                    Annotation[#, {8.469999997190698, 7.34}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{8.55499999711706, 8.08}}]},
                    RowBox[{"{", 
                    RowBox[{"8.55499999711706`", ",", "8.08`"}], "}"}]],
                    Annotation[#, {8.55499999711706, 8.08}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{7.7150000117726245`, 8.12}}]},
                    RowBox[{"{", 
                    RowBox[{"7.7150000117726245`", ",", "8.12`"}], "}"}]],
                    Annotation[#, {7.7150000117726245`, 8.12}, "Tooltip"]& ], 
                    
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{8.26500000059548, 8.19}}]},
                    RowBox[{"{", 
                    RowBox[{"8.26500000059548`", ",", "8.19`"}], "}"}]],
                    Annotation[#, {8.26500000059548, 8.19}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.82000000184733, 7.47}}]},
                    RowBox[{"{", 
                    RowBox[{"6.82000000184733`", ",", "7.47`"}], "}"}]],
                    Annotation[#, {6.82000000184733, 7.47}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{7.099999975787286, 7.42}}]},
                    RowBox[{"{", 
                    RowBox[{"7.099999975787286`", ",", "7.42`"}], "}"}]],
                    Annotation[#, {7.099999975787286, 7.42}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.12499995845782, 7.33}}]},
                    RowBox[{"{", 
                    RowBox[{"6.12499995845782`", ",", "7.33`"}], "}"}]],
                    Annotation[#, {6.12499995845782, 7.33}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.12499995845782, 7.19}}]},
                    RowBox[{"{", 
                    RowBox[{"6.12499995845782`", ",", "7.19`"}], "}"}]],
                    Annotation[#, {6.12499995845782, 7.19}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.269999975487231, 6.91}}]},
                    RowBox[{"{", 
                    RowBox[{"6.269999975487231`", ",", "6.91`"}], "}"}]],
                    Annotation[#, {6.269999975487231, 6.91}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.12499995845782, 6.92}}]},
                    RowBox[{"{", 
                    RowBox[{"6.12499995845782`", ",", "6.92`"}], "}"}]],
                    Annotation[#, {6.12499995845782, 6.92}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.82000000184733, 6.9}}]},
                    RowBox[{"{", 
                    RowBox[{"6.82000000184733`", ",", "6.9`"}], "}"}]],
                    Annotation[#, {6.82000000184733, 6.9}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.120000043897596, 6.87}}]},
                    RowBox[{"{", 
                    RowBox[{"6.120000043897596`", ",", "6.87`"}], "}"}]],
                    Annotation[#, {6.120000043897596, 6.87}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.82000000184733, 6.86}}]},
                    RowBox[{"{", 
                    RowBox[{"6.82000000184733`", ",", "6.86`"}], "}"}]],
                    Annotation[#, {6.82000000184733, 6.86}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.8049999750408166`, 6.89}}]},
                    RowBox[{"{", 
                    RowBox[{"5.8049999750408166`", ",", "6.89`"}], "}"}]],
                    Annotation[#, {5.8049999750408166`, 6.89}, "Tooltip"]& ], 
                    
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.269999975487231, 6.73}}]},
                    RowBox[{"{", 
                    RowBox[{"6.269999975487231`", ",", "6.73`"}], "}"}]],
                    Annotation[#, {6.269999975487231, 6.73}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.109999937579046, 6.76}}]},
                    RowBox[{"{", 
                    RowBox[{"6.109999937579046`", ",", "6.76`"}], "}"}]],
                    Annotation[#, {6.109999937579046, 6.76}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.269999975487231, 6.64}}]},
                    RowBox[{"{", 
                    RowBox[{"6.269999975487231`", ",", "6.64`"}], "}"}]],
                    Annotation[#, {6.269999975487231, 6.64}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.204999977411912, 6.62}}]},
                    RowBox[{"{", 
                    RowBox[{"6.204999977411912`", ",", "6.62`"}], "}"}]],
                    Annotation[#, {6.204999977411912, 6.62}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.970000019908593, 6.63}}]},
                    RowBox[{"{", 
                    RowBox[{"5.970000019908593`", ",", "6.63`"}], "}"}]],
                    Annotation[#, {5.970000019908593, 6.63}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.82000000184733, 6.65}}]},
                    RowBox[{"{", 
                    RowBox[{"6.82000000184733`", ",", "6.65`"}], "}"}]],
                    Annotation[#, {6.82000000184733, 6.65}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.109999937579046, 6.74}}]},
                    RowBox[{"{", 
                    RowBox[{"6.109999937579046`", ",", "6.74`"}], "}"}]],
                    Annotation[#, {6.109999937579046, 6.74}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.770000024650784, 6.78}}]},
                    RowBox[{"{", 
                    RowBox[{"6.770000024650784`", ",", "6.78`"}], "}"}]],
                    
                    Annotation[#, {6.770000024650784, 6.78}, 
                    "Tooltip"]& ]}}, {{}, {}}}, {{{}, {}, 
                    TagBox[
                    {GrayLevel[0.2], AbsoluteThickness[1.], Opacity[0.5], 
                    AbsoluteDashing[{2, 4}], LineBox[CompressedData["
1:eJxFxWlIkwEYAOB5bNp0LvPIXDuUSYRZW6NNRcK1GcNQ3PFDUzKPZZmRWem2
RElJpCzLgk9JbXlAh+cotXStPNBSC8oy3XBa2kKXoWZSGB0/et8fD09A6kmF
2pFEIsX89e/V3/7Ta2/Ikf8f4/hYue9xg5g+Jbfg2cVOlvuz+DzFPp68ik/T
jK8GfSnwMCPZRCTgt0X1tSIrPh6q4iyTXOHu/nqdlr4BJqJ85AY/KvyrvHVe
HeoGe6o/J32SusNtTtEVMxk0eD8xKrlywQO++PDrqMtVOtwcW0MriN8I210q
9IeseGM3sUSkecJBY/wGjxV8nc/oW9BsgolvlRIK1Qtubd9WpK3EWQ/IIUqm
NyxnaMIym3HLYJjBJvCBgyfKy+oG8LXZ79wOlS/sL2zezpvEHexr5bbMzXCk
7VoqeRn/aYlYOZfrB2tF+XO7KFvguHGqNLoMXzCHONcx/WEnc0qRognPYc9l
HeMz4Mah9S7jM5zXmXZKI9sKC/Vm26UR3GHRZrIkMmHueYnzjRncTSu4V5rD
gqM7cno+/sCdF3vLiAI2LB5QJktdOPCOjhM7s6Nx3YS8Jfw6Ttbtvdw+iUcY
FXWJzAD43W7+0QY1zjggSufcxWuno0yyBbz4DmuYLgiEvb3YNGouHpRQxdqT
hwtvefEOa/D4YFdlhw6vlixVphbi3DN93O5SXPA2IyLrJi5lfIghqnFVSlJy
bw2e+yWuyE+PPyaHD/U34PuE7ipmC67ML1HLWvH0XlLe6Ta8JHa16rkBf3Fk
ynq2Ezc3xS/pu3D78mvHkUe4R+FgUGAPzh4Qi2KMOM+tR6Z5govlwoP1JlxB
tB1/+RT/A6Yu/RY=
                    "]]},
                    Annotation[#, "Charting`Private`Tag$4295845#1"]& ]}, {}}},
                 
                 Axes->{False, False},
                 AxesLabel->{None, None},
                 AxesOrigin->{2.728499992903163, 2.728499992903163},
                 DisplayFunction->Identity,
                 Frame->{{True, False}, {True, False}},
                 FrameLabel->{{
                    FormBox[
                    TagBox["\"actual value\"", HoldForm], TraditionalForm], 
                    None}, {
                    FormBox[
                    TagBox["\"predicted value\"", HoldForm], TraditionalForm],
                     None}},
                 FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
                 
                 GridLines->{Automatic, Automatic},
                 GridLinesStyle->Directive[
                   GrayLevel[0.5, 0.5], 
                   AbsoluteThickness[1], 
                   AbsoluteDashing[{1, 2}]],
                 ImageSize->250,
                 
                 Method->{
                  "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                   Automatic, 
                   "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                   "DefaultMeshStyle" -> AbsolutePointSize[6], 
                   "DefaultPlotStyle" -> {
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02],
                    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
                   Scaled[0.05], "OptimizePlotMarkers" -> True, 
                   "OptimizePlotMarkers" -> True, 
                   "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}},
                 
                 PlotRange->{{2.728499992903157, 9.376575000354842}, {
                  2.728499992903157, 9.376575000354842}},
                 PlotRangeClipping->True,
                 PlotRangePadding->{{0, 0}, {0, 0}},
                 Ticks->{Automatic, Automatic}],
                Alignment->Center,
                StripOnInput->False], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             ColumnsEqual->False,
             
             GridBoxAlignment->{
              "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
             GridBoxDividers->{"Columns" -> {False, {
                  Opacity[0.15]}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {Automatic, {Automatic}}, "Rows" -> {{1.}}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], 
                 Offset[1.1199999999999999`], {
                  Offset[1.75]}, 
                 Offset[0.27999999999999997`]}, "Rows" -> {
                 Offset[0.2], {
                  Offset[0.8]}, 
                 Offset[0.2]}}],
            "Grid"],
           FrameMargins->{{10, 10}, {10, 5}},
           FrameStyle->None,
           StripOnInput->False],
          Deploy,
          DefaultBaseStyle->"Deploy"],
         Alignment->Center,
         BaseStyle->{
          FontWeight -> "Light", FontSize -> 11, FontFamily -> 
           ".AppleSystemUIFont", NumberMarks -> False, Deployed -> False},
         StripOnInput->False]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], 
          Offset[0.8], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[0.85],
     RoundingRadius->5,
     StripOnInput->False],
    StripOnInput->False,
    LineBreakWithin->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  PredictorMeasurementsObject[<|
   "Model" -> PredictorFunction[<|
      "ExampleNumber" -> 898, 
       "Input" -> <|
        "Preprocessor" -> 
         MachineLearning`MLProcessor[
          "ToMLDataset", <|
           "Input" -> <|
             "f1" -> <|"Type" -> "NumericalVector", "Length" -> 41|>|>, 
            "Output" -> <|
             "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
            "Preprocessor" -> 
            MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
                 MachineLearning`MLProcessor["List"], 
                 MachineLearning`MLProcessor[
                 "WrapMLDataset", <|
                  "FeatureTypes" -> {"NumericalVector"}, 
                   "FeatureKeys" -> {"f1"}, "FeatureWeights" -> Automatic, 
                   "ExampleWeights" -> Automatic, "RawExample" -> 
                   Missing["KeyAbsent", "RawExample"], "StructurePreserving" -> 
                   False|>]}|>], "ScalarFeature" -> True, "Invertibility" -> 
            "Perfect", "StructurePreserving" -> False, "Missing" -> 
            "Allowed"|>], "Processor" -> 
         MachineLearning`MLProcessor[
          "Sequence", <|
           "Input" -> <|
             "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
            "Output" -> <|
             "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
            "Processors" -> {
              MachineLearning`MLProcessor[
              "SynthesizeMissingValues", <|
               "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Distribution" -> 
                LearnedDistribution[<|
                  "ExampleNumber" -> 898, "Preprocessor" -> 
                   MachineLearning`MLProcessor[
                    "ToMLDataset", <|
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Length" -> 41|>|>,
                     "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Preprocessor" -> MachineLearning`MLProcessor["Identity"],
                     "ScalarFeature" -> True, "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
                    "Processor" -> 
                   MachineLearning`MLProcessor[
                    "Sequence", <|
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Processors" -> {
                    MachineLearning`MLProcessor[
                    "LogRescaleNumericalVector", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Indices" -> {24}, "Centers" -> {0.04314593098342069}, 
                    "Cutoffs" -> {0.00033538463930567197`}, 
                    "Version" -> {13.2, 1}, "ID" -> 1758109800256407757, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 
                    1|>|>|>], 
                    MachineLearning`MLProcessor[
                    "Standardize", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAACzypZgfu+XP9BIt2NgL5o/FbGuiAa3nD+D
+clcUqGfPwkfZWf8W6E/yozpBxY0oj9X8bwxz8aiP8j/dbZD86I/WV0uoATd
oj+Gm9dmKKuiPw0y/Kn7W6I/UlpiP3HHoT8sKD3m/OCgP/3CySr7cJ8/W2aO
XlKdnT9ZHJM8zm6cPzQ/PK9SkZw/fZKae8zUnT/oCMg+4P2fP9uwnEML76E/
LzUTTaPioz9reOhNoyCkP1a4q+JTGqI/B1Ez/2hMA8AEiMCk+D+fP0BcLLMl
HqA/dT7ZFK2ioD/ozGQh40+gP5aWGrebJp0/9+MerbAhlz9xo4ZSyVaQP3Oo
KEEjU4Q/8XWPWSYyeD9wd9QjUdNpP5OdF1H/Al0/DtOG21IgTT8eoV6P8HxA
P429KDkWqjM/+F4AMmWAKT9/W2K81nsjP3eTQBIumxg/s8CZ+Q==
                    "], "StandardDeviation" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAAAIQ46QdQ+AP1A0Za9+/nc/YwHlmJnNcz8e
tU0hU3F3P4nTZmYcZH8/QOcuO1TEgz9GFFguRzCIP0/oTX65Bow/xcoK+5xw
jj+yhtenIcOPPz0JPmtTYY8/vayUQOTAjT+7o+6G9JiLP9W7S69WqYk/SwZj
iIbOiD9hmymwdqmIP9floHbyAYk/ESULVVZIiT+YaRZNW7aJP57HOgRuh40/
nDik6aakkT+gkUnvb12RP7kTLcbotYs/E4XLS93v/T/lnIgXLhqNP+cMNnvz
CZE/PK/VBXTukj/fFJA0GHSTP9YmLjoExpE/ys89UBAkjD8h6HUkaGODP7/s
bHjt+3Y/89BVz/KdaT/+OmLvXeJZP3IB+rRcMlA/4hXanuYaRj8QVTaAkh9C
P0dslVNaIUI/Gteieh37PT9o7vdEsD05PxFhqaNPXTY//nGWtQ==
                    "], 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Version" -> {13.2, 1}, "ID" -> 64935607783415987|>]}, 
                    "Invertibility" -> "Perfect", "StructurePreserving" -> 
                    True, "Missing" -> "Allowed"|>], "PerformanceGoal" -> 
                   "DirectTraining", "BatchProcessing" -> Automatic, 
                   "Model" -> <|"RotationMatrix" -> CompressedData["
1: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
J9l5Dd8JgKWM2sPHN2vxso9C2FGXEJSKSY1y8SBg7SbnUxOVONRq9Wu0lsrF
OH2eixfmSlFk7bF0Pr0DtM3mydeVj2LGpn7n4/B6mN/pWRo8mo7pH2jc0380
4MMq9WMnGRqwpr1Io1k+E7UNVyd/k+fhYesrUCSRisdtbSZWBnuw8p2WrU0I
EY1oRPUbNb8he321yzP1LnhCFvjp4HYD2MzRXT8sWo0z817CllOuqLNVsK74
2R5kO26qLLiXYedd+jTpnkTQlx56q5+ViNdl2IUawn3ggOYNn749DqJ5Xkn/
+UI2nKo69/y8SCRun1H9MrORi5vpv8k2j9TD8RyNw33D2RD9Tv7SO0qEK7pC
7N9sdXFlLcJ30DoR2gZqM5jGQuHYSrRUX2UHPDhzslmqohr1o775nfKvhi+u
q/Hz9pHQV1Dr3W9ajJ5idOHNH9KA7vJp30YdGzAJWaCYv1IEOXdI53R78jDo
0ef0uvgmEOy/cISaOx3pGWaUHqkWoHej2K5PYAVYj10ZGKxrwFmF6x9UvZug
cly8LLB+AGimldTz/vVCH+l58585eWi809DU0z4G9cw0scplXaAWwXAsOS8M
Un0vHv3FUwvX9TuZJlTr4I2G0Nr98QaI01EvHFOpxgiZG2xqklHIPUVXrH5G
G2rIyJf0S8uQl38hZdspGWYYGi4+I03A3h7Pnn6OQPjNZXKuwjUD7mu9vMlf
VgDXOk8XMMh8Ru23Mikih0Iw1Lo/PMavBd4XRReuTSXs4faGl1BGHajyd56Q
ORQNG5d+2JJnRgLPK7qMhUOFOFJHcevl03q49tvvoWlLJu482q3lSSfg2Yh/
1V+Um8C4rkw/8kIaKjd+rUnqqQCzntW242Wh+KKIgW400AHbQs3OaTY0grR0
Dwv7+xZoIrtiT8jswK40pUXpeyPg6XferbO2E5wfTeSUmfUBZ/jnqiNFCGev
t+GJinJoJRYxGyy3omH+e4uk/QTINjM9t3KpB69/M7qGp6rQsf/fS1L7WkSW
U9b75dLg14hrvKBVETjd+brZkdgAfT2ng9oZqvHuL+I2NRMBZfku2tKsWkCV
l1Lf9uUyzGDVFj7Xngo3Jrzpbz/LxcADV44L/HWAbnsecvfoGAixp2pivZsP
HLyiH2mFvOD5gm2+I00cJJ0lF3CXbISqJeb0VRpF7Ll3vXhrsx4ELKV6CAX5
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
1KFRLg==
                    "], "Precisions" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAADXPTPKV+emP0mYF6ERALo/0/FosOqsyj+v
dMPw/bfiP8eJI2PmzvE/4zcctxE3BEAJmyq7BkkLQKRG27tUMhNAG/FUq8qA
HECuglm4FswgQF25JMNAhCVAKDcef738OUAMmZeCPIpIQCPN6GINaklAXZlS
CX1JUUBiZraoVbBdQDjTujK0XGBArIRCNlVBaUAQ3c92D8puQMoCLpSaWXBA
D45svkdveECesgrbGAx7QLIiVrp1xn9A94wkE5tbhUDy+ynoV12IQAsN90TP
LolAEIDElHL8kkCRLKUFeNuTQAMFutJ2kplAYWkPBUMlnkDxUx66FkugQJpl
9eo2vqFAtvPl22JapED9a8StvaymQCCD4vL/kahAgLGfKqu1q0D9u0TCplOw
QBS+W+pL3rZAswHtb9IovUCziMOYVM/BQJ/qRwFrVNZAA6qbbA==
                    "], "NoisePrecision" -> None, "Processor" -> 
                    MachineLearning`MLProcessor[
                    "Center", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAABBFtZd2NwjP4SA0b9Xoia/caH8n9VEJT90
oH6furwxP7DKP5C3LiS/N3/OnlSyMr+ldkjEzb4jv/ZIB/u9Ijm/GdQSvIAl
8r6jKRkVHb0wv8p+1AeKeCe/PtLAANl5J7+asadF5QnuvuNm6AmvIT+/ncwG
VccBNL8b0AWfz6cLP0G6BFcXaCM/ALwf6xOXJj9eVqDtcC8jPwtMpWRsSxK/
edzXsQxjJT8DK/kXY3klv3zXyFtZjDE/lti/l7/HFz9yf9LXZQwrP6Jk5yJ/
1TQ/XpLv8+PqJD/Hot04VBLuvjXaEfsdaSw/JIgNrsvdGj85R++o2uslPwKr
73VnqQw/tTIc2Pf6IL9yj/XXc4ouP2oJNokIgCg//HJW+x0GQL8BXdaFRTBB
vxy2BABVyy8/x7v2i1/KFb98fg56PSMjv9UKRkisctK+BXKbKg==
                    "], 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Version" -> {13.2, 1}, "ID" -> 1210029810956485142|>], 
                    "PostProcessor" -> 
                    MachineLearning`MLProcessor[
                    "FirstValues", <|
                    "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, 
                    "Key" -> "f1", "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
                     "Method" -> "Multinormal", 
                    "Options" -> <|
                    "CovarianceType" -> <|
                    "Value" -> "Full", "Options" -> <||>|>, 
                    "IntrinsicDimension" -> <|
                    "Value" -> 41, "Options" -> <||>|>|>|>, 
                   "TrainingInformation" -> <|
                    "Configurations" -> 
                    Dataset[<|<|
                    "Value" -> "Multinormal", 
                    "Options" -> <|
                    "CovarianceType" -> <|"Value" -> "Full"|>, 
                    "IntrinsicDimension" -> <|"Value" -> "Heuristic"|>|>, 
                    "NaiveImputer" -> 
                    MachineLearning`MLProcessor[
                    "ImputeMissing", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAAAlB9Zd2NwjPxKA0b9Xoia/+5j8n9VEJT/r
o36furwxP0XHP5C3LiS/Bn3OnlSyMr8lfkjEzb4jv0lPB/u9Ijm/a8QSvIAl
8r4wMxkVHb0wv0uM1AeKeCe/JszAANl5J7+FFqhF5QnuvlFl6AmvIT+/sdEG
VccBNL+8hgWfz6cLP8WcBFcXaCM/48kf6xOXJj8bSaDtcC8jP45npWRsSxK/
i+zXsQxjJT+mHPkXY3klvy7XyFtZjDE/hvW/l7/HFz94fdLXZQwrP0Ft5yJ/
1TQ/d4vv8+PqJD8uLt04VBLuvr7iEfsdaSw/yqUNrsvdGj/lOu+o2uslPwHe
73VnqQw/tEYc2Pf6IL9BmfXXc4ouPxsANokIgCg/pHRW+x0GQL+iWdaFRTBB
vyG5BABVyy8/Edb2i1/KFb/5eg56PSMjv1+ZRkisctK+sUabCg==
                    "], "StandardDeviation" -> CompressedData["
1:eJxTTMoPSmVkYGDQBGK2nCNmTn/f2/N/8eSY++e9Pa/LmZwqhg/22wQbDiUD
6WOq76/o/Htvz62Xq5/C+MFeX2Xtka7/7+2/PnlakAikhV6UTeMH0v7np2V9
//3enrGa6dAOoL5X7wIuZAL1ydjV16sB6fDbH5inAOljvv8/dALln5+0dC8D
8kNnvbo9Bcg/L7TwwlQgnS2m9qUOaN7u4infnUHu2sFkuhwoHlcU9nEpUDzy
wzpDHaA7zW/ETv0E1G+ae/+aFlB+dfqr+I9AeqXUjJ2WQLq07sc+EN0yk0/S
C6iuVErquz+Q/uXUyyANFPeYyRpxE2hekZeZ2HQgvaol/SofUD7f9sFBayD/
wSz9E5ZAevujeSEOQPW5nHIf5gL5hvO6i1KB/KyYnReXA9XPuG67UAoYLgDp
Jq8g
                    "], "Method" -> "NaiveSampler", "VectorLength" -> 41, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Type" -> "NumericalVector", "Version" -> {13.2, 1}, "ID" -> 
                    2628110491450176983|>], "EMIterations" -> 1|> -> <||>|>, 
                    TypeSystem`Assoc[
                    
                    TypeSystem`Struct[{
                    "Value", "Options", "NaiveImputer", "EMIterations"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Struct[{"Value"}, {
                    TypeSystem`Atom[String]}], 2], TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer]}], 
                    TypeSystem`Assoc[
                    TypeSystem`UnknownType, TypeSystem`UnknownType, 
                    TypeSystem`AnyLength], 1], <||>], "BestModelInformation" -> 
                    Dataset[<|
                    "Configuration" -> {
                    "Multinormal", "CovarianceType" -> "Full", 
                    "IntrinsicDimension" -> "Heuristic"}, "ModelUtility" -> 
                    Missing[]|>, 
                    TypeSystem`Struct[{"Configuration", "ModelUtility"}, {
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[String], TypeSystem`AnyType, 
                    TypeSystem`AnyType}], TypeSystem`UnknownType}], <||>]|>, 
                   "NaiveImputer" -> 
                   MachineLearning`MLProcessor[
                    "ImputeMissing", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAAAlB9Zd2NwjPxKA0b9Xoia/+5j8n9VEJT/r
o36furwxP0XHP5C3LiS/Bn3OnlSyMr8lfkjEzb4jv0lPB/u9Ijm/a8QSvIAl
8r4wMxkVHb0wv0uM1AeKeCe/JszAANl5J7+FFqhF5QnuvlFl6AmvIT+/sdEG
VccBNL+8hgWfz6cLP8WcBFcXaCM/48kf6xOXJj8bSaDtcC8jP45npWRsSxK/
i+zXsQxjJT+mHPkXY3klvy7XyFtZjDE/hvW/l7/HFz94fdLXZQwrP0Ft5yJ/
1TQ/d4vv8+PqJD8uLt04VBLuvr7iEfsdaSw/yqUNrsvdGj/lOu+o2uslPwHe
73VnqQw/tEYc2Pf6IL9BmfXXc4ouPxsANokIgCg/pHRW+x0GQL+iWdaFRTBB
vyG5BABVyy8/Edb2i1/KFb/5eg56PSMjv1+ZRkisctK+sUabCg==
                    "], "StandardDeviation" -> CompressedData["
1:eJxTTMoPSmVkYGDQBGK2nCNmTn/f2/N/8eSY++e9Pa/LmZwqhg/22wQbDiUD
6WOq76/o/Htvz62Xq5/C+MFeX2Xtka7/7+2/PnlakAikhV6UTeMH0v7np2V9
//3enrGa6dAOoL5X7wIuZAL1ydjV16sB6fDbH5inAOljvv8/dALln5+0dC8D
8kNnvbo9Bcg/L7TwwlQgnS2m9qUOaN7u4infnUHu2sFkuhwoHlcU9nEpUDzy
wzpDHaA7zW/ETv0E1G+ae/+aFlB+dfqr+I9AeqXUjJ2WQLq07sc+EN0yk0/S
C6iuVErquz+Q/uXUyyANFPeYyRpxE2hekZeZ2HQgvaol/SofUD7f9sFBayD/
wSz9E5ZAevujeSEOQPW5nHIf5gL5hvO6i1KB/KyYnReXA9XPuG67UAoYLgDp
Jq8g
                    "], "Method" -> "NaiveSampler", "VectorLength" -> 41, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Type" -> "NumericalVector", "Version" -> {13.2, 1}, "ID" -> 
                    2628110491450176983|>], "InputDimension" -> 0, 
                   "OutputDimension" -> 41, 
                   "Log" -> <|
                    "Example" -> 
                    MachineLearning`MLDataset[<|
                    "f1" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 1, 
                    "Values" -> CompressedData["
1:eJxTTMoPSmViYGBgBGJNIK7Ist9ntWGCvemcK7WVOVPtDzoe9X9/dqb9dtXC
4F/v5thzyYT8+XJvjr1GearBxM2z7I8BZTNtZ9hfKk1UyXWfZh/BJmy5mnGq
fbrZ4pd7zKbYcytnWm8Sm2I/71b/ej6dKfaHPe9OPx42xR4k6nJmin2u64WC
oO9T7U+E/Pv14dIMe/loQZM5V+baN7VO2Chit8hes7Y8zXjWMvtU/b5V//+t
sb8360JhKMNGqDkb7BVTdFr71622///n25N1PMvsT8WIOZ+MXmwf/P3pRlHH
xfa225QyLFYutr89catCktpi+19vjgFtWmC/UdB0/t0Zs+zrKnOALphkX5qk
Xpak3ma/XSXP6/7cSnugZ641dWTaT92l37+WI8r+WkvfaiYOD3vTBQ8WPt1g
ZK8C9r+UPQMUdE/arlYS89UOxgcALneWhA==
                    "], "ID" -> 4635246341379078022|>|>, <|
                    "ExampleNumber" -> 1, "ExampleWeights" -> 1, 
                    "LogDensityRatios" -> 0, "RawExample" -> False|>], 
                    "TrainingTime" -> 0.131417, "MaxTrainingMemory" -> 
                    1617784, "DataMemory" -> 296520, "FunctionMemory" -> 
                    59376, "LanguageVersion" -> {13.2, 1}, "Date" -> 
                    DateObject[{
                    2023, 8, 1, 10, 14, 14.118747`7.902371141325471}, 
                    "Instant", "Gregorian", -4.], "ProcessorCount" -> 4, 
                    "ProcessorType" -> "x86-64", "OperatingSystem" -> 
                    "MacOSX", "SystemWordLength" -> 64, "Evaluations" -> {}|>,
                    "LogPDFDistribution" -> 
                   MachineLearning`TailedQuantileDistribution[<|
                    "Quantiles" -> {6.07088734253851, 6.07088734253851, 
                    6.095422220961959, 6.139582333771467, 6.150821740348716, 
                    6.166772593140232, 6.176929859830782, 6.1923097388355615`,
                     6.20425963698722, 6.216873024332063, 6.318474894752949}, 
                    "LeftBoundary" -> 6.095422220961959, "LeftScale" -> 
                    0.012267439211724351`, "LeftTailNorm" -> 0.2|>], 
                   "Entropy" -> 
                   Around[-253.10256688054784`, 0.891433624356406], 
                   "EntropySampleSize" -> 10|>], 
                "Output" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "EvaluationStrategy" -> "ModeFinding", "Version" -> {13.2, 1},
                 "ID" -> 895810465636885430|>], 
              MachineLearning`MLProcessor[
              "LogRescaleNumericalVector", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Indices" -> {24}, "Centers" -> {0.04314593098342069}, 
                "Cutoffs" -> {0.00033538463930567197`}, 
                "Version" -> {13.2, 1}, "ID" -> 1295242045016063173, 
                "Output" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>|>], 
              
              MachineLearning`MLProcessor[
              "Standardize", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Mean" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAACzypZgfu+XP9BIt2NgL5o/FbGuiAa3nD+D
+clcUqGfPwkfZWf8W6E/yozpBxY0oj9X8bwxz8aiP8j/dbZD86I/WV0uoATd
oj+Gm9dmKKuiPw0y/Kn7W6I/UlpiP3HHoT8sKD3m/OCgP/3CySr7cJ8/W2aO
XlKdnT9ZHJM8zm6cPzQ/PK9SkZw/fZKae8zUnT/oCMg+4P2fP9uwnEML76E/
LzUTTaPioz9reOhNoyCkP1a4q+JTGqI/B1Ez/2hMA8AEiMCk+D+fP0BcLLMl
HqA/dT7ZFK2ioD/ozGQh40+gP5aWGrebJp0/9+MerbAhlz9xo4ZSyVaQP3Oo
KEEjU4Q/8XWPWSYyeD9wd9QjUdNpP5OdF1H/Al0/DtOG21IgTT8eoV6P8HxA
P429KDkWqjM/+F4AMmWAKT9/W2K81nsjP3eTQBIumxg/s8CZ+Q==
                 "], "StandardDeviation" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAAAIQ46QdQ+AP1A0Za9+/nc/YwHlmJnNcz8e
tU0hU3F3P4nTZmYcZH8/QOcuO1TEgz9GFFguRzCIP0/oTX65Bow/xcoK+5xw
jj+yhtenIcOPPz0JPmtTYY8/vayUQOTAjT+7o+6G9JiLP9W7S69WqYk/SwZj
iIbOiD9hmymwdqmIP9floHbyAYk/ESULVVZIiT+YaRZNW7aJP57HOgRuh40/
nDik6aakkT+gkUnvb12RP7kTLcbotYs/E4XLS93v/T/lnIgXLhqNP+cMNnvz
CZE/PK/VBXTukj/fFJA0GHSTP9YmLjoExpE/ys89UBAkjD8h6HUkaGODP7/s
bHjt+3Y/89BVz/KdaT/+OmLvXeJZP3IB+rRcMlA/4hXanuYaRj8QVTaAkh9C
P0dslVNaIUI/Gteieh37PT9o7vdEsD05PxFhqaNPXTY//nGWtQ==
                 "], 
                "Output" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Version" -> {13.2, 1}, "ID" -> 3037891080026016735|>]}, 
            "Invertibility" -> "Perfect", "StructurePreserving" -> True, 
            "Missing" -> "Imputed"|>]|>, 
       "Output" -> <|
        "Preprocessor" -> 
         MachineLearning`MLProcessor[
          "ToMLDataset", <|
           "Input" -> <|"f1" -> <|"Type" -> "Numerical"|>|>, 
            "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
            "Preprocessor" -> 
            MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
                 MachineLearning`MLProcessor["List"], 
                 MachineLearning`MLProcessor[
                 "WrapMLDataset", <|
                  "FeatureTypes" -> {"Numerical"}, "FeatureKeys" -> {"f1"}, 
                   "FeatureWeights" -> Automatic, "ExampleWeights" -> 
                   Automatic, "RawExample" -> 
                   Missing["KeyAbsent", "RawExample"], "StructurePreserving" -> 
                   False|>]}|>], "ScalarFeature" -> True, "Invertibility" -> 
            "Perfect", "StructurePreserving" -> False, "Missing" -> 
            "Allowed"|>], "Processor" -> 
         MachineLearning`MLProcessor[
          "Sequence", <|
           "Input" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
            "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
            "Processors" -> {
              MachineLearning`MLProcessor[
              "ToVector", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                "Output" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Version" -> {13.2, 1}, "ID" -> 2243861272990366060|>], 
              MachineLearning`MLProcessor[
              "Standardize", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Mean" -> {8.396926503340762}, 
                "StandardDeviation" -> {3.100408284980153}, 
                "Output" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Version" -> {13.2, 1}, "ID" -> 9003256909179662445|>], 
              MachineLearning`MLProcessor[
              "FromVector", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Output" -> <|
                 "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                "Version" -> {13.2, 1}, "ID" -> 5068397814240598494|>], 
              MachineLearning`MLProcessor[
              "FirstValues", <|
               "Info" -> <|"Type" -> "Numerical", "Weight" -> 1|>, "Key" -> 
                "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> 
                False, "Missing" -> "Allowed"|>]}, "Invertibility" -> 
            "Perfect", "StructurePreserving" -> False, "Missing" -> 
            "Allowed"|>], "ProbabilityPostprocessor" -> Identity, 
         "InverseProcessorFunction" -> (8.396926503340762 + 
          3.100408284980153 #& ), 
         "ProcessorFunction" -> (-2.708329268767424 + 
          0.32253816532631324` #& ), "Name" -> "value", 
         "Quantiles" -> {-1.8890823288385883`, 1.6007806199921208`}, "Mean" -> 
         8.396926503340758|>, "LabelSplitter" -> 
       MachineLearning`MLProcessor[
        "FeatureLabelSplit", <|
         "Processor" -> MachineLearning`MLProcessor["ListSplit"], 
          "PreferLabeled" -> True, "KeepLabelsFormat" -> False|>], 
       "RecalibrationFunction" -> None, "ImputationStrategy" -> Automatic, 
       "Prior" -> Automatic, "Utility" -> (DiracDelta[#2 - #]& ), "Threshold" -> 
       0, "PerformanceGoal" -> Automatic, "BatchProcessing" -> Automatic, 
       "Model" -> <|
        "NeighborsFunction" -> 
         MachineLearning`PackageScope`NeighborsFunction[
          "BruteForce", {CompressedData["
1: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
ZWpzeP/DoMESiwUpmRMrl3mVo6nkt5rOFXlgtSbStTGwD5ysHli/8FhCR7H1
ThXyjeBy7H1axdYa8J8+t5uPWQC+VfW1SgEM+Ler+Zj1sgYcMAj1y/XKQbe5
WUuRRBLwXHEZsD84Al6tZUd3PmxCp8u6vflcT1GN9SQeCmxAhq+B/rGjn+H9
pecFMZdq0ezo7TyfDgIx6nH+hsblvbD36FV9jy958EXB8+5FLx7iE05IlNpF
GlQdviV7798wtEwaTw99pmH8j+rcsw/7obYi+8z59E5Ms7wr5prRCIwtb3Mb
rpJBykL4346/3SDIOfxK1IiGwWKth7pOUeElj+LUr29seGqT0Px2fBSuHyl7
ajPFApmaV53Fkd04VyawJy6EAa+2mD5+a8sA6NuhnutFIGrkrgwMu0YH+dWU
OyWPKlH29VZ+WZ0KEFleYvXVvxQz5Oum5Qe4c295Wd3k3SJmva6kHeSe96hF
qHmbUz34Kz2WeSnDgnM3zkjeu9uKC4q2Nq7fCETDI8UpW1OGUF0oOdsX2GCQ
8VLn4qZM3LD3zG6ZSRrEjXE+N0hze+d+9QWxWQLxvXH9eu17vETO4m2/PWls
8KR5w8YdLHRbFz9uJkkHj7DUdK/cQcy9/Ofmv9w4vHMk6EzoGm5Ozu3902nP
hsrAIlXHLBbuOnZ59jE/L3GV4vV45WNTqHh5PGl0iIf4tiJr8+XBfPxd7/Rs
C6EOJN3UeQP9KPDKLTDHLiET9eWSdbhmAWqpQqEL1XSYy5k/TZYhwymVc7+z
W5gQXGkrH0hvwPi1wQap3WS4uW5sB/yhg+Wfk8nx9i24YVfp0gERNnw86/q4
x6cfKX2rG9et4UB/oH/Rv1ul8NzFMTd34xherh8kHYEW/GLitO+LMwd+D4ut
ajjeguPRlJ6dAxO4YYt0dRSDASn1TiaSkq8xR//hE6/wKpwoERQcdB4GwW1J
PeTLbHT5L3XJWagBImy1zwS4tUCCufH64aUCnPemHcs/woLiF68SPi804f2H
txlulsN4faWALfMcFYKu34vaJzECk7GhNhuejeC8180J/ng2HBF733u7huvf
e92Ybib+KPbG6uQu9yo4I2fLXlk3hYmlpkzv1X1wSbp4YqdtJbx2cLosYEYg
3iOekjQ0psJgQAFb7eow0LccVxLbPYyvZ3+U/zEYBu3MfV1p3P59Ohc3bULs
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
3ekCyTuHt/4JpkNx44j0IXMqiLfIwOw+DvaPtpxO8abDoW/xLxbPMEF//5e7
O+/TQcKL7bdvMwvigrdnrWsfRB0+ra2nPzOBFqwVlmnKhGybw8GJXePo0Kla
ppnNAMmjr8alg/vxocY+KOtuBJHHDYUhDDJqOQqHH+ihw2F/6Web1ebxakW0
zeZPFFhO9Unxri+GzIMXZJR7GfCMkvTmQV8fuvPl5Qo1TuL46Vt9V57Wo22h
4Ys3imxwINo1uNx+j0KQK32phwaqj8QFe5gMoOn/PHrnxhj21yYqDMwQiCVH
/frG/VjQnL++UebNFLq8yuLvnWLDAaNzp36em0WXoJW7Ber6cG0yUc74OAtC
jY5zQjdz4PJPIMhR+5GoZ1J1I5mH+Dflzuj2PVzevNktoHaFh/jSdvfIb0ot
umoLDq41b4eDNT5+/alU4O0P2CLGLsLFJIPH7O0jIJUb8XdJl9tb4TyNpQ/J
IDN2Uq/tCh0Ig6ee1qZm4q3Oc8dXnaODMr/NI5v7TBiyk8zd+IiDqr4SvG/9
WTAsI9+h7ziC/0lotPY8ZcHj0Cm5gKAukFPeF3lZcR73m21f0DfvQit9J+ns
UhaohoeIO/i1o82QjqydHYG4XaCHfa2TBbafNQcv/G5BRf41f98G5UG64WJz
tmofaHiFGhjajSF1bfjJGHUuH8lmGC5odYPkJv8t4cI/oHol2+FY+yh4/sw7
/m2oA0VN40tnrzdhsUruuoCkUXh/53C6Vc0IiL7dJ9b43xDm8/345cDtDZuA
37+K+ftQo15LpuDWdyjoqK1+k1yHGreOdWhL8xD7d920Xu3PAL/jt+6M32iC
c0Szh9m+BOJOJ6t5A5dRWDjX++GWLwkkYo933GomYe+Jt/Wqh1jwSVaG3+/b
IJo/3Lz33PUuIEc3+1ddpEHyY4OuhTA6rPVUv6fSScLkCevl31OY4NpwVejN
bRb8OMv/+YYmG9R/ufBZOrPhOI9Tu6M8GRccXix6bmJA9sGyNBqXmzeYfU+d
C17EVYVPImSsaLBcfl8J9UYrXvT1O2Ik2wTORmetbfWpqH72Di89ngmMJ+Sf
Rs5T6GRibLjnLxnybpOndv1sgpa7d+SfZjKgeOMjZTOrXvQjupel1BCI9u0R
n+LCg2DlFcUna4tYUKU7WZtc+xviav8JxZK5PfGywlCTwII/JH9fD59xHP7V
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
7y0+I7BNt89kaZiMdsdidhTJD0HII60zk0tTwGkuvr40dBp0ksjp2RV9GHrz
5BfvX2Rwpnhstimn4N1OSZW6T4sYS4zcVR5LB+7b7K0FO5fhYKAzl9IXOmS9
v3W75ucSjBxYmaw72IFvqc0Ly9c74Kb8Nx1tlS7M4aW//PvrF9B3t3JVG6fh
ilwy9+UsCj75/edpdNEospKsXDjOVeNZv0zzO8qzcGLT5+xj1zrQ/VLrmr7g
MDpMTVrOmcyA99Hair6sJYzU7Jh9uPYXmi9einzUyvQcQtvV8OhxeLAqa5hn
ugRVb4yTf1i248cvukJ+/EvYdYz3UXXcEFy7eeLi6iwFPo4eafzyaAF5sgn/
+uumwPL5udNf9cagtfm24U3heOBSOtOWMEWDrrji8/FMT9zfY3aRXWEY0j+s
+37v+RiTM475OMRTcBdPQKCyWwfYHQu3HSQTQUChvDKjpBa/Pd4ldyXlEqYE
V6rvOvIXhPitpCJL6Zijmz133cACV8xMOHdkj0Oi/lVXY9tuXJ1gOVTSOAca
3Qg5T2vg7rjSZGz5KOztjLPNt5+HFI/OakvXEZR733suYH8hzLd8VKzckQuz
8Urj0ju+oWOMDd/Vs/2we8yUU4XYC795iwIjWQkYc8VNsl+rBgKK9eQMjJog
peT3mcvuQ7jlna6I/JtlRI8kCxUm5ylefk+b+DmPVv8mp+/a/sb2sxf8T7eS
8VtpsZlFJhkTNCzy6Rvn4bhh6s2WLZM42vB0j4RpF36I/i829PUwfC0+eLv8
SQt8Uc6T2ZdIR7fnQ+URikzPcfs6ZSbxGxfuXStPtR6C937OR/L2MvDeGp/v
QbtauHrS+/HC8zn4sknmAesOCugf7vN2NF7ACMn6PJNJpr+POZ8YSh5HmzcO
ar7URewOf1Y/vmsZFsxF87jmF2H2gHQUxWUJ2z80e5WdHIOc/cFttzZP4DHv
b6pCYs0gXZi6I2DoAkg+iI+feE9Hcq+T+EbKPLZqjupvbqBBSdMg1enXEijU
CGmqKJDhSx+7VyKTpwS1Sv0WeHPgfobn2nnlYXhyVei/QbFB3B565bSiRQms
m1Iu3+2Tji6HDoZ/uzKFjRF+MvdILXihzE1C/BsNH8jd+lIePQNmJZdtP853
YBS9p1RWeBLvnTG5V7trFszXZ9tn3GSgMOsd36NlJXCqXqAn0nMJ9de1+B3V
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
f2MlIDYK0dhJjgAvFZUEJ1zqvzQB98x8+q3uTUDCs2aMWc9APp5fZnv0COBq
efCGbx8F/Z6QiIkXw6Dr26e1RkVU1EV3lZ+QHoWCgvjPvh5U5H1q7JvDXdyz
Ej7Ovuenw4G9CVp/CJOw9Z93Mw/OiYaGF44dLeSgWqvDu8SLqlHW2BH/4ttj
4B3YzJZ2I8FRtUxBk65pyCm13vsqsBKmBF26/zj+geBP/95uIDLRwxqhTZ4p
A5DH8lOYUmEgPm7S/jSlAciuvA0C79iIlvPntflbAjp/83jKlf/ztY/SibSL
DCTPS/vGM8dCWnoL3pYniIhhoej2JZWDUhtiTp+/TweF1ClhgSMYuPalEnVj
2WiqubJ6tgyDt46U07r0CdhcvK8hTIIAMwKZCUEtoxCbceTmnfN16KPGn/xk
fwpcMqF+77bugJqQUzN67qNwbJW6oW/mDDTtjrihtUJFm/N8Gx/4/QFGh4DC
jiUqTJdyylNb+9Bbf60mnXssFPkiwviaQy00CXxP7E7A0LE1oZffEthoRnMy
6IbFIFgNe4qOBFEhUvBSgNgjKuxc3hXRqoFB6Kr7UX8+c9Fmc9ltrt1UWP+i
PM+5FoPiU8+76/UxaDwlNlzh0wWfeOy9/nPEfVfsUXmW/zAcfDjae1d3AYRX
djxXxq8nkcNwW5uDn+9si8NCm9qAn1kzZveKg2asyU7/JWHw9d6NycPfZtGD
zAufG1lsZBQvJ5iSRwMiQWsx+T6e31rPhDZpMVFtSLBBwP/fS7/lpYJTBA0M
p5jNci9oiCajHFC+G4PTph4VXT/p6Az/M8dhPRoEvNSaO35zGrzUcjl8thT4
0hwonxFDxz3sw0WRfeNwf/Eq26WzG4IU5I+NkRtgvYlo2smTIyBNui0f1kdD
C9oLblU4913WmL4fTxkFjRChLeKaHDSaZL1q339TILfj6PzH/9ioNNSjdt0B
OuzNmSKQNWlIsCxUFXyngOv8ax/5EQEFhV/Vz43CQNEmXIoQToU1w+OBn0Mn
4e2GDaIRGmzEmyIV+wqfC7kNx7cEhnXAZG7idcf4ZoiazvJqaCaCiHLUI47a
LCwZx/wcMekBD213ScGyH4j3zK5U4yIG6nkm4Go03wPi2/7HwXmHU/2/f5wQ
iiQjIaVSykiFfFRelEIqlFCZKULKSkbKKHuUJIWsjGQ3ZOS2Qvbe8+A4nOEs
nHOkfuf7+9PlD+f9ej3v5/14XN7Xwd9LMmSihiIUKTPRD94aqYLiBkwkUubi
+jqcjmzaJspZavVg8W9jz6boKjBbu6OwJY2IDr4t7/Vke6M43fmUp9UaKmia
yFm7sIIspfpc/P0p6FV6tICUKxUELih/fmC3AIUY83s6WVRUVpQaZ8/eO1fk
R8Z4mzCwL0zMWyWQAPvkTU/zOBBBnuL5vX90HvJb3weIXWbzpaBLb4XfNERd
VeksyGhGbaTt367fngbtiNdVOYl05Cg2v8fMdhC6sbcUL6dRgPmi9JwpbQLd
8mT+lRAnI8Wpqn6HsBYQDh7THYihIHPyZ664cQYyydhnfTyV3Yf3u2PPehLh
SMcbVgeWCOt3BXNaUohwck9vYzFuDY29NHpKmaOAre2F9rkRKpzok+q1HSXC
ttrZZcI0228skvNs6imIOTYjMSeNg+7/Mt29zs7DhVdS54y1qHDKoVIuJZ2J
5p4BwUd2GiaGOd6/6GaiRPesVrk+KhgajcvHBK8hb8Lkbjd2jnVKrG++Hl8G
PtZIjE8OBRbcpU1NXdbQIU4Y26+4AKV2ewMpnRT4Of7noU0XFT14Znr/8KZx
MLn3vnV8Kxlpt9/LZTpRYMoj5mswPwHIC5tTJahUCDj7THn1F5s7dtPOWN0k
wb37HzI1yuYgXKY4YEl2CKbCVUKHTo8AH+98n8NrJor9K+mVkjoONvG6+wYs
JsBFhnTZtImKRjZLjB1oWIJd9vGP5v3pKI3fKCS6nAJ13HXbNv0loLvpiRws
tSXYaNfViWV7+f03VrbYs8vQGvxp4MwUu6d5Dt0ePTUJNeOpfXaPKUiS/Fqw
upKONLbdvNQ4MgittL7U6hN9kPK1R2IHm/O9kbHgI1U2B3HI7Tjo2Q1uV40T
pRfmED/ZKDdlKwVlrAlazuuPgPYDrsP+AlRUd3yG++VIA+gdPJo+ZrmKqKKy
l//KsxBNkJqg7DcMlZJqPyi0X7BosqCkKoQBsV3mwbuBgm6a3TqXnUhDM19u
cJrWTqKn8zVyD/OYqEj8+eNUZypsLrsqfCeXCIn3lfn/62Dz08TfQ5rxROgJ
GAjBqC7A0khBsRebGwKK9Wukz84A0ry5Zen5ErxO8tfxZfOfepp8enHPNGi8
6nPLJ+WgAFdXsbXKPsiNWoqnH2ciYdxFRJPpg+N8rvGEODJYSH6K5DBbRmn/
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
itm+KlBNnqiPXFHGYk70foXBmKv/0R93Jg==
            "], CompressedData["
1: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

            "]}], "NeighborsNumber" -> 2, 
         "DistributionData" -> {NormalDistribution, 0.13594235191862009`}, 
         "TrainingOutput" -> CompressedData["
1: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
vT4xtiwKp5b079qBcm1N+BdryJbJ
          "], "DistributionSmoothing" -> 0.5, "Processor" -> 
         MachineLearning`MLProcessor[
          "FirstValues", <|
           "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, "Key" -> 
            "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> 
            False, "Missing" -> "Allowed"|>], "Calibrator" -> None, "Method" -> 
         "NearestNeighbors", "PostProcessor" -> 
         MachineLearning`MLProcessor["Identity"], 
         "Options" -> <|
          "NeighborsNumber" -> <|"Value" -> 2, "Options" -> <||>|>, 
           "DistributionSmoothing" -> <|"Value" -> 0.5, "Options" -> <||>|>, 
           "NearestMethod" -> <|"Value" -> "Scan", "Options" -> <||>|>|>|>, 
       "TrainingInformation" -> <|
        "Reporting" -> None, "TrainingFunction" -> Predict, "EMIterations" -> 
         Missing["KeyAbsent", "EMIterations"], "ProcessorEntropyShift" -> 
         1.1315338076510881`, "PreprocessingTime" -> 
         0.232548`5.818057602264178, "LossName" -> "StandardDeviation", 
         "BestModelInformation" -> 
         Dataset[<|
           "MeanCrossEntropy" -> 
            Around[0.6010928344616291, 0.10262609002406797`], 
            "StandardDeviation" -> 
            Around[0.6819812184680533, 0.0960616375264216], "EvaluationTime" -> 
            0.000015319500742540132`, "TestSize" -> 360, "ModelMemory" -> 
            250472., "ModelUtility" -> -0.3382139985497399, "Round" -> 4, 
            "Iteration" -> 5, "TimeStamp" -> 
            3.899873654315649`16.34362552641149*^9, "TrainingSize" -> 718, 
            "TrainingTime" -> 0.019952623149688785`, "TrainingMemory" -> 
            3.105653333333333*^6, "ExperimentCount" -> 2, 
            "MeanCrossEntropyHistory" -> {
              Around[0.5547151430892348, 0.11623721752356975`], 
              Around[0.6474705258340235, 0.14857505313245098`]}, 
            "StandardDeviationHistory" -> {
              Around[0.7127201764963833, 0.12392306514392927`], 
              Around[0.6512422604397232, 0.134095171116258]}, 
            "IterationHistory" -> {4, 5}, 
            "TimeStampHistory" -> {
             3.8998736542903`16.343625526408665*^9, 
              3.899873654315649`16.34362552641149*^9}, 
            "Configuration" -> {
             "NearestNeighbors", "NeighborsNumber" -> Automatic, 
              "DistributionSmoothing" -> 0.5, "NearestMethod" -> Automatic}|>, 
           TypeSystem`Assoc[
            TypeSystem`Atom[String], TypeSystem`AnyType, 18], <||>], 
         "Configurations" -> 
         Dataset[<|<|
             "Value" -> "NearestNeighbors", 
              "Options" -> <|
               "NeighborsNumber" -> <|"Value" -> Automatic|>, 
                "DistributionSmoothing" -> <|"Value" -> 0.5|>, 
                "NearestMethod" -> <|"Value" -> Automatic|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[1.7445555388730765`, 0.05838169582204861], 
                 "StandardDeviation" -> 
                 Around[1.3596907757529535`, 0.1492099197273478], 
                 "EvaluationTime" -> 0.000012589254117941663`, "TestSize" -> 
                 100, "ModelMemory" -> 9256, 
                 "ModelUtility" -> -1.0221247913496532`, "Round" -> 1, 
                 "Iteration" -> 1, "TimeStamp" -> 
                 3.899873654255489`16.34362552640479*^9, "TrainingSize" -> 9, 
                 "TrainingTime" -> 0.005011872336272719, "TrainingMemory" -> 
                 78744, "ExperimentCount" -> 1, 
                 "MeanCrossEntropyHistory" -> {
                   Around[1.7445555388730765`, 0.0412820930129409]}, 
                 "StandardDeviationHistory" -> {
                   Around[1.3596907757529535`, 0.10550734605950803`]}, 
                 "IterationHistory" -> {1}, 
                 "TimeStampHistory" -> {
                  3.899873654255489`16.34362552640479*^9}|>, <|
                "MeanCrossEntropy" -> 
                 Around[0.9939604331657146, 0.11847947149246746`], 
                 "StandardDeviation" -> 
                 Around[0.7877040877862165, 0.19879553045507775`], 
                 "EvaluationTime" -> 0.00001, "TestSize" -> 100, 
                 "ModelMemory" -> 20008, 
                 "ModelUtility" -> -0.5037678425079507, "Round" -> 2, 
                 "Iteration" -> 2, "TimeStamp" -> 
                 3.899873654265691`16.34362552640593*^9, "TrainingSize" -> 40,
                  "TrainingTime" -> 0.00630957344480193, "TrainingMemory" -> 
                 127080, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[0.9939604331657146, 0.08377763772372197]}, 
                 "StandardDeviationHistory" -> {
                   Around[0.7877040877862165, 0.1405696676543623]}, 
                 "IterationHistory" -> {2}, 
                 "TimeStampHistory" -> {
                  3.899873654265691`16.34362552640593*^9}|>, <|
                "MeanCrossEntropy" -> 
                 Around[0.9237837560445621, 0.2152296466865349], 
                 "StandardDeviation" -> 
                 Around[0.7181382835114438, 0.15533826612441895`], 
                 "EvaluationTime" -> 0.000011294627058970831`, "TestSize" -> 
                 200, "ModelMemory" -> 59368, 
                 "ModelUtility" -> -0.4044216929851917, "Round" -> 3, 
                 "Iteration" -> 3, "TimeStamp" -> 
                 3.899873654276094`16.343625526407088*^9, "TrainingSize" -> 
                 150, "TrainingTime" -> 0.007943282347242814, 
                 "TrainingMemory" -> 613368, "ExperimentCount" -> 1, 
                 "MeanCrossEntropyHistory" -> {
                   Around[0.9237837560445621, 0.15219034268443357`]}, 
                 "StandardDeviationHistory" -> {
                   Around[0.7181382835114438, 0.10984074135433719`]}, 
                 "IterationHistory" -> {3}, 
                 "TimeStampHistory" -> {
                  3.899873654276094`16.343625526407088*^9}|>, <|
                "MeanCrossEntropy" -> 
                 Around[0.6010928344616291, 0.10262609002406797`], 
                 "StandardDeviation" -> 
                 Around[0.6819812184680533, 0.0960616375264216], 
                 "EvaluationTime" -> 0.000015319500742540132`, "TestSize" -> 
                 360, "ModelMemory" -> 250472., 
                 "ModelUtility" -> -0.3382139985497399, "Round" -> 4, 
                 "Iteration" -> 5, "TimeStamp" -> 
                 3.899873654315649`16.34362552641149*^9, "TrainingSize" -> 
                 718, "TrainingTime" -> 0.019952623149688785`, 
                 "TrainingMemory" -> 3.105653333333333*^6, "ExperimentCount" -> 
                 2, "MeanCrossEntropyHistory" -> {
                   Around[0.5547151430892348, 0.11623721752356975`], 
                   Around[0.6474705258340235, 0.14857505313245098`]}, 
                 "StandardDeviationHistory" -> {
                   Around[0.7127201764963833, 0.12392306514392927`], 
                   Around[0.6512422604397232, 0.134095171116258]}, 
                 "IterationHistory" -> {4, 5}, 
                 "TimeStampHistory" -> {
                  3.8998736542903`16.343625526408665*^9, 
                   3.899873654315649`16.34362552641149*^9}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 0.000015319500742540132`, "ModelMemory" -> 
                250472., "StandardDeviation" -> 
                Around[0.6819812184680533, 0.0960616375264216], 
                "TrainingMemory" -> 3.105653333333333*^6, "TrainingTime" -> 
                0.029966545857749778`|>, "Index" -> 1|>|>, 
           TypeSystem`Assoc[
            TypeSystem`Struct[{"Value", "Options"}, {
              TypeSystem`Atom[String], 
              TypeSystem`Assoc[
               TypeSystem`Atom[String], 
               TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 3]}], 
            
            TypeSystem`Struct[{
             "Experiments", "PredictedPerformances", "Index"}, {
              TypeSystem`Vector[
               
               TypeSystem`Struct[{
                "MeanCrossEntropy", "StandardDeviation", "EvaluationTime", 
                 "TestSize", "ModelMemory", "ModelUtility", "Round", 
                 "Iteration", "TimeStamp", "TrainingSize", "TrainingTime", 
                 "TrainingMemory", "ExperimentCount", 
                 "MeanCrossEntropyHistory", "StandardDeviationHistory", 
                 "IterationHistory", "TimeStampHistory"}, {
                TypeSystem`AnyType, TypeSystem`AnyType, 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
                 
                 TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
                 
                 TypeSystem`Vector[
                  TypeSystem`Atom[Integer], TypeSystem`AnyLength], 
                 TypeSystem`Vector[
                  TypeSystem`Atom[Real], TypeSystem`AnyLength]}], 4], 
              
              TypeSystem`Struct[{
               "EvaluationTime", "ModelMemory", "StandardDeviation", 
                "TrainingMemory", "TrainingTime"}, {
                TypeSystem`Atom[Real], 
                TypeSystem`Atom[Real], TypeSystem`AnyType, 
                TypeSystem`Atom[Real], 
                TypeSystem`Atom[Real]}], 
              TypeSystem`Atom[Integer]}], 1], <||>], 
         "TrainingSizes" -> {9, 40, 150, 718}, "MaxTrainingSize" -> 898, 
         "PreprocessorEvaluationTime" -> 5.4921875*^-6, "PreprocessorMemory" -> 
         77040, "InputDimension" -> 41, "OutputDimension" -> 1, 
         "BaselineLogProbability" -> -1.4189385332046727`, "VariableBudget" -> 
         True, "CheckpointingInfo" -> <|"Checkpointing" -> False|>, 
         "UserStop" -> False, "NaturalStop" -> True, "AbortStop" -> False, 
         "LastReportingTime" -> 3.89987365425531`16.343625526404768*^9, 
         "RoundPartitioning" -> 
         Dataset[{<|
            "TrainingSizes" -> 9, "TimeBudgets" -> 0.000386091374154917, 
             "ElapsedTimes" -> 0.009589, "ExperimentCounts" -> 1|>, <|
            "TrainingSizes" -> 40, "TimeBudgets" -> 0.0019304568707745845`, 
             "ElapsedTimes" -> 0.009799, "ExperimentCounts" -> 1|>, <|
            "TrainingSizes" -> 150, "TimeBudgets" -> 0.009652284353872926, 
             "ElapsedTimes" -> 0.013589, "ExperimentCounts" -> 1|>, <|
            "TrainingSizes" -> 718, "TimeBudgets" -> 0.04826142176936461, 
             "ElapsedTimes" -> 0.050454, "ExperimentCounts" -> 2|>}, 
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
              "ExperimentCounts"}, {
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer]}], 4], <||>]|>, "AnomalyDetector" -> 
       None, "Log" -> <|
        "Example" -> 
         MachineLearning`MLDataset[<|
           "f1" -> <|
             "Type" -> "NumericalVector", "Weight" -> 1, 
              "Values" -> CompressedData["
1:eJxTTMoPSmViYGBgBGJNIK7Ist9ntWGCvemcK7WVOVPtDzoe9X9/dqb9dtXC
4F/v5thzyYT8+XJvjr1GearBxM2z7I8BZTNtZ9hfKk1UyXWfZh/BJmy5mnGq
fbrZ4pd7zKbYcytnWm8Sm2I/71b/ej6dKfaHPe9OPx42xR4k6nJmin2u64WC
oO9T7U+E/Pv14dIMe/loQZM5V+baN7VO2Chit8hes7Y8zXjWMvtU/b5V//+t
sb8360JhKMNGqDkb7BVTdFr71622///n25N1PMvsT8WIOZ+MXmwf/P3pRlHH
xfa225QyLFYutr89catCktpi+19vjgFtWmC/UdB0/t0Zs+zrKnOALphkX5qk
Xpak3ma/XSXP6/7cSnugZ641dWTaT92l37+WI8r+WkvfaiYOD3vTBQ8WPt1g
ZK8C9r+UPQMUdE/arlYS89UOxgcALneWhA==
               "], "ID" -> 6515543852639189880|>|>, <|
           "ExampleNumber" -> 1, "ExampleWeights" -> 1, "LogDensityRatios" -> 
            0, "RawExample" -> False|>], "TrainingTime" -> 0.371797, 
         "MaxTrainingMemory" -> 3850040, "DataMemory" -> 510304, 
         "FunctionMemory" -> 395720, "LanguageVersion" -> {13.2, 1}, "Date" -> 
         DateObject[{2023, 8, 1, 10, 14, 14.353265`7.909525688515608}, 
           "Instant", "Gregorian", -4.], "ProcessorCount" -> 4, 
         "ProcessorType" -> "x86-64", "OperatingSystem" -> "MacOSX", 
         "SystemWordLength" -> 64, "Evaluations" -> {}|>|>], 
    "TestSet" -> <|"Input" -> CompressedData["
1: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
4It5p0s+EKPr0/bL1Y6C4i5uCKdp82Q5wPVz/cSlfedgs/y3oe6YJcx3Nn3k
/G4OX3q7IVbT9XUh9qpP8xevJgrucayNmlTBzd9JsR76Mn95JNgZkceXVWLe
P9lWNLESTFYmPe6ClcgKSzhQaluJSeMi4SllMo7Ox6scOlOFjJ1fc9W1qrHB
2JAo/oWWX/rEbDKTofzF/ImetuP51WBUfvdrw40qjLr1tlcRyPBXEzY79IYE
H7Y4LmetCvyR3sd/jVwO+UfON/o5CPiW/VGN61MJ9IUo73+MFGJcoWayYSoX
Oxy3eMyyZWP9q1cXmNMyILa+dm3/dCoSZSsKX+Qk4uKxcj/mqFj08N541kQ7
z1V6Pu6m/oyATauPjH9oOA626hfzDIViyHzd7FhkEA6XeImsO+0PwR+9d5ZT
vCG3Qy3vLLvnkp4rLmXMXvOzdcTeJJYGmdPW2PrOWlOYYgG333e0KsVP4Znw
LaZ5Zj2M955zYrx+6C+Pyu81uBY7K9FM3OpSd6cSD3yO9c1pVmGWl9VY2r4a
DPavzwy9osDJoH/lhGotkr0UZEIN68D+I9lV6HEdVAQYhppo++Vz1daa77R6
h7S27P4W31p8OCFck9FNQeZCRSFPahV+7+4aDc4hITXUJtGxoxx6CiadBoul
cH4S9m7f8UJ0KfCrEnpzMXwk5cD+31m41/Ja8jNzBj6YGy8PpVVJzNMvvz9+
nIQ18yXBfLQ8so0qQCE+i16yF4H0yNvaG16EIc7tqesQQnGr7uLTZblB2MO5
subylgCs+f3nQMc2X3z5zwy3F8j5wcuNv7mBi6mghueTE94/VdRN/GwLthXX
7m08chYhdDtnMEpvNwKhXDio6qseVmzefLlJ/TDE6Phvf7Q//dr40Eky0gMS
h37lVMJhcNK6nJeWRwo0yta9q0T0yUPFVWlVuOegbiI5Wo01i8e4Iu5Q4Nvw
wyxxmoKy/oLBeoYabJGO1qizpuDeO83TP32rcVWES0WssgqrrR1RJEam7Vc8
XY20fXG88v2HjGgizENG7T5fIsDM45Mf5/YyaPMd6BirKV6yU4Bx1c67fjy5
mLHassbCKAtfdMX4ub+kQ3V2MZNvKAX14U9WVuxNwCJZeUevaQy0hjN3P9wc
BV9n9YvvhCLA2lgZyWQdhtOm/zkIgWTF+9RnSoE4tmA/f2rMDzpvo7dQGryx
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
g2MrJh5ZHouHjOy6kKGGRBypFVisFE5FrrLtqlunMlHnQpTZo5MLr4NOx+m3
FyDZJWXSK68IdvdqDys9IoC3+U7iwQkislxOGlnco6zLewPTB48XQn59wL2I
tCzwb1/8bRCSgKBtApaveEMxf0sj2aPaHX1cEfTSJ6yRvjvdfvdlHTCE9ue9
E5PDBiqeA7MJs6hgDR9Y5ECzm8j9N46h8dcu7P2agyuqUTG807ngq9T8tVif
D7pMvxvfbQrhGc44y95fjPS3UnWC0UQEamhuvWFeAr1Stl/SwSU48+4ar8G5
EmR/eB3ncpOIGpcHJ+aHCXiX9fiYXVgx3gxV3ZfVKERYUBbDO9E8BDN7uL1O
zYCt/l0/XpZkjOyLMzx8JB4TcVId38/FwIznE+HBlmj4ecdGlibGoH+TWVnt
wzgk6rquv7EiEbzb7Ld0kJMRYvTp41x6Gu7sULM//CsTXAlct6WIueBJPyke
qJyPR+kFt8voCrCq57Fr5uZ86O9s/6BAzoLi3ar9/CnJYCrk2LAUGgXmzRKF
tCcClv1xRrQbc4n1ohlkBy7fmYrVxJfraYLvaa5AUsZefVZAFAJUPI7f+xuf
fS7/973rZfmzkd/78rBuv2wCLTdlHzWQWrlrRQFMJfUDJB0L8bA7lSHYrxj2
US3JDeco+89Jot1bSt2YpcLdvqBZioZrm+bmlUoRez+oe/JdCdrMul927ynB
zX3dh0vrCFg3QFdj4l2EWppUutXC+RgQ7BlSNM5a5qeA9xGf9ZGoBJjZzEg2
9saisnn1cb+haNypf3A7hDkG0keb+d5xxOFIad125hfxuEy/WKbNmwSqG5T8
/cJJe5Elu3RcmDqirduehfpVawbLLuZCd39g26QmpY7fKCpbtC0X2rJXOZl1
M9AanWqgwZiEEKFzEpydlPy01dho5VF/hD/sWKO1zwmHdh5RGQowA1eVKftR
Dk2IaLgvzuTLQeBTXauo2HnEn44W2RhwHP4RfyJ15G8cldakVW5/kI+NG+23
WUbm4U1XyKlKSl6SycvJsNG+EPyqVabP24qx8fJBeQM3InqqskMnAkpwXWI/
1vSU4LOkZypTRgkMZLil+LhKEF3v8kH4AhEZKoGNj98U44xBXYBuUyHsN0iY
Gpbk4d6z/b0BwZn4razGcO93Mn5ZGom/mo5HVLiOP6NFLNrmgwLPz0djZObI
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
53qe63Ue13Wdc17julv5Y3EwNbcltDoeZUuZl/sGE3Fzz+TrsTfJIHAes63Y
k4bMXb1V030ZuEqxnw0ho3DeCxdyEMYoKH1tZzYsaxJOpJDXAfvA7X7uC4mY
KJqx0P4Uhi9zr3/gpC8ibwycs+51wMccHWE2BRNQfSC5Nf+4iM0U/yijR33d
a4e0E1B2rw2StzsEMe2rVkd9/30/c3JtLm3AchGsXPKmBB4TIE2i9eR1JqLx
slr9d7VSPGTZ8dDTvQLdbpee+65U4dnLtPHA4FrkxnM5PCog4f09auFtKyQc
UOQ2zN5YB6O7vf0FxeT4UnxVWFKwFrrPnI/F9VaCVOnHnHyiFHfLDx/t+V6E
Vk42qdz4XPiPHMuiX5uOT1wf6p4nJGGdspJOOE88LvJpHY6Ji4KkvtuH+1Ph
SEltetr9JhRSVB8ddx4IgXDuUtfd4SCkSIrpCAv8o2+sWJmcA4NQnfc8/ZNc
EPKPTc5GzAZgeZpeJTjTZxXHFXfYzAql2+ywcmD+8tHdpjAPkx/8OqoLx56R
EJqjGsjSkvr8YloJb2w7KvrOykKX0i4GrSR6KbttgjhD6f/vPq7Tpgdf9sgS
yHnzuQ+Tj4qh69xfu7GrBDz25Wu6p8shvhzqxNlUjQOLnJGXF2vx4+C0xHGW
OvTkSf1wvl0HOXrr7dbTdTiuNfZsC91VcOaLlGgE1GH9tSN8yqokjFp5ayVu
qsYpoU52haNlYM5puZvWQICCvDDPrqg8/F73zNfpVDr6tdqO9GQkItv2e6zd
xmis3yhtvn9TKNrf19azDQaCENPoQ8PljztnOBOGQr2QqCqa/3LODdK01KI1
Ai7QnRTcy0lwhrXGsZpeI2dE7TcmyYw44V3byxuhFx0hPeAfLphgg73Zn8sX
zEwgdudGRry3NlooeEo4RuElIejD32Bw/t//8/zv93/aGVf1hHCKgnccN0TO
F8o5KoDvTlGOGFURSOKdYQ4cxZj0NLiT9JaIzv3sutOq5Dzc6QG1VmAlkrNj
cjIFqiGrcu5WYmQttlSWZz0OIMFhtojrwgQJsotMpqZfSRi7yjE+FE3CRa4K
OvHTteCenLKL4quCSH9rWFJvKXb9lFWev0fAptM6YoeC8nEw2LNi/H4Glug5
DFxGknHLkXWibn8CStwbwuojoqFtV5hmUhoB51vvf9AfDwP1fSL7MY9gSEYv
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
       "], "Output" -> CompressedData["
1:eJxFVCtwWzEQdGmwO9bT78lGCQ4J8cyxBJQkJCQkmWlJQROaYmPjhrbYBSUm
IS1tsLFxQhOc97R7J8280Ug63e3urd785tvF5w+TyeT38E03p/v76UL61fP5
Ni/k6Gr99/VwLts8bJzM5e1w3HCcgyA+yq/b5cHuZ5SX8zEyyPd6EGTYHE4C
8wU5G6I3p0HqtY2Xhx/j8Mi/9VLDd17+vY4FvFzUgzZ/qcMzv8b1UtPue5nU
0cvT/3FkrqMsK5CGR+tqHeBqs9bTOuDpmaetgbuztcajjifPj+Q/5XmRulwV
5HsscjyOP8XqVtmvFF82ftA9g9+nAr0uC/Mq/8w+JOJLclcLJeobqU+knpF5
O+KO1IH5d4V4Cu/p3NuMOpk+yMSTiDsyT6B+EXyPg9VXf0CvwHxt1j4iX7B8
uB/Mp8g/Z3wxf0CPSFzRfABd1J+e+bX/HfF0tga/jvUd76luLQ54Zrzv7Bz1
OvqP7+Wr9j1b/+CnwP1AvzjWnzHPjPo7e5eIUz82X2pdPa/tXDvq61jXEXfb
xz1H/bL5EbiSvX/9H+Bc+5uMp/oKekXjpX1Qvvoewau9J+Bt/wk91/eqa70P
vyby4TtbFvT3mvM+sT/J+Ch+6Nz8CB7tv6a+Aa5AfbzxUbyKH7q3/x308ub7
d03FQGQ=
       "]|>, "Predictions" -> CompressedData["
1:eJxTTMoPSmVkYGBYD8Tz/boOfX2h4KDu3tJ/aKuiw8vzPd807sjB6Yhz7xYV
2HI4HMo9lpKWJuPQ72/293+9hMObubNE1rlLw+kXnDkzZkpKOtRrsGnG9Is7
nOhddL9KRNLhzOZZnzRixBzi1tgU2HaJOwgF33gZaCEO17ci+kXgDjk+B4N3
oXeqRMQdslYw6hobczucacxa7/5Q3CHuZ+QuuVZRh00rbWP7D/E7bD298quG
jKIDn3uvLZe4ggNr5VWgPdJw+2DmwvSj82Hugbk3wOJ94I55EnB/eZx+ynNd
WRzuHph+mLufh3U+AonD3A0T7yh8oW9szAkXF1tuyXt9sZDDe7VdBbanFDFo
WYvG64s3KDps4/nqv0NOBoNvs+ToDjlWWQfjD7sOftWQc1A8v6z19UVZOB1Z
fCJ4xzxpDH+gxwshGuZ+WLjC7EenpxzZYM91XQpuL3q8w/hO3y6Wiegh3AGL
F1j8o8vDaFj4w9Sjxyc6H5ZePV/pVYvkKTo4rHj9KXAHFzzdopsP0x92f+b1
xQWScHeg07+cJcpE1iH4Au9OT5w5kwsj3d5ZMav59UWEPyw7TxgabxZDpFuo
f2H+goUvjIa5c2Xl5+8aMbJwc2D2w/j/WDcwMTBIOki/8wKGvxjcPKZ/dqzX
lRHuhMnD/AmTh6VjGA3zBzofRsPcDwtXdPceaXDKs+WShqc3Pt0H1xZ/kMQZ
b+i0Wt6F3kNfxXDGD8x/6O6C0S6Zzy8vLhCGh++qTypvAy0kHXZIfwK6QwHD
vQf/1Yusa1eA24NejqGnO/TyTc1mgdfDKgmM/AJTr3f75qXFBQj9sHSBXv7A
1CXovn8EKq8AMYBkDg==
     "], "Distributions" -> {
      NormalDistribution[8.454999999411767, 0.2434082222345623], 
      NormalDistribution[8.855000004670343, 0.2889882949505319], 
      NormalDistribution[7.7150000117726245`, 0.6106124420956799], 
      NormalDistribution[7.7150000117726245`, 0.6106124420956799], 
      NormalDistribution[3.029999993241102, 0.26934652496784683`], 
      NormalDistribution[7.099999975787286, 0.24768440339468242`], 
      NormalDistribution[6.12499995845782, 0.26238820199823], 
      NormalDistribution[6.82000000184733, 0.4424336656757385], 
      NormalDistribution[6.82000000184733, 0.4424336656757385], 
      NormalDistribution[6.274999982446822, 0.35596945224396087`], 
      NormalDistribution[5.8900000009545, 0.522060788265073], 
      NormalDistribution[6.269999975487231, 0.3602049264134639], 
      NormalDistribution[5.589999952976495, 0.24768439344661022`], 
      NormalDistribution[5.884999993994908, 0.24504603411197062`], 
      NormalDistribution[5.8049999750408166`, 0.31630300363419495`], 
      NormalDistribution[6.82000000184733, 0.4424336656757385], 
      NormalDistribution[3.7649999999079746`, 0.8496553203330718], 
      NormalDistribution[5.769999926323678, 0.29214305816413716`], 
      NormalDistribution[3.3999999538546506`, 0.46189553916826726`], 
      NormalDistribution[5.970000019908593, 0.6585951416346856], 
      NormalDistribution[5.380000030271132, 0.3775546141455511], 
      NormalDistribution[3.9700000080531135`, 0.3602050050792783], 
      NormalDistribution[8.55499999711706, 0.25149068151983417`], 
      NormalDistribution[8.04500000333385, 0.3315331496867821], 
      NormalDistribution[6.769999978451101, 0.46189567519806835`], 
      NormalDistribution[6.269999975487231, 0.3602049264134639], 
      NormalDistribution[6.82000000184733, 0.4424336656757385], 
      NormalDistribution[5.970000019908593, 0.6585951416346856], 
      NormalDistribution[6.82000000184733, 0.4424336656757385], 
      NormalDistribution[5.970000019908593, 0.6585951416346856], 
      NormalDistribution[5.589999952976495, 0.24768439344661022`], 
      NormalDistribution[6.274999982446822, 0.35596945224396087`], 
      NormalDistribution[6.155000000215367, 0.2514906764679924], 
      NormalDistribution[6.12499995845782, 0.26238820199823], 
      NormalDistribution[5.785000039601819, 0.3315331451578543], 
      NormalDistribution[5.769999926323678, 0.29214305816413716`], 
      NormalDistribution[6.82000000184733, 0.4424336656757385], 
      NormalDistribution[5.8049999750408166`, 0.31630300363419495`], 
      NormalDistribution[5.770000018723045, 0.3435320040395228], 
      NormalDistribution[3.7649999999079746`, 0.8496553203330718], 
      NormalDistribution[5.8049999750408166`, 0.31630300363419495`], 
      NormalDistribution[3.149999975472557, 0.24443314864970453`], 
      NormalDistribution[3.7649999999079746`, 0.8496553203330718], 
      NormalDistribution[4.6600000444830325`, 0.24768441334276578`], 
      NormalDistribution[8.895000002597468, 0.26238819202071373`], 
      NormalDistribution[8.895000002597468, 0.26692239867258793`], 
      NormalDistribution[8.895000002597468, 0.26692239867258793`], 
      NormalDistribution[8.845000013851001, 0.2953769875816854], 
      NormalDistribution[7.029999970752376, 0.33548112904636107`], 
      NormalDistribution[8.845000013851001, 0.2953769875816854], 
      NormalDistribution[7.029999970752376, 0.33548112904636107`], 
      NormalDistribution[7.25500000673588, 0.4376234093061321], 
      NormalDistribution[7.5399999876354284`, 0.6053216142159498], 
      NormalDistribution[7.455000007921428, 0.6963099627606988], 
      NormalDistribution[7.455000007921428, 0.6963099627606988], 
      NormalDistribution[6.905000027761013, 0.3644825593122995], 
      NormalDistribution[6.274999982446822, 0.35596945224396087`], 
      NormalDistribution[6.155000000215367, 0.2772139668678542], 
      NormalDistribution[6.82000000184733, 0.4424336656757385], 
      NormalDistribution[6.82000000184733, 0.4424336656757385], 
      NormalDistribution[6.82000000184733, 0.4424336656757385], 
      NormalDistribution[6.82000000184733, 0.4424336656757385], 
      NormalDistribution[6.82000000184733, 0.4424336656757385], 
      NormalDistribution[6.82000000184733, 0.4424336656757385], 
      NormalDistribution[5.8049999750408166`, 0.31630300363419495`], 
      NormalDistribution[8.55499999711706, 0.25149068151983417`], 
      NormalDistribution[7.029999970752376, 0.33548112904636107`], 
      NormalDistribution[7.029999970752376, 0.33548112904636107`], 
      NormalDistribution[7.029999970752376, 0.33548112904636107`], 
      NormalDistribution[6.7100000335350565`, 0.24768439344661022`], 
      NormalDistribution[6.905000027761013, 0.3644825593122995], 
      NormalDistribution[6.82000000184733, 0.4424336656757385], 
      NormalDistribution[6.274999982446822, 0.35596945224396087`], 
      NormalDistribution[6.82000000184733, 0.4424336656757385], 
      NormalDistribution[6.044999939503727, 0.2434082224718165], 
      NormalDistribution[6.82000000184733, 0.4424336656757385], 
      NormalDistribution[6.269999975487231, 0.3602049264134639], 
      NormalDistribution[5.884999993994908, 0.24504603411197062`], 
      NormalDistribution[6.044999939503727, 0.2434082224718165], 
      NormalDistribution[6.82000000184733, 0.4424336656757385], 
      NormalDistribution[6.82000000184733, 0.4424336656757385], 
      NormalDistribution[6.12499995845782, 0.26238820199823], 
      NormalDistribution[6.269999975487231, 0.3602049264134639], 
      NormalDistribution[6.269999975487231, 0.3602049264134639], 
      NormalDistribution[6.82000000184733, 0.4424336656757385], 
      NormalDistribution[6.269999975487231, 0.3602049264134639], 
      NormalDistribution[6.82000000184733, 0.4424336656757385], 
      NormalDistribution[8.855000004670343, 0.2889882949505319], 
      NormalDistribution[8.715000009037924, 0.40005945835835305`], 
      NormalDistribution[3.3400000551382902`, 0.31264610371660106`], 
      NormalDistribution[7.7150000117726245`, 0.6106124420956799], 
      NormalDistribution[6.82000000184733, 0.4424336656757385], 
      NormalDistribution[6.82000000184733, 0.4424336656757385], 
      NormalDistribution[6.269999975487231, 0.3602049264134639], 
      NormalDistribution[6.360000008360506, 0.29214305816413716`], 
      NormalDistribution[6.044999939503727, 0.2434082224718165], 
      NormalDistribution[6.044999939503727, 0.2434082224718165], 
      NormalDistribution[6.044999939503727, 0.2434082224718165], 
      NormalDistribution[6.169999928694773, 0.2800253982317095], 
      NormalDistribution[6.044999939503727, 0.2434082224718165], 
      NormalDistribution[3.324999941860149, 0.5374453331722744], 
      NormalDistribution[5.8049999750408166`, 0.31630300363419495`], 
      NormalDistribution[6.82000000184733, 0.4424336656757385], 
      NormalDistribution[6.204999977411912, 0.41862584122568947`], 
      NormalDistribution[6.82000000184733, 0.4424336656757385], 
      NormalDistribution[5.674999978890178, 0.3644825593122995], 
      NormalDistribution[5.970000019908593, 0.6585951416346856], 
      NormalDistribution[5.884999993994908, 0.24504603411197062`], 
      NormalDistribution[6.12499995845782, 0.26238820199823], 
      NormalDistribution[8.55499999711706, 0.25149068151983417`], 
      NormalDistribution[8.55499999711706, 0.25149068151983417`], 
      NormalDistribution[7.7150000117726245`, 0.6106124420956799], 
      NormalDistribution[7.340000032649564, 0.36020488708056225`], 
      NormalDistribution[6.82000000184733, 0.4424336656757385], 
      NormalDistribution[6.169999928694773, 0.2800253982317095], 
      NormalDistribution[6.82000000184733, 0.4424336656757385], 
      NormalDistribution[6.250000040048233, 0.29868752725275166`], 
      NormalDistribution[5.710000027607317, 0.3954923941360835], 
      NormalDistribution[6.12499995845782, 0.26238820199823], 
      NormalDistribution[6.034999925584545, 0.28292677333739624`], 
      NormalDistribution[6.044999939503727, 0.2434082224718165], 
      NormalDistribution[5.710000027607317, 0.3954923941360835], 
      NormalDistribution[6.269999975487231, 0.3602049264134639], 
      NormalDistribution[6.034999925584545, 0.28292677333739624`], 
      NormalDistribution[5.769999926323678, 0.29214305816413716`], 
      NormalDistribution[5.769999926323678, 0.29214305816413716`], 
      NormalDistribution[5.8049999750408166`, 0.31630300363419495`], 
      NormalDistribution[5.769999926323678, 0.29214305816413716`], 
      NormalDistribution[5.8049999750408166`, 0.31630300363419495`], 
      NormalDistribution[5.8049999750408166`, 0.31630300363419495`], 
      NormalDistribution[5.970000019908593, 0.6585951416346856], 
      NormalDistribution[8.715000009037924, 0.40005945835835305`], 
      NormalDistribution[8.55499999711706, 0.25149068151983417`], 
      NormalDistribution[7.7150000117726245`, 0.6106124420956799], 
      NormalDistribution[6.759999964531918, 0.4233370179460082], 
      NormalDistribution[6.155000000215367, 0.2772139668678542], 
      NormalDistribution[6.484999997551553, 0.3394812463378885], 
      NormalDistribution[6.269999975487231, 0.3602049264134639], 
      NormalDistribution[6.269999975487231, 0.3602049264134639], 
      NormalDistribution[6.82000000184733, 0.4424336656757385], 
      NormalDistribution[6.82000000184733, 0.4424336656757385], 
      NormalDistribution[6.82000000184733, 0.4424336656757385], 
      NormalDistribution[5.739999976965498, 0.42333697429314465`], 
      NormalDistribution[6.82000000184733, 0.4424336656757385], 
      NormalDistribution[6.82000000184733, 0.4424336656757385], 
      NormalDistribution[6.269999975487231, 0.3602049264134639], 
      NormalDistribution[6.12499995845782, 0.26238820199823], 
      NormalDistribution[5.8049999750408166`, 0.31630300363419495`], 
      NormalDistribution[5.8049999750408166`, 0.31630300363419495`], 
      NormalDistribution[5.8049999750408166`, 0.31630300363419495`], 
      NormalDistribution[4.859999953269213, 1.3159588911799929`], 
      NormalDistribution[5.884999993994908, 0.24504603411197062`], 
      NormalDistribution[6.30500002420437, 0.2669224096345034], 
      NormalDistribution[8.469999997190698, 0.2457930617743083], 
      NormalDistribution[8.55499999711706, 0.25149068151983417`], 
      NormalDistribution[7.7150000117726245`, 0.6106124420956799], 
      NormalDistribution[8.26500000059548, 0.3238017339826977], 
      NormalDistribution[6.82000000184733, 0.4424336656757385], 
      NormalDistribution[7.099999975787286, 0.24768440339468242`], 
      NormalDistribution[6.12499995845782, 0.26238820199823], 
      NormalDistribution[6.12499995845782, 0.26238820199823], 
      NormalDistribution[6.269999975487231, 0.3602049264134639], 
      NormalDistribution[6.12499995845782, 0.26238820199823], 
      NormalDistribution[6.82000000184733, 0.4424336656757385], 
      NormalDistribution[6.120000043897596, 0.24443314864970453`], 
      NormalDistribution[6.82000000184733, 0.4424336656757385], 
      NormalDistribution[5.8049999750408166`, 0.31630300363419495`], 
      NormalDistribution[6.269999975487231, 0.3602049264134639], 
      NormalDistribution[6.109999937579046, 0.3354810923232291], 
      NormalDistribution[6.269999975487231, 0.3602049264134639], 
      NormalDistribution[6.204999977411912, 0.41862584122568947`], 
      NormalDistribution[5.970000019908593, 0.6585951416346856], 
      NormalDistribution[6.82000000184733, 0.4424336656757385], 
      NormalDistribution[6.109999937579046, 0.3354810923232291], 
      NormalDistribution[6.770000024650784, 0.49167827266699293`]}, 
    "Modes" -> CompressedData["
1:eJxTTMoPSmVkYGBYD8Tz/boOfX2h4KDu3tJ/aKuiw8vzPd807sjB6Yhz7xYV
2HI4HMo9lpKWJuPQ72/293+9hMObubNE1rlLw+kXnDkzZkpKOtRrsGnG9Is7
nOhddL9KRNLhzOZZnzRixBzi1tgU2HaJOwgF33gZaCEO17ci+kXgDjk+B4N3
oXeqRMQdslYw6hobczucacxa7/5Q3CHuZ+QuuVZRh00rbWP7D/E7bD298quG
jKIDn3uvLZe4ggNr5VWgPdJw+2DmwvSj82Hugbk3wOJ94I55EnB/eZx+ynNd
WRzuHph+mLufh3U+AonD3A0T7yh8oW9szAkXF1tuyXt9sZDDe7VdBbanFDFo
WYvG64s3KDps4/nqv0NOBoNvs+ToDjlWWQfjD7sOftWQc1A8v6z19UVZOB1Z
fCJ4xzxpDH+gxwshGuZ+WLjC7EenpxzZYM91XQpuL3q8w/hO3y6Wiegh3AGL
F1j8o8vDaFj4w9Sjxyc6H5ZePV/pVYvkKTo4rHj9KXAHFzzdopsP0x92f+b1
xQWScHeg07+cJcpE1iH4Au9OT5w5kwsj3d5ZMav59UWEPyw7TxgabxZDpFuo
f2H+goUvjIa5c2Xl5+8aMbJwc2D2w/j/WDcwMTBIOki/8wKGvxjcPKZ/dqzX
lRHuhMnD/AmTh6VjGA3zBzofRsPcDwtXdPceaXDKs+WShqc3Pt0H1xZ/kMQZ
b+i0Wt6F3kNfxXDGD8x/6O6C0S6Zzy8vLhCGh++qTypvAy0kHXZIfwK6QwHD
vQf/1Yusa1eA24NejqGnO/TyTc1mgdfDKgmM/AJTr3f75qXFBQj9sHSBXv7A
1CXovn8EKq8AMYBkDg==
     "], "Weights" -> 
    SparseArray[Automatic, {175}, 1., {1, {{0, 0}, {}}, {}}], 
    "BatchEvaluationTime" -> 0.0013988457142857142`, "SingleEvaluationTime" -> 
    0.0032504375, "Version" -> {13.2, 1}|>]]], "Output",
 CellChangeTimes->{3.8998880187587433`*^9, 3.899888056065974*^9},
 CellLabel->
  "Out[617]=",ExpressionUUID->"328f9211-a24c-4fe8-8002-08afdfb3e051"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nnReport", "[", "\"\<MeanDeviation\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.899888978612514*^9, 3.899889017300747*^9}},
 CellLabel->
  "In[637]:=",ExpressionUUID->"25376930-10f4-44a5-a9b6-dac8ad8af51f"],

Cell[BoxData["0.7058857272144796`"], "Output",
 CellChangeTimes->{{3.899888990805945*^9, 3.899889023914227*^9}},
 CellLabel->
  "Out[637]=",ExpressionUUID->"fe65a43f-a6aa-4992-8831-4c97268e1444"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Optimal Transport Classifier", "Subsection",
 CellChangeTimes->{{3.899888079996306*^9, 
  3.899888085351427*^9}},ExpressionUUID->"1803d7d1-a605-4725-acfb-\
b28e74ea9597"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ot", " ", "=", " ", 
  RowBox[{"Nearest", "[", 
   RowBox[{"trainingData", ",", 
    RowBox[{"DistanceFunction", "->", "emd"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8998880867743473`*^9, 3.8998880955622673`*^9}},
 CellLabel->
  "In[618]:=",ExpressionUUID->"9866a7d8-3fe2-44f4-960b-a8ca7c7e4b0a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["NearestFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{
                Directive[
                 PointSize[0.125], 
                 RGBColor[1, 0, 0]], 
                PointBox[{0.5, 0.5}]}, {
                Directive[
                 PointSize[0.125], 
                 GrayLevel[0.5]], 
                
                PointBox[{{0.1795528351379172, 0.0994714438781299}, {
                 0.7056740672325248, 0.6072610584092579}, {0.8751907147676556,
                  0.43365086554091525`}, {0.5311259379568558, 
                 0.7402341039205544}, {0.024850489769640216`, 
                 0.2680094271842395}, {0.8535001476389303, 
                 0.09037709159382268}, {0.18825996468471073`, 
                 0.11580607373374763`}, {0.37580999850411323`, 
                 0.7473443767647248}, {0.7179416455907517, 
                 0.31385476481358254`}, {0.6087567739228883, 
                 0.045415361402344034`}}]}}, {
               Directive[
                PointSize[0.125], 
                GrayLevel[0]], 
               PointBox[{0.7056740672325248, 0.6072610584092579}], 
               AbsoluteDashing[{1, 2}], 
               
               CircleBox[{0.7056740672325248, 0.6072610584092579}, 
                0.23196283448656893`]}}, {
             Background -> GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
              ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], Frame -> True, FrameTicks -> None, 
              FrameStyle -> Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], PlotRangePadding -> 0.1}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["898", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Input dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["41", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{
                Directive[
                 PointSize[0.125], 
                 RGBColor[1, 0, 0]], 
                PointBox[{0.5, 0.5}]}, {
                Directive[
                 PointSize[0.125], 
                 GrayLevel[0.5]], 
                
                PointBox[{{0.1795528351379172, 0.0994714438781299}, {
                 0.7056740672325248, 0.6072610584092579}, {0.8751907147676556,
                  0.43365086554091525`}, {0.5311259379568558, 
                 0.7402341039205544}, {0.024850489769640216`, 
                 0.2680094271842395}, {0.8535001476389303, 
                 0.09037709159382268}, {0.18825996468471073`, 
                 0.11580607373374763`}, {0.37580999850411323`, 
                 0.7473443767647248}, {0.7179416455907517, 
                 0.31385476481358254`}, {0.6087567739228883, 
                 0.045415361402344034`}}]}}, {
               Directive[
                PointSize[0.125], 
                GrayLevel[0]], 
               PointBox[{0.7056740672325248, 0.6072610584092579}], 
               AbsoluteDashing[{1, 2}], 
               
               CircleBox[{0.7056740672325248, 0.6072610584092579}, 
                0.23196283448656893`]}}, {
             Background -> GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
              ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], Frame -> True, FrameTicks -> None, 
              FrameStyle -> Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], PlotRangePadding -> 0.1}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["898", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Input dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["41", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"scalar\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Distance function: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["emd", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  NearestFunction[
   Hold[
    Nearest[{CompressedData["
1:eJxTTMoPSmVkYGDQBOLsRTpzvL/Ptpc4wzHp3sIZ9veffzB9nTHNXuTHo1fs
slPt5977sXKi2nT7R7vF7h58O9N+Wq+dItOiufZL9DcbKa5eYP9N2uWlkt0i
+0LOkIv5Oxfbi4L1LbXf8ayQZUHDMvuJ51vVDkStsF+4SS4wY/Uq+8BZmx1t
566xD25xm7oifp39soLr3qs+rbfftPl9vEbEBvuCsiBnpZr19s/7bVpmFK21
X79aRWOp5Wp7ldvVohtyl9ufMTBKyZm8wH4m12Wm3Qsn22/7c2+Dyb4W+/cP
vvFofC+D2pNlf0hx/4NZxxPtV1//13BuS7j9fjA/0H4S2P2+9kfBfEc4vRGs
Th2DZsABIPLmcHUA3+eeVQ==
       "] -> 2.87, CompressedData["
1:eJxTTMoPSmVkYGDQBOLDehtuBNTMsV/3mH8XB8ss++N7mk548063f3d8q4PI
nqn2mSUxeaZcM+z9Z7+M/8Qw2/5mZcD3GV/m2T++c8+PJ36hPedCDf/wo4vs
UxalGn6oX2K/6IfFCYblS+115TqvqzxeZv+u4cyJacUr7KXivtUuWbPKfmmz
W++JF6vtJcV52dRT1tp/4L7VG7d1nb3t7TC2olPr7P1DGF6U7FhrH7HlpMjW
y6vtj5bODDh3ZKU9X7F8zxz/ZfZ9XxoVzcoX2L9Yd7U78OUU+yyw+zrsJ3HN
XX30V4297T1pw6WSxfZcOmYi8uyZ9peSTXM5C5PsHygwzwmLiLJv9j1fUyEc
au/0xWy3yVx/+zow39XeAsy3ty8B803t48G0qj0DDgCTh9EAZLyJ/A==
       "] -> 2.54, CompressedData["
1:eJxTTMoPSmVkYGDQBGKN9Qv3tH2aZV/z5uiuRxoz7ONF7/Ep+E6zv6D5aodd
/FT7E0sqGn26ptsn7FwuOK16lv06UZXbpdzz7G/c+fbuq8xCewvR3RpfcxfZ
V3v82Z7za7H9vmpb9ydtS+3VuW/sFDiyzD7TTtKzI2CFfUl6SPOH4FX2k+xs
9Dfrr7F/Lq9l0DplrX0U2+zb9/aus/8933qxVMt6+6X7fBd5yK+znz1VKOOB
9Br7RLC9q+zvBKl+Xpa03P6onlftbJeF9l9bned85p9qXw12d4f95cLafVp7
au17vq3QPH6p2N7ARPhLxfEM+93Xi13yIhLtjcD8CPtesHyw/SWwel97XbC4
h/0JMN/WfhJY3hiDZoACCF8ZQx4A+Ymfwg==
       "] -> 2.76, CompressedData["
1:eJxTTMoPSmVkYGDQBGIj6R3av4xn2xdJrP3vWTzDfpXYkcqA1dPsWcQiEhpZ
p9l/E5+z5t236fb3pZjmCz2cZX9Yrsv87eF59nYTb7Ossltof0LI5mHpiUX2
GlMcv5/VWGK/SXTR5ZmbltqvBpuzzL59xq1HzB0r7BfPqvz6ZNEq+w3SJ+tC
N6y2V5P9U56uutZeTN7hyBWx9fZv5Z7+TXi7zn7bXKt1NdvW2r+bHajR/G61
fYrUR+/tKavsX03zUa57ucy+WcCJQ7FlgT2PqNmuUzxT7ZeIP5NnX9Juf1I2
Y6LZ6Vr7HOEVv1zyiu2fSz74Ef0i015J6MLxZUpJ9jUyE+Jm1MfYB4obTJYP
DLcXAdvrb/8ErM7TngvMt4fTq0QadB/vNLHfD6ZV7BmgAMaHycNoANUSk0I=

       "] -> 2.64, CompressedData["
1:eJxTTMoPSmVkYGDQBOKC3+eLr+nNtr/xcNnP4qwZ9i7nHjru95lmb3+itl5w
2VT74Lu3lxe+nW6f9TV7o0bHLPsusUlxT2Tm2d+Q43uuprPQ/onWteymykX2
BjubJeNZl9jXuxset5641N7niitL7udl9hEPeDtPOKywz/hkeeGiySr736z/
29uC1ti3CejNMStbaz9B5pvCpMPr7KcpRT22z1pvf2qq6zI+jnX2VSxp4rc1
1tjrlO3I/Ddnlf2pS2smHzy5zF5kdr/vr8ML7G2Oes/bFTTV/ibY3R32TPxT
tbt9au1Xb9lxPKaj2P7phwXxatxZ9gtXfHBitE6y/8VhmHl3aYz9jgMNPjuu
htgLKR4smuLgb78ZzHex5wDz7e1XgvkmcHofmFaxZ0AD6OoAXDuY9Q==
       "] -> 2.7, CompressedData["
1:eJxTTMoPSmVkYGDQBGJhkeVci8tm2R95KdRmKzTDPrk9imu1wjT7czWmKye2
T7WvSmm4uuHodPvYmZa79Q/PspePW7UpZNk8+zN+R2rK5BbaP9Z+5V5zeJH9
Lw4B4aaMJfZKclFXt8xaau8oLiQTyLbcfvXUGOGqfSvsRcD2rLK/4b9iZSvH
Gvv3OudKuteutc96bJP88NM6e3auL/YTg9bbG047t7LReJ39BWMxvfeOa+x5
foj082xYZf8sMrpkus5y+6aThmdeXlxg3/J90Q8W66n2XXOWnLkb1G7PfKdJ
uOxllb2BBu+CY/sK7C+A3Z9qv+f3R7NDW2Kg/FB7fbB8gL308pO631+721cF
LVTRUXa23wxWZ2PfAuYbo9HK9gxQAOOjqwcAmxqQZA==
       "] -> 2.94, CompressedData["
1:eJxTTMoPSmVkYGDQBOK2Z46p/gtn2c+wP3c19t10+8Wqjaf3KE6z53vxO6Em
c6q98Qed3b4Hptu/Nn1cH39+lv3lzNopCzPm2bvI6b5n1F9ov/vjs21VHYvs
n+Z87P79Y7F9jMPq4JKgpfaWyWxmf28usxdtS5RoS1xhn//e39Y8ZpX9iQi7
pBdha+y5TlvFN/KsszdxczVhql1vP/3l1piVhhvsZf2DeV6Zr7cXsBO5ZaC2
1r6hOOPV/PbVUHcst9dRtz7+8uUCe889k5Zxq0+xF42+elu7ucW+1Hxudc/0
UvtPK/b84nuZaf/jaO0fTrdE+3mblgfwcoTbO86/uETglI/9YjDf3f43WN4R
yjeH0uoYNAMOgK4OAITNik8=
       "] -> 2.83, CompressedData["
1:eJxTTMoPSmVkYGDQBGLPL6rbr9bOsi/5mrdv2fXp9spcM4+cnTnVXu7xtWOK
J6fY551bc+AX23R7lvArO0IezrSfz7ZvXVTPXHu528FBG2YvsPd8In/uk9Ii
+9K3rz1NVy22P7Dxv2uS+FL717tOH1wyb5n9TV8OW6GoFfavD/mZiZ1ZZR+T
mbPh5vs19txtktpF99fZv9Zjn1wVtcH+nzzPpaNbN9jPOl4UHGW8wf7ZYv61
tzXW2Zu3Jxk5W66x/8ERsPeP/Qr7AytrLn54ucA+gPvR6XmfJ9mzuJ87X9jW
aF/No30537fAvi1q/bnj7xLtJ68wPiU/Idh+/wOXHfWiXvY9YL6z/WYw38p+
JpjWgvMZSAQwfTAaAOLGi4M=
       "] -> 2.69, CompressedData["
1:eJxTTMoPSmVkYGDQBOLrYVyl78tn2euFS/IVvpxuf/rAjn+FGdPsF7f8iCs6
N9XeIo3z2wf+Gfaci3b9ybOYbS9mwVP8xn2+fe/9bQylMxbaJ8brm2y5v8je
62+7+efiJfaaPR+CNj1cav/5T8W8Qqbl9mGTb64taF5hH+wv1Lg+ZZX9tqdF
E9Y9XW2/ctLu6twFa+3rhEzWr3m+zp5XU6Y7R3G9/e272cxvE9bZ+3N7h7xz
XWOfnvspYP3GVfY9SoFJG5OW2we2ik0s3bjAPl0r4n3R8yn2hzaeEPvk2Ga/
Qcrr6vu7lfbiYPflQ92TYl/qzv3l7f0Y+1mlHOWflodC+T5w+msL+4/P9s72
b8C0sf1/MK0MpxlwAHR1ADCwlxc=
       "] -> 2.77, CompressedData["
1:eJxTTMoPSmVkYGDQBOIvr+v4l62dZT+d84V11rfp9kv/yVzsM5lmf21bM/OR
R1Pt0wIbOU09ZthPqt64yjpwtr3rzQe+e9Xm2+fnvtOeNGmh/bx7O0UN3i2y
3/I5MG1z0RL7D0Lb59zbudRe+NoLy/eay+1NZ0pd/z9zhT3TLIkY45mr7A25
n7he/LLa3qrokefx3rX2ge1Vs7yE1tvr1K7dssh/vf2BpQ+9naLW2T//5lnV
mL/G/hvYfavsH8k2se+qXm7/Cmiq+LEFUPum2Cuelj0vnNFqf+KgX978JeX2
wedEHz9MybWvvPJGv0M72X5xwTP7hP5Ie9ut7T9jngTa97ytkuRd42e/Hqzf
xX4amG9nvxPMN0GjVewZcAB0dQBpv5gG
       "] -> 2.8, CompressedData["
1:eJxTTMoPSmVkYGDQBOLFjUHT47Vn2Zc5/vSJypluH894Kkjrx1T7yMb9/0qW
TrWvPsi8kH//dPuNjEWT65Vn2392/KobpTvfXuSgocBTj4X22olxW9NXLLJ3
eTgp8pPrEvsYxUPBSruW2hcdfPdjieRy+/aDEp5VKSvslx4Md9wVssr+6MFp
lr9c1tjfTjx8r2bJWqh56+3/OnJdO3Jpvf0Lxwet79vX2V9MXGcm9H+N/cbE
fLtLfKvtKx/+XsjeuNye31F9j/63BfbOjhNYXA2n2Icybl21P6jVfh6jh/Oq
G5X2xxjnPA7Jy7FXZPRJWiWeZH8SzI+B8oPsZ4HVedq7MS5gCl3rAqcDwLQJ
lFaxZ8ABYPLo6gHSS4Rs
       "] -> 2.88, CompressedData["
1:eJxTTMoPSmVkYGDQBGJjBeUc90Mz7V1lb004kzXdPmU2m2/2y6n2fbNWLFC2
m2q/QZYzveDAdPtSxQ3vjA7PsudT26pkWzjPvnNqybRSq4X2ZtMN3rNMXGQv
IclinCa0xP6I1IHurxlL7ZfNmXw+7NUy+33z6v51Tlth/z7hq5JaxCp7m8ff
bbT119h3pv4KM2BbZ3/1+Z8C07vr7RW+TF2cI7nBXmq51q4w9/X2M5YIbK13
XWs/O2lj9dZ1q+0t7h02qtVeYZ939cUCHtWF9uJg+6bYr5W4GnNoT7P9e8mk
+2v3ltgXyNQ8admfZi8ickFjB18C1D2h9tVg93vZnwTzXe3FwfIOUL4plFbF
oBlwAFR9pvYA1gyNig==
       "] -> 2.84, CompressedData["
1:eJxTTMoPSmVkYGDQBOLD7JnfjNJm26fXcUxkqZphnyTOcPShxzT7kjeBrsLx
U+0FYjZ8/7Fvun3OU4FY9dWz7LfNlHdSaZxnv1UpR0FfZKG9RPLH+0+KFtkL
rjnTGsuwxF7rhdqlje5L7Xs01kxMX7bM/lLpplWO3ivsv5+3lHUwW2X/y8zp
ZVL6GvsrPfNe/LdaZy95awnjrfvr7ZubVjpcSdkA58eVH18hcWyt/UXVaTJ3
OddA3bfCnkF9+uQJ2gvtC1o9Kz/oTrbXtnBOEOtstPdeVKrxfH2effXnSbr/
hRLs2w8uPupSGmJ/34tFuzjR3f4ymDbHoPeCaXU4zYAGcMmjmwMAiSaBuQ==

       "] -> 3.01, CompressedData["
1:eJxTTMoPSmVkYGDQBOKjKmwKv7Jm2bcu/79LT3aGvazAlAsRrtPsfxsVNAmu
mGp/bl5HX4PLDHuDn5scJ+vPtneXF341gW2+/fpFlp7H8xbaPzh/blHAk0X2
wn+T/9yMXGIfsX31jIwpS+2fZtRweH5bZr9b8Jp3df0K+zrdWp8Vzqvs556N
T9b5stp+V65T1YYla+3fzLp+2VJqvT1/xW/Fxu3r7aPXHNWZdnqd/WrZi3l5
Z9bYG4HtXW0/w2TTX+NHy+2rLJJ3VPEstFfrErO/LzfFPq9xvpChW4v9Juvn
6/Y3lNq/YNTKc+TItj+k/6b7jHGi/TUJ7r9scmH2+WU7l8XV+tqn9s4yVZns
YR+4pPrIyxXO9pVgcVso3xhKK2PQDFCAKm4MpwGRwpr8
       "] -> 2.89, CompressedData["
1:eJxTTMoPSmVkYGDQBOJZ3JdWLROabc9cHLhL+P90+9u15rEdatPsJzJ8bE3d
MBUurmOeusP19Sz7o/Pue9YLzbfvPsLJdDpxof1VAa+qKa8X2b/+FFy5NnGJ
ffS0XTxb5yy1Z1oSLpn7epl9S9Q5rucdK+xLn258d9B3lX1awdRLc4TW2MtP
dLI9fnit/V8OscP6auvt3dtiZgXNWW//6itr6t7D6+xDdOpFLx5eYz8b7L7V
9nEm6/yYjiy3r9j4c3HE/wX2bls28M5Rm2Kfc+vCyYbXLfZbO2QZ/vqW2Otk
ZIvPv55pHzsz58eRf/H2e46wtEyfE2FfETT/4tYOX/uDYL6HPaN5llnlBmf7
RrC4LZyGiBtDaWUMmgEKUNUZ2wMAdXaSMw==
       "] -> 2.93, CompressedData["
1:eJxTTMoPSmVkYGDQBGKnonkz/C7OtGeWsGw5PWu6fVPb19NyitPsMzL9bk29
OtX+8IOoBwvDZ9gHTNp6cn/BbPu5PEb8W9zm2+/hOphmtnChvc0cFvnHUovt
PfdIB4TsWmJvu7+734ZvmX1Mzj7JOs3l9spHs/l4t62w31sctsOpepW9QPR1
1Wm6a+xTnCImv7y/1v70ti+RvHzr7Xdo3mSwnbTefuNM34yWQ+vsnaeqcq44
ssae87R3793Y1fYTlvH87T+w3N6Jk9Pd6fsC+3O7kg0SBKbYb5u7x+76kWYo
v8R+7uI5e5fnpNnPf7lqXlRwjH2m2/FMm0dB9hxg/7nb54L5TvZLwPI2UL4R
lFayZyASwNTDaADiXIQ7
       "] -> 3.14, CompressedData["
1:eJxTTMoPSmVkYGDQBGKe+NpZQo9m2ivNY7zzoGS6/bTY7ZmaDNPsjU5Ebtp/
baq9dOfVgo/OM+ynzz/Ocypstj3vwl7bzRbz7T/PviHEvGih/VnBkpWsTIvt
I4L2Se8tW2Lf8HfVNa5DS+2Xr5g+MYJ3uf2zzRPuH5m2wt5KftoB/7hV9hO6
Zi+8pbrG3kT707INN9baF5q9/iKTtN4++OCmb3yf19tHXbuX+E95vf2Cq9Un
OY3X2q//f3n+iymr7bd/Lt/ZLrXC/sjt/W+Oqi60XzvHevX3SZPt37StWS5c
2GSvFPPRwkGuyN6D/d7n3sxk+30cS1TKvcPtFcHiQfalm06tu73FxX49t0Gb
J789lG+CQTOgAYi4ij2MRhU3gYsDAPSJm2U=
       "] -> 3.02, CompressedData["
1:eJxTTMoPSmVkYGDQBOLPQTulZaNn2q+2XH3Gim26/Rw+0VPijNPgNO9rluRp
C2bY2+Qcz/q/frb93mJftoUh8+3/8wd3TNuy0P7M/d0/F2sutp+5XiV747wl
9pfmztle8G6pPVePCIuB3XL7G9G1pbabV9iff3fc4HnRKnuDBYrHnXjX2Mcc
+pzvumut/dQN2XtYuNbbPzfTD7Cdv94+521nUcb+dfbiHNfqTx5fY78lrOZl
ru5q+1ihG9MzLi+3L//Fzs5qtNDeMna38Z60KfaCs26+lJdpsX9+7fv85ovF
9tf+9IhdD0i3z9BfuWX2r2j73sd1x7/8DrG/BRZ3t/c4VVAhtNzJPgcsbw3l
G0FpJXsGKEDnowOYPIwGAK14i5Q=
       "] -> 3.34, CompressedData["
1:eJxTTMoPSmVkYGDQBOLEk0dzGRfPtF+3K/bHkcjp9mGbV+5VM51mn/e73z2S
e5r9h0rtlQYrZthrKYjkFhyabf8+trZ+89r59jd9P3tUn1loL8178OczqcX2
Fglbb7OtWGI/KT1TbOmZpfaX1cyPC0gvt+c8JGicXLfC/muLJaNc/Cp7sLFi
a+wZZ4du/HFmrb38O8/JElHr7c98XLwh/c16e3MzA1lvg/X2IdN/T15ptdbe
zIV9U+fa1faKXD/2TA1ZYR+wrehX+e8F9sxHb+VvcZkM5TfY39WrebSGOw/K
T7AX/XKbZ/ezEHuxj0IXMhW87IXA9tjbs4LFTTD4UmBaxZ4BCmB8dBomj24O
AJOtk+k=
       "] -> 3.52, CompressedData["
1:eJxTTMoPSmVkYGDQBOIFseffhnHNss9+wi+qtG+6/bzJT2/+M51mH7h16+KP
i6ba7zhk760fOMPeQko/qtBgtr3VE4m8kyzz7QU2+fXyhSy0P7JDOFF39SL7
iZx2cwKMl9hbZAfYvC1can//TNKdzg3L7NfI9oqvtVhhv3O5SWi09Sr744Z3
JnHarbHfUSiXuZl/nf2ajQn2sQ/X24tN0l1kmb3B/vHfpMsGnBvg8u8UvuhO
aF9jL+SmtHXfnxVwe18v1/6z+csk+5yKxzaX0urtL/Es3WTclAGlI+zPgGkP
+xtg2gJKa2DQDAQALvWo5lrYAwDVRYNa
       "] -> 3.49, CompressedData["
1:eJxTTMoPSmVkYGDQBOLzc9ueVR+faX+Z/fSVK6en2xfde3+vatc0+7WKX1ny
Jk+zb0yfFhEaNNM+fYGSSMHaOfYGz85IxwctsNep6dBl81tkv/lAdNbnmYvt
5ybriKT/XGJ/2JPpyVnDZfZtF2+5rQtbbs8ttq559qIV9jJXykoW2ayy151k
n7ry2mr7hetYD5u1rLXvDryWs+rxOvu5Lgev3K1fb89448GOCVPX2Z/8J9/4
7cAae6n5IX9LrVbbTztydN3DT8vtH1TtEuO5vcDeLr94quWrSfZs0zbFzhdt
tK+azFuz2DPX/lD8TunCXfH2gUlxf3Pagu0f/dpqw5HhYZ8Hlre1dwaLG2PQ
YWBa2Z4BDaCLw/jo5gEA0+mSzg==
       "] -> 3.83, CompressedData["
1:eJxTTMoPSmVkYGDQBOKZEGAfVnM0vObodPtpOSdBCE5HTC+NnF460z767NWY
s1fn2BdwtAPRAvtLarlAtMi+xO55sd3zxfbfQvy/hvgvtb+WGgtEy+y/V/QD
0XJ7y97LFr2XV9jfXOJ7a4nvKvvZe28C0Wr7WLDCtfZ1L6cD0Tr7uk/q9Z/U
19vve6QNROvswc4JX2N/a+1dIFoFN28D12ogWmAvZKQobKQ42V5IgRGImuwF
+R4K8D0sgPKT7MUzGsUyGsPsFTcwSm9g9LYXA4s7QfnWcBoirgSnGYgEEPVG
9jAaAKSNeLU=
       "] -> 3.8, CompressedData["
1:eJxTTMoPSmVkYGDQBOLJoeeStU7MtJ8Z1rro6M7p9hu/KPmFzJtm37lznuml
Y9PsH52+NkWvfKb97I9/JzadnGP/zuiM0gqvBfY1/uEfzrossl8Z8Vn+z5zF
9o4uvs6ZnEvttZatn35LZZm9EIfQG2+H5fa2guukq2assG9r+8/7OHSVvXxR
pGHAodX2Gc9XKe+sX2uvydcZv+LwOvvEZ5+fyPatt9+rfTo7c/06e31+h3nO
W9fYazlqtE83WW1//+++2qZvy+0fJ/89k3BjgX1+Q8estkuT7I9/d+dSK26w
7w4RV+2/lm3PtejynNy4OPt2OTU30e2B9uzs0Ws3+HnaM4DF7eA0b86jvZ/t
TNBoFXsGKIDxUWkkdWjmAQCkP5ep
       "] -> 3.91, CompressedData["
1:eJxTTMoPSmVkYGDQBOLM1F/FC2fMtJ/eWvEy6vh0+/VTzZdsvzfNfvnT76nO
OtPtI1irv+8wnmXP5nsv80viXPsAvcAFbCsX2MuabeYWXrjI/sdGlidZgkvs
r7OW3f4TtdR+lyH7pxO1y+zneGpIGPUut6+eO5P/yLUV9mGSr59Lu6+y11+5
ZsO1U6vtOSzzKif6rbV/usA/sW31OvtrDheezHVbb/82oH/+r9h19jKFvKJb
etbYO37dbRMjs9p+Gth9y+3DPjGcv5u3wF6R77KWb9Uk+7M1CtuONdTbZ9tK
Tb5dmGnvVSs9i2tFlD3PX9kVGSK+9qz/hAs+JDnb//4Loo0xaD6wvDKcZiAA
YOrQzQEA/nWN7A==
       "] -> 4.09, CompressedData["
1:eJxTTMoPSmVkYGDQBOJ5rSrZhzfOttc4aBO+o3Cm/XWfOftfP5puv/dC2qM/
sdPtQ59OLXLzn2X//ey1hfdz5ton51qUMW9ZYH+s8493/uxF9nxa3S5v/i62
D3owIdfRa6l9+43f6vIhy6D6l9v/mfPYWmvKCntP9d/M53lW2c+YDQKr7V/y
2xhnaK21N5sV/Jtn8Tr7qFezyr1D1tvrHnOM2Vu2zv7kytq2wP419rXyafvW
iK22v5Ik/OHwmeX28c3rl92eu8B+ubLd/AiGSfZPVDcnO4jU2h9ZUtHo05Vu
X8nyquO8ehiUdrPPA9Nm9hFgWg2DZiAToJsDAGwBg4Q=
       "] -> 4.06, CompressedData["
1:eJxTTMoPSmVkYGDQBOI0CeUI2yuz7OetWiZffWaGfaD72VuVi6fbP5cy2hRZ
N91+8v43bH87Z9kL7b275sH9ufay2+ZWKT1dYL+h98y8kFuL7C963jGZ5rvE
vvNmwKLts5faL1h255LGpmX2LXel3nNuWw41d4X9/rRtW/fYr7Iv/6alfK93
tf1Zj46z64XX2gc4rVdz9F9n//2z9MmDj9fZewRrHyz4tNZ+S/WfOXZ/V0Pt
X2Vf825ap2XkcvtVs+reGCYvsOe8E//nsuske6PKt05KwfX2f16368uuz7L3
8E8skbsRbX8D6CqRCUFQ2sn+PJg2st8LppUw+DCaAQdAl0c3BwAjo45W
       "] -> 4.1, CompressedData["
1:eJxTTMoPSmVkYGDQBOJ3wdOOrzk6y/53Wklsq9BM+1z37vh1IjPsp820/mgS
O8M+RPG88d+q2faWv4U4fB7Os3e66L6ktG6h/eXfa38zZiy211jdXXHkyRL7
OzKqHEray+yzbPjYfmosh5qzAmruSnv1Iws9Drqtsrf/8e3VzrDV9g11f+Qs
16+x55v3VEZg7Vr7q7q3Zv/WXmd/USnWyc1hLVzd/8KP26z+rbTffvXj+YBz
y+znnfAumTNtvv0Dvp6Jt7ZMtN/HwhS8g73OvrMtNjpGIMte87zcojKjaPuN
H5X33t/lb79wjWQ77yo3ewWwuLU9f5dIzhJFIzitCKaVMGgGNIAuj24OAOWT
iS4=
       "] -> 4.12, CompressedData["
1:eJxTTMoPSmVkYGDQBOJzB18JPfo1y37upoZttm4z7SPMLUuP1M+w/+8v4l+2
fIb97lBePd6Xs+3lSh4+Cw2ab/+kre4D98GF9oLWG4WtNy62/yKRuqdabKm9
wT3bbq6QZfayRQnLTJ2W2ye8Xf58HccKe9/GU0y3vq2wf6h74vs2nlX2J9M2
38wxW23PqtOz4nfxGvu3KeVdG+eutX+yjkPiuMg6++9Sz/7MVltrL/t5wTFX
r9X2VqJvZVmfrrS/PPuhtvv2Zfai+4pKsk/Ot3c8ecv/fOxE+8gdlVOvtNfY
Zy0Wi5o5Md1eG+yOMPtJtUEpyUd97TvBtK39quCet29uGMPpvWBaGSfNgAbQ
5dHNAwAm658+
       "] -> 4.22, CompressedData["
1:eJxTTMoPSmVkYGDQBOLYOUZcb6fNsp9s4GiqLTLTfm3VCa9TQTPsZxT1W9a9
nWGvfOzqrWiHOfYrr58tf7Zzvn23//z/Gb8W2rt9XXrc8ONie5GmfXJzE5ba
vyr0+cMybZn9yadlj4Tqltuvm/3+TLH9CvuJYHNX2ucmyYo/U1pl771VodpL
brW9XEv7NY70NfY/tybvOFy61v7l+4rVp16uteeeW+qe9m6Nve8197+fuVbb
12hwqNxftxJu/s65O1ruu863XzpTTZTDciLUnBr722c6Crd+S7Nfv0fMX1Yn
wp69xu/oHkZf+7/VINrW3vfvvRu1Ycb2CWBaGYNmIABg6mDmoNMAkZWTbA==

       "] -> 4.16, CompressedData["
1:eJxTTMoPSmVkYGDQBOLb39dJN1ycZR+q8sMoOWGm/dTS+heV1jPtb9qc+XjL
dpb9k3kyb3dunmtvqb9+39adC+wVRFvL3lxYZL98sVznuqtL7HNOxKg/Ulxm
f25qnMLC6OX2geuM7ktYrrAPzhTl3HdmBdTclfYSfcHLP0qssq9aUFTGvX+V
fZxA863v61bbN16U+vKrco19UpuHntO1NfZy+3+rPLy82j7i/q0Yji8r7Sfv
mrPvyvIV9lp7PrmrbV5qv5yjItEjZ579z7vqnPPvTYCaU23va5HbfU4w3d4b
TIfbx4DFve2tEsJtlpY42RuCaSMM2hlMK2HQDGgAXR7dHADYe42e
       "] -> 4.49, CompressedData["
1:eJxTTMoPSmVkYGDQBOLHMl+qGG0X2D/xmMrwM3iB/Ycr9pvXKC20Z8rc2K5b
vchea6/pNjXnpfa+vdeCLY8tty/ZuvOPVfkq+/6rV5vz562xn/80+TjnprX2
y95qvbxmvc5+caZ7xIdva+0n6Ur0x51ZY9+Qy2r6LGa1fZLvy7UbTVfae9wN
tI3OWm5vMDM66M/WpfaKnWf5khYtsRf7qxSz7vJie5apQbyqkxbZv635u3zv
lwX2e27eO+F2aL59q6f2xd3nZ9sLVtqfPt432V7XUdKdt6PVnuXg50kyK4vs
PzA8tFhimWjvxKizsPV7GJQfaN/HWM6ZvtXH/hWY72hvCJY3g9PuYFoNTjMQ
ADB16OYAAGCiiCA=
       "] -> 5.2, CompressedData["
1:eJxTTMoPSmVkYGDQBOL/NxpyHMwW2P/6DwLz7Rk2Md5syFlg39HkenBRwkJ7
aSf+he0XFtvrTp3h5aO6zP5ASJKW4dQV9hfPZaVv3bzK/ib3+9bvh1bbxzOD
NK6xvzet8PSO1DX2EfPX+V9fvto+AKR8xip71+IllpdkVtrvPnn/Sf6n5fab
e6KP6T5eZr/+VuTbNWXL7NdoRIjocC2zV66fvP/k/SX205XPTnzmsdiet4rD
tkVukf0PNZDEfPt1IOc5TLPf+SGuQn9Pu/38hMANGhEl9k0XnF8ofkmwnwvm
h0D5AfbTwXwX+wMgbypY298G09pwmoFIgK4PZh6MBgC5EYeG
       "] -> 5.07, CompressedData["
1:eJxTTMoPSmVkYGDQBOJzXP6TtlvNsTdfJ/F3qeRs+8OTn6zlOz7LXv5xw+wr
+2bbT1P4FPhm7nz7jBUpBndWLrT/HcXSHnl9sX0wA5dZ9+2l9qpZt4peqC63
33tMgOOX2wp7zq+rLzVdX2Ffzf9AUUprpf17TZHCjTUr7VNcPA54nF9pX5bq
+bjVbJV9/KyNjVtur7J/evXZ546pq+33vPTNr7q82v4Q2P5V9o5MblXnGFba
F84otS3cttw+YtWCEvnzS+xrjWQ7Z22bY6/Ito8p1Lsfak+lvY+x2YSy6GR7
ublsZy8vDbFPBNvnab/gdefmvT/s7JXB4ioYNAOZgB+s38QeRgMA5+uBQA==

       "] -> 4.55, CompressedData["
1:eJxTTMoPSmVkYGDQBGLnf913e8Tn2VfHyn47bDPP/vSM1k4+mfn2qsd8OQ9s
X2B/V+LrqgyDxfY/dwcfKJ221H493+9EOf4V9tGfzdz2aq2yl3l7kKssZLX9
hYqHgqqKa+B0z+on1k/mrba3LqhZMXP/Kvv7x1aEuzavtN9dkyavkbPCfvGC
/iUim5bbx1+edO6y/nL77VvvtegdWAa3J9K1eeaD64vtTX87JB4+sMh+K7v2
jcDcBfZHlL2cLGSn23PvOLepyLvTvrb/6MW/70rs/85e79EzO8m+EswPsa8F
2irlEWD/s+l2VL6Tu/2HTPbcoJfW9u/B6ozgNNMcEK2EQTOgAXR5mH6YuQB/
Opg/
       "] -> 4.99, CompressedData["
1:eJxTTMoPSmVkYGDQBGJme2tjpllz7Kueex+8dWG2vdf1e+8CFOfYl/B92Z3S
PdeeWc60bdOFBfYHP1yxvPB+kX1R/c0KbuWl9jbTRBZy6y23rw5NCH+Sv8L+
wYPa7JTSlfYzPG6tF32HoJf0lKr8uLnSfo/IGt69G1fan4hwb5o/d6X9hgsC
M28dXWnfcGDxsQCxVXBaGmSdwEp7g6BKHU2n5faP/SYx5okss2+dc+ZTcshi
+5vsamnv9GdD3ddrny949BFjS4U9L4grm2I/oSj4os3CMHuhd5LigTp+9pxg
cRd7DjDfzl4IzDdBo1Uw+AxQgCqPoNHNAwByE49n
       "] -> 4.79, CompressedData["
1:eJxTTMoPSmVkYGDQBOIjT1T4o9bOsWd2fhCgdH+2vZaB4qoEjjn2cTM1SoKD
5toLPNwvunXNAvui0uxChw2L7BWezKj3YFtq/45xyTqTr8vstz30XnoseIU9
+y+DCXPNVtpXH/w8O2ITJv3CKzh/51wEfxFQ97TbK+2b/odd2eS0yl607DtD
UPgq+9kFF/fYeK+079y2XFhv1nL7EN8FntYBy+yP9QbEiE9ebD+xWtY1PXm2
/Q9fnZs+33vtb53r+cdSW2HvMLlsgc78FCgdYn/3zsYPh9752VuD+S72l8F8
O3tXMN8EjVbBSTNAAXb1JnBzAQ8Hmcs=
       "] -> 4.78, CompressedData["
1:eJxTTMoPSmVkYGDQBOIVJSnnHUIW2a856jvj/tVF9t7u33hcli62D7HalK6g
tdT+ggOItcK+hm3RpYm2q+01zrzPKhReZw9S/Uhtg33AyxPzGldssAcSQJM2
2J8Hq99g/ztWN+/Qn3X223Zwft4dtcZ+Plh+hb1yNcigpfYCU/veSHYssp9j
sH/1Ud8FUPG59ivB7pll/2edmHli3XT7iO7ZQBVToe6bZO8Bcp5yt70+SNuM
enugI2VvGhfYy4MogVT7xWCDEu0zweIJ9qFgf8TaP1QDOTzYPhUsHmD/Asx3
tn9gDHKJJZTWtGdAAzBxdBqmH0YDAGIhksA=
       "] -> 5.54, CompressedData["
1:eJxTTMoPSmVkYGDQBGJHs2tThRbOs7/yaG1vGfM8+26eQxNdgubZS9xVW+Z1
Z7590vJVhXq2i+xPXrXhb6lYYs8reXOdw+1l9jOMEr3036+wL7i5MSpda5X9
pLB3aRfFVtvnZv/IsLBbbe9lfv/xttur7L3f7Y45F7jKflp1y0XxypX2Whox
J6tvr7Cf+dL2sFvqCvt9V4wP3rddYV+6VcXuKNMKuPlmmqniCmJL7U/3SHbM
frfYvsOz9sW97oX2HF+cXH5VzIDa120/n++Kbu/xMvumXC7Wxs3J9sa7V6t+
1Ayzd1zS3+7Y62t/n8PXLXGBh70XmG9r3w5WZ4xGK2PQDFCASx6mH2YuAIMU
i7Y=
       "] -> 4.92, CompressedData["
1:eJxTTMoPSmVkYGDQBOLzmi6t/bHz7PcXNtVp8syzv866tMOpbZ69mO3zaz+V
Fti3b37cLlu4yP7Lbv3tz1ctsc/l683ep7jc/qJVxfSrRivtudeeMxBJWWVv
lp58+I3zans75yPH5uestteWDbJ7wLYaLv/gk+U865aV9ntF2PjFzq6wXyJk
3LzYboX9jBOK/6YxrrDvrROo7Dqy3D6sKitx6fJl9gxsjjZfni+xP8U4W4X/
9GL7gPW2BRYhC+3nL2li9NKaYS+TOsG8amuXvVPIjxtPHcvslymnT30pnGz/
hDlvQ2NkiP0VsD/87B+A+S7298B8O/uXYL4JGq0CpxnQAC55mH6YuQAiyoa2

       "] -> 4.82, CompressedData["
1:eJxTTMoPSmVkYGDQBOJ/86IfXXm/0F5z/cI9bZ8W2Wcd52qZWLbE/nS2BlBk
mb3Q8rrzuoWr7N9GNBpc6ltrzw2UXeOwwX6CKIfy24iN9j/vgFRstA+Kc67k
fboRLh4P4ppusAdqAoqstT8JMnbNCnuZUyCDl9gr9mxJZj20wN5++5GV94tn
24NMlcicbr8WSB7nmgI1Z6K95dfqvM7gfvuPO1X9/s7rtj/kYR2m0NNirwF2
b5V9FdCWKdcLoPwsOD0TDDLta4G69z9Pswcb25JozwN2f4T9RqbEJbLaAfZr
wLSD/Wew/0ztGYgEMPUwGgArt4at
       "] -> 5.84, CompressedData["
1:eJxTTMoPSmVkYGDQBGKZH43yPxrn2xs8b1vpuW6+fdyOK+ZORQvsXzh+/1uz
YqH9nN3ON3PCl9jbuHVrcd9aZn/3wqXqlTEr7e9+Eao7O2e1/T024/r7e9bY
L/Z2efQnfK39hBj7iNXaa+11NqotE/ZbYy++gVF6A+Nq++DIC9sa3Fbaa2Uu
W3j67HJ7kYxGsYzGZfYb9mSkXFi81P5NeTjjZo6l9tfLjMr89yy2V+Fnm1Oo
u8he+e/TWfG8C+0zJ4S6Sn2ea5/IEGrT9WmKfYrKVLt1Ru32/0KAXJES+3Uz
NJLWJCfbv+0sZzqqEWZfsPzmwcnzAuxTckSdv23ytn8OFnezLwOLO9h/AvPN
oLQanGZAA+jyMBpmDowGAOqxkl4=
       "] -> 5.15, CompressedData["
1:eJxTTMoPSmVkYGDQBOLCeR3C5wrm26/bY1oZ/mK+/adrT2IX1i+wX274ps/2
2UL79TxxWzvnL7GfHfFTQ1B2ub1T5DnhwkMr7QMTI2Oj76y2f67TdduIfa39
o/8FO6YsW2uv7G3uuKdurT3Xy8qNUxevsf+2+aoLr+ZqezZrxXXPvVbaf2Wt
dYy/sNz+4YUbV66FLrPPnFLHeSRtqT3/818fSjcvsZdw1DXfVLLY3j3cPzjw
0kJ7gbTdQLTAnnVPQt93p7n2E2vbmY4mT7HfK/LyX/HONvuons/7b/oU28fv
5HlcvjbJ3mF1qcDhzDD7LGF7zS15gfbq3wVavJ572AfE35pj/cbZ/kufe3bk
I1v7KDDfGEorw2kGHABdHap+Y3sApeaSzQ==
       "] -> 5.13, CompressedData["
1:eJxTTMoPSmVkYGDQBOJr0ndYL9xYYJ/ody9YUX6hPcOzJ7ainxba24t+Evw7
fbG9kSNXTvXcZfaHNE9xWLiutNdWfiCSyrLGvmb7x5b3ZuvszxYs8T1isd7+
8dUVL9OOrofzHZKdI/YeXGtfyWhi1nJ1tb0Ah5xWuNhKuHn31vz4/SFrif38
2tfqnEcX2ZdtfvT+8OqF9i+WNv7aY7LAfrsBWKG96L7bFYfKZ9s/swU7yB7i
3gn2fZ9djWUym+3nLuppCJ5SaL9tr192YlOKPTv/VO1un1j7izcEwvILwqHi
IfaMYHFf+9NgcXf7hWB9jvbXwXx1KG0O5zNAAao8gobph9EA4ROTqQ==
       "] -> 5.32, CompressedData["
1:eJxTTMoPSmVkYGDQBGLx+LIDx0UW2k/fdVcrLGOh/UErFWVf7UX2ItYbha03
LrafWBR80WbhMvud4mweXZEr7bd9dpj99+tqe87VcxI4lNfZb27zOtxrud4+
drVm4LcV6+07916av1l2vX18G4ix1j4xMTDEc99qe/7ParsUX62Amyfyqf5F
eMQS+6ka1Vf6ty2yFxdznfpk90L7t/f0T1wIXGBvutd1/dHpc+3NZtw0yF80
2/5J0YODWuoz7N9O/Tfn7Y8J9va+UUk/VJvtp4HdXWhvB+Yn23drnSxXvhVt
b8l6geN+XIT9VLB8oH0rWNzb/t39azNnPXaxnwTmW0NpbTjNgAZwycP0w8wD
AJQ7kp8=
       "] -> 5.38, CompressedData["
1:eJxTTMoPSmVkYGDQBOJpSgFSIssX2Fsv/O3lxbrQ/lrsiiMXPyy0z4gIa1+V
udi+z3cTT0z0MvuE5h2Vn2RX2j/4mXEud+Nq+50fcz9terbWfnluQUso43r7
r6fdHCXL18P5+4Le+nItWGtvLmXn9GDmarj+26s7TspfXGb/f3Pz0luzl9jn
7rz6iFF5sX2D7eWAeI5F9jD3cAa4rC+LmWdfLz51sU/YHHsh1Ud79FbMsDdz
qHn/yXui/dZtOi5595vtb+9TV9BcVWifAzYn2d5znvUG2/ooqPkhcDpz8nTT
9wW+9vfB6h3htNbK+1o9veoYNAMU4JKH0OZwcwBOOpYs
       "] -> 5.35, CompressedData["
1:eJxTTMoPSmVkYGDQBOLH767yXjZcaP8kef52DuFF9jskvK+K5i+2d9U9pZDW
vNR+ybcvnYc/r7C/3mWx99Df1fYK/7vMwk6ts68SYag/07zBft7N+xMfcGy0
n5R5I2+a+kb7ZJOPFhYHN9jXZUYuEpq+3n7SK+7XrNvWwM2BmatVOdX4t/Ui
+9txcSkzm+ZDzZ9tvxSsbob9rvLll7YJTbPf0StS7x0wxV5IZa+z4YyJ9kaK
DxtXuHba137p/3Fna519/pIf0U2LCuzjvmfvSuVItz/3I1J6lWGy/Ty/ldZi
rxLtq8Hq4uz3e5+t7J0eCRUPtN8F5nvaMy/m+m1baYJGq9gzQAGMjy7fCjbX
Dk4DABK6np4=
       "] -> 5.37, CompressedData["
1:eJxTTMoPSmVkYGDQBGKtf9Puv3NaaJ/9+bkG3++F9m774y95hCy235P47/Y8
v6X2W97ZVRjvXGGf8mhN25YNq+0PzDh2SLdqnf3rW207PDM22JuURLrF3t5g
37pxrUQq50b7CeoF9ZcXbrAPPp19LyRhvf1nkaBFt6etsWfRmexl/XyF/Za9
NdNXTQaa27Nrm2LeIvt5+cUce8QX2E/r/+X2+tMc+7f2fLVx22bam6+Q03rJ
PN3+EGuDwmTOqfY8eRPOyoZPsr//netLqUOXvY/6q5kJS+vtX3C4TTvfVQA1
N9VeA+yfRDjtHrSs5PGRGKh54faOYL6PvRGY725vC6bN0Wh1ewYogPFRaXN7
PbD5jnAaAESnlzE=
       "] -> 5.52, CompressedData["
1:eJxTTMoPSmVkYGDQBOLemx6HpxkttM/pmf5hx++F9v23vY7OMFls/zr80lJH
haX2cVtq9l9tX2H/9J27QHDmavs8TeHEC17r7I3jDj1+577B3sv2ifTNQxvs
j7LKnIt7ssFe472hx6+uDfZznoddXOKw3j5xR8Phm91r7D2vRXe84V1pr9S6
bCPX5aX2PvbPZG8fWWQfuqZk+9n6Bfb3GneWJayba7/uYDFL17ZZ9md5lK+m
vp5urwxWP9Xe8UJo0zP2yfYzHgedXWDTbS8oAAINULrAfo7P3aT+zyn2nmD3
JNivP1rO0bcrzv5D9LWVriqR9tqfTLz/9gbbnxVQv5n53tveGazOwV54eWuV
YqQanGYgEkDUm9nDaAA1+YeJ
       "] -> 5.54, CompressedData["
1:eJxTTMoPSmVkYGDQBGIBvcqt3x4ssu8zX3njRMVi+3YvTvncFUvs/6fN7Hic
v8z+/fyd0Rf+rbRPPL+S+/XXNfYX/s3czfp2vf05gaXFN3k22m+T8H0W273R
vlFy4j6WGRvtk4V0VdTVNtobMwhu02TeYH/mrGL03Dtr7E92em6ZMGcF3HwW
gcTZRgwL7X2PfDQ/7TLH3rTjILNz8wz7/KCNEz+qTbXXULvoVJQ0yX4Dp+PN
37Mm2MtdcZS94thrPzP04KeeyFb7S7sOivxcUw2VL7BXX9c4oftRlv2dKYwd
G3wz7fuqG+uv7ki3/+TRmCffn2LP/4txlczCeHuHJMbyX8phUL6//Smwekv7
R2Ba056BAICpm6fPmObyywlOAwARyIkn
       "] -> 5.61, CompressedData["
1:eJxTTMoPSmVkYGDQBOIgpU/8IfGL7Ln5Hlf9V1tsb//m5PXjxUvsc3b8UOQp
WmZ/KnLT/muiq+zfcJ19GyK31l4jXv58IMcG+70HOt5fMt5oX7n1avKBRRvt
LTfXPXy/Y6P9XPvYda/sNto/jznh0yi3wV6HV6VAlWOt/bTq00l8J1fY2zzO
Pdd6Zol9vFuSacyfBfalisasVQ5z7KU6rxZ8dJ5hbw2Wn2J/RW2ByFejSfZP
gnOc7csn2H8Q1vw+7WiPvcUtwaPOqq32/x2+qj7krLZP9t9nN29xgT1r8FqL
1Igse6Fy2bjcrxn28rN7m0snpUPNS7FPBKtLsOcHy0fYf9OzFY7d7W0fAxZ3
sDfZ/3dFrb6aPQORQA6s3sweRgMAPwWGoQ==
       "] -> 5.78, CompressedData["
1:eJxTTMoPSmVkYGDQBOK9KiVudvqL7Jmkoy/pSC6251x6xru8f4n9lUMnNslO
Wmb/fHbKo+uWq+ynnrhXc9F2rf2iqjXdTxU22Ffo9e7yd91oP3tlA4P7ro32
1ofEV6y+uBEuDlMXMn2DLgf/Wnv7n9EHNdassPe69muWw74l9t9PG8jsfb7A
/nz+7KCAb7PtfzGVmlodmm6f0WO6RKhiCtTcifZB7x6YG4tOsO+zy2VuP95t
/+rdRKelV1vsO7b87rQJrLIP2zyzJOJCgX0rmJ8Fpxu0ugQ+3cqwLxBbLhv7
LtU+siJoY213on3FAonpy1PC7SeB/eNrHwwWd7SvA4ur2zMQADB1MH0wGgDJ
t4zk
       "] -> 5.78, CompressedData["
1:eJxTTMoPSmVkYGDQBOLbc1zVxNYvsp9zsmlL27TF9oYidj5OEkvtHXW2SzL4
Lbd/1ve6rpJ1tf22ywtvLVdaZ59vwtPKP3mDffmBE9nv1m60vx72fNMyxU1w
+opAp735lI32YX9zph0N2mAf9F1FoUFxrb3HjmKG+xkr7M+ZH5woJb7E/t3Z
OfOk9s23P9hqaPZQZqb96y37Pl9+MsXeINFTuKFqov30sCUV70J67bcorF34
tKXL/tyrrafubGm3Z6s/LnNapMl++uL19jrbK+2n2B47u7y6yD7K+TSn6YMC
DNpx0oLuls48e+X1O7e7NaTZ24CUCyVA+WH2K3cd1k/0dLafCzZP056BSNAC
Vm9pD6MBcGOJ5Q==
       "] -> 5.98, CompressedData["
1:eJxTTMoPSmVkYGDQBOKYmLPOVW8X2p99U6n4T3ax/Y773suZLy6xj3wWuvK0
+3L7Zx55YjOkVtvX1/73TbJfZ6/7LF/ebPkG+/+ywpMlt2+03zWr/cst5U32
M3kfiO/W22SfeJRTs3LaRnuBQywaotEb7Ht2bPkbZ7XW/lQZU7t/xQr7AxuP
FDIqL7HPKrh4Of3TfPsDSzr3BKrNtP/xc1aC8+4p9ioi30MsQidC9fXar2eY
oR7W1GV/deN2M5/idnspp7ouK+Ym+22XBD4FX6m052M/ecuWo9hebvWufMs1
hRh0kZPXvFSXfPvjYPszoOKJ9m/2Pd3gdiDU/hmYdrW/A6ZN7T+CaVV7BhwA
Jg9TD6MB1mOUiQ==
       "] -> 5.82, CompressedData["
1:eJxTTMoPSmVkYGDQBOLf3/uc2R8vtH/YwRLyn3+xvVlnjVfRvyX2zXXetx7m
LrfXrbc+ftxrtf2Lxzy2m6rX2V8J6H517sAG+1qV1Vfaz260/+Iq95/FcpP9
Jv0J2444b7JvrH38rWPRRnsZya5ywYQN9qxrzvvtVl5rX3jQUP+Oywr786df
rfj5bLF9zBp3Vz2h+fZvp4jOi46aYR8SaB9TvWyy/TzXZRyTvCbYr/z5TNit
u9v+lfXd6qjWDnvVM0nzc6622jdfkwaa3Gh/5OBKVX/jKnvrR1tyii+X2Ees
Kq+rqS6293Sb9rVcvQROlxRZTWhVLrKfOZW129E8ByqeYr859sQcr/tRUNrL
fva8e1qT5R3sDesuP86rV4XTDGgAJg5TD6MBcNCVrw==
       "] -> 6.04, CompressedData["
1:eJxTTMoPSmVkYGDQBOJ/357veZ+xyL6MfeItxcWL7TUW8LHnVi21Xzf5yKTi
XcvtjTi1iqdtX22/cnbT0yfr1tlnLLoibvhgg31568NW1mcb7d9fMapc6bjJ
fupJb95JJpvsIx3L/1VM32ivK8XAKeG8wf4rE+vOmdfXwM17N7VrsbnCYvtY
g4UZ37nn2v/65Zam8Xiqfdszu/l79SbaP5X/4XX0Yrf9bYse4x2B7fZvxa1+
BN9tsV+8JqI6zarZfks3mwPTsQb7nqsZnDaLa+znbhE7d12vyt4pq73Hj6Ea
Lo4uL7mXceaMkhL7J2Dzs+215qyPNWFIsi8B+zvYvguszsp+MZjWsmcgAGDq
YTQAagGM9w==
       "] -> 6.26, CompressedData["
1:eJxTTMoPSmVkYGDQBOLtk+fxC3cssr/LwvPfddNie6f3k4tYUpbamwQst2i7
vNx+pvzMPUWLV9uf+XmMrWHWOvu/mVUrjp3YYF8bs37D3esb7QtuRKQZam6y
lwUpk95kb74wk/1PxUZ7ySJ1W3m1DfZFk6fezZ2+xt7xyt8mo6bl9gF9DWua
viyy3z+Bbc3Ss3Ps77ws5S+5MNXeVfVA4Ar1ifafFyRcDevotv9yrWfLL+92
+28flZac0W21n8A+24Cvptn+u7p/c8HHBvtPraeetiyrtY9cVmfxXLravme2
U9GxL9VwcXR59efP7q5mK7NXqu6TT6nPs48Wuv5Nb3GSfe/FvMCsHeH2u//E
Zb0NcbFPAKvXhtMMaAAmDlMPowEsNpv7
       "] -> 6.29, CompressedData["
1:eJxTTMoPSmVkYGDQBOI4GcW0CstF9oJzjW5drFlsH2VQEL3fa6n93+Zt0yJ3
LbcXY3v9KbVltf3l42JTj65ZZ//irZEr2/0N9kZ7ZDgXvdhor3Tqr9DEgE32
jsX9e1hcN9k/39TGFLF4o72JUWnfv/gN9n6Pth748HWNvUevz9zF/5fbdzlW
NizwW2xv8K/8yrmjc+1lMr40Vb+aZn/9QDqPO/ck+5WL9lXNnd5rf2d+xSrz
rg77ttATpc/j2+z1uCUcp5u22M99Msduz8wG+4AIPjff3Gr7xYfX3lkjUW5/
wHCyc9HFcvu7YH0VcBqiv8x+V1DT0sagQvvbYPEM+79v8ta/PRhvvxMsHmi/
GUw72q8Em6cOpxnQAEx8Epg2h9MAmzabsg==
       "] -> 6.22, CompressedData["
1:eJxTTMoPSmVkYGDQBOJn/I4cOf8W2DdqLBTn6FhkP9l9IZNl5RL77fmN7bm/
l9m7rnacn7Bllf30GwsXFHWutWdmDHTSF9hg/4134s+I+xvsbwh+FKuX3Wjv
yL8xQuDLBvunLBvjQ/022C9/2GhVJrXOft0Kxocfu1bZM0Q3Tv2+fqn9SeGF
qpNsFtrvmX1Q88TumfbqJgfzq5wm21feYdw343iv/ZxOxm8HZnZA1bfaLwlo
nGPD1Wp/KZRRUiq21T4qtbFvU2ibvVBVY4PGwnZ71ZmN2ZGTOu2nHGr0d9Xs
sb/6jHF7cG6fPfObRmPDA332B48znlGq6bHvyGLknrCizb73N+PKkzvq7aUc
GdWXCJbYaycwCl1lSrMv82ZUiN8eYl8Ipl3s08G0iT0DGqgGi6vYq3xk3MAn
bA9XBwBWqYSy
       "] -> 6.7, CompressedData["
1:eJxTTMoPSmVkYGDQBGLflbPifTkW2jc8PhR6qmaR/WrT5rfLu5bYf5nRvV6Y
bbm9ps6RLQ5bVtmrzs1JDWxfa/+2sc8wmGeD/d4FZV5tFzfYM6/O++sovNFe
a4lcW/7zDfY1XZvcpJw32K/fGHP6BNc6+2eKZxhbi1bZ6yRxf61fvtRedcOr
a/ImC+3fcZokqNycaf/4H5OxiM5k+x0zj2hmFPba+55J1tvn12F/IC5557SJ
rfYxzsp3fB61wPnX2p1bW2e02b/aoBxYMr/dXpT5yYvAtZ32SwqexFZm9dg3
XHB58vt8n73hvSeXFqj3w8Xbpz4u1vrQZr+4Oem8u3iDvbuUs0Dc7WJ7c7BA
un1RDvMK65eh9jlg2tU+CUyb2peDaVV7BiiA8f0nMu17k+cAVwcAUgeVMw==

       "] -> 6.71, CompressedData["
1:eJxTTMoPSmVkYGDQBOJcr2/3/JUW2ptbbXxl1rXI/q3zpVkilUvsJ+6YW5d1
Y5k9S17GX43OVfbTfO+JfI9Ya2+qoHjL8+l6+z/bVj4W27vB/quI4lHhVxvg
/KliWtOSRDbY90QJphfNWWsvtKnSSl9/lf1pSXUm1qil9iVv6v4GfV1gr201
Z4t19Ux71aXRcut/TbLvXx367XNrr33UioiuQIcO+10tF01rT7XaHz/xqKi5
oNV+/p91uwvq2uzLDapZ4nra7X1T3H29Z3XYv28/t1BeoNu+Kd1l59v7vfaT
jj5le6g1wb5bOfbF3fAJ9qXKxjXPLfvsM95kHg9/1m7f2njl5K2WBvv3U0AO
LbFPA4unQ80Ps58Jpt3s+8C0mf0SMK1mz4AGCmwP91y552APowEpLpwf
       "] -> 6.73, CompressedData["
1:eJxTTMoPSmVkYGDQBOKVGU++MeYtsJ8mJNDy+MhCe5+vy/fWeC62/5Pqp5bo
sNTeJOWVq3f5Cvt7SfPvVj1YZa+2nb+g+cAae6nLOuckl661r3+ftOTr7rX2
Cq5y888ZrbWfsV3jxYlPq+0V+MSAKlbab/Z4Fv/ryDL7Dj3dR5UrF9mvd2FV
72SYZ++rs6FTbt00+7S9uYwBDRPt4+oWHz49qcd+18f7fwK2d9qrNrAveRjd
aV/ulsk+/2SX/Tqwvj57DmHNPxrfJ9hvbz6fwvtukv2xebsuSeRNtb+6c6mD
yrvp9n7JO0IPCM2yf3xlwjr9vFn2Wdp1Myd7zrD3Bvtrsj3PDscEPtVue9tb
e/wLTzbYKwl95543qcj+gvfUFQ9UEqF0oD17qozZtdtm9h9TQLSaPQMagMnD
aACqMZMS
       "] -> 7.08, CompressedData["
1:eJxTTMoPSmVkYGDQBOKkPOfVrQvm228Qtt4obL3Q/q64RZbbp0X2S9d+LP/M
sdRe6MykIoeUFfbz5MOfmW1ZZb+dd61YU90a+yMsN9YtT14Lp4PmZ2b/ubvG
fhrD7a8la1bbP2o4UbC+aaX977s2Tl9nLrMPm6M0b3P9IvviNdY9nBvm2j87
PnUn79pp9kUXXcVjSyba23YeeiTyscc+4w9IQyecvux0oV+7uNs+vFxCOGF3
H1y9dfp/Fa7uyfYbl8gISL6bar8u1v/4rsMz7H1BJMNs+995cgt/+cy2j2Xd
DFQx0/4g0PQ5fyfbP7D8rR4Y0WM/++9kDR2/RnshkLc3Fttvev0yolwi2d52
3ZncjK0B9s0P44A6beyngMWV4TQDFCwD843tYTQAMcecHw==
       "] -> 7.2, CompressedData["
1:eJxTTMoPSmVkYGDQBOLns2etVGWfY38tN/mfp8N8+4fy0zS32yy0N/Ce9eSl
y2L7vtk/bviaLbOvVHtUPUFnhX1t7kHdovyV9gX9bsuUTq60lzy7TLQpdqX9
dKAuwT0r7KOUeXfzz11uP7uyOGHunaX2P7rPi5zKWGy/TPLN8q2yC+yPBT4z
O2wyy/78x7i626VT7P/c7rYI65xgv0l5fffz3F77aQq3TqXd67GvW304d+WV
Pnup+wk/r0lMtFfKlY+dNW+y/Y162Ufzfk+zN79QfY3p7Ux7p6Ugg+faH5E5
mGG2doF9+FOu6hvmi+y92Cd87pi4yD54nvbJb18W2FuLR3c80Z9tz5zlNUeS
f7J9GmOHU7xzu33fJOn0xRFV9vlg/2Tam3TOUVFcFWF/JnmBlMQHRyhtaM+A
BiDiivYwGgDSvJSi
       "] -> 7.57, CompressedData["
1:eJxTTMoPSmVkYGDQBGKV8/u+Pa6dbc/t/ozFZv48+/L8qct+qC60T/c+9pzR
abG933UlBnH9Zfb2xzu874qtsDf93Lv1VuJKe+PmOUGdy1fam/l78eUHrLS3
fr601WrRCnvn5dmCDd3L7QP/94hMPLbUPm2yr9nNlMX2DfrRRnb8C+z1/5c+
rVKcZR+1P2jBtfVT7Kv9K3Jmz5pgL+RvfD9ida+9xHx2Dt9bPfas67t6C3z7
oe6ZaJ90fH7V592T7d3OX1X9pTTd3mD7u2mL/820F5q+S9fg3Fz76un/dxXt
XWCfFyx8SM5vkX3OY8X4s5MX2Zer80UoMi+0V7PfEGlqMds+bXmTwzSDyfYu
8U8Orchot9eWnyx/Y02VvS7YXVlQOgpKe9ln/F8M9JKhfTiYVrRngAJVsLwV
XB4AcTCTpQ==
       "] -> 7.56, CompressedData["
1:eJxTTMoPSmVkYGDQBOJplcrrGybMspfp2fZu5ZG59ncECmMOHVhgP0NXbce8
L4vsz9w9dt7p0FJ7ixmdzLP6l9tr7U+o1jy8wj74QyR/zrcV9vNrRbZdqFth
n3CyafqdQ8vtjQ8HNlVuXGbfq2m60Y9tqT3vm5ufXDcssr9y2fhkqtR8+8zi
TzNl62fad4X81dfTmGK/+X75ifreCfah2QI9tYt64fTcmPu251gm2Gerf11k
/Xii/YLrU3fd3zDFvtxHWqnPe4a9uR3H/67Y2fbxog19++Lm2zt/+833c/1C
e5X8otrvFovtSy6mLK2Zv9je0GM2awbrIvsty7Rtiq/Ogdvbe37zGvsrHfZz
lSdvPOhTY9+24JeawJFsKB1tX1l9ZfneaFf7vUkCwYZihvZrwbSiPQMUoIsD
AEh3lfo=
       "] -> 7.66, CompressedData["
1:eJxTTMoPSmVkYGDQBOKQhI9p12bOshfl0/y28fZc+8irH74terrA3kZBKk+b
YbF9b5jgSa3XS+2nqLm3T7243L64M3T+ix8r7B8xTLt8xH+l/YMeDhWtayvs
mea17y7UWGGfs1P+Ya3QcnunlLu3DRKW2rfNO7C6S3Cx/bcnR/bOr5lv/7hE
uTn+5Ez773+l7edET7F/Hbvh0LG+CfbvRPr/m0zrtT8p/ZVjR0Cv/Vew+n77
d66nFf80ToSr91qxwNPswHT7ysju2OD7s+xbf367qbFmnn20Z90y2/iF9iuV
z37KubvIPklyS8oK18X2jU4Sc3ctWWhvYt6rd8Rqjv0a7heBiy5MtteYrrjp
XW6H/QuXSMdT66vt5waphlxQybZnz9tbeYcvyn79bVkB3u2u9v5gcw3t7cC0
oj0DFMDEYTQAPaCakQ==
       "] -> 7.57, CompressedData["
1:eJxTTMoPSmVkYGDQBOIDd03eTZGYaf+2sP8Hl8Mc+/0imVPffZ5vXyh/sJbl
+0J7tcM+zvUNS+yteas8rESW2bO2doTl/FhmH3PwxceAq8vsn1yQXBtqvsz+
nVV04MaUpfa1/9fcS45dYs9fKW935M0i+7+Phbi3v19gP81UP1YteY791Y3b
zXyKp9tvt9m/6D7/ZPs7+ksSF+hNsNdU9ans0u6zL3Tympfq0m9fduWh/6be
ifZrL9X+a3402V7nnfglg4Dp9v4ShhbeXrPtFXZzXdX7N8/+c+XFtOhDC+3D
p8kmz2ddYv+y1aqe+dxSuLtg7tko+EVYz2GBfef9GfaHD0+zn/PKX//Kz257
0cCTBpcv1EPpfHu97Y+1rpck2K/fd6m8O8TLfhmYtrKPALtH0Z4BCjLBfEN7
GA0AJEqcLA==
       "] -> 7.85, CompressedData["
1:eJxTTMoPSmVkYGDQBOLEi028TNYz7c888PadHTvHPvPT4V13Ps23F42IUHZ/
tdDe2eqqrkz7EvsP02SO+bAus/cvuCvZeH2ZvZurg1DqkWX2Pw7uPJshscx+
5osflSZuS+0V+hL411gtsa+J2VY3/fwi+zl/9+/Yd2+B/a4uQbtk8zn2k08c
C0ssmG7ft+lD7/mvk+xd/efkLJOfYD/7JTuLjUafveqsW7V/IvvtmZnkRPiP
TLRn4+38Ec44Ba4v5c7bj14Vs+2FXRbkHTGeb8+ru1ta+/pCe4nkw+wT1JfY
P8+u32fwaam9kPPEJ3sCl9kbPZkl9yRhiX3CheLmXxEL7P3A7p9mv9Lkup62
YI+9qxvIAfX2DO9S43t486F0vP3hU6UtnI/d7SdyaM9llzG2rwPTyvYMUAAT
h9EA5/WNzw==
       "] -> 7.92, CompressedData["
1:eJxTTMoPSmVkYGDQBOL78x9ePfd3pv2vi4o7KuTn2nsz3/w022SB/RwlR4Vl
movsP3m/rGLdv8SeIZUz55b/MvsTRY5d/jrL7dsLZz5xkVhu35Qeuf19+TL7
31En7VrXL7Xf5OV49deqJfZPjU52Gugttg8W2rlNWnWhfdkpw2sWy+fYe1cZ
5vQvmW6vpH9xhsCnSfY9LI0zlnlMsGd6yFjzg7/PnvvDQ/sKhn57UbGNy60T
J9prWAoeS5002f5I7sLPKnem2aeuKfSzPDbLvu3Fx1iLjnn20yUYPwd0LrRf
aZ0oWL1rsb1l+EXf1OKl9jWxkl2zri+1z7aPZJr9bbG90P+DzD8+zLd3SNso
+DR5mv3LzYkGlXbd9rxfG68tCqi3ZwDbnwel4+yXOzCuWMrlYj8XTJvYM6AB
mDiMBgCoS44y
       "] -> 7.9, CompressedData["
1:eJxTTMoPSmVkYGDQBOJcxvRP6x5Ms192kD9rddQs+8eOZZNOaM2zF1q4NldD
aqG9paLs5UMTF9v7HzSOW/BjiX3kwv7vbdOW2gc7bqrjNlpq7974vUckcwlc
nVYjc+fuuYvsRRV1+iYHL7T/3Lh+iZbufLj5iY5rGHaIT7NXamTzeKo1yf4P
ozZbzs1++3eMhi37P/fZsx8MvOJYM8Fel7Fppdr1SfYRjAX6Oh1T7acfFH3x
r2Sm/W3HysBP2+faCyTm3S36u8DeovEvV0bzYvt4xtwCpt9L7esf7j+T/XG5
fdvDPbxOKSvsUxS5I084LbOXS8yIl3+80H4SY4T5PbmZ9s8YTZxfNvTZizby
HLNwbbQXYOxbepa70F4QTCfaTwSr87SPBdtvas+ABi4xOthP2CpjD6MBRGaH
Bg==
       "] -> 8.14, CompressedData["
1:eJxTTMoPSmVkYGDQBOJ+7Q9r9X2n28tPm27UvGOWvcPmzXVrU+bZVzgqeV7X
WGh/6uG39ecnLLZvfnJ11SLWpfZuZXNet05fap+XlXvA2Wyp/YEg/qz9xUvg
6gxdGF1WzV1kf2DWnTVOngvt358SvGqoPt+ewXDd4qtms+wPrltx4i/HNPtI
i0sSGTaT7Oc+ytfe9rLfPk5iLm/0sz773LCFSzrKJtgf+FbK3Xhvkv0iz/2W
Ae1T7bkOTH35NHim/a0v/D1TDs2179ndZWz2Y4F9S4eNT0rBYvvK0Hcpk14s
tV834abN3XPL7TVPPpUMdVhhn3q7tcpYcpm99eUXnbt2LbR/E7UmyuLSDPvz
qRpuLUv77FcplBx6XNloL5P3/xePZaG9FJhOtD8sx+f8PdbH/vDXQ6e7Aizs
Dy3WubvRVMGeAQougfkG9jAaAPl6n6o=
       "] -> 8.19, CompressedData["
1:eJxTTMoPSmVkYGDQBOJVlUZuf3dNt+/clSn4/v0s+4kHUkO3u86zn5NrtS+H
f6H9rzVFFW/yFtuvU32+QvnGEvsHc2JOvMhean/11WrFXz+W2D/35vf9bLzE
/tLztf9F/Rbb72n22WSRsche/8KcX9flF9pHzLLd+PzlPPviMI4jglyz7MPe
rDLKOTfV/sa0hBYFsUn2uf/m/Ttyvt++Lp5Jax9Xv72K3Jvgl2sm2L/7dfDi
39+T4Or/sO2K7Fs+0z7r94I7D1Tmwc3femWmrt6CxfbWN0EGLrPvTZMrEeVd
Yc+yLefejPwV9t8Y9okeC1xm38VzfVLxlYX25rqP/sYyz7TXv1phIXiyz154
b4fGh8JG+9IVpa7T3hVA+Yn2x+5OnnxrgYf9zclJSTbZBlBawZ4BCmB8GA0A
HsWhUw==
       "] -> 8.18, CompressedData["
1:eJxTTMoPSmVkYGDQBOKjlvHSScdn2O9Q+p/6Z8Vs+xYudcaK9fPsp1Zkl2W9
XWCvkva6rt56sf3R6M3B2e1L7PeG97+t51hqbxT9/fftmUvsOxK5D7KcX2zP
ljnd1Of+IvvmAuVVk98vtH9cFX11+eIF9gr87Ps/Sc+zv23U/2/lkpn27iHq
95XLp9p/yE8PYmGaZF/EdN9k4cZ+ez6QMrl+e/+q+bUS2ybYT0zVV//gO9m+
xe98YZf+NPs0EFd4lv1q7vkbpnXNs1coZc7gi1lo/zXBP7P04WL7Ez6zs+6k
LbO3sj2uuS9ihT3EXyvsF3or797bvcz+Pdi+Rfbl5vl7VARn2sdwrg+MvNJn
n1p8PiFhcqP95tL9++d6FkLpRPtt4PDwts/N+e+8osAITjNAQTSYrwQXBwBJ
NJQt
       "] -> 8.19, CompressedData["
1:eJxTTMoPSmVkYGDQBGK3rZOZYvyn219giXr6Z9ose4PrTUmz/sy155mZeV3s
3gJ7d2Ffk4sui+3bNnVcW923xN7/v3PvHNGl9p8+71ReNXeJffVCS4sDtxbb
h3p+Eb97e5E9R4ngpG+/FtqbiLHbSh1YYM8BMlZqnr199uNy6c6Z9qu4zn3r
651qP8fogcuP1xPtv/57ejlrQb/9jM/RWRUa/fbGYH0T7DeF1DWeD55sv01a
dmqV4zT74p/nq7nkZ9mnpOandU6aZ++gHnabtWSh/b7Us/K72ZfYX0gSFi/q
WWa//mIOl1X1Cnueu9+KdT6vsH+1khPok2X2XhZLKz+qL4K7A2af+KodpUyT
Gu0zlnx24AwrtD+6vnbV77OJ0HDwtbcA07pQWtaeAQpgfBgNACy0mos=
       "] -> 8.22, CompressedData["
1:eJxTTMoPSmVkYGDQBOILrVZWLh+m2R8K2bejzHqWfWQm07rHh+ban0pk7nU9
vMBeR6rNoE92sf3MVeHR98qX2D80veER/GEJnH9327bdgksX2/st2PpAfcsi
e63ZKYt9Li20/2G3OFBj6QJ7rZ6klwwP59qzJcpKrsqYaR8278evVV5T7Set
EXGMfjjRfknxEo1Zbf32sS+UrVX5+u2NijdrhVyaYM8zJazhS9tk+85fO33O
l0+zT5tVp7+xfJb9zkXJR15dnGffFrpER2jaQvtvKdOfLLZeYv8v6dY/tUvL
7GUm3Nnya/MK+1+ca1kSZVfaQ/y3zL5A7emEg16L7KtP2p5mPDwTbi/EHY32
E8F0IZROtD9+USnBWtbPfgeY1rOfDabl7BmgAMaH0QDcPpdD
       "] -> 8.31, CompressedData["
1:eJxTTMoPSmVkYGDQBOLozVuFXqyaZi8vtnr5k+cz7e826/r+bZhrf/ZH+E+u
3gX2CgfepBx8vMi+M+3WPGW1JfaM8zQ3zZy4xL6bN2xmPvsSe5mir/maiovt
9Vddcu7UXmRvb20iOzdkoX3oQY5nUxQX2D+8qOI01XmuvdFX5rIJl2fYV12t
OMr/d4r9tqJmA+EDE+03lLfs5n3eb7/laPWGpSv77ffzFUk5u06079tycfLu
F5PtQ/Y5KbOwT7fnnHDt3hup2VB18+03q/RYV/9dCHfPRaDtQqbL7dddPtcc
pLDSXo1bbvqJ7pX2AQXeejkuy+2XPVQM/z9tkb1Mvv7aGWyz4PZuApvTaL/m
2hS3x1ZFUDrJft/fiBbWLX5Q2s5+IpiWs2eAgvVgvp49jAYAakGYvA==
       "] -> 8.45, CompressedData["
1:eJxTTMoPSmVkYGDQBOKQgpxvwben2gvUP9w11WamveCd30JxX+bYf+sW3/Oq
aIF9sYOA/cHNi+wzLl1ynvFosX1KxL5ZXe5L7Ps+7zR7uWKx/f31c47OuLDI
/sifT2cLbi+0j2/sn7nlywL7K/dmau7unm9/ujes/vrcOfbixVy8G4tm2IuJ
fdjyYtcUe5Nnk/+GTp5ov2bvJrOso/1w+ngZe3ld2UT7C8e9FJNSptjLpRvH
n1kx3f5iY/3FT5dn26eV7nh9XmuBve6nrNVWsYvs33/hODT9yxJ7ebC65fY8
rGcFOxautA8KLlrK92MlXHza80cdLPcX2WvsKOPcMG0W3L6DTfdUkh2a7Gcm
fjcUqiqyf774qPgWtiT7JTn5PW3XfexXg2kbKC1jzwAFMD6MBgBeRKR3
       "] -> 8.49, CompressedData["
1:eJxTTMoPSmVkYGDQBGKnXSULLzyfaj/VTpbljO1Me2898+/SSnPtGfs1vpo2
L7Bf+Jql/f+NRfY1hf++ywstsT+tG2nxt3mJ/b2sO/9zni+2P+lppP5OcLH9
gkqQgkX2jIx7am1tFtpvunR2S4TgAnvzeoXlS1jn2htdXl1cvn6G/RLH/Qpi
LFPtA/eK7ZNaN9FebUZ4pffZfvt/llo3Y6b0Q/VPtP8o+dn/CfMUe4P3LUkZ
ttPteW3PfF0WNdvexj3v5KGX8+H2fepuu/F6zxL7c0BZ6Yzl9sau9n/qMlba
/1jZN0XhzEr7nD8ngs5NWm7fa/POrGPPIvsYUQbV0qhZ9urVh3hkmSfY956K
WtfA3GS/RaPDL9+myD41R5dv0qlE+yvC68UCyn3sb4NpHSgtY88ABTA+jAYA
zMCSpA==
       "] -> 8.37, CompressedData["
1:eJxTTMoPSmVkYGDQBOI6h9+Tl/VOsw/ct/Lqn+0z7e9x992f6z7XfqvOzpL5
2QvstaVf9c5Zucg+bVKT1OwTi+0Vk3Y8eqq7xH7qprhXwq2L7RWEP0fW7Vpk
f647J9V570L7lC/fOc48XGCfzbU24XryfPvMHCV/jto59gH5T3ymusywP6zI
4PxlyxT7j4sDGed1TbTnPfXlwNNX/fYfQnoqzMQn2N+cnDwzcc1E+1uG71YZ
TJ5iP23+uhav+9Ptj6259e7n19n2N13mCfyyWGAfZX0sVjRtkf0URpXi6h9L
7C8cb+x42LXcvuRaX2F460p7q3W7cw/cXAkXh7nzTi7zuXMJs+D21QSv/plv
3GTvZ3xe83tZkf37T2JdrP+S7Ne/3siv2u1r3/OumHdTkKW9B9hfCvYMUBAB
5hvYw2gAeMakPA==
       "] -> 8.52, CompressedData["
1:eJxTTMoPSmVkYGDQBGK5Lam1jd3T7K9UH6102DLTfl3jGx4P77n2Rw9zXlAv
XGBf/evtwUkzFtkbLQhbuXLfYvv5Jw2S9TmW2B8pq3mvXLrYXr6gPNiwbZF9
dWbRdrvpC+2N3j7uXLtrgb1DFWdGFst8+x+3m1UNVefY/5o+9fcD+Rn2cpPy
Mm52TLGXv//b427LRPuObyCJfvvf/DuXO4hOsL/2+YXqgpUT7Xt2eyjFX5oC
17f+QwHTF8859pmWkxOPxS2wP/KU4en54kX2v58o3XkivdRe/4nL5Z+Hl0P9
sdJ+rr7YInWBVfZXIs+lzNi43P6l8olqiUeL7NMep53iy5kFt++34YY9L8Sb
7Hs5rjElnyu037RVsT/cOtFeuvP8RtVJ3vbR0V1leYlG9gxoACYOowG4i5tG

       "] -> 8.55, CompressedData["
1:eJxTTMoPSmVkYGDQBOKeRxt+XGGZZn9klYDqmsKZ9ndU9X6qyM61N7KdGvC9
eIH90c/6C/y2L7JXKHryrOzDYvuCfw1JmX5L7B33q9lf3bjY3vQsX8n8a4vs
tzNKXJW4s9B+BT8D12OGhfZsf0qjjq2bby97YNPKh/Pn2Lvdl2xTLZ9hr5/y
Z+Oa01Psr/lF6ZbPnWhfejVET/xcP5xOK62OVKubaP/gerzZrtwp9pZvGXe/
nz3dnv/crHurj8y2nyX7wm6t6gL7fb8W79rsuch+nu3t1r+vltg3NggFuvcs
t68VZ+gPaVxpf2bxHC73+ysR4gnyXN+PLbJ3KmM/YpQzC2rOBPupW67W7JJq
sp8Cpovsr4LdlWi/Pv/mvcsB/vb7hZWfz6sxt28E8+XtGaBgAZivbw+jAed2
nE4=
       "] -> 8.52, CompressedData["
1:eJxTTMoPSmVkYGDQBOJ50ktW7v43xf54TI7r+6YZ9m/ux9yYEDbH/t5vefM7
7Avsc+sPfJdyXGQfl3b2hnT4YvsNn/Iu+sxcbJ/KLPjs2/1F9oW2MxjWflxo
f+ngDBm1bwvs78hsMZqsv8D+arbfYhXjefY/JJ98csuYbX952uf4pVOm2wfr
uO1LdZ1ir5R/ToAvYaK9UbquSZjSBPsmkWQNu54J9mKm7t/C/SbZT5v/Zfr0
uVPtRXxOGbjazLTvqPmw/VzlXLg9ySpLH65lX2zvGFo97cqqpfbybYHev31X
2EfXBghzuq6yD99fwVU+ZZV96YVTPvscVthz/d5/e6HNYvvlOev+xf2bZa+3
MlT7SOEE+6wFIZ8vZjTZC5fnvz06t8j+8EnLn3eNk+xb9kmstznpa89eL3Cq
9raxPQMa4ArJ5v1bKWUPowGR05So
       "] -> 8.76, CompressedData["
1:eJxTTMoPSmVkYGDQBOKUuxuef7Weah8/wZ1VavsMezbuJR+X5c6xv+bE8F5S
aIH9Cu3w2bVui+zV9S7aXg1cbH/x6zQeu97F9nsFvl+++3KRvfCn+zOs/iy0
r08U19r7f4H9arXksHP6C+ybU/IZLLXn2ce86dnG3DDbnntV1m/evun2u/bN
XBPkN8V+X1LI74zWifYHtmxU+qIwwV7ExfbA0ekT7CfN5TgfHjrJ/nHHTVnh
qVPtt8hfXvRad6Z9C6/clH8Vc+1X1W45xPFogf3yphXsO34sgqpbaq/Yz2WS
Z7jC3mPDbMFMrVX2d18KiawpWWXvvXr5mZ3CK+yDvPKuKZgstjeqnLex9vUs
+6ya8o8xMRPs7VLPzT0wocneFkwXQflJ9q/UF6hXbQ2wf3Ffq8vX3cze7Orj
pPQtuvYMUADjw2gAH8GZoQ==
       "] -> 8.68, CompressedData["
1:eJxTTMoPSmVkYGDQBOJbn16++zNnqv2+bbtPZj6aYc9btLqqYv4c+wPXOaP9
5RfYf9WTEJkQvsh+8ezbpntSFttHTH+l0Ltgsb1acuMsvj+L7INLXN+d4llk
39jK6dQuu9B+VujEC+a2C+xvXpwdK54wzz6O9UWEz6TZ9qZnCoxCt0+3L+8S
f/Q/eIr9373Jd03aJtrvB9szwd4vcMFujsoJ9tIbJ8xbbjnJ/n9JUqVI/VT7
GSbO9kEMM+39nwccYzKda3//lJnMoUsL7C2X7I2XersIqm6p/WaW02eZFFbY
uy1kS6zjXWX/Ivpmm3PEKvvXx+tl1T4vtxdRcr3KxL3YPnWKsdLHA7PsSy5L
uClET7C/sGZ+Z0Vpk33LinUlnhuLoHSS/W2wPQH26bdq20tf2NpHgmldewYo
gPFhNABiEJhG
       "] -> 8.8, CompressedData["
1:eJxTTMoPSmVkYGDQBOIQn05fC5kZ9ucsf0xY+2eWvUDxgsa3xXPtbSal1a+Q
WGBvfps1fCHzIvut9VcPyf5cZH98t3invsxi+5TC1cd8oxfZv3/1xzaqfKF9
kZvupbuNC+x59thHPoubDzdn1cFilq5ts+yvL9/5cLfadHsNthZvwbuT7a9M
mDllv9NE+7A3JzWcfSfYz7tzybHr5gT71Ylb7k95Psk+x17HJjBkmn3SxazX
Tlqz7PvEC95mZs6zP11UsdHMcKH9hZsWOTt0F9tLGzI5NG5bap/ecVrYy36F
ffb77nOnrVfZt3m+L08rWGVv9Ul1ydzny+Hun9FqaFcxeRbcXoefalZaok32
jmC6yD5Dg+d9SEGCfRXv2o0hvl72fzjkFB93GNozoAGIuKI9jAYACPSRjg==

       "] -> 8.85, CompressedData["
1:eJxTTMoPSmVkYGDQBGIP/+3TZcKn2u+f1G2qe3KGvfm1+Mu21nPsy6pPFoYy
LrB/sopJoYFxkb2qkH7Xef7F9kca4g7XWi223/9twumuxkX2k/Ra2tf3L7RP
Syt3vjJ3gf3sKhHvWxPm24uv2V1mXTLX3jnxCeeZp7PsF96/IH/Zarq9nbXM
CrOnk+2zPrhYHw+baD9vJ8c+W6sJ9ixXl9U0nZhg3774f4Di00n2wm2fRZYV
T7M/sUxNVdh6lv3jR98/H5kwzz4TrG+h/Q35upcfwxbbr8sKDUt8utS+cavO
4QvFK+w/PEkt/F28yn7xpy0XZHevsn/k9rdTyXOFvV9A3rXtHovh7tkUofFk
Y9gEezP1xh0BxU32PC8dczKsiuwlSo4t+vYkwT5eZL68WomPvT04fEztGdBA
Glhexh5GAwC4JJMk
       "] -> 8.86, CompressedData["
1:eJxTTMoPSmVkYGDQBGLO/FemPydMtZe/N7c98O8Me2PfwJsrM+fYn+F54G/x
eb590fro/Vnsi+x33F78Y9v/RfaVV97od2gvtjfxjHZYkbvI/oOMMHtM6UL7
VzMsHqzqXmB/8lTRnvi6+fa7FdlVJxbMtdd+FnR184VZ9pNaeUV38ky3/8f+
xpD5x2T792B9E+2ff2+cZhc4wT6765Sf7+MJ9hXGZs+kP06yn+C8oPHB9Gn2
GkueOt6OnmXvPL1415ON8+zzz5g/Uo1YaG911jQ9MnyxvfcOvkkMt5ba3/l8
6OHdyhX26T7BIWVZq+xXTi3fULt5lf2sVfNarxmssN9ZE+WkbLXYfrWZ3q+X
b2fZpy1fVshhMsG+9OOJIOeaJvviACHO645F9rlg8xPtdzUE3FYx87VvSqhZ
MvuFqT0DFBwEi8vao9MAg7OZcw==
       "] -> 8.85, CompressedData["
1:eJxTTMoPSmVkYGDQBGIB799HNA9NtY+ZXFOiyD7T/rPYtT02+nPsl79YZvV2
7Xz7iWndq9gvLLRvyYsVjzy6yP5ewEev45cX2QdeylujJ7HIPuHUHPu7Sgvt
cw+dutStu8D+QPuEjGeP59mrbz6inn5njv2h05FeZYmz7Pl/dZw5+miavZZ1
+Ou265PtKyVESosqJ9rf/3TVun/SBPujwW94p8VMtD+ykV323NzJ9nd4NDLN
w6bbH6p6HijUNNs+au25hSdPzbe/tzDZWXvzQqi6xfblV7wmP/q91L6v4e71
9ZNX2JdMaNwYVLfKvtHc1mfuylX2h3PtrO0UVtgHNv7ZfMpisX3/vR/Pnl+Z
ZX9sSRzbL+sJ9vGVWu6Vzk32P97fqjjAWWQfB/ZPor0C2P0+9qFtl2N9l5ra
M6CBb5tA8jL2QmB1OvYAIpidHA==
       "] -> 8.93, CompressedData["
1:eJxTTMoPSmVkYGDQBGLjR7L61elT7YUdCgurNs2wn7uS232y5Bx7DeFlMmsa
5tuvDl03X3TNQvsfm55ZPupZZH/Woov5/axF9prPZ/yxvrbQ3qRO8nzozQX2
qmbV135cmW9/b9KME5O859nPOvOA4UHuHHv2M0cj1jLPsq9J0m6eMmeavZPx
l97fByfbM3ml8/zpn2jPwbJ3RtLzCfahiV+N9E9MtJ+UG55X7TfFPkcwVEXE
aYb928d56sLL5tj3+f9tfJ+xwL72n5pyPt8iqDmL7RnXZecoyi2zzzDRupcw
bYX9ml8PlwqXrLLX7jnDZDVvlf3b+qzjb8VX2MsWg0xabL9Kdnt8wolZ9nz7
hFRP2k2w/9Mv2DDVosl+RUVzZBJDkf2WN3pF+usToOHgY6+736NUT9jUngEK
loDFZexhdAeY1rEHADUKkQk=
       "] -> 9.06, CompressedData["
1:eJxTTMoPSmVkYGDQBGLr61tfHI2eYh+48lGXzYPp9tOPX5r2p362vU2dZ5l/
2Hx7+3MyB9mrF9ov6gyNWue+CE7DxKcp2HMWty6wXzfzv0Uxy3x7j90it3Ys
nGuvukbmyo2Ls+1dc8TVL0+Zab+nzuSQRdI0ewU+pTzeHZPt56ctnjJr40T7
R6bT3pa4TLR/Wf2rYk7BJPutFhfMBM2m2osphOztrJxpn9yyIqTQdZ79yf4t
QJmF9gZ586d3zVxkv/ZT9uqXnEvs+4wKI967LbM/zfX3RvuuFfbvJL/eS+9a
ZW/KM+tv6OZV9usdM+POi62wZ3Ht+xwistjeZ1P1pl8HZtnfem+Y5CsxwT56
+gbrA3JN9n/+aWbovii0b5rLL/WIN9HeSN/ncKant70KmNa2Z0ADXGBxaXsY
DQCiE5C6
       "] -> 9.09, CompressedData["
1:eJxTTMoPSmVkYGDQBGKers91C29Osbdck1KQrDfD/oez9MynD2fb3+EUiLpU
Ot/+QXpT7/2Whfbswbx/4p0WwWmWaQdUvVIX2ot8mDQ7s2KBvceUU0pC4vPt
/+zd4io4Z669TFGkYcCh2fYrN+x4eq5zpr2J0enD5iXT7IM1lW8m7J1sP52b
LZbryER7jSP/gDom2u/9NuF0V+Mk+/n/LbYlWky1b22q8k1ZOdNeeaX9lomR
8+w1weoW2s86EWSssHCR/fet7TFhPEvs+5emOTipLrPfxdUd/W7OCvs1uax7
nqStsu+wP65c1bbKvpHj4QKL98vt7UO3bxP9sMi+HSw+y37yxJwN9zgn2Put
79QxZW6ynwF2T6H9NDCdaO+wYPrJXYu87Rfcvngwfaq+PQMU7Afz5e1hNEwe
AAsQl+8=
       "] -> 9.11, CompressedData["
1:eJxTTMoPSmVkYGDQBGL1EF25dWFT7ZsiXjVk7Z9hr1aZzn+FfY79iZlP5toG
zLd/d6Aga1nOQntr8Q/J0/UW2SeoXviZK7fI3vyuwbRgn4X2YRsD455FLrB/
w/XU59O5efacTmp6ydlz7f+fXT7p9rLZ9uKnNZdxJM601+578/qjxTT7q4ff
hVVummwvkmPwfN7ZifZvweZPtJdc9n7Lo/WT7KdKrz0WPH2qfYriyvk/lWbZ
L36nouj6fp79qU0TrpyvWWj/dTq/PM+BRfa/89ZdLhReYu8/50zjCY1l9u+b
upze9a2w//mN415p8Cr7Ky80POYnr7KvldPerHZ3uf3FTv1O0wuL7C+DxWfZ
c//Y6C3OOcH+tH/B7o9vG+1jOz4I+awttD98+6N8lmaC/aKTr/Tl7Tzst4P5
BvYMaOA4WFwBLg8A0qeayg==
       "] -> 9.15, CompressedData["
1:eJxTTMoPSmVkYGDQBOKekP4NX3Wm2acvuJ0s5znT3vmNurh76hx7eYuSU/mN
8+1ZD9/OZ5+y0F7W7RzTzuRFcBomnlWf7bJj4QL72eXfDC/Fzbd/b9i/hOfR
XPvtq9b55v2dbV+x6NLRKZdn2k+52vXQoGiavcvp7d8f7J0M1T/R/uuBJ7wT
OSfaix69dLFWbpJ9yvmlu89emmL/+H7s6Qa1mfbPN0wuvjhnrn0BQ3rp52cL
7G+n9ptlBS2yP9ltOqHuwWJ7z5KAJ8ukl9lP/Ks+d3fXCvuOJSfVueNW2fOk
uh9Y0bDK3l76U963d8vt8zVYDOv+L4LKz7JfVfl2ssfLfntel+sLnG422v91
fGB3xq/Q/q7tp6r7lgn2P5MC4oy+edozOoHEFe0Z0ABMHEYDAAiHmUw=
       "] -> 9.11, CompressedData["
1:eJxTTMoPSmVkYGDQBOKJuu9jf9pMtq/y2f3TR3C6fXJ2+9QFT2fZO6Tkdbt2
z7Ov/3rJPf/SAvv56U2W1XEL7YV+KL9SUFlof9ty1ZrtVgvg6u7wJmxTfD7H
fgKzjG70gtn25pc//X2qNcv+RNj/JuGIGfa6TuUFbaem2q/lWfNn7cbJ9ilT
o47ZNU2yr36oIjTn/iT7r81/jWQfTrG/wX+9WnLeDHuD1dMm2bvOs/fcNle9
i3eRvQP/33nxzEvsz9VFv9tpu8T+VaxEb96mJfans9bueOa1zN5zQYXO/uQV
9mu/tTE+Zl8Fp3n9eeb8S1punwq2b5G9YrvGpo6zM+3TMgUurNDrt5eV45xw
PqgR6q9C+9+rI+cdPpZgb5P2NMDWyctex+WdaV2joT0DDjCBdfKnoHBxewCx
aY8h
       "] -> 9.35, CompressedData["
1:eJxTTMoPSmVkYGDQBOJV1XIFO65OtmfLauIWr51uv3Wmv5m+/Wz7/W5eTldO
z7OfHDb7QM7LBfadf74cXZ+40P5xpdJyG52F9l75N7QLwhbA1Vl98NnTyDrX
PvRBLPP5I7PtT/rO0V7pN8v+01ZTsbm5M+yvhLwTqbs41T7cauuDf7sm2xdp
HVP3qZpkv08/O9Xo6ST7accvVtkdmwJXr2bDcJz921z7+kV+pz/dXGjPcDtz
RfSJxfa/5i0N65BYYj/z6WZljXlL7Ct23uti119m//Wy+P421xX2ai9Xb5X/
uNK+1uP720OPV9pzdqRsYQhdbn+iUzDhfc4i++tHVc77r5tpv52r7QODTL99
2z0h2WOdjfaWN3Pv35crtF8x6a9P1J54e7Fgx8z+nV72Hv8+9Glzm9gzQIEM
WFzKHkYzgWktewD705ls
       "] -> 9.32, CompressedData["
1:eJxTTMoPSmVkYGDQBOL7wQ0KM3qm2J/a0FiiKjvD3kd84SWWitn252sPGDy5
NM++r+S7ZxnnQnudWyrrROYutI9L3G16qWSh/d524zipeQvsr6SWiotHzreP
216Se2HCXPu3HzRW7fGbY7/aVvK3z8JZ9udmmEVHLJ5h3yK6917Ty6n2dlU/
PB5snWyfuvdUv5zdJPuZO3Z3fY2YZM+fvsfERnGK/dETZ3o/TZtu/+nG3Qnv
r8yxP5T/wsVXZaH9ApHTTxyVFkP1L7ZfHdGverBwib0i+4Tz7FbL7FMXhaSu
yl1hvzw0RURKehWcnnD29iTpmuX2s3XE/vHNWWRvF98kl/N0pv28rBYZB7t+
+yOPnXakpTfax7xNOLTDsNC+m2HutZhjCVB97vYMJr8//LqmZc9AAAAAqtGP
Aw==
       "] -> 9.3, CompressedData["
1:eJxTTMoPSmVkYGDQBOITUzZNvK0w1Z7/mvbeU2Ez7BXy9oocPDjb/hIj24uF
vfPsV3JO/fO7ZYF9ScJaDeZdC+wnnmiabRa7wJ6pRWuVzt159m6LojfnS821
DxVf+mJnz2z7+FRtnmnNs+ytDHtzn2vNtPdcdm2R4dzp9rFOj1++7Jpqn7td
R97k72T75e3XWWY7T7ZnTo0td0qfYu93duaW+RLT7T+8nhFkVjTbnpPvXoOg
ykL7rVXJTi0lS+x5DNUW75VZZv/g6pFPCzyW2hs/b7Q8u22J/eHc9/W5S5fa
G6YeccwpXW4fPjPpgdS5FfafcsO8pm9eYb/PTSfvv+Yy+zdLOYAmLoT7c9XZ
dM/PJr32MfKzj9tOaoDSBfY8lzac5bgSC/WHl30amNayZ0ADEHEpexgNAJRO
j8o=
       "] -> 9.37, CompressedData["
1:eJxTTMoPSmVkYGDQBGLvPwdPrXaYar/du2DRsUkz7C+93WXffWK2fYyu8M4F
BfPsL0XnLVkXvMBeujfdrG3WAvtb12/46GousF97q+zzt5559stYbXwnH59j
D9Qkfcdqtn1usTvfFetZ9iuCZweefD7D3ummuoJQ9HT7N2Gd9hGVU+2vd1Z6
fOeYYj/1yqu4edMn23O5Gz8MOj/F/rHx+yn7Jk+3F1nsqfnEco79uyUvnPtm
LrRfvfBX6H/2pfYCMnnt26Yss5+iuzumuX2pfVIB4xH1g0vg/M/aR57utlsO
9ccK+/R5PBkFZSvs9XgkNDe+Wmq/tPj9xm1BC+1VX9bWibPOsHdPYD5kz9Br
X2204ODNxAb7gl9KGxgf5ttnq77gnCcdZx++zFy8+LSHfXbA2mSrMB17BiiA
8GXs0WkAwH6Vyg==
       "] -> 9.4, CompressedData["
1:eJxTTMoPSmVkYGDQBGK1l/khX1dMtpfYeXlGcPR0e85O87sbeWfb/0tpmlBx
ea79Q+XkPzKO8+3nzOnIEnk9z767Xk7506S59smWyaqu52fb80yV85FSnGV/
RlJbs+reDPuFxzv2pLDPsC8rfebvbzDdvrLx7L7tztPszdluzRZnnGpfP3M2
0KQp9mkpyeVTX0+xdxePLbnoOt2+Jm+2l4XfbPu3rV78ar0L7BXDRdfd4F5q
/+Ojw1ln+5X2lrkmHx43rrJf6Pvns8TE5faHZzF9v2O21N4CbO5S++X3w2aZ
6i2z18uY0TYpYLn9JcOfbN6sy+2V73Y87Zm6xH6i/+r+e44L7KWP7mLfkzcN
6s9ue7A1U+vsRfouuzHb59lXJG25fd4qxl7+4sIylSZXexUwrWrPgAYg4qL2
MBoAO4KMnw==
       "] -> 9.66, CompressedData["
1:eJxTTMoPSmVkYGDQBOKKRpsYptLJ9jEv6l8cEJxur3gg/WTz4Vn2n+e3b5Df
Mdd+fmGCb1nMfHsTW61lCZ/n2QvqP46WXgwUrz4ouufKbHt+SxeVROlZ9m+0
/t6UPj3D/ruR6YMvvDPsFU6dmHjSerp9+oft72aGTLN3flSwJIRlqr3QmY/B
ZoVT7BMKz/gHvJ8CVxd47ZnkorDZ9ssXypSmNSywv7RSrurSzyX2T9Uehq3X
XGlflVt1uqxllb3ksTV8sbOW20fnbjjz2Hep/Rapw+eu8S21/7o99Yi41zJ7
RuvcZ2cDltufUbgk5Cyz3N7jWY/6waVL7Bn89csjHRfY61ximLGobpr9quaf
0lPFu+1Pcnz559VVZ+/omrTG0izPXtpcOunL0xj7nn//LO4vcbf3ALtb1Z4B
B4DIi9oDABO0kKQ=
       "] -> 9.71, CompressedData["
1:eJxTTMoPSmVkYGDQBOJX/4/us2CZbL9T6e358z+m2Ut1PjxUcmyWfdfHz9Nk
lebaZzrekIu/ONe+zPnb/6T4OfZuAjVtEypm2YvcZeTdN3GGvfJ9+XcH5afb
W+3YI6XMP83e4KHt+aNrp9qrce1vzvCZat/+vijsr+BU+1qJL1wLNkyB85uP
XD4Q9nSa/VOtE5t/b5plf2npi8LjPAvs/689HPr52GL7mJcSmz+mr7R/tprj
CvfudfYinJM/NbWvt3+tHb7k78+V9qXiqVLzMpfa++/OfKPxZLF97wdG9/8R
S+yzHZ6dc+BYal8Dtm+JvRPfb9eCjEX2r64tz9z0fI79vBP8zXGMU+wXeAYs
zuPssH8H0iZSbX+kao21bVK2/cml3hcf90XaX/jd+cfghav9MX/eZdNMde0Z
0IC+aZwkf6WwPYwGABkXmRs=
       "] -> 10., CompressedData["
1:eJxTTMoPSmVkYGDQBOJnZ/LUF/RMtjdyqp+8ynK6fZmD0a3Ai7Ps69t+fr2/
d679v1y9wlLN+fY3paK3te6bZx+454Ror+1c+00/ZFmza2bbS6+5ILnmwkz7
TZpb+ByWzrDP+5W17/CT6fbKIUc8nvBNt7++VvYyi+U0+1xtxhMzeKfa2yde
eO7aO8W+RnKPULzFVPt4ng3Ff3dOt794ZfKs7xdn2395vb/a+sECe3GrZlGr
5qVQ81fat+q9VZH4s8o+tZl3ZsL55fYMV7OWCjgvtb/dOP2Vwo0l9gc8WJNv
/1hqP2+G6DYjluX27cZ/XTmPLLPX+rO9XMZ3ib2XyNVnIf/n25/Yn9RhxzfN
Pu/klS3vdnfZ77J7qvAzo85+blJ+d45wnv1LyzVcikIx9rUvVDm7+D3s17hK
ssVwGdgzoIGJ7OWxqsmi9jAaAAwWkUk=
       "] -> 9.75, CompressedData["
1:eJxTTMoPSmVkYGDQBGLvVbHHzqZPsv90wnjCt85p9h+jROw0Zsyyf+b5NEPt
9hz73mu3WmTfz7F/zvB1Iu+VWfYz5kk2sy2dYf8iT+TJ7aPT7E+LH+MoLppq
/6neeefdpin23p995z7Lm2L/52ZS6g+3KfaL0yIa30dNsZ/JY3n1yrQp9kVL
dqtktU21j7XMXezLOsP+42IWUcf5c+yLhW6XWVQstD+wd1lMxLql9jGnfQPr
hdfYGzPIOxZ922D/34npXKTuRvv6tt2r7ziuthduWfgqeMdS+6saX++W6C+2
V3F6IJocvth+z/Fl+kZHF9ufPnfVMCp7sf3V+yzsMRoL7ft7X61leTHLftZh
j3+7+yfZr+HMYFFWa7OfBfZPhf3vbGdhrdAMe28bu5L/pWH2RWD3ONonL+/5
Kv1d2J4BDcDEYTQAS2GWkw==
       "] -> 10.13, CompressedData["
1:eJxTTMoPSmVkYGDQBOKvBwPs9vNNsg+X/5TYFDbN/lFaZPDJyFn2DzZ8Una7
PMc+SztFXP3QHHs9JqVJKetn2cseXnpLNWKGvZMWf/WBimn2HU7VPUXGU+3Z
Gc9+/Zs6xV7m2/o7+52n2C8rULywwGiK/cRqu5f3QqbYp0+skI6eOcX+yl3n
07ydU+33GP3ackJlhv2p3fy2LV/n2L997FA5ZcNC+xSzo82S15baTxbVerqq
do39U7GVgSHKG+0ZX83+6xC/0V7gSrWf2YbV9u83mJX/OrLUnj2moddec7G9
r6Ql+waFxfYna67f+Nm/2P7QvOPC5w0X2z9UV3xv92UB3P3bHi3vrCydZD/1
3yyxE+9b7U+8k7SXe1hh//nGfZ5FczLsncH+CrNvL23t45F3tO8G04r2DGgA
Ii4IFwcA/12Pgw==
       "] -> 10.18, CompressedData["
1:eJxTTMoPSmVkYGDQBOI7epx5O2Mn2TtZcL9pKZhm32jB+4elcJa9cAifn/qK
OfZhanwa63zm2B/j4r3WLTrLfu4p7jPWU6fbn7zDtWDSzqn2ShZcT1wKptiv
vMM5I2jnZPvmy5xa7MsRtAMjV0AD0xR7D0euoAlNU+D61nrxXIieOsPe8y7f
gUm75tqrKHJ6ejgtst8czG2WvnyZ/Z9TfE9+T11r3/2mY4LYzY32Lr86trZ/
2Wg/V4KP2dZwjX30Q67wHYeW2j/O4yw4eXeRPVsE512eDYvsD7ZyMrdxL7b3
9eLcMXvKIvtH5hxXjuQvsNd/xiMXd2amfdJlDqXjyybaP1vKxXPOu9W+npEn
gYG5wj5oB/eHJQXpUPeF2m9T5WTI83ay3w2mhewZCAAAlmN8/Q==
       "] -> 10.28, CompressedData["
1:eJxTTMoPSmVkYGDQBGILPz/fiPsT7Us5Fv/ji55mH7v95P811rPsa0RKIjoq
59iLgSiZOfZH3RYcF9sw097B89Y8HdHp9gLhTmrRolPtMxyeHdW8P9k+fNbm
uX0mk+3n/F+nyqM62b4r6yCrWPJk+zVLH/ouPz/Zfo+3SJlT1RT7O9Mrj1Wc
n2rfdCHe/Mu1GfYVZv8yLnnNs0+8065pvnCRfaThw6ACneX2DIxfK85qr7N/
fzyjvs1ik72oSjFvTvQm+4Dp9S1+C9bYTzeqs/t9b6l91ZG+u1U7FtkXFZZ6
6iYvsjeLnxz69zjQnM68qS+9F9nzrz+fccVkgf1i7ob6VueZ9uLCeqzHiyba
z1C0NAv71mIf8J7n+PH95fYlki/Ytjin2+/IndfW4x0GVedo711uyvmBRd6e
AQ1AxPntYTQAexqJtA==
       "] -> 10.47, CompressedData["
1:eJxTTMoPSmVkYGDQBOLkjT3WCnKT7FMUuSNPOE2zl2A/JFfjPMteqVDu+O4p
c+xfujNkvGKZY79T4sDkDQtn2gvPumLdwTHdXnrKpmPyplPtm2om3WlinmJ/
hfnkz0O2k+G0ct+EwO2Jk+15dZ9HTDk72T5X+uXj+Pwp9lVNWwJfX5tqb5R6
686rtzPsl6pP3WFqNM/+gdHViF+TFtlbxu9Ib5Jabi/ouniRheY6+66ygnQp
g032v3R85Sa7bbLv7dPZuK97jT1v6rL0F/eX2h+a33fs9f5F9mrd/8WYKxbZ
v0wp+vT04iJ7Vzm3lYLei+w3ME9tOaC/wF6WxfDJ8ciZ9kyHuzaE1Ey0r6tX
Fjd/22LvdfjTrMgZ5VB/pdtnylXJiUSG2ouqH32s/cvRfumu5Vcdv2vZM0CB
JFhc0B6dBgD9fpM+
       "] -> 10.57, CompressedData["
1:eJxTTMoPSmVkYGDQBGJZpXv3RL9MtD9+OPFSntE0ezXh9xpL7GbZP669/GtG
+xz77gx789lCc+z3We21O9M20/4Tj7Xb31/T7Hu3vzJnU59qzxVZy1D1crJ9
2sdP8yOcJtsvavAWW2Q42f7tJcfNR5Mn27u9uFp2+MZk+5f+Cdef1E+x/9ov
A7Rxqv3CLY0fxRln2h/8eOWrktU8+78SB7c2dC2yZ7hwI+e67XJ7S4G2R1sl
1tmf1FlxYIreJvvHi0x2d8Vssj8j/i0oceMa+/NpC4PPHF1q75G9PWjJnkX2
IvXzYnckLILztZ9Ws34wW2RfY2saddVggX3xi2MLV4TMtD/C4yUtUT/Rnu3a
bJWZrK322pKbHqSyVdjrgOkM+10MR1ZPeR9qz3Mn7k7UWSf7bFXN6nOCmvZz
Dxcs79wmYM8ABRC+AlwcADuJnFk=
       "] -> 10.41, CompressedData["
1:eJxTTMoPSmVkYGDQBOJfiy8ZXfs5yd7T/niH991p9g/fSDySLZxlfyGn99Sk
eXPsZepfnX3vN8de93/p0yrFWfY9E+MYkpdMtw/83yMy8dhU+wYPRiXWjin2
Nt8yV709MNk+qV5CR2bmZPvzVo6vWdZOthfP3a2x/8Vk+6UX1y82TphiX95h
PW3/vKn28Rpnd0wMn2G/jPlP08HAufb58gdrWb4vtPeRX+X3LnCZfWuUwXHT
d2vsp0skJrV0brT32VcjELBto336RPeLPv9X25dIeBnnPVlqnxb/++M+3sX2
P8H+WGSf8p6zPzd4sX3Pi5XFb58usp+XYdpdsWOB/axd85Ykm86y95om9Oeq
3CT7ALD7W+1XRLl/855cYf8pZ8nPFc4Z9p1g/4XbF/9f7Lw829F+mrLkXrm7
uvZfc0D+ELZngAIOsL+U4eIAZQmexg==
       "] -> 10.47, CompressedData["
1:eJxTTMoPSmVkYGDQBOL1xfMLaw9Msv+0NUXj6P1p9p2x7ZamebPsDU4IXpi8
cY79pAP7Fhh2zLF/FWrCddllln15OkPM4TfT7Xl4ZFQ0/0y1lzrfvFJ84xR7
5pVP9ug8mmyfunBi76kdk+1NVK2XVp+dbL9gg/mbPu4p9nf33/UKjptib/hV
aRpTw1T7zWXLdrXbz7C3iU5045Sca//TdW2owYmF9rf6j1rfElhm/5x3QvHc
C2vs2T92BCeFbbRvkJ4d4tm/0V5yUdHjFY9W2+ewnPxy7NJS+11s759/Ul9s
f9lFKmaW7GL776JT3bZXLbY3tT2uY/Flkb2rxG7Lx+cX2O+6eVexJXKWPdvN
P6eX6k+Cur/VXnvqp3KBpxX2b1t9JH0mZUDpCKi/XOxnbXOtW8ypb88N5qvY
M0ABujgAE/qWCA==
       "] -> 10.74, CompressedData["
1:eJxTTMoPSmVkYGDQBOKOBs5ey/mT7MOO353YfGqa/YUvzhaelbPsnb+z/d++
YI69SPXitxMi59jX3L5688ifmfbPrDmO/Zg/3X7aNX+f52un2m/22L7zbfQU
e5tJdnw8qybbq1zpaa1om2xvsPmpp9OMyfbZfIvkjT9Ohqurk5h3OLhrqn3p
BqNfuaUz7C9nGxrrls21XyQh1sHGscheKkdxz6TCZfYa8b+YX5uvtY+6x/DO
e+5G+13OX0+andtoX+J7tElCd429w+O2as03S+09vT+58DMutt/+J2dewrNF
9pXHQ8PMPBbbz7fbLXr20CL7zatVDJ2XLLDv2KU3r49vlr3MypdLFf9PhLqj
1b4E7I4Ke7Ed2dfln6fbb9+/ZMvFiHD78re/Hv9hcrH/w30/4shJRSgtaM8A
BajiivYAQVqeOg==
       "] -> 10.69, CompressedData["
1:eJxTTMoPSmVkYGDQBOL8srumgnWT7E9wfNme1jHN3mLDhhf84bPsXe4ai51e
Pcde50RvevnzOfbsbSndGedm2X8O/F8xsXeG/QFGoctec6bZe1WKsKl6TbVf
fOzU7fD8KfZ7bhd0rTaeYn/kUVD+cXkEvebsmgPF0VPsnYqMFDnjptrbTfzY
0nNrun0uw7y+MI859i/uS8/fHLzQfm/eQb3f6UvttUxtD6tvXm3/ZmbK/pnr
N9ifrr2jrfV/g71X4NGw6cmr7QU8nh1OvLrU/q9w48auKYvtCzn1biVsWgy1
fwmc/+CG5a7p6Qvtr0VL6B10nW3vHxW6aOHZSfbbf+m/09vQZh8AMk66yv6S
aflTxbsZUDrC/vr3H7LST5zt9xV/XaNxTdeeAQ3AxM+B1SnbAwAQIpso
       "] -> 10.93, CompressedData["
1:eJxTTMoPSmVkYGDQBOKlUQqvb2dOso/nkfzR0DzNvlh+pubT5Fn2NR+OT193
c4795ipXsyNv5tjH/2bas5x/tv0hu/NdnAdm2DOvnnj54J5p9rqf966zSZ1q
P6/itoNlwxT7w/5Pjz0yRtC/bial/nCbYm+Q8oCZL2qK/bcMBwH1oKn2x9Z/
vH9ry3T7iSJxrG9059iz6p5KyVFdaH9rMaPjHI+l9pYqP03/Ra+2N+y1dFNd
t8H+/QcQ2GB/hv/fj0umq+0jsgumGZ9bag/mzl5sXy30hT/x4GL7Q2B7l9hP
u250//WpxfZiD2xrb7QstF9m8aVIs2m2fdQanvsdTJPtLUz5i66fb7PXebS8
KPljpX3gzo0/eJZm2s9NP8qSwBNpH1dr7RtU4WrfbNZVO09U2b4ATAvbM0AB
TBxGAwBkd5t6
       "] -> 10.98, CompressedData["
1:eJxTTMoPSmVkYGDQBOKDe9aVTROdZF+Xrcq7Rn2afX2+qe8ajVn2cceLFK5v
nAOnJx6dxzz9ySx7rcN6d6fVzrB/mt0rrNM3zd5StCO40WKqfa7IDrfG7Cn2
ViItzo4WU+zrMmXfaqsj6I2ZgR+yo6bYf93/buU0z6n2ErlH1dYcnG7/4xiX
VLj3HPsvu+9lTvNYaM9/oGO1WfJSe4nCq2lrDq22PyLgzGN4ZIP95t13U9s4
NtrnSV/Z5pi72v6N6L64h6+X2s8XfmHZOG+xvVjm1merDyy2n565/d1phyVw
/sm0+we9ixfaax2z4g2vm23vlfH05urPk+yjD0YdCNvQZj/hyKzPYU8q7Y8c
PvUsTDzTfqEkwyzGBZH2lsINxowWzvbLwXxNewY0cHT3qrQwUUV7CC1oDwBQ
m5II
       "] -> 11.03, CompressedData["
1:eJxTTMoPSmVkYGDQBOLoCQ2zYvUn2Xuvcs55YDzN/o+2cGue1yz76Oij1j8P
zrF/cJL/mY3eXPvTIKp2tv1nvzqD54Uz7SPVuO5OCZlu78EtFLD59VT7vXEp
uaLvp9jv3G8U+GLZFPvyDt6aYwVT7LcpMJrujpti/3XHl7frfabY1x0r2KLA
ONX+ethHoEnT7T0dzq4Tj5xtz2GXbBE1YYF9GVjfEnv56fv+Tu1cZW8/4zNI
p/2TS9uBJm+wfzL3T8K5x6ug9i61n7Q1dM9k+SX2U0PabxxIX2JfAzZ/qb24
yoK0691L7K2PsAFNXmQfDlR1pnKO/buqiSAd9nNi9Tdt62q3d2LKKtt7osre
UvWqotmHTHsLMB0Jda+Lvc/C2ZNeCWjbM6CBewfSedy5hexhNABTW5P2
       "] -> 11.25, CompressedData["
1:eJxTTMoPSmVkYGDQBGKmHVOXfPaeZP9v15t/M1Km2fe8CHzuGTXLvnaV7dQX
zHPtT2kJvz6aM9f+gd2RqGvbZ9t/fr7Mur9jpn1pWnWfTc10+xu/GEO0DKbZ
J/oXH2mTmGp/due05coHp9gv/7n6z5aeKfYWKru6DmQi6M+VjUGTvk6x3ymw
5VjWh2n2uf+Yo7qkZtt/4o7JnJq0wF4g5fz9QNMl9lybX8nLya6yd1tjN0Oi
cr19wbUvCzNVN9jzyu1cVzp9lf28WwuDWx4utd/6LujwFJ0l9oz5GpJFU5fY
S1jl/GXQWmpf4CLVnbZjif2ORX13c2MX2Ye/CnpVeX6Ofc25T4fe3Z1sf+BZ
wBPJp+3224S5FQU4q+3lhBNKQ82z7GXBdJS9S6qq+fEbrvbKYL6Wfe72Vz8s
qgTtGaAAwleEiwMAqTCZwg==
       "] -> 11.29, CompressedData["
1:eJxTTMoPSmVkYGDQBOJqpm1JvsmT7O+e2fOOp2ma/bG6T8Grg2bZr+7Qv2Jz
fY69ykKG37Gqc+17ZjUtXV4+2z7KtP6+e8ZM+7SYJ2t+1E+353x07lXQz6n2
82ZEl73nm2rPbnWN1W3tFPs16Ts11hZNse9TZL2vEj/FPv92wNQ53lPsG4KW
66T/nmJ//m+cjb/cdHvDE6kn+Gxn2y/NP1/Z1rfAvgesfon9dNGUp3Gmq+wl
z4kv2Lx5vf3mjOxUd9cN9jF3y4+EbFllzwG2d6m9kg7f3eNSS+x3dU32LaxZ
Yr9mt+nszRJL7b+J/XnQuHiJvd9M9S8MbovsA7YJfV88Z4597ap17lHrJ9vf
L9l6WfJcu/2MzAfhqber7Jdb2HEp22fZb2Ofs+fBokiov1ztXeXctnh2KENp
YXsGKEAXBwAZQpab
       "] -> 11.24, CompressedData["
1:eJxTTMoPSmVkYGDQBOIKNlvfaQWT7HnWhud8TZ9mvyi4qDskfpb9zT1REvMe
zLF/fT/IPXHbXPvypVw/pYPm2G8L6HBv8Z1l//U367Q3HjPsp+67zHz90jT7
Zz2ejUxLptrHV599qWA51X5dvuqt+x+n2P9Lrj01b9UUe9+Iq7tik6fYv0pL
58vfMwVu3ynfecxbrGfZP9UW1+1onW//WlfkkWDiYnt9SS1b/t8r7F9+Osyg
rbXOPlZq9tRlUuvtJZ2+fS76stJ+xoyPE5xfL7VXiVvp9K9tiX1b6c/EBtGl
9vsnyXIuPr7U3qxxYeHBmKX2STIzvAy+LYL7QzBxctu5GVPsswRyCucd7bDf
PMdHd7VMjT3TxCWyWVez7RnAdLT9dpYjibF1HvZqb5heOV8wtGdAA7JgcUV7
GA0APGWTpg==
       "] -> 11.5, CompressedData["
1:eJxTTMoPSmVkYGDQBOKZy0+d7Jo8yd5LJTJ7zqxp9h3Gmy40+c6yF5sfu+nO
uzn2vypPaBlPn2tfxXtjdoHMHPvzNdONcpVn2Z+a4PkrTnQGXN+MhtXP+Tun
2p/annHnpvxU+wgv4wXrTk+xd7LgNu7rmWKvp/b4aK7vFPs/71QvLt42Ba7v
Sd/++b1JQPsq7C4kPplv/+59Vh3PhMX21Sbfa1+rrbR/EXv8pmT8Ovv+Hw/U
xALX218A27/Kfvvs9O4Dz5faP7/zN7m5fIl9Xkw073mupfaB5sdaVTcvtb96
4I9Qlv1S+5j0ynkGdxfZz5XbHa3RNBfujgCB5YtXreiwPxi292/Up2r7bD5Z
z5tfs6D+j4Ka52ofB6ZV4TQDFMzg4pxiNkHfHkYDAFlIlmk=
       "] -> 11.44, CompressedData["
1:eJxTTMoPSmVkYGDQBOKXazoYG2sm2fv19O+71jPNXns+X1hCySz7q77+BztE
59q/q88L37ljrv36JoUH+xXm2Ce+OSSrZz7L/lL+Qg8zyxn2E4uCL9osnGaf
tVzlQ/GaqfaTo0/mrJSdat9+aKei4Jkp9nv5817e65ti/zlGaeOawCn2zne+
8q3ePgVu35JLbQZTvGfZH3oUbC9+er79DvOFgp5LFttfdc9TOKO80v7o6ZO3
mt3X2fN0RR2td1tvb/czQeS3zip746gCjWUvl9pXaa66VlG1xN6/lDXKmXOp
fdestp/Lti21l9QInFTqttT+m+sMH8lzi+wzNj8zfNs/197M+dlhobQp9nc5
Nk4+19VhH8vs23RwV7V9UJatuWZmtj3rlfsl0+sjoepc7K3BtIo9AxqAiUNo
EXsAlEyStg==
       "] -> 11.45, CompressedData["
1:eJxTTMoPSmVkYGDQBOLXk35dbUmabP/xx5qEJezT7TO2axyKbJplP6sjRmfS
vzn2Mkqc/Leez7Xne6jKrHFljr1blKFm8ptZ9vWXbfznscy05/CQ2lwRM93e
dPPsSRONp9lP3PNdLHjLVPt3R4Nni5hOtb9W9szD4cEUe+MGp7OMiVPsf16+
+9CsbIq9bIqew957U+25q4srOPRn2psUliWus5lnn/nT97NN5SJ7+entrL4b
l9vvfRp8tGPKGvu1F1qir25aa1955rs2b8pK+0fbT4Z8+rzUfs6pxtjSr0vs
S9JcF77dt9Teh4nzaWrHMvvurZs+HxReZh/1pK6zc/pie0GR+hPbl82z3yL5
fr2n11R7pVMPTt1p7oT6q8b++8QdG4Lrc+yPf77LvfpqtP1yu31622+7299Y
8ffFvPP69p/B/hG1Z4ACGP8emFa1BwBzW52J
       "] -> 11.69, CompressedData["
1:eJxTTMoPSmVkYGDQBOL0wlfG61Um24t1+Nhd+jHNXn1SgRNn7yx7R4G7DY48
c+01Xoq+XfRtrr30qvtn2bbPsff9kfvV+dEs++9vbAqMfsywt37n+ZHHb7q9
Y9IkbT7LafYN78OKni+ean9Rf5ZQnOVUe8WCu5uunJtiX7JBIdg7ZYr9H84H
/2dWTrFfGhqiqvRzqr1MsJVyru9M++srLvnoJM6zz1rNB9S6yN4rfclaTeYV
9tu2yV759G2NvRrYHWvtt8dXaEb2rrRfAta/1H71yTnxyk+WQO1dah8sKti6
OnmZ/f0VX85VvVtq33v9+bOXlYvtX0YHLjvZPc/eVDmGp+jnFHtpsL2d9tmv
lPJqfWrs/2zXCj3rk22/6bX++/BFUfZRnZH71/i52seDaVV7BhwAIi9qDwC3
vpKS
       "] -> 11.64, CompressedData["
1:eJxTTMoPSmVkYGDQBOKGW+tZsvZPsm+af8di49Jp9owzzlhOTp1lz/RT6MoG
ibn2Td+drqy6AaQnx1g1Lp1jz2jotiB20yx7xtk5lvOfzrB3yDbMEdaZbs9k
pTa/0WiafZP1t3ntRVPtnWzuzesSmmrfxMl86dONKfYHbdfNmxA0xb6poDNb
o2eK/aHL7az+8tPsHY3/zU+bNNPeKUYw7/rqefYLeesDmU8usm+cY2O5VHUF
1B1r7Rsn7LEqVV1nn5h29s3/2SvtHdm9L738sdQ+4Zpxa+T5JfYHF06x2NW6
1D7x8uRWX/9l9g9z776WvbPUfqF9kdyMpMX2TZpmQOY8+0P5C7NV30yxZzJ5
Nj/TqNOe6bg8u0x9jT1TwszcZ6dz7P/Hg+gY+7/sxpfezHC1/2OfNm+mkbH9
ZzCtbM8ABQ/AfGF7GA0AJH+Uhw==
       "] -> 11.62, CompressedData["
1:eJxTTMoPSmVkYGDQBGL9bq7K/WwL7HduOHyh33S+va/tnpMvt86y37eszEU3
bLp9Es+JVBm9GfYaUnXel6/OhqtzuG8TvThvoX19w7E1/VmL7HUFDPcXfFts
f7G06UH8uSX2q4NckjzfLbVXzLYTMTBabj+j2eKYWNkK+yyzh2F8j1bYFyf8
cmeYttJ+t/bcrnuuq+2ru4QtP3mugtMRj9aVaFUtt99SExtsvWiZfXL7Qvls
uyX2jHabObcXLYC7CyI+xT5h4rvVZ2V77Fu36Gg9+dtl/0HdxLCrtt4+Hixe
Yy/uqKpsV1dm/wksng/Vl2J/4dcKNcF9GfbfweLx9nJgdWFwetNZWZkZ/xzR
aEN7BiiAiQMAbyGOHA==
       "] -> 3.28, CompressedData["
1:eJxTTMoPSmVkYGDQBOJb988sXmG/0N6sKrPIyn2evfGlunuCE2baszcrpC2f
Os0+svLToeDL0+0dp3+ONu2bZf/Jg2fyRvZ59jB9L5c4Kp6xXWR/x/jQW5vZ
i+17Jj69pbJziX246t+K/eVL7ftAXJHl9g9ur2lMDVphP9HyQp5vwUr7f6nT
atb4rYLTrScCrPedXWV/4udaKXfe1fZ2zv8EFxqtsOcAu2OZfTJImdQS+9zN
bNM8ExfY7zKxnKvMP8v+9Q+z7ISZU+zNwe7vs/feUutqcLXN/tzCGevyj9RD
za2y19Wa4vXyRon9d9GDIdEPCuwrmO/snXU+035q79EdD09n2zPfNgX6PNFe
JVX+7NFbwfbxYH+H218Bm+MPpe3tGaAAwte3h9EAYymhCA==
       "] -> 3.08, CompressedData["
1:eJxTTMoPSmVkYGDQBOIFiusWfPGdb191bu7GpXFz7M8c4vog92mGvbZG7WX2
hmn2+wNZvdd/n27/bImo1b9ns+wnb1jxuyV4nn2K1f3jC+UW2k+ObE2Mt1hk
3937ftsH3iX2ZQEh6UIvl9gnCe8UNzmy1F7s9cNmzejl9q5cHbLPS1bY3zQW
mNr3ZqW9nd2nogqvVfZajOHKs1RX23MEb9PzYVsNtWcVXD1M/7mXBgt6fJbY
z1KV5jmXtMA+4c2k9GOZs+xZr+Y82TFhsv0UsLv67HXA7m6zTwa7r9E+qLr3
UFh+pb2AW1GnRneJ/f3GmK+ZCwvsQ8DimVD9yfaQcIi35wTzg+G03cymivIq
d/sVYHl7KK1vzwAFMD4AV06YVw==
       "] -> 2.97, CompressedData["
1:eJxTTMoPSmVkYGDQBGKXT4utOZ7Otz/9xWFdw+159h3Fn0pcEubb5zEGvb61
eqa9vLvx28yw6fZLatPs1axm27+Z1rHz1q0F9orCc3nVMhfZHw520Tqitsj+
XI/I+x8MS+2Xel6If+SzzP7sgVXnbN6ttA9dWRMonLfMvpat58LpGcvtu1Qn
Lo37sxwuv2lOtsjOuavtg7/fVfh5ca29oNNP9srMlXD1LJyazi79y+Dmw+w/
D+ZPtWe23a/UUdNtbxO4fLu3QbP93t0FL70Za+w99vHGHPleZa+5ZebER7L5
UH4WnO69rn+tYkaCfcOlrx/aVyfZRx12d9z6JAJKe9iXnd3NPX1fiH0RmE6B
89HlGaAAAEedn10=
       "] -> 3.36, CompressedData["
1:eJxTTMoPSmVkYGDQBGLmCqVbcVYL7GF0ygL1dJb3c+w3Rq7NmpAz25679lXG
Kd059iXuEq1aUgvsY2bH35jxe4F9csDuq/myi+x/mCpqVMcvtl9ZM1vl/cMl
9mF8u5R7nJbaJ1cUylm1Lbe/4p5+kjVtub3Y/tdS6zhW2jt2bd9/pGe1/Q4+
zoz0vjX2ZdNbgFKr7Je+/5r/SGMlnL7959CxO+0r7JkX3FDSXLzUvnHj+fob
sYvs3eyF985eN8d+d/GPyyvvTbJ/uFHuyOaVnfZBkXFqWxVa7NX7JjXOm9MI
dV8R1N0F9ifvrj8XrlRqzwf2T449F5iOgepLgdMVYPUGUNrBPgwsHmJvkr3k
uL16BJyGyAfYM0ABAPcsjs4=
       "] -> 3.06, CompressedData["
1:eJxTTMoPSmVkYGDQBOKIxu4NuycutH/1kOtWk8l8e3E9xrxPfHPsA3i/Pvsr
P8P+tv6ymxyWs+yXBGxK+Ks+z/7ydp59ud8W2t8SsN+nVbLEPjt391QRt8X2
oe4HTt+5scTeqO+4DKfpcvt+V+mEY+uW2Z92LvuyvmWFvUzGmaCLx1fYWz7/
KXNs00r78DT157vmrrJ3cNCRbTZYY68X8sdcq2aV/fNDi/ctyV9p37JJtlqr
Yrn9rBsSrklPl9qXMeys2lCzyD4jKPyMcNAc+443L+I5DafYB+vEMN150ms/
bZ5vQrNOpz3IFSJODVD3V9ibnZjE+OJtsf0nM6uOpIdJ9ikinVPDTyTYTwWr
j7TvAdOecHEYnQCmA+wzwbQBnGaAAhgfpg4A01yUaw==
       "] -> 3., CompressedData["
1:eJxTTMoPSmVkYGDQBOI3HCV79SPm23e1/Xh87elc+4oVxoXPps+wj52gLHfl
+TT7lZkf7woFzrR/PFOwxXzjHHuZjwvstj9YYP900t6Hld8W2medyvv31XOx
/YrpW6Zo315iv+hX3xKpVcvsK8HmrIDTzl4BIivXrrSfdsD5yA/3VfY8b3K2
Zx9eZS/948uDktmr7TVZarnqitfYTwRZK7bGfmdpJbuM5ip7NSOHg9P+LreX
O3y3fV7YUrj9f3hXuFSXTrVnBmmT6bBfdrTc2yW1wd6xQvj0QfNS+4kypwy1
Ygrt5+kv+/vhXY59OtidyWh0sD2/2o7pvaru9nl3vU7tueMH58NoBjRQC1an
Zw+j48G0nT0AgHKcow==
       "] -> 3.38, CompressedData["
1:eJxTTMoPSmVkYGDQBOLYoznbI/jn22fHzuAxS5ltzyvvc3OXwUz76q+HE4V3
TrfvSDvJ1rx5hv0nUen7uQ9n2z+ufd85oWe+/ctPibNuzl5o/0jtzPuswsX2
t6LMXP+4LbXX1qi9zN6wzN7nmuyJ0PnL7O//X2r/V2yFfWB176Gw/JX2R76V
uG44vsr+YnrVK/lDq+1XvHX2Tq5Yaz+7xm7Z59o19nu07s9ynLsGrg7ijuX2
pQEh6UIvl9iHn7ypZKSyAGrPNPscsLu77QtWP8kRlGyyT3gzKf1YZpX9AsV1
C7745kP9lW3PejXnyY4JyVDxeHtGMD8YTtvNbKoor3K3XwGWt0fj68NpBihA
Fbe3BwCUYZw4
       "] -> 3.36, CompressedData["
1:eJxTTMoPSmVkYGDQBOIPsa1uKefn2t/IfJzK8XqW/b5Sx9Y1bDPshRxfPWGp
mGb/+5Xv0/n2M+yDQv6ovo+ZbT9n0p1n3HHz7c0+X/y8oGyhvfNbpSfnXiyy
741pMPkweYm9fM6OFPMpS+17tZmXvn65zN4yIcp1csUKe7eo1aYHX620vw62
Z5W9m6besj0Oa+yt/sWrdamstf/bEXxs2us19ko3HbZpTltjH1d/aqli5Sp7
EYHcUIZzK+zNJ16/Ml1pmX208/7HxooL7f23fXP5sWGaPecWRbeT7D32bBVi
LbfXN9lv8SpmrXpVYS+4+Akz35lC+9lfrrGKbsqy5wfzE+2b51mxbaiMsX/4
bTWLS3QoVDzQvgYs7mN/Cyzuap8H5tvYd4FpHTjNAAXo4gDzopP9
       "] -> 3.51, CompressedData["
1:eJxTTMoPSmVkYGDQBOJLNZPemarOs1eZE16SJzrbPllri23brhn205lO3zO6
Mc0+DCgqbTzTntvgjPIMtjn2/pf2LjvCvMB+QfqO85+OL7Svcn0ettFwsf2F
rSwiU3cusddldE3VY11m3+XTuu14wHL7t0UvZoslrLA/WPqlT55tlf3sYGWx
e/mr7f9Xtv3WqV9jf9/ohtjCNWvtIe5YZ58Xps/5XHSt/SI9t1WTjVfbuzxm
jfz1fCXUPcvsbRxDXy3escD+braXDYPjFPsdnpWH961qtc9mvX7Ruq7CPgDs
vgL7S2D3pEDNjbOfcxfkkjB7jj7prY7Xg+xvgsX9oLQdAVrPngENwMRh6gBJ
2JLk
       "] -> 3.99, CompressedData["
1:eJxTTMoPSmVkYGDQBGJrlUWmM87OsRfh/+C1knWW/frcqabKnDPs/8i80HrA
Nd0+aPaMUgermfZRWd9OPU6fYz/52tVf5QYL7AvSbmtluy2y727qbP06YbH9
9Ope0Si+pfabp1sXPIlYZn9u88tTeYuX2//45PhBbvcK+zkKrgY2b1ba77D5
3HXMbLV9du+CqZyma+yXvl/Uel9yrf20Mz927fRZa/+42ntDmd8a+28nZm+N
zV5l//L8dNWfb1fYW62cEFpuv8z+dZ1Ow8z1C+wzhPq3vlg21b6RZfrVjQs7
7M/r/V7Vb1hn/8W366rN3WL74/FzQ98wZ9ub3DJiuCKYbO/j7sOwb1YM1Jww
ewOweLC9Z8W7VVK5nvbmYL4znIaIa2LQDFAA4VvC1QMAvTWXUg==
       "] -> 3.95, CompressedData["
1:eJxTTMoPSmVkYGDQBOIvW6UePmyZY+8gH2kpd3Wm/d+PMdY/f0y319NTe170
YZq9lgCrVbrZTPvp0SvNfvnPsee7HSCpxLLAfk3SvoN6oovszW5fz2ppX2wv
vQ4ksNTe/QzXXv2cZfautlXPNPuX2zuve8mvsmmF/dzKU49ZuVbZn5xe9KjY
fbW9SnLwttD5a+w/q3Vx3Vm+1j6g8feWw3fW2q/P+mu68d0ae4HH/b1L7q6y
D99ry387YCXc3EYXscMHri+wf82g9dJXZCrUnnb742Bzq+1v83+ftki/yL67
Y/rEKNV0++82Oc6pHQlQfrj9/keNr+5fC7YP0FtrcbXYyz4WTFvhoLXsGXAA
mDyMBgDzO43r
       "] -> 3.98, CompressedData["
1:eJxTTMoPSmVkYGDQBOK0gA9lzqXz7E1DnjdWs86xF5yu0LXUcJb9D4k5/Qd/
zrC//bJat+HibPszP+eeMHCdbz/x5rao9CML7R97b/5jtWmxvUZ97kIZlqX2
eZvU3f6FLrOPqi6b9qR4uf0BFZUXF51X2Ac2sz/Zo7vS/snDV/eXi6+yX/KV
uW2C9Gp7rvkbr9e+Xm3vPFkTaMIa+5ObTtWmvV9jbwZ2xxq4+uKfvyacWL3C
PrH4qQfPrqVwd4j/DI9MEJpkv1Qgg6txWYP9J+uJiV12BfZ7+t6wpN5LtFdo
//fuy94w+w9g8QD7jTpbTVf99bRveui+wr7O2X4JmG9p3w2mNeE0Aw6ALg/j
w8wBAAYblPQ=
       "] -> 4.46, CompressedData["
1:eJxTTMoPSmVkYGDQBOIXM7/d+pg+134+t+2Evj+z7KOiuH/t959pH17b7Ko9
cYZ94sdF4nXds+31vDUKD4jMt993smLSsrqF9q2Z75r2dy2271L+9/oF+1L7
Dw9r9tnnLrM32qa2oDJ6uX1Z14XGzZ4r7HfGVSW/NV9pP1dv6+2ftqvsHzLF
7zXWWW1/9NJMUwejNfYqWyYEM91cY8+63Fm8SmEtXBym3qLAjHPxjRX2un/E
zAPuLbVfZ5lzmqtkvn1zT9o5rTOToO5ptLe5bWIRI19o71x0JlQqOtneb8Hv
CdMuhdvb7djz5sPdQCjf3d4CzHe0dwbzze21wbQ6nGaAAnQ+OkDXBwAbr5Ri

       "] -> 4.42, CompressedData["
1:eJxTTMoPSmVkYGDQBOJYqfumGRvm2du+ehWw1mmO/ZFUK8W/rrPsTyblM979
NMN+it3y2YsuzrZfX5i2oHbSfPuAvY//vzu60P5emHNTzLLF9odd4v33iy61
vxxz8+Acn2X2AvM33vzitdw+6ZuFC5fuCvtTYHNW2LMtdZc0/bjS3um5vGHv
+1X2dZo/PJ6+XW1/oaF+86/za+z7HYt2H1JZax/0f+biLLU19kfB7lhlf79c
LmTWtRX22hun8ky6vdT+1uwjrj8i59tbrTBZa/hoor3xh4YJb1/U2T+c8VP1
Bluefas7x2+m0/H2a/Q3/GE0CrU3A/vLx34pmO8Kp53B4jZQWgdOM+AA6PKo
+m3sAQGGk9Q=
       "] -> 4.43, CompressedData["
1:eJxTTMoPSmVkYGDQBOIpc14k/2ydb2+kmiPcJjnP/mzBf4XUjXPh/Mkzrh5N
F11o3y33tZFHbrH99n9e2w9GLbU/tZF1Q17tcvuf57zbL25dYf91YvRT5V0r
7aPcTlx3UVoFp9XfTIwzebfS/k7KgRXSC1bar+Dq0ufOWWnff/fdJ6YgBF2+
IXjbL/OV9okgZZIr7M+++xooU7nMvmWJiN1GtaX2vLZvgx7PXmS/7OzM3tiC
WfYZeybpuXj22q9xr7q4I73CXqLsOLvp8TQoHWZ/TP/PA1XXAHsrSd3ZNhxe
9i8vJZbotjnDaXewuBYGzQAFuORRaSs4DQDDWoc1
       "] -> 4.57, CompressedData["
1:eJxTTMoPSmVkYGDQBOLldw++ybw11z75DOMUvWNz7JtOPlyvMmOO/dPrjSph
dXPtuXg3XpxzYYG9gp7iRL5Hi+w7gw+q9VsstV9QYviMwWu5vWmXoqj34hX2
nLMuVjcuWGm/epGhxnytVfbSSxylljiugvOj5jEGTXi60v7lnI/x3ecwaZj+
ox2Cym49K+z/ZV+0fLx/mf2t8I9/5tYuhds/Z/3BVad/zrKHuLvX/vqkxoMZ
upX2/gWMAp9Y0qF0uH082D8+9p5gvru9iQhjz1ZnR/tQMN8cSqvDaQYSAap+
c3sAnbV+VA==
       "] -> 4.62, CompressedData["
1:eJxTTMoPSmVkYGDQBOLL65XFn4XMtQ/PXX2GY90c+6l9zwvLGefa9wrfYDPy
n2ev9ergvcNRC+3tDp0QEK5cbO+weY/d16tL7UO6Dxe4fFlu/5c9NUZZd6X9
1mxJn3z1VfbOU5fM2tm/yn7S3M9A5ir7kJrt89QCV9kfC9IJuPNipb2F5kLG
SQ0r7WdKMK+/FbYSrn//M43tW26usE8tulaycety+/7d3C8uvFpq/8wu68/H
jUvsp7qqq5o4LLJPTz61aLLQLHvBi/F7Qlb02r9UCIrYll1pXxL5skKuPN0+
GSwfZT8FrD4Iyveyb/Dn8F9528XeurznW62nvX0ZmG8Cp7vAtAqcZoACXOIw
fTDzALnrjcs=
       "] -> 4.65, CompressedData["
1:eJxTTMoPSmVkYGDQBOLnIeIih28usHdSOmZyT2GhfdcHp4fV9xbaB35e08Ls
tNje6pj+G92AZfYMRiW1nf9X2B+du4Pv6brV9rM59EX2PV9rz273apoWy3r7
fTfcbyRMWm9/4Xqlzz3p9facV/lXhu1Ya99n7nFkxrHV9pNSJ7/4oLfS/mNC
r27KvWX2D/uX3bXbu8S+I1L2vL/WYnsZlSSfx7yL7EMVf6yIXrXAvovz73yH
uHn2G+e1zUpXnWN/+5Tp8l0LZtjrK085kDB9ov2Mg5qGC/832x8M26x94lih
fQDYvcn2Sky9jjqrouwfgM0Psd8Plg+0t7Vu+Lxoga/9LjDf0Z795Mz+rZvN
obS6PQOJAKYPZg4AiQWIew==
       "] -> 5.24, CompressedData["
1:eJxTTMoPSmVkYGDQBGLOiYYTGMoW2k/fmvF37fqF9r8mFPXdt19kX7X11c9s
58X2myZsb7UyXGa/+OaLKCOmlfZs/x4dqpm52t7nZl5Azt619sITmorO311n
b3Dzg49W4Ho4f98W88f7mtfC1cP0x/yLOet0b5n9+QmmnTVzl9i/mbC5Zx/n
YvvN/65d51BeZB+n3OPx48QC++9uIjNKsubZZ958E7xOc469yNaNb1tOzLAP
UD7rdn3SRPu7E750zb3cbJ+dY61oxFZkfxvMT7Y3+Cd/4r51pL3v1rVfOBaG
2meB5YPsed0nzd52zcfeDSzuai8N5uvAaQYSAbp+AEjfjP4=
       "] -> 5.23, CompressedData["
1:eJxTTMoPSmVkYGDQBGJXFkFHF4GF9oEsIoyuDgvtG1kUGD0YFtmfazF+6GOx
2H52a9rCyIxl9rZs/QeTP6ywf9O2a2HeitX2Jex3HcsvrLXfw/7+YPWHdfYP
2H8w1jWstz/U/kGxhmO9fQb7rcayBWvh6p3bJiimcKy039Kaoxh9Ypm9JqtX
Y9CCJfaHWgwUfTgW21e3yC10f7HQXq2FM9FpxgL7PvbHBysM5tn/Zdt/MP/D
bHtVtk7HpAkzoO6caC/A6sIY6NACdW+R/QMWC0a/hmT7Q2wbGHMYou0Z2RoY
Exgi7B1YAxhDGELt68Hqgux/s4LEPezZwfIWaLQGBs2ABmDirWDznOD6AdvU
ajU=
       "] -> 5.24, CompressedData["
1:eJxTTMoPSmVkYGDQBGL93f7t828utmd6m1XgaL/E3iVx1dNUnaX2keysLjr1
y+zVt3+49Of9Snsl04MV2r/X2Dct6qiufLLeXu4azzVHxo329hPWCFwp32jf
I2GYdKRjo31O3ER1I6GN9t6NZaY7Fqy392de1t85dY397ffNeqWRK+yt+Gq3
MTUvsZ+pU2Y3Yc0C+1Xz8/e6npptv/hc4YvNojPsr8q1RT5eMsV+7aULc8L+
T7TXehW4iVd1gr0f2Jwee2ew+1rti+piy1vaqu2fTqy/MeNQvn0BmJ9tv63k
jFtVRiac/p1lLVbglW7fFS65NZovGSoeab8PTHvaX/HtaAn84AClDeA0AxSg
i6PSDnBzAJ8flus=
       "] -> 5.49, CompressedData["
1:eJxTTMoPSmVkYGDQBGLRveZ6HKmL7A8u+3GFwWqxfW9j/9Qvc5bYL/8637N3
6TL7N1P6CnMdVtnnT35ntKxmrf3mMxs3f7DYYP9hXezzZyEb7e9971e3OL3R
nm+BMeOjRxvh4jB1Gz7Fn/knu9b+QOaGv6rrVtjv1TTOn7dlif3LiZG7Dlxa
YN92vDFie/ds+5D7CR9aq6bbz7OIDV2sNsWeo1n/yu6EifZz9p1Z9pav3169
3Gppcky3/d+OJRzfQ1vsV5nK3hCZX2V/ekHzgqMuBfYrwPws+/WbHtmWq2Ta
b9ZfsfjmynT7HWtyOW300+yPKu+zSt6fCNUXZT/HehJPwBRf+/1gcUf7nWD1
6vYMRAKYeghtbg8A5bGSuA==
       "] -> 5.74, CompressedData["
1:eJxTTMoPSmVkYGDQBOKyq9M1HBYvsg98vPk579zF9t29V2dePLHEfqGrMHfy
u2X2H5cX6e2wX2UvbOMfIVSx1v6l5GR3a/sN9jyxn2sa4zbaP/qz//6rcxvt
fyU3xmTc3ggXv7jp4qm9RhvsQ5lditRE1trPAtoiVLfCXufj+WW3py2xT5SN
2r6udoH9nOfcX7oUZtsXlk8QzLg6zb5xo9lDjm2T7f1UXkyb+muC/VvPbPEH
hX32DUK/pVZ2ddk/8LW58u95M5RfZW/gf33v5pQC+7Kv6psjpHKg4ln27frn
mn7+yrDv81n4yjM73X7JYikl6z1J9pVgdTH2qbsbH2+39LefBxZ3su8Fq7eA
0hr2DFCAzkcVt4DrAwAwgpcV
       "] -> 5.76, CompressedData["
1:eJxTTMoPSmVkYGDQBOL51g5WOp8W2t/IP51v8XaR/S7js9JTjZfY75o45VH5
96X2vPvW/HxjvNKe5/R15YM3V9trHE5h1ZJeZ3+e0f5+tsd6eweevuaFVevt
Y7+/tzITW2+/bYdo4pcXa+01t1neDi1dbT+H5dfHo/Ir7K/L6V/WPL/Yvnri
1tA9k+fb73gfvTJq93T79G0SGYI3J9q/u1+ao2PXY/9R+fm9tG0d9skX8vbs
VGm31/q1ynfC23b72UkHd6x43Gl/8Yvw1umLeuw529M2tiX22wMtl19WMtE+
TeSB3pc5k+1TipZ/vZYw1f5qzbeZPJOn2u8G+2eK/a2kBa4p7hPg5r4H21dj
7537/uXMygJ7gena1QVOifasYHP97Q9ZtKpfkrK0vwWmNe0ZcACYPAAn7JUR

       "] -> 6.67, CompressedData["
1:eJxTTMoPSmVkYGDQBGK3IPYvcw0X28/+Zphk6bHEfvO1kNkqR5ba933Knx+/
dLm9kWXKLM3G1faO4mqflq9eZ3/iTrl99o4N9npFT3Zt2rrR/v88ucnrGDfZ
t0/fP5Pl60b7z3q933Y4b7RvP8UXPP32evtrk254KUqusf/VaftH+Msy+4un
I7JX+S6yNwSbO9u+h/VDSG/iFPtnBbMWzXfutz+yRezzoncd9nrxKaytP1vs
1Quab7qmNNsv/jHJednMJvsY11WPtmU22otOOth43LIBTsPEYepSTbr5vv1D
qBcOf1B/cXO1/YvV1Uumniy2r2PUm7R5X7p9wwe+fZ+CI6G0p30JmLa0jwbT
mvYMOABMHkYDALMKmGo=
       "] -> 6.55, CompressedData["
1:eJxTTMoPSmVkYGDQBGKHKQps7IqL7f0+yuwUUVhi/7hmuuvKeUvtnyTc9XFu
Xm7/XCMzutxntb2gQ1zJAs919o1Xv6U/7txgXxrjsCc/f6P9sXsRNz7v3mi/
mmNZZdGijfa/Z0hPWvlng71FMW+bftJ6e4vVjeW/Z6y2/3hz8o9tc5fZ/+na
N/Xbu4X2VRfmPih8Ngtq7xT7mhma75eu77PXyLLfG7y1wz7aTzJHSb7VXsJ1
+2/Bt832EHc222c87hT4E9IENacRzoepg+k7vuzJM/VWhP79C7vjtz2st6/g
ELpkK1tuv7GGeV6JZLb9HrB4vL092Pxgezbpa5viGi3RaE04zQAF6OoAJR2U
pw==
       "] -> 6.5, CompressedData["
1:eJxTTMoPSmVkYGDQBOLFaQ7/Z52daX/wZ8LGxuVz7LttLk9/8m6+/ccYA9nk
tQvt197l+cmjs8T+dKIFX/3epfY3lM9JWLQts9+9bvoCK9tl9i1HtDbYr15q
//x45Uv2fUvsmfR2H5mwb7F90ZNV2XMDF9l/9LVueJeywN5ftf1Cd/Ns+5bL
8r5bPk+z99hzuTW6Y5J93vE58s+X9ts/qO059tmizz4wKG35y5h++09g+yfa
p4KcJznF3ufH8p+6q6bb58za69F5ZrZ9PljffPu5PE2B96UW2Qt+CDjv2b7E
3uvlppidicvsv85gmWh6fpn9nvmLmI99WWL/eNYsoVVPFtjfMjq8dc256fZd
ci9jf8f22s/+27Ml61KD/Y6iwzoZ0oVQOtG+CxwO/vbbXmWL8MZb2xu4z+WN
s1eyZ4ACOTDfCC4OAB6gn2E=
       "] -> 7.85, CompressedData["
1:eJxTTMoPSmVkYGDQBOLkSZt/qG2fZW//ivPFzn1z7S0fR6msWLnAvnZyNG/p
rkX2OprsLm3VS+2jKzYFCGUut+dsjDWWbF5hv3LS3dpf21fY3923qWq6zQr7
wpvsusE9y+39G9t3vGleZn/IOeab4+kl9kEXN4R8Ll5kf21i/Lv6rfPs41k3
L5ERmGmvOYftQ/WVyfbf90f1P7WfYC+kEa9vUdFr/zx1S9k2w177Gb/j1x7/
1G//2yf68ftnE+0Pgs2bYv9ZniP8RvwM+1+WnP/frJ1tn2e59Yvrmvn2bX9b
Ayf8WGj//2a0+a/exfYOf6PP7Pm+GG4/zH9M6THdLKZT7R96bz638HGnvR1Y
vBZK59pPeBgHdGGMvdkFDoelBV72h7s2aOUtMLRnIAAAoZGXFg==
       "] -> 7.86, CompressedData["
1:eJxTTMoPSmVkYGDQBGLLd+uOlxUutO/Z1zh9w9FF9mzfbf3ZjyyxnyvwRnyD
znL73pD0V5Iiq+3dVzL+my24zr6EL5QhLWiD/fILFkpc6hvt97ToTpOo2Whv
cnCjlnHMRnvuyBNOYps22JfZvWj6c2Gd/aTGlPZYzdX28V94gUqX2Tt7gAxa
aB89qflEqf0s+y1q2fVn8yfbg2wVed5rfz/yuIC8Y4e9YKBFZ9+7FvsXL/wW
Frpg0jD5FEWQjW1wfRBzu+wL3CpsWqZ02X8GWTutw/6ySZRu8vtm+1d1Jl9u
TaqxD/8zt5TnYyFUPNlejVX37xznUHtFMO1qv6b9cHX2U3t7bTDfFEqr2jNA
Aaq4qT0AouON0A==
       "] -> 7.14, CompressedData["
1:eJxTTMoPSmVkYGDQBGL5WdNT889Ot998adIvf6bZ9hMfmDC/mDrPPnjf2cYg
k4X2vj7V+kdWL7avXSj2b6HaUvtOjeLl7leW2ofNWrdeaepSe8Mz+V2vji+x
5/lnkLrp12L7Cy/4jzznXWw/f3LJV87JC+3LEzTj+DbNt0//+7ptxuJZ9nu2
mc/PEZ5mP+HyOyVZxUn22t1Nr8KC++3jgwq4D4f12T+UevEiiWMCXH7/+4QT
m69Psb/YffxEwaoZ9gZ/r9g8vT3H/kpUkljZtAX22xbqeoS+W2R/qmxvYWTr
UvvLRz583J633P4YS7b86T/L7fUnuyUuZl5m7/rPfX3qoYX2ZisCduzSmGl/
NO/nL56rffYuYPFG+5VSF+etdyiy5zOP6vu5L8neESweaB8m6f6oepK9vRuY
1rdngIJUMF8eLg4AG62ehQ==
       "] -> 8.08, CompressedData["
1:eJxTTMoPSmVkYGDQBOJJWTmejzpn2p+yfhroWDPHfv99bYPOGfPtp4mwxwa2
LLS/N8uDj/f8Ynuza0EZqkVL7U+aLw65wrLMfl31O+HvR5fa7zPYvidYbql9
uMOTnfeUltj7WP5QjLNZbM+3axGH8o2F9uatx29HvZlvX8xw+7vGzVn284+p
Zs/KnWbvaMTTdTd0kv2v1aduKHJPsJ8t0x2uXdxnX73pJ2vRoX77kz0F97iZ
Jtl37fC1nrlgin3e8tMFLSkz7Nv4NqtrLZtjL5JRL/nfc4G9xMG+BYv3LYK7
47Jd/5uQ18vsV54VZJYOWQ53d01EkEyJ60K4OasvBjN0nO61T5wz9/Y0tkYo
XQilE+0ZeeOiFuT523+Offks64uJPXsciFaxZ4ACGB9GAwD+75ab
       "] -> 8.16, CompressedData["
1:eJxTTMoPSmVkYGDQBGJBm4XhH2fNsC+u/ZpxKWu2/fPTvV5rT82z7+nmuuPC
vNC+xlE5XDt0sb1u0tn70nuX2M97y1EmZr3UXuT5s17Jz0vsyy83XFWSXmJv
bif0WMdwsf33FYs/mLkvguuPO5qdtKFpnr1FmOaPJ7tm2ud8t74kuHyqveb8
ginWtyfa29951Le0rt9+4Ymaa+uW9dkbV2+d7uM/wT5g5w8T/d+T4Oq/BEm0
PJs20/7ARtZVO1fNtX/FybTI9eMC+4MuJqc1KxfbWzLm6/EKL7OPXhvi++PH
cvszFhMefypbYX+YfaIYV/Qy+7xFjRxW/xfar/dnF3hRNBNuL8S9TfaN64/e
MO4vsp+8h3OlrnwyVH2gfSaYdrRPANOG9gxQAOPDaACo25fj
       "] -> 8.24, CompressedData["
1:eJxTTMoPSmVkYGDQBOJD8ZffmBvNsLfws6jIEJttr/riVljutHn2fq/lP/rt
XWDvo+euuZp1sb1N66HzwbZL7L9HJf607V5i/z6l2+AJ0xJ77Zlidgt0Ftv/
ELc6+NBpkf3RabEuypEL7a/bP5pbpbjAfl7Ax8KnL+fYW3ELOvCcm2E/YfZ5
c1mGqfaLGXUjJRom2tf8e77PLLIfTmuHvWd1eTLB/sjNlpr6hZPtJYx3yixd
M82+pmKmX92JWfZVYHXz7T8opvxo37XQfrWVVtS5gCX2acEfdos8X2a//EDF
qbaHK+wvedfXvXZaab+5WD26RXG5/Za3N16dnrDInvVs9O+VOrOg7psAdXeT
ff7hcpFt94qg/CR7zoP7pCy5A+391EAutrW/kbc1vavK2J4BCl6D+cpwcQBL
kJoV
       "] -> 8.54, CompressedData["
1:eJxTTMoPSmVkYGDQBOL/z1PUNsrNt/+VvrnnMOdC+8D63X+alRfbXzyryJ8v
utTeKdru5ZFJy+03vog6LCWwyj4qT77C4NZqe++1V+1np66x52RINr6tuQYu
/uRK83TX66vsfy70uZZ/cYX9naY3Dvksy+zlJk/SiIxZZD+DX7guesJc+0Vd
Lmnrt0+zP5jPvYl570R7t4VhlmwPeu0NzQ9eZWXqgdOLj9xdH13fZ9/X/Oju
ja8T7Ncuciq+eWiyff486UktH6baP9C2yLmVO8O+b2+1euveGfbqTd8WswrP
tl9z5/ae1q7Z9q8eMM27FTPT/kFftjtL1xR7mzfd7Gwfe+zzGf1z1/E0QcVL
7K02fdobqZlq35L95MK6V8H29WDa2b4MTBvbd4JpZXsGKIDxYTQAmbyeOA==

       "] -> 8.02, CompressedData["
1:eJxTTMoPSmVkYGDQBOKCRu6YB0zT7W03b5vN92em/da3Uz/OrZxrzyj8pYEr
e4H9RfNA+eVzF9knn+HZwntjsf3pwLeJp7SW2POf+KRxd+pi+9+W91L271tk
v0KjzOLv1oX2q6Q1pme/X2BvwHeThStrvr3FrQX1h/3n2L+dwnBul84Me5+I
KUbCfVPsNZXOp28JmmjPyuOz/6NHv/16kYarQWf77f/LOynNMZxofwZszxT7
I62qzwVcp9unnL+v7LVqtn0jj++Gg+wL7IMMV/nFWS2y33K35MH5B0vsJbvs
ixzbl9uv0vZcYdmx0l7T6ENF0+uV9nl9kX8LTy63r3JoNeVQWmw/4YjciQss
s6H+m2CvapO96vr9JvsKsHyx/Xmwf5Psz4LpIPvt8w9qmlyysOcXbTym1KNg
z4AGYOIA4t2Nlg==
       "] -> 8.44, CompressedData["
1:eJxTTMoPSmVkYGDQBOLyCT/KJvyYZj87nm0WENnfM/h0x+DTHHuQPAPDAnvj
h28MH75ZaO9y8bXTxdeL7FXO8yqf511sf/lW0KVbQYvsN71M2fgyZaH9wp+p
C4DI/gCPyX4ek/n283TM5gKRvXVkjlVkzix7mD0lh08UHz4x2f4SyDinifYX
/hgB0QR7Q5C1dybYB18CGTzJ/sa0SdemTZpmHx3tFRXtNcteQficnPC5eVB9
C+2/nHb4fNphsf3WpUuAaKm9ZbWPRbXPCvvsGMusGMtV9jLhfVLhfavsI2u1
Imq1Vtg/ORX4+FTgYvvZfmIgZF/4bUbBtxkw+5rsRUDGyxXbC4HpZHuhD/8E
PvwLsBfIqJPMqLO0FwPzFewZ0ABE3MAeALE2mu0=
       "] -> 8.85, CompressedData["
1:eJxTTMoPSmVkYGDQBOITbDmGqy2n2c+aNjNPtWGmfd4qv+lrV8yxd7CquaL+
fr49S6Sd2/IvC+0/f9rGoSy42P7jmmx1PrvF9r/bYhZlVC+y53x6hePirIX2
4sevRLnPWWDvekxoeuDU+fZJfLPUfKrm2ne8Oubfc3KW/Z6s7Qc8uafbvwhj
mnHw0WR7PmP9g4xGE+1lr3/iqFeZYC8G1j/B/jfT1W1RMyfZw9w1lYt5ze+b
M+2jqr70sAnMsxf4CnII0D0Gn4VkFBbbX5glePrD4qX2q/4orFmZvMK+99eT
v4cDV9l35vlZz1q9yn71vicLN4SssH+3JCbgU+Vi++Y4g94k5dn2os6++Za7
Jth/K7P7YvC5yf5Tnr6sqH6x/Y8639M+25PsBfYfbda+EWC/+19MVH+pmX3y
v+oKkU+y9gxoACYOAJ0blQE=
       "] -> 8.88, CompressedData["
1:eJxTTMoPSmVkYGDQBGLxKrXtOydNs1+uW3tk97KZ9qYPL1/cu2uO/cu2ZK+p
7+fbr//c/tb7yUL7T39f/0n8vche4oNKhrnMYnsT5/NPzMIX2WstcfiWULjQ
nrdHNEiheoG97hk3oyzv+fbLt9cJ28nOtd9whnvzxJ5Z9p0BF39Yfp1mf3WV
Y0PSgcn29/afk9+mP9F+nR77MS7NCfY5L5XvmZ6dYH8apPzWJPvTU7c84Auc
Zm8HNF1Qa5a9su4O5ymp8+w/WmRfVXBYaG/3KPYyj+1ie97b0088XrPUXhsk
HbfCviLRbFJg9Cr7I64rMv7MWWUvYb/83i/fFfblvsZffPIW20+pBCmYbe/2
/VVRwpoJ9h/B/mqy7zh2fuX2umIonWxvAg4HH/vcOVuzBBZY2P8TqgSyFOA0
AxRA+Ab2ADZXoLA=
       "] -> 8.89, CompressedData["
1:eJxTTMoPSmVkYGDQBOJbn0s8E7Wn2rOVbIwyaJthb/Llbfb/B7Ptj1bU3Pn2
aJ59JYiSW2h/4GTB3MMHF9p/Oi15NnzqQvt7DXph3McW2P/OvyG7bMp8+6+t
Rb/yb8y1756+q1ywdI59MuOTzoprs+yfHneYcHbxDPt3dgkH1v6aar8ldl70
iZ7J9lnS4YvPcE+y98x/diNTc5J9PuveY0wnJts/uHsrZ/rzafZCHrUL5/yb
bS/YfL11/swF9gf3Ka+/N3+R/bet9R96Axfb/1xlxLRSf4n93Rfq0TWcy+yt
yqK6jkSusE/gMayI/bHSHmyd6Cp70atm69xmLrfv21NV73VmkT1PnHhdmtMs
+6nZbftq3/ZD3dFk/yhrSqVjUxGUTrJn0J2vkLciwN7wXnC/6VxbewcwrWvP
gAZg4gBHrJ0m
       "] -> 9.29, CompressedData["
1:eJxTTMoPSmVkYGDQBOKMG8dDKg2m2Ete6Nvqd2a6/cnjoWIqGbPty/fLlP9k
nm+f+k+07r3ZQvsbz7+8Wfdvof1KLsn/254utF9g5DOzWnCh/UWQNvEF9sab
Jb8Zhs6zXzdL+Mui73Psc3jnWZmYzbZ30bt7++33GfY3nCT/3OeaZq965sjl
jY2T7Z/Y+Us5H5ho394y3S64b6K9XVWl3i2WyfarUm35Xnycat+6O2hqzM5Z
9rtPy/84sGk+3N7l3d3mcT8W2WeC3b3EnlXh68vrysvsu3fmqvBNWWF/yu3x
3ZrQVfbqjLN35rSvsl+crlRvJr7CPic8VOaS7GJ7geBncS4ss+13PGD4snjK
BPswDb1Opo4mqHyxvQrYfcn2FyqvBL009be3A7vfwt4LTEvYM6ABmDgAfmKZ
bQ==
       "] -> 9.26, CompressedData["
1:eJxTTMoPSmVkYGDQBOLfV7LvnF0yxd51wpn2NqkZ9hO9dY3tJ8y2F63Yuq3w
xTz7jZLchqL6C+0ji+QUrB4stJ/02PXH5kML7Q9syT3r+nSBvVBtkKzmp/n2
yyacnH9Mcp598P1FB2u2z7Ff3/gpe8GfWfbvXtwvW316hr1P26Rd4uzT7P+d
P1cqNnuyfQTYvIlQ8ybaF26SVeNKmGy/wEjGaFX8NPsygdOT1aRm2wecbdw2
S2yBvcf13c2cWovs630bDlmJLba/P5PTdqveEvv1Z+vO3RJdZm/+NfN1aMoK
e/tZbKFfdVfZZxacnmAXtcp+Z5G0RdX95fbSbFPWlbMvtldKcZSZcnCWfeVi
t0+PnSbYW9lEPr9R3GRfALa/GEon21uAxYOgtJP96WN9N9TbdO0ZoADCl4WL
AwDiIJbp
       "] -> 9.27, CompressedData["
1:eJxTTMoPSmVkYGDQBGKr75xJaSKT7YNlWCWWvJxm/3qPS5nr5Fn23BcCzwru
mmtf0Zgw6eTM+fa//iyx0s2bb+8+e9kKCfV59rPUd22fZDjHXqteaZHwyln2
v2dk7Egym2nfwrSfMTRmhj1vjqi3e9N0+5lnvjxhCJxm/yzrW9Abzqn2+Vd8
5tzTn2Kfffewt3j7FPsr0z0PsO+bZr/mV5pXee0s+6hlt8wymBfYr52mdWKN
6xL7h0u7nblqV9hfOZnO+PbmSns9l96NX02X26e837iqw3Spvarulbpd8kvt
v+cfVNtWuMzeS+9zmeiM5fZnVprLV+Ysh9q71F7k26tM7jkL7PueR35eFTbd
Pjb1TvcR6R6ofQ1QusB+t9VxvviIePuH54yubnP0tpe0P3RX+5ypvTKYFrVn
QAMwcQARU5NF
       "] -> 9.62, CompressedData["
1:eJxTTMoPSmVkYGDQBGK5ZTOkem5Osv/ROu+g1tNp9l3mzUChWfbtParPb82e
a2830ehRgdB8+wunGT5b982zb6/OVp3LONf+658tvLdlZtuvXyPvYDNhpv36
rtV7DkTPsF9f+fFX08HpcPOcJnl3XOKYZp/O/mJlBsNU+55eu16bSVPs5V41
KDY7TbW/IsC0YMrb6fZf5TQnhgXOsa96Yib4QHshVN8y+5QFRZVTclbZpxx6
9od/4Wr778uFXJdJrrB/xn+0q913qf2zf1wnPTcvsT/Umbd88+6l9nNELrXK
Hllmvz68tpy9d5n9s7cB7DySS+ztFr1ZvG7NfPsrdy9H3ZabZu8gJTPtwK0u
e6mX6dWKPnVQOs/+q/7joCmvY+xbWUJvvjnpYb96rcWzuW0G9u5g94jZM6AB
mDgAss2XRA==
       "] -> 9.7, CompressedData["
1:eJxTTMoPSmVkYGDQBGKX/fGXPEIm27c+LfrzwXC6/bn17Nm9p2bZX2rxnsC1
eq59WP5bJU/p+fZbv7jUWe6fZ39L4+yVf6lz7QWWRmxZ0zTb/snsHous3zPt
OS6I9OsvmmEvt2dmDM/l6fZ3j3kIv5Wabr+4tJLvkOw0+wOsDQqTOafan/dt
XlldP8U+Q2UV53SFqfZqCdILGfqm2yc8WtO2ZcNs+3spRwJvn19gz1M4+YJC
1FL7SXEWaUlnV9rLvo22nfpjlf2pNSwZXceX2ws4X/k0y3ypffGsnALWnUvs
Q7nS4kzOLrW3qIr3SX64zP6FDXdV9OZl9mr6kQfKM5bYf6jj+GurvMDe6YPi
5ouV0+z3pbM8WhLSbc9qNDPA8W2dvbv6q5kJS/OhdLy9bdCyksdHfOz1V8hp
vWQ2t7cC0+r2DFAA4YvDxQFcVJHV
       "] -> 9.7, CompressedData["
1:eJxTTMoPSmVkYGDQBGKve9velSROsj+9gund1lnT7Cec2+50OXqWPZ/D06X1
C+bY795T7WR3ZLb9/33HfreGz4Srey66wll91xR78Sp9yXO9k+2Zm31nzrg5
CU4nXJ2Rt0p0Mlw++++MGv6sKfZbNyrkNTyban/IyF6iSn+mvb9qt6rC3nn2
DvxXa5YwLrb3vipowzB1ub0fWHydvS1rqGX3mk32MacltCce2GRfVSpUMuXZ
Gvs2jurm8hNL7T3B7l9kv0CGyTbk80J7aVNBlhznRfbBa2ckuB5caJ8qk7s0
tHC+PWffityw7TPsY2uqLokqTrQ/4f8kUHFZi/1C4diu+2rl9tNdqiX4j6dD
6XD7i3LHDn9kdbHX1Vu59BWHnv01MF/EngEKYHwIrWIPAPu7kRE=
       "] -> 10.11, CompressedData["
1:eJxTTMoPSmVkYGDQBOKqJGbpkmsT7YvfabqpMU2zz60KKLyhO8t+QUuOamjM
HPu7e+9ECu2YbX/wb3DIQ/eZ9nvb4/7+njrNvtB4/SzjlVPs7zG46XQ0TraX
stqW4Hp3kv0CnmifG2cm2XccOj63h28yXJ4/4LmJUPgU+/rJxbI+D6fan100
V5tdfab9iZd2TGtWz7O/duHxq+qni+xj4wWdz85Zbv+Zo+6k5tN19u+lymce
X7zJvmWVWG3bgU32r2UX3tH6sMb+0B/XyaI3l9o3TEqNaShaZP/8lUjEbvZF
9ucXNK7M91xkb/bTYOmqewvtMw5+dK/dNN/+6RuDW0FPZ9irqLT2VCRPtPdz
uSRyiLvV3lW0bkrjvXJ73dOvnpoqZNj/NTvSMW9xhP1usD/d7Ktv/CiM7DCx
Z6rSjRbJVbBngAIIXwAuDgBA1Jdz
       "] -> 10.24, CompressedData["
1:eJxTTMoPSmVkYGDQBGK9vqyIjz8n2h8OWXhut+k0+1S7LylX9GbZn+D+dzqj
bI69Wo73kv/7Ztv3nUp5yqMy0/6bRp2aVOc0eyZ1r/4JS6fYbz5yQr6gcrK9
rwx/weZLk+A0K9Ov6ztYJsPlebzS1t9LmmIf3Hn634aLU+3PHIyN3Wky0z7r
AsPqlefm2R/jYkzg+bLIfiU/c9STNcvt5y65y8ShtN6e6YNckv7aTfb3kkTE
jI5tsj+nv2V7tepaqDlL7edFOmj8iV1k3y+UJzP740J75Ww/i8U2i+xLV9R/
eH18of2Fil1RaaXz7eX+94kyHZhh3/1uu0GH00R7BzlndtttLfZB66S3dRSV
29tmPC598z0dSofb7+Ax/T71uot9nO33H+VrDOzTwLSCPQMagIkDANWplkU=

       "] -> 10.27, CompressedData["
1:eJxTTMoPSmVkYGDQBOKZKxKZp1ycZK/hJGFz8uQ0+/3bjuzo7Jxlf3+hzMFL
RXPsZ01hVHS7M9v+3t+JPE75M+0vLJa+MOvONPvNOw4fD/w8xV5zXm+7xbHJ
9pPPZu/n4Jps/yo7Q9v8+yT7JxOKnq/Wn2yvX9l8+nDvZPu81SvUj8ZMsffs
fNrfuH6q/Ye+4huPj86wZ83I4l2uPM9+fnO4u/zMRfbzK9XDKuSW29+QyLnO
r7vOPni2WzK79SZ76zYftW/Rm+xvHFOrdV+9xj7379vG3ntL7WWmxSyN3LrI
3u9AgHxN8SL7D25x+Yf2LbLX8PHQLXBZZP/4zXMjaZ0FcPfz92kfrloy0X71
3bPNx7Rb7VkUQpe0ylTY7xOyYvnZmm5v8oP5yP2IMPsp4HBxsu8G00r2DGig
EiwuZA+jAUbtlKc=
       "] -> 10.48, CompressedData["
1:eJxTTMoPSmVkYGDQBOJK1YOBpeGT7EU3Tt7zuG6a/cvTp3xtS2fZv6p7H3es
YY79RB3ZS+1vZ9uf91lfIxM/077Ufce9kAPT7BffXxrXcnWKfbRoxZ9V8ybb
Z82VURf4Pcn+Uvnke5tfTbKf9UJvxwnpyfbap1KzP9VOtn+8KUZqUdAU+x7h
9fPenJpqv9z1fcO0NzPse2a/973nNc/etmTzg4KNi+wZ2d3cU72X28vPP++t
2LLO3mUHa9ni+E32DtNitLs6NtlXJqgJfXi0xn533EH9pa+X2i/105ohsnCR
/YP/5pyS7ovsb+5+WvxsxiL7DVtUKxLUFtk/ztvjtFJogX3+tq6o1bIz7TXE
HaMyiybaM5edavgq1mofZp7f2cVeYT+NS811RUu6vRg4HMLsBb29Zl1Md7IX
nqHa6RGjYM9AAAAAhPqN7A==
       "] -> 10.5, CompressedData["
1:eJxTTMoPSmVkYGDQBOJN95PNrp+YZD/B9JhDw4Fp9p9EnA+1Bsyyl//9jFun
YY7918Uu0yNvzbY3meQvfCp8JlydsMH9Rxznp9h3ix+edmPNZPukAwpKbOyT
7WtKey57f5pkrxPmub/KYLL9sjN6HnIzJtvP3PkzMjV9iv32v2kP6u5Mtd8r
ndWl9mGG/RyGc5mLC+fZ2++S5K/at8jeLV2u72v0cnuXCe8/dwetszfPrFtr
nLjJXnaL0J+3pZvsWdyqo55NWWN/cdOliUeOL7V/7mk9M2n+IvsHP+abyzgt
si9R+VjIOnWRvWhy+azlEovsnd5uPCbBscA+649aWajeTPt4Q3lfo9qJ9r3L
jmSvMWu1z8hVXdi4pNz+z4yy21nf0+0vOV5JmxEYbt/RcfAgi7KTvfxTryl+
u1TsGaDAGMwXsYfRMHkAdNyXVg==
       "] -> 10.6, CompressedData["
1:eJxTTMoPSmVkYGDQBOKVV3RWP/edZP/+eVrR3Ipp9tq7vvDpZc2yV29RCJs6
aY69GNMJBm+FOfZZ2+s+nbo4057vjbisUex0+6OLOOc+jppq7zxXNkVWa4r9
JcmuhoXZk+2VZubs7HCdDOffjjJbfWzJZPsvstbaZgFT7M893nqcY8pU+wkf
mcN+9M6wX9HJ0x99eK59TUlqZaLLIvtTJ7yzbVYss5/vkZBi1rXWvmnRB5tb
1zbau1/+KLONcZO9nHOJdkHkGnvdpx9CrR4stZ9mnvXzwvtF9jvDWhmMDiyy
L5Lw/5Qvv9g+cdq3OaprF9nv64nceWr6AvtD5bxh15/MtF84uaHhkMgk+7Ng
d7TaPyx41nc/vcL+AZjOsF9YHLPaiSHSXjJ5BsOHXFd7aXA46NgzQMHP8AN9
yTzCGHwAvtmUnA==
       "] -> 10.74, CompressedData["
1:eJxTTMoPSmVkYGDQBOLMX9YuNScn2otOrDr6WGKafUF3fbKi1iz7hcv2Ox+Z
Psde6KrUt19ac+w5O8rZc+/MtF83b5bpVv/p9ibKc6Z8yJ1q37Zu7eop6lPs
a4qMOntiJ9sHL5k6vdxusv3EmwxM4rmT7c/x5eRsmz3ZfrZojYq8+RR7z64s
3uraqfbua3YtbWubYf9SfNmF7Alz7aeliblP9V1kv+Pk227zqcvs93ly3g8r
XGsPcd9G+93TStWXsW+yZ+Lp6itpWGP/+tDdy+d+LrVn5IjZ4suw2P6m5f5D
Fg8XQe1fbG81v5P35clF9k3v5Jlady6A++vH6QcTXc0mQfW32s/0+NKx4UiF
/Rf+xkMxHhlQ/4XbTwK739n+vca5OR9F5O0ZcACIPL89AP1BkV0=
       "] -> 10.83, CompressedData["
1:eJxTTMoPSmVkYGDQBOIzMoyKl89MtOdKULy3l2Gavf/CjVOZRWfZ3zuu2SRa
N8f++ZGLP+f6zbEPna84Ie7rTPtj5Q8Vqmqm26uFBR5qSZpqn+T4kt1BbIp9
i2nns8SIyfadxj8f7LGYbN9oFphpkjHZvtSqsKRu+WT7SBfHCdtdp9grh0u6
hhdNtZ/dNvPU+cwZ9qtvWm55NGuu/S6ljYaHtBfZ52f27uCdvsx+4/WV62yr
19pD3LfR3lX+a3ril432T47OrCmIW2PPHzfxhsTDpfaTDRZGuHIutp+t63nh
7M1F9q1gdyy2n6EnGLzg5SL7f1wf37FuWGDvtoRTrtpllv1usD2ToPpb7csn
H8xrMK+07+1ujHizI8N+ZzWjzpHd4fbCMYyXiw+62rv9YpzAulTfngEKJMB8
fnt0GgDQV5E5
       "] -> 10.85, CompressedData["
1:eJxTTMoPSmVkYGDQBOIyKX/78mcT7RlmzWu+wT3N/odp2MzXQbPs69S/ZE5e
MMdegLtnxsO6Ofb6LlxNR5Jn2Re77DjhzDoDrn5zbW/os11T7F8eyWh5dH+y
ffUKhs0G+xA0TDxTI/ThhdAp9re4p+XEJ0+1XxWUs1FGbIb9iRqdeytY59pf
eG/U+mbzQvsT3a9m/f+1FGr/GvuDHZLvjltutN8JsrV1o/25Uk3eP2dX25eW
3bHd9XCp/U8XkTAnj8Vwugps72J7EZ+8U+sCFts/zL8X5iOz0P7F1lXHgUbb
X97GbX9y/iT7hr9dD441ttmndD/dcKCj0r4zSJQv1jXTXjz/StM58wj7E0cE
Hyrxu9r3gcU17RmggNOcb8uLGwL26DQAkuqaAg==
       "] -> 10.97, CompressedData["
1:eJxTTMoPSmVkYGDQBGK2Ix9tb7NMsjddpPaaS2ea/aUa01UiTrPsr/3tVc9a
Pcde9LN07I/yOfbpDdEzrIJn2f9g0uTk/j3dnmv2Lb79nNPsY4MfFZ/YNMU+
TkPKi/HpZPt5sivq+zdOtjdWPJe79dBkuDiXq9dug7wp9ierWtZn5k+19xM8
eHCR/Qz7V2IzVhUrz7V32VlfnHlxof2CeQx/n0gts78Ktn+Nvf6C0g/xkRvt
VVdeOWzXstF+3pUbX0yfrbZv6Av13XV2qf0epm7WzwaL4bStRP6sa9MX239k
qOBL0FhsX9mzJIj/9wL7F1PtdeV2zbKXufv7wJOaSfbf18zYWhPfZn8hMLfB
t6TSvsr56vGt+pn259WWhrUti7A/Dnanq332VGa1d6qG9gxQEAjmC9qj0wAc
z5Iq
       "] -> 11.06, CompressedData["
1:eJxTTMoPSmVkYGDQBOLWje3L0+Qn2Zetl9QysJlmn7l29ZqfEbPsz/k8brm0
dI79v+UnypWa5sDFTTIjjxe8mG5/LfUJ/4UvU+27Zn2ZOX/zFPvVe0O86+9O
tr8tYWV3fieCFhZ4FBj+frJ90z/DyvSoKfYzL1Xe5k+bap+TwHj7h+wMe1tr
4zWPBObaP00P6mW7sdCem19beM/fpfZzP/6d2HRyjf2yK88j3Dw32q85WVlo
0LPRvitb3KHs1Wr7BXk2f9z3L7U3b1wsfNl1sT3zjRiB5zaL7YuOrTH/vhzB
Z+/eZPeMcaE9x/cHxyIXzLL/Ov/6ubKuSfb8sT3KEVpt9ru0PwZoxlfaSz3a
bXZSPNM+qlQtu3NZpP29LX/i2IVd7M/O/n2Z84iWPQMaOA52r6A9jAYARMSY
Ow==
       "] -> 11.08, CompressedData["
1:eJxTTMoPSmVkYGDQBOJfghJznh5eZu/57aKAx6wF9laHquMNVefay890eH9l
6xz717b7HDRLF9ifF2m+cIZ1gT3v3VTN9RsW2m+5fOLUTZ8l9qbaLc11a5fa
NxicjM7SX2afU/sr2bxnGZx/eP/C3TpPl8JpmH2xExWLn3xeYu+Y8Yypo2WJ
fea55k9vTy22d9W/w5nRv8g+4tEqxtlGi+wTIsSrjvxbZP/vQ49FjMQC+0QN
Sf/p2XPspV6drO3+MtO+pjHolULeZPspv8VeGstMtG9kOG1gO6fffoLMIp+9
x9vtW+/bn938ocM+MMeuszCt0T7s9bbzvVNq7c0/VXbF7Si2v9H13uPbxQL7
4/2LJ/wPzLePW7mAo9q2wF5vqzh36MMU+6dup/hkrkfbvwPT3vaeYPcp2TNA
AYRvZA8A8aCbyg==
       "] -> 3.16, CompressedData["
1:eJxTTMoPSmVkYGDQBGKBrbY3p65daD/lnfPlpSwL7HONJ8593D3XPv3E7GN1
O2fZf8qZPv3zo9n2TTUd9mfvzbeXm2y/REpvof0zKYsKdp3F9ofzN9fszlpi
H8JssLkoZKn9zKtrpXVfLrUv19JUeKi+3P7iSc2dSX+X2SfGLnsv+Xy5Pfu+
pWEzBFfYL9NXibhSvcJ+vsPiTxN3r7Df/WdZx+w9CPVvWnX9c/4BzVm3Zd0+
0SX2Czx28ftOX2Q/16Ln6rX78+xF5yxXlJ003X6d2p5bF8Un2dvqTUv9YN5j
bxSxerva5Db7kPbdjgFOTfavfnYtvmxSb595YdNjy6kl9hzH9hQHvy20rwf7
J98+CeyudPuLvlvdHV4n28sVTTr/zCzW/k/Qhnpj+1D7E+lz4hn6vey7wOrt
7RmggC0YJG9qD6MB9GSccQ==
       "] -> 2.89, CompressedData["
1:eJxTTMoPSmVkYGDQBOJtcR7aHWaL7P2520u9ts23n/FLb2dt/Rx79+4OxVUn
ZtkfiXO9fEJwjv3yy5tXPrg1z17vE+vmaxwL7esT13it2r/I/ilTXP5i+yX2
TQtXl1SZLbV35O46y3l7qf2X24/i2WYvs9/kenDHVPvl9rqSdVlbOlbAaR6/
t2J/bq2wt9jEbOieixCfI7xNu6Bsub32zTqHJ4LL7HfOcw+NWLvEvuSEWov4
7UX2l81PHdbOnWe/955bvYbKdPvOX4aCtksm2a/TsXJb7NFjnyom5T3pf7v9
mQnBO9b+b7SP3zt53fmJVfYyDL/8G7cV2y8G+yPPnvNrWpVlbra92PLizfs8
0qD+i7NnBYtH2x8yPyv9emKIPQ+Y721/Esx3gfK14TQDFAAAwN+XCg==
       "] -> 2.89, CompressedData["
1:eJxTTMoPSmVkYGDQBOKQl2+1fW4usW+fVD7lQcEieymD7kuehQvtAzo3PWD6
ucA+g01UzCJ4of3RX/Ne8+xZZF99ZZOv86kl9hrzj6WxiS6zN1x3bH3ljWX2
y+U372qevcJeyz+FR5t1hf3lzFv1J+OX23tqaz5dZ7TcnnELoyu/yjJ7t+pu
+y6npfbet94+uiG6xH4+/62ToqcX2d8tZ1R0EltsX99c7p27dqF9WUk506+X
C+zbpmg+udo1x371+YCEFd2z7Lf1ii53NZph/0Ad5ICp9m+fJvOyrJ1kv/rs
PIHNhRPsp2/SLNsj2Gdfc7X7q+31TnvLPW8DPvU12SdHMmUwd9XZW+6bv+D5
ihr79G2bdsc4F9tzHNJ41n6r0P5SBuONc0FF9iypFZP0FHPtJ4LNibPfv8pm
ouGaEPsFYL6d/VSwe4Psm8F8P3sGKAAAClmVvg==
       "] -> 3.06, CompressedData["
1:eJxTTMoPSmVkYGDQBOJakZJmqb8L7PtZjcvvfptj/0MpfucB7zn27q62hvIt
s+1XMDQ6JgnPtd9izWL4RWKBvfvbx1cdHi60V52w9qb0/8X2BY3TLVaFLLFn
BmmXWWafIb+ejat/mf0WgZmpM54ssz+kZnXdKWWZ/UrtNzz73JfZy+odXV5t
uczexX7L41VXl8L5cVZM6/Q/LbXf2HvFLo53if2eIpDBS+yvvOKybn6/0H6f
wsbOc1sX2FtvSni27vY8+y2TY3su7Z5pP+dwVe/Ky5Psk7K/Hft/ZYr9m/6m
vIDF/fZ8EipmF3e22a+NeaDap9Vq3/lT4c6XmY1Q+Xp7q7unN3IJVNiXsMTE
P9Eut9976tYnMd88e++Fc0S9Zyfbd5zQOayyPcneUPK376mWGPunQTW7pieH
2nNvAwWEB1Tcx54BCgAHT5h+
       "] -> 3., CompressedData["
1:eJxTTMoPSmVkYGDQBOJtkXUHVykvsA/Refm/bdZce8uueUmHUmbZa1v+FH5w
cob9VOYXt+KlZ9uv7vodq3dirr3g5eOWHrcW2J99MNGl8sIi+9uG5pOjs5fY
b7eYI1GSttQ+S+DHux1ey+yL3dKUl8Ystz+/f/1sJ+EV9mEZTIc3P1hhf1cg
9JXKupX2FmB7Vtkn71wuOK16lT1P9NTN73xX2XefrVxWzLnK/tvlRgOFhcvt
38wV/mPcv8yeyY1Tw/LnYnsBq81cOybMt5c4K7Oafdk0+4cd7QV1VhPs87X1
OddfbrN/f1Nnf8LVRvs7YHsq7b2Cy8z/dRfZe36rOj2rI8d+F9idqfY+YPEk
qHsi7dnA5gfbB4LV+cDpErC5ZlBazZ4BCtD5ANENkb4=
       "] -> 3.05, CompressedData["
1:eJxTTMoPSmVkYGDQBOJNiuybVxgtsr8qvFNS8fE8e0+u4kyFnXPsJ8cfZb/1
eZZ9+4zw++YBc+3v6qdPu6a4wD7dcq3bde9F9nbavskrY5bYb3cX87/RtdR+
9mTtpJTXy+xvKArcqG5abu8UGPP/xpbl9msaVqiZPV9uL7bhi+9kyRVweWWu
LBffzOX2u27Jyn4wW25/wmSy8Kq2Zfb2+0IMD3Isg5uva3dh3vWExfZhPgZN
rAEL7aO+v9f9tGWu/fcMpsns56bb/+VMlK+SnGQ/rfXKYk6fPnuOsPrwmyc7
7H1aD0Umr2m2L199SyotpMa+qcjDmeNHpX0o2JxCqHiO/Uenz9+ul6bAaUuw
/WFweuXxiXvePXKyZ4CCh1vEl03Ws4TzYQAAxCCLdQ==
       "] -> 3.7, CompressedData["
1:eJxTTMoPSmVkYGDQBOLoP1uy10QssJ/Nt73p6qM59tPfv/B2yZll77eWQ/P/
rRn2yqG3o2wlZts3Jy2YXcI4z75eVvWvn+JC+zjp5kW25xfZ8y966nTTeYl9
2JOjqXJXl9oLHdxcmbVrmf3ZuQt7t81fbr/jY9ey0H0r7O8I/Tb/0bbSnsEk
++Qs/1X2x9KeBExfusq+wflSyuOu1fZxSkmXHQ6tsr+4J/+Iu9gqe+2eGdNj
hFbYO1qsr9v7eZl9+bP0A/rqS+zn6rbuTIucb39Aw+NxyY6p9uolKyee6+uF
yrfYWzN+cpz3s9L+6pW4U1dnltjnTN9d27Qyx17iR8G2zi3J9mDt8gn2tSos
ekEikfb9G33uKdaH2i+0m9r38WWgfQeY7wqni8H6dewZoADGRxcHACbmmFQ=

       "] -> 3.58, CompressedData["
1:eJxTTMoPSmVkYGDQBOJoxn4N9b8L7Fd7l0/53zPfXmGWE2Pkwtn2D+f8FtV9
NMs+bnrnm5aEOfZ3JoofvnNvrv3qAwnKn3QW2gvOmJcU3bTY3qJo6rYZEkvt
6y4s1BSZsNR+yaoZtYFqy+2N0zcme4iusA95fayp7dsy+12HWA69915pr7xU
LWTlkhX2xSk//EqurLB/vPx+Ru3T5fbd7R7Pkv4i9F37YLFGr2KpvdoGruU/
ly+1N5LZ0jgzeRHcHVNe8OZt2jrdXrY/bh3HvD77/0DXSh3osU9bGzhJNb3N
Xg7sj2r7BfO3aDEqV9m/2HR499kXJfa3wfpz7Z+B7U23fwkWT7G/BxaPhbon
HM5/Cea7o9Hm9gxQ8H7vcj65N472ALAbpZg=
       "] -> 3.55, CompressedData["
1:eJxTTMoPSmVkYGDQBGK2gEO79rxYYv9sR1n0UvEF9lK6GrtO/5tr//7Mg4+S
72bZZ7xI2utzbrZ9UFj2a3H/+faJV36o3fi+wP7J8Z4U8zmL7GU+np/a/Gax
fYiU8PHzNkvtFz1JvvxowlL7w7HNCtcilto3ZLu0vT+x1P7Dui33vz5Zai+o
cUXn5RqE+JNri3JPKiy139FauG7llCX2tlnvH5VtWQynS1tkuA0bFtnffF/1
ievGQvupHqta/92bB3fXoZyZmhl3p9vf+jfh95yYKfbZa7hmsuyZaO+Z71wQ
ydYDtbfV3vCu9zyV9np7d7B4jX0so7VTX2uF/Z/yDR4TVEqg4jn2QRb2Nz+7
Ztmbg9XH2/uBxWPsqyYbiRxmCYXyfewnqmo9+94caM8ABQCkKqAu
       "] -> 2.71, CompressedData["
1:eJxTTMoPSmVkYGDQBOK5kbIXZ05aaK+9YE8pb8Z8+5Nf9V4ckp1jvzLKss7g
4mz7rhkfkg1fzrU3eX1ZZSbDAvt9X4Ssde4vtNdnOBpaJrvE3s5qmhFn2VL7
dt5XJeW7l9mbl90SDtZbbv/i3qlNeguX2+94tGH3nIQV9vcdk1yeflkGF4ep
S1hn8UZPfYU9v12NdbnpMvv6gkY2Pf5l9mJMFlG6tUvs1ZJjnusULraHuTPr
76+f8+bMtT/pfNVjTsh0+2c6hcIcNybZv5qgEhSa1WO/srFHb25Op70GWF+z
/alzt83DmursO8DuK7N3/xcYuH9vsT0v63Huaul8+65n045wKWTat0VPuBrw
KdFeQEdqz/NtMfb8wbk5IUFRUL6PPV/VAZmDb93tuU+k1c5SUYbSxvYMUAAA
wg6RWQ==
       "] -> 3.41, CompressedData["
1:eJxTTMoPSmVkYGDQBOK46Z1vWhLm2Ac8eKRv9nmmfbNac5yw6wz7KS948zZt
nQ4X9736787T93PsjzzesOtB6AJ7Q5ktjTOTF9knhBfEqm1abN8/ScdyM8NS
+7S1gZNU05fZf87MqpAJW26vvFQtZOWSFfY/93uvleZeZX/D2qzvruZqe4i9
a+znTrlwfYP8Wntb4ZKzbvVr7bdtV8if77HGfqbd+0Ubs1bZS7kknol8s8L+
mN66Of3sy+zPuJQ5GfAtsJ/2+eMBpp1ToOZ3QM2ptc/cYfq0NKvY/t6c36K6
j7LsM8D8ZPsbE8UP37kXa/94+f2M2qfh9i/3LueTexMIFfe1vwcWd7d/DBZ3
hNMvweLq9gxQAONfAtPmcBoAX/mjmA==
       "] -> 3.41, CompressedData["
1:eJxTTMoPSmVkYGDQBGLl9Wvjyrctsp8rNPvwZqYF9i8SJk6ISJtnf+CfnejF
aXPtVb/0nFw8d7594ZY2Fr7NC+1h6juW/Bby2rvE3iFqA6PX46X2tW9XW02V
Wm6/s2F58YPAFfa8jnzreAuX23clH08+FL/c/id/6gdPzuX2pz61PNAWX2a/
pyZz+7+LS+0lf8S2HRJeaq+eV7n+fcRS+2srr+x4sHOx/fKeLysOHV9kn/Xz
R375hIX2YSf8N23WWGhvmaRTxft4lr0aWP1U+5jmu25e3hOh8hPt30eISkxN
67SPdnsevCS3zb48X2TmkquN9hqGzXs8q6vsd4PdV2G/1r3JNvJVkb3Jkyk3
ZOaV2jvL7uJbwpptv2BKgWLb8XSouYn2aqvzF001S7BPAPMD7QVdfbLef7CE
0p72DFAAALhxmgc=
       "] -> 3.52, CompressedData["
1:eJxTTMoPSmVkYGDQBGLW3w2ciqzz7K0qmD3nlMy2NxOxkp9YN9Oe55n23lvT
ZtgfClzk07J5ln3I58uLm+7NtV8fu7na5+kC+5u2y4o4Tiyyt///5JKXwBL7
B8EhhpI7l9qHV23VNaxaZu9+vFwt8c9ye16wOSvsr7CAVKy0V1kv3rybdZX9
nKsV9ZePrYLau9p+bnusyM2Dq+0tj8ltmVa5Cq5PdmbmkVUiy+1Z5UCMJfYu
DtPmbEqYb1/r8iv1TvZU++RlgquDYnrst6q6nU+62GK/nUkvf792nb2U6YJZ
8+VK7Z/bgRxYYP/rnErPf6UM+2CxN8xqLSn2GkePOp75FmP/FSweYb8W7K8A
OC0Hlrex33mj+ZqRvzGcPg2mleF8BigAADmDmGM=
       "] -> 3.43, CompressedData["
1:eJxTTMoPSmVkYGDQBGIF+T077YMX2Ou68r5bbjbXvvTLUXuJN7Pst0TJSL2f
OtOeY9fdyrnrZ9u/vrdN+GLPPPua4/cntFcstN9pc+PXY4/F9ifu2lXOaVti
vyBx4xRxtWX20yT8Zeukltv3nX+z9AnfCvvwTT+clhessJ9TEKwy12el/WmX
p/yO91faP9JbxzpZY5V9z70+0yzT1farBXctCu1aZS/hsyjjwrGV9revrfxX
/G053NyNn0ubvWyXwN1hVaDtZvZ1qv1Es8k2nem99nJ6cZ5HK5vtYyTn3/Q+
WWvPM2dm1KSkUvvFJ8K199Rl2xuqnzw352Wa/dxfXP+KziZA3RUBVRdqHwvm
e9gfa7Uqqg1xgvItoLSGPQMBAABsSpCy
       "] -> 3.67, CompressedData["
1:eJxTTMoPSmVkYGDQBGJhraV+7x4sspd/JAuEc+1ll3U1Or6fYy+370dJWsBc
e/6mRcteWyywF/p1In2J3CJ74fqli9+ZLrYXZmm6b+G7xF7sJQgusxe/k5DX
un25vYTEl3OJq1bYi0t+Pp+werm9KJ91+NnqZfZia1rarb8usxe9F1fQvHOp
vchUUSBcai+0vrHL4gfQvFTLdacvLYGbK3ht8a83PQvtBRTeXIvctMBe1una
+o1p8+2lV3Q023+cZS8GNneavdAec9ZTmpPt5ff8Ksrw67eX0Unb18Xeay+q
sdznw70We6GeaLmG9CZ78QVneVceabMXj2g2tlpYai+cYbbxxNVCe4mCj2rx
TGX24hdWfvnUlm4v+iCmqHF3sb0EQ9ttG88MeykHUSAMhcszQIFYw5Ilb82c
4HwA2SqMFQ==
       "] -> 3.61, CompressedData["
1:eJxTTMoPSmVkYGDQBOLj4ls2tN1eaK+nPttqNv98+1WxjL9cAmfbG9ifK1v/
fo593GGTrgzn+XA6qmLW3h9pC+2PFaeHZXAvtY+44pt8a9oS+4Ku5+fWXFhm
b//Ot/7+nGX235qft2v7L7P3tGWcvu/kCvuLh6Ty3C2W23dEbCmb/GqZfdL0
5zHrLy+3D98jpX5s2zK4fhhf+uLZ/ZJhS+wdJs26+TdnsX3dWt+dl3oX2nvw
zpabxjnX/tv3s5mK8dPtp75ncF6/fZL97Z+zPIVau+29Q00uX1rZZu/bOsv7
d2aT/R2weLX91/uzdHnrK+2tjc69WPOm2v4eWDzbXuYlwx9dsyL7n/bpcnH/
E+xZmBkljG1S7E+B/RcKpwPA5oZB7Ym2Z4CCaIlzZ5Y/07QHAJbKm0M=
       "] -> 3.55, CompressedData["
1:eJxTTMoPSmVkYGDQBOLrv/VZW37OshdrS5RoS5xhz8rcK5j6fxqcTn7RcFcu
e6a9N/99nZftc+zv7b78/6HWAnuxD+aZ5wUX2UfurmwQ6lpsn23n1278Zom9
d+XWWiOLZfYnlZ2C34Yvt+d535xlcGGFfSOT8aSpcavsv4g+2vnrzWr7xRx3
5l9XWmvf4uw87VreOvvVXy79WPR5nb2Ol5vyi8tr4eoCdh1tLPZYZX9llzyj
88tl9oVTpA09chfYR4DtnWxfn8P5+B5fi/2k93df/i8oharPsr+q8i2wZ2aC
vRRQtYBSmP11MD/AXh7Md4PyHeA0RNwMSqth0AxQgCpuBqcB5tqJzA==
       "] -> 3.57, CompressedData["
1:eJxTTMoPSmVkYGDQBGJ56Wu75eIn2e/O0DIWCppmf+HqilOHf8+0L+rbL7rk
6xz7HZrzqwUezLUPXbj00PqTc+xPZT37du3LLHsld94bnF9m2Gd9P6p6JnK6
fXBp3rIjJtPsNyyvK+7bP9X+4OU3bP8jptrLsf29fOLxFHsDo+x0y9op9jNV
1b+0zZpiPw9oqqzaNPuHjOJxJlNn2k++eChEf+08e7736Rrrji6yv7tat2gu
5wp7vXlXVJkvrrG/q1MgsffGWvsqvuiLz8pX2p+dMuNY0+ul9i6c5wpK7yyx
d99y6JnDoqX2+UkdP3ckLIPLNy0+X1Jfutj+4Csv6ylF8+yXPLu0mUt3qn2s
omPdJ+9O+zUZn3f3+NZC6Vz7T8yXFX+ax9lP+12icnuxp31937cezV+m9tPB
8rL2DFCwGczntYfRADmtowU=
       "] -> 10.63, CompressedData["
1:eJxTTMoPSmVkYGDQBOL9Atpej5Un2/u02Ul48Ey3t3whME+3apZ92+9s+Xr2
ufbdZotuT86day+qfKVs9cvZ9mnKu2xvXptpH/Jn1YTCG9PtKw8+3/45Y5r9
woNRs7vip9pbxOtnP+Cdap95le/4ggtT7E1Ufq47vXyK/Uzvd0qJk6fYXzK3
+u6lNNX+WZznkk0K0+1516b/a5Sdbb+4eL1KUOQCew+gqLjyEnv/jFP8lV9X
2ss4TNP6aLHe3qbw04WqZ+vtt5/6aq/svsp+yZ8J4fOPLrUHGb6Gb4l9yqwb
XD1ZS+xbT5tsFJVYau9z/8Ud7c4l9ia1IJMX2fvxK3hPrZhj//1PmdzZTZPt
W4q63hjObofaX22/2Mvm3PXTWfZeV172NQjF2G9aa9xz97ubfddzF4FL8/Xs
M8Hmq9gzQAGMD6MBp0OZJg==
       "] -> 10.71, CompressedData["
1:eJxTTMoPSmVkYGDQBOJl9rITi3dOsrcUaTQIPTbN/uJhLx+rmFn26htvxKs/
mmOf41f1RKl6rn3l/dWRumJz7B0vW3vZSMyy5zx+2spbaob92ftf14VNnmbf
K7trWVzzVPubBeoqiXpT7VWOTFmYfHOK/Y5+ToXUZVPs/aLr5qUVT7H3aJBQ
Sn41BW5fa8Hdc+YbZ9mz3WqvaRdcYH/Q9apEzo7F9sdnX2k5mLrSfpZRic7s
pnX2XiwLjab6rbcP2ljLtUdhlX1q24WV0S+X2lvX2tx7lrXE3mLRtcTHD5fY
b7ppqx43Zan9pB/yykk8S+0bm2cKlKxYZH87NvuRivlc+31Z+XMy9KfY6zb7
7/bS7rCPvfn5ool4tX31LsFrBvOzoXS0ffVGpa0B8e72v3RWL0mwN7VnQANM
KnuaG/4L2MNoAKaRjhU=
       "] -> 10.71, CompressedData["
1:eJxTTMoPSmVkYGDQBOLHxh2tcgGT7A10q3kmp02zFwz47RojPcu+drn4v1v/
5th/LqquV70w117k4pIN+nPn2C/e/0T49KFZ9muMde5O2zDDnvVWwvKXmtPt
j4Vx7H/OMs1+d6J4t8fUqfafViqpTHScat9xef21p/en2O+X3p2v1zPF3nXa
Zs5/h6fA7dP90jCp4eNM++0FZxi/68y35/iwRjhfarH9iesbNXe3rbC/s9pd
taR0rb3JZdWoWQXr7JdXdvzYsHOl/WUN76c/3y+1D874pi+wfon9pBMLuFr9
l9qLpblvesi9zD4z6MZ0v76l9qv4tH8laSy232Bav8l2y1z7xeWmylzbpthP
7F82oehWh33xJrVT1v019j915FO4j+fYC4gznvFcFmvfMmtrzOUsD3v1T7p7
b741sd/kZPvnzHNuewYogPFhNABXK5s5
       "] -> 10.78, CompressedData["
1:eJxTTMoPSmVkYGDQBOIaa7PSxncT7R/cEir+wD/NPvtH1B7tzzPtMw/OLFW/
OMe+MN4wqiBtrn1MyDY5q4+z7e1XL/6369lMe1Wmifes70y3t3Y5m1BWPM1+
7fvDF8zyptrXXj6wQFF8qv2FeY9Xxj2dYv9Dxv+r1vIp9gubHlR69k2By+fr
yzAbiE63D3h+6biP4Gz7qvcFQJsW2LtKqvUc1lpir/fm7Y0rrKvsFR9cTmvW
WW+/OnVii9zz9fZyf5pVJ+evsjdeZlqje28pXD3XHRZpwY4l9ldyQQYvtVfK
Yts8e/MS+xzvMwftIxbB/ePkdUtS/sFk+6Uvt4n3MXbY61psfqcyq9peD0xn
23cszL2z6m+0/aawWXnVDz3sb3MfZ/A5amq/A8yXsGeAAgifwx5GAwC7H5Yy

       "] -> 10.69, CompressedData["
1:eJxTTMoPSmVkYGDQBOLDWyaaPS6YYt/U/H6hHecM+zXvLnUx5c6259ao3FS1
bZ69rO/UV4mnF9h7inS9n2Cy0P5F3aXVa58usO+uDT/I/mm+vYi++5v/RvPs
U4RKbjj3zbF/uGfqyW1Bs+2PM9taTHo00953q05yl/IM+zu5r46zP5xqP/3t
HMMt7FPsV/62WLqPYbJ9ttoKndZ5k+0Fbday7Tk21T41r/XLuskz7XVfzK9V
WTzfXu+/vBPj/kX2xfW5N0JmLLFf4Wsgzlm3xD5Sgmdn1VIgf756Z/Dvpfbb
Ajc9+PRuuf0FLu4i8fiV9qw3z2447bLS3vjP5Yupm5fZf7w+Pbz2/kJ7/gez
XwUcnGEvBHZ3n73+Wo0L2xwboXQhlE60f3PK0PagtxeUtrJ/AKa17BmgAMaH
0QAI35v6
       "] -> 9.85, CompressedData["
1:eJxTTMoPSmVkYGDQBOIr60oFd6+faJ+o8XnJK+Zp9lE3P5TI/pxp32OQ/yvy
4hz7byslH55QnWsvOGuWjU7XbHu+K9J2L/Nn2k/6LXPNv3S6/Z5jc+PYJKfZ
r1lZ3O6uNtW+oH5ebdqdKfYvJso937Nnir1x6Mni1klT7Hc7eXLpb5piv6el
eMus1Kn27hZFnu3zp9tXC7sqz74327783IK1xs8X2Is+/HzY6/gSe8GIgkkH
rq2yX2Ph2KNiuMF+8zZv3pW1G+Dir7/Ept07udReuG6Li+auxfbdGz2bTb8s
tmdl+zLte/sSe+H5JyXvCy+xj57zdXnK+YVwe3bs+7I13Huyfdoa958Hs9rt
r+jO7rjfU2XfkfXht9j2LPvPj2c9auWOtr+g+um+wX53e/1+r1KnCiP7lqh5
q3ZKi9ozQAGEzwrnAwBmaJn0
       "] -> 10.1, CompressedData["
1:eJxTTMoPSmVkYGDQBOKortnO0ipT7M82KjqG7Ztu3y3DdW2p3mz7qVGhTFyl
8+xfThJ1e9C5wD7AJ0B8+90F9nus32Wn1i+wl9DK4F3sNt+erSHsVn/KXHuG
hwZHYg/Oti9gM5rzeMMs+0sK7uEdiTPh5q45o/wxce5U++W6/27p/5psX8dj
1dJjO9keZv/jH5dTns2YZn9qS0PAzaOz7J0dU35dnbfAfpaS0D6/3Yvtg+Su
2uR0LLXn2nhVQ59hqX3z6vhZ+x4ssRduiztk8XGpfXD79PPH7i63lzuy8t0c
85X2R0SjrZYrrbSP/hx7rbRymb3OqY3XXI8stGdZd3HLrZ0z7I89vx8fc7YX
6q8G+znvN607vbnAnmXl2/pF7In2YR8ikxSNvewfRa7z2/LVBEqL2DNAAYwP
owFb3ps+
       "] -> 9.63, CompressedData["
1:eJxTTMoPSmVkYGDQBOJ/DWrHLX9Ptv+8a+nR6xun2/Mxp/L2q8y2n1r6xGDS
6bn2WxVSKn8lzbf/8uicx/mP8+x3N6tUrW6fa3/g2ZOqmDWz7Rdbpxp9EZll
H9e0dEHRwRn2B4MCdibwzLA3rBWYusZhuv06xmfGYXHT7AOm/JaWtJhqvyVl
mQl78xT72HcC98sUp9rz5F/wntwy3f6swy/bXVNn218yPH6rdNUC+zDHtr/H
dZbas/IIeD+KX2kfeya/sWDiKvt/Irs7TGcvt/d8XmCV5bzUvnQRyAFL7C/z
q9XmSy2z9zK0ls4QXm5f9obVzeDIMvsbRc9qFeyX2GezPHl2/NV8+0tgddPs
jQSXhq140GVfkL7keQV/nf2i8z8/v9+SC6Vj7Zs/L31ls8jNfn7Zn/VrfxrY
J4H5YvYMUADjw2gAc/GeVw==
       "] -> 9.68, CompressedData["
1:eJxTTMoPSmVkYGDQBOLeS1oZ+4wn29+S+iLtLTPdPl3kwmIJt9n2+vv3/Vfb
ON/+trr+xV8Si+xlZ9aF+ekttn8l8FRCPmuxffPKjRfXbFtk739K/ETm8YX2
q0HcSwvsRbUdeUVYFtinRE4Jc/w81/7E7mOWFaqz7cXPsH3ojp1uf3DjkUJG
5Sn2h3MY9t8onWhfnPl7b4nVBHvdZ/nyZssn2F/b9+n17/xJ9mcM7a6onZ5q
v9fa93pQ7Uz7Z71GJw8cn2v/POlJw3fhhfbeO26vq/NcbN8t/l7q+YOl9jc4
djAlzFthn//MI09sxir7384J5ctfrrJf+TJqlX7zCvvrop+3889ebH8kqCuk
sma2fdb0ps9lLybYn2q2tflf0mzfAw6HYnumM8JAH6TYK67elW+5JtC+/Zm1
ceILW/tP+55ucDugCqVZ4TQDFAAAMRCelw==
       "] -> 9.03, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAACanQRKrB6RP6i67vmalZU/ywEaXZq2mT8E
h88PBLycPyYyaIDDAJ0/y9mHJOdBmz/AgMKf6xuZPwyob69/KZc/ZVB0fMLR
lT/UDnFgvOmUPxZ5692UrZQ/6jiyE82TlD8hDow3nYKUP7Jj2O/8pJQ/F2Wi
QTtzlT98PtpaxsyXPyVGsRwdO5w/sT0hL5AroT9ELwDaLyqlP+J5pAnLTqs/
3ZGjlbF/sD82EhYqQbOwP6CZTlofKKs/yWWHalrapT9CV5IS456jP9Os3spC
waM/yY0Zow1PpD8A7ReVCtujP3neIj2Tn6E/4u9/O56xmz95tpAE4CqTP9XS
lYuvOoc/aNi90qhzej/4LQqLCJZqPxnZovvH2lo/h9N6tM6hRz9vIfCq11Uz
P5osQDnKxxk/AAAAAAAAAABnyCom3C8BPwAAAAAAAAAALk+Utw==
       "] -> 9.58, CompressedData["
1:eJxTTMoPSmVkYGDQBGKpvBULz3BOsg+I3LbcrWKavUnGf4m/ZrPsV9XrvxJ4
Nse++aZQDve3OfZWP7o2bmWbbb8pdFJu9fEZ9g7n3poovJhmX5Dv3jt5xlT7
7dpfPzxdMcWetULv7YeOKfbBR9Jf/s6YYq8j5539rWKKfdb93V9unZgCV29+
eUPUJvUZ9vJFrSmK2+bYJ3+aHfi7cSFUfqn96akHzseyrbEvnuk4z/jeBnvB
Xz8fqbJttO/i4fo1x2+1vVmZTED3hqX2yscq2xIdF9v/kY/liAlcbH/Tse2a
0UkEP0ErjFVeaqH9+lcPtI9dm2X/2ObwhgWdk+zffNRYEGPRZr/o1MlfIeaV
9rbJNp+zvmfYW4PpCPtEf4MYpZ/O9kabNh9j/qpvz4AGmMHi/HBxAHqulAs=

       "] -> 9.95, CompressedData["
1:eJxTTMoPSmVkYGDQBOLM+K+/9NdOsvepZ8nWKJ1mr1efceC0/Cx7sf0nSwuk
5trz+1fcOCw8D85XuX/oaXHSbHuT+btYK4Jm2jv7czKrrZwO1x+Qz1Ss+XGq
fcj7UI6r1VPtw/NXzm1gm2ofcz5Q4nrxFDgd6B8eceXyVHvT9ztjK9Rm2vPv
V/KWZJ1nn2vumXLbd5G98/VYkYuly+1l9aWFZRXX2Ivmn5ItcFtrb1bP/1rJ
dCXUnqX2YcdXFjbILIXzPdtZn6tvX2bvyx5Zc9lxmX2i+xLD5j2L7dn2Vysc
ej/PPuT8qrf1cVPtjf7vDi1f1Wkv+l9+tVRorb1EfbHDsfs5UH6svf1/ztWq
V93ts/5/XmUQamT/+B9InNeeAQpgfBgNAOmDiWE=
       "] -> 10.81, CompressedData["
1:eJxTTMoPSmVkYGDQBOLpa31mKuRNtQ/I73/y/eMMe07DS/rnS+fYH/okUr3s
53z7zDn/jp35sdDemM3Yg/vfInuvdBkrIenF9hYF60VT4xbZt6WntOmWLbTf
/Vef9X3BAvsg3raDzRnz7fdayu5ni5trv6NBlTn90Cz7f/sebe+3m27fqRDj
dFZwiv3sE74VJpMn2j/fz/Tyz6oJ9hFLJy6St5lo/6bi15I5bpPtl1jZfig+
Nc1+obyNYMLSWfZ8r06+zhOcb/9rWz7vqvSF9ky3Hk9bnLzYPq3x7/Mdl5fa
P+hk0L6asML+knf3oeP2q+yLYzN1g7JX2bexRifvfLPcfv829YN9PIvh5vVa
xyo+NJtgbwn2R5M997o7huEqRVB1yfYL57gJvwgOsC8SS3z5kc3WPgVM69oz
QAGMD6MBmYCU3A==
       "] -> 9.41, CompressedData["
1:eJxTTMoPSmVkYGDQBGI212k7Siwm2yvPUBc6/Gaa/dPS+Xn1kbPsHY9pBfzx
mGsvJrjK8dq6efabm/cem2Y4z163buO1z8vn2Du/3pEtuHCWfXzB5Lo752fY
32+K4nlePd2+5O4s4V8nptlzWtyW4hWbZu9henWRdeBU+2vlTjoLM6bYn3Cf
Y+D2d7L94+Uv1P9cnmLfoSrSy5Q13Z6HbVLihNmz7bepbLwUtGWBvTtY31J7
uefrza9XrrT/aqivufH+KntvDSnWK3or7DfdmjJbg2WZffjHlNjc60vt1VQE
L85kX27/we7VMQmmFfbmDxZ0n+5dbv8IbM8S+5VfuK5/91hgf1SJT9Rw6TT7
cGOjp5JO3fZ5eR8O7DpQB6Xz7LUilXff84+3d2fuebnvmpd9U3isW/0TQ/tu
MC1ozwAFMD6MBgCCapdh
       "] -> 10.67, CompressedData["
1:eJxTTMoPSmVkYGDQBOL0WIkPa+dMsl8yN/9/bdE0+/BnKZF/ZWbZ23nvC5My
n2u/h8XFTmDBPPuDykZLbRnn2e8o8uL4njPHXuC2DVDFLPuV+pmm05fOsI8o
juwS9J5uHzvJ/aPdmmn2SRtNI3J4p9lbXF7bpJkw1b7t7+HvU9un2BfyMfR+
MZhiH/QwPuSH+FR71fCvz4pvT7dnqCsSMzOeY++/NPxVvc5C+5V7YtNWX15q
3/r41tRc7VX21+e/cvjcutr+o9VE52vZK+xnb20BmrjUvuPYgUlKC5fad/Xv
1V2/a5k9U2KE8OsVy+1/V+QKGuott28F27vEvvrmhe5kxQX2Ust4vXTdp9mv
P5iUveFGl/0rxl1VDevq7KsluKb/s8qzP3NF0qllarz9coHqc5kunvYqR39v
iFpham8Q8+t1xQMZewYogPB54HwAPHeWCA==
       "] -> 10.85, CompressedData["
1:eJxTTMoPSmVkYGDQBOI151WqT1tOstff/KEzQmaaPb+TP2/4s5n2VfVXJrpq
zrW/WNQS7/14nr2PwnlDwcZ59h0NGw7ks8y1//uEkbv8yyz7cPfZ3zX1Ztqb
/nkpKH5qur12eP22RazT7Q+xNT3bEznN/ljS551FBVPtq0TWuT+smmLPfPiK
x8XPk+1zhC9JbJ8/xb6G0Qyoc7q9fd8dxSmqs+1Zjfal1xUvsF+3Z43+lQtL
7G0+z242YF5pzzB515eL9avs5/+afzqccYX91s1xC99yLoPTT/+/3qrludy+
6cfzXGbvFfatyxaEx11bbv8oZbX4cbWl9udvs00zmLTA/taaEwXRP6fZc3Tl
pL3e0W1/W/z9rv3L6+2n54ksWVSWb3+xc399t2yCfbrp/1sxC7zt7ReG5Hb3
Wdh/rvg/8UWWkr0rmM8BpxmgAAA7B5zC
       "] -> 11.04, CompressedData["
1:eJxTTMoPSmVkYGDQBOKQ8PKPfP8n2f9+khxh+naafep0tur8jbPsA5pMIwMF
59q/y4+qdlebax/GotejEDnbftUXj09ayjPtS2Z/f8DrON1+4sEV+1Z/nGqv
Pu+titK3KfavDy1+YHpmiv2655FzPBchaJi4BLeo2eW5U+2ZvzmLbP073T5O
lM9jQeYc++ib+Sr33Bba55+evK80ZKn94YzU/RMrVtsb7VpTWdK/wZ6nWfpB
2LkN9tXW+1XtpFZDzVlq/2faj4wcj8X2Z3i5q54HLbYPEPsdrn57sf3sFtnu
pNjF9m9LLD7mqC+0X1gUsD/69ix728373BymTbJ3C27rLshvs3d/lCuiaFFp
f1b7VrfHkwwoHWGf9Mr/QWy4k71eboq5caG+PQMa0AH7V8QeRgMAimOSOQ==

       "] -> 10.68, CompressedData["
1:eJxTTMoPSmVkYGDQBGJTn9XMUx5MtL/zyaT4qPg0+68KxZIcX2fal87Vqao5
N8feyG5iW6rbXPvd1W/YN22bbZ++Qj1AcvZMe+e/1ber5k6355b227bfdJp9
o6J6+3vrqfafV9zey/Boiv2RhkNVbEem2Je9eMslMGmKfZrBhC+CHVPsEzdm
R31Wn2p/1KZPo8t3ur3t7n8hB9Nm2+tOmqZ4edoCewMdj2USqUvsZ+t6s3yJ
XWX/56vIs/dr1tu3iKtvTNfeYM8UtWbq83mr7NvqDH+cf7DUfub1sxe12JbY
K5S86peKXmIvIjn91Z+vS+z95zBfFqlcYr8kxHpBm9oi++s5zbP6s+bYc8c3
cdismWy/mZWnIvdxu72st7PG0aBq+xjtXY17q7LtI0HGS8XYZ6n7vDL/7WHf
Il+wW+ePsb2Tvoak8y9ZewYoSAeLM9vDaABf6pMV
       "] -> 10.66, CompressedData["
1:eJxTTMoPSmVkYGDQBOIcvo4J2eGT7J2rZE4J502z/7D57DEem1n2YeWnXpme
mmPPoPrpvMfzOfb75vjPYP85yz7k0Ull8UMz7B2aJ1f6HJ1m7xu/fXdmxlT7
ayd4WWP6ptg35+6zMgtB0BEuQWv3J02xXz1/YfnTOVPsv/PcX1DTOtW+46d7
kAzrDHtmmWoFgQlz7LdvZVjXn77Qvkdx6nPzuqX2Xwukld33rrYvnrl99YE9
G+yPfWEre/Ztg/2zc0ZXtzmutvfK0MtetH+p/cLXp049Llps/2Dtim8bOxbb
t6W4d//9s9i+7FCcbW7jYvvFMv38Fs4L7V8e3a1a92qWfab4f/sl6ybZH/x3
XXHDzDb7hf7svutWVdp/WRUmfuVJpv2sxK+r5SOj7GXtD93VPudq/6bzjMV5
bSP7zJVr1Z8KydozQAGMD6MBpkCckQ==
       "] -> 10.53, CompressedData["
1:eJxTTMoPSmVkYGDQBOLPMTmql15Nsn8c9W/5bPbp9jeYK+zflcyy377ktZ3a
vzn2sjJd7HaKc+1tLuh9rnGfbX830j2TQWymveelOQWbtabb+2nkzDp6eqq9
pUIa0+rnU+xzDTULqxdOsd/19WbP+/4p9uy7ulYk1yHEz/+9r8JVMtXeXX1r
tNat6fZsIi35yrZz7Oe9an+epL3QXguoSkR1qf077rrrHJGr7W9pmAgezttg
v8sjdmX/hg32e5Yuqj34fpX9Ib+vh4s3LrVPvsFr9b1+sf37jS0CnrMW26/7
eM3hkewS+5P+a5j4Fy+2v/ffd5FD+EL7zin3+T6azra/tbKuQm/bJPtNX5T8
Qua12d9aFx9SfrQSSmfaF/XcLLsWGGW/cT5X8t13rvafN1n7P+k2tH8FphXt
GaAAxofRAPe/nD8=
       "] -> 10.59, CompressedData["
1:eJxTTMoPSmVkYGDQBGKtX0uCTd9MsG/3ubNAtHSqvVD30a9KG2baB1WVZT7Z
PMden3PjYqd3c+yddzdMuiIy236qmrmP2tkZ9hu0/PfsfzbNvmKF9zy2/qn2
f5z3fuFcM8VebmvTrtWFU+yV7qlV62dPsVdjP229OWWKPfcL3+8Sk6bA7RGb
yfJo6Yfp9lW2LRt6c+bYZ+jkrNgcu9CeK1Gv8XrhUvvs73nJNmtX21+7yFK9
YOEG+0srEnbJrNhgvySOd+0X79X2+3SiS3o+L7WffpX9vPKixfZcbifXXNux
2N7m7+L9J22X2LdwXOaeeGix/Zkfc5rD+xbaf47lPMo6d7b97e2TotJ1J9u3
2M3dMsmk3b65JD12yrIq+0kSP+IX92TZl1y4FtV6IMo+POj1mtQmd/vNX1qE
95UY23/+EJ3/94OkPQMOAADyN5WP
       "] -> 10.61, CompressedData["
1:eJxTTMoPSmVkYGDQBOJ2tsjmZsOJ9nvXSOuVP55qf6qT1dX11Ez7jpbZop1n
5thf2jaxKuj/HHuBm3nWN2Vm299df+uJ4bsZ9l922HwO/jTNfn3m5T/750+1
T2iv32a6e4r9Zp+E7K/1U+yDXcxb68qn2PcbP90xIW2KfXnsJvPHE6bYdwVE
eEW3TbXnWPOI9czz6fZhGjcMc/Pn2N9Z/GKFsv9C+0ur5tu5JCy1Pxl2bfuF
2avtg+3s0r8v32DfqrdKaPGNDfaa7QG66d6r7aOXfHJnuL3UvuDq0qeObYvt
p71TmLFs/mL7xg9z2m8qLbHXrI77GLFmsb2xY8W5wzkL7etVHgSxZ862b7us
+Y2PebJ97vQZURUX2uyf8U9bvjmwyj7X0MqhvzjLPhtMR9kf4bn+4Yebu/2T
20F3WrmN7aVVJas3pUjaM6AB68MCQWfeMtgDABiOl5o=
       "] -> 10.72, CompressedData["
1:eJxTTMoPSmVkYGDQBGKdxsOGidaT7bnya1//+DbN3mR19YRTc2fZr9M3Ez6u
ONd+tkL3o+aPc+3Nt3evfrFzjr3HgXXnZO7Msv+ZGnXiyJUZ9udNc+wEvabb
y9RpyNioT7P/Enxo/vRVU+31ey/71IdPtd8hovl0wfsp9o5z6moPtU+xD924
cbfIsSn29Q/nu54ImGb/I/vR1cuPZtrPVRP+MOn/PPsPLu/+FrIvtm98uz7h
Wc4K+/iHH9V7zdbarzfdp3BNf509T11gr9yslfah2y1PKl9Zan9abcac18uW
2IdtKXWS8V1qP/Ez318hjmX2mSdXNOR1L7U/KevDcVVwsf21yDn92fPm2n/y
tZrUMWeK/VSmx/MsVnfYex0zu6P9qhpKZ9vvt4g0++0cbV/9XD34epy7fQDY
vSb2UWBaxJ4BCmB8GA0A1YaeQg==
       "] -> 11.12, CompressedData["
1:eJxTTMoPSmVkYGDQBOLz9/lk72+eZP/wkb73ufRp9t+eBlTulZ5lv5mpWsM0
fq59xne2+ozC+XA600WJiUlhnr01V/HMvX9n2xdol3Sf055l35XEdEx51gz7
qNvmt1xPTrffwOd1J+zFNPuZhZ+Wm1yfaq9Y+Upib+kU+48f5XXvL5lsH3eo
M1no6mS4/LG4tt77XjPtT82/FBNeMM8+ap2VeYHNYvvcjdGp8R+W2Z/Z/8FG
etIKe7n7m4W6JJbbsznF3EtnX2bvv3lmI+OMZfYVN3/uXay4wp5jTwnLdaeV
9pYToor9Dq2w7/1jcSbs+1L7pJgDma5GC+Hu++QtVdy1r8d+rZTkhIrCBvuF
S+O3zJpYAKUT7PWn7tx7X9bH3uWG2JowURP7Y5WuykKCCvYMUHANzBewh9EA
PQGTlg==
       "] -> 11.56, CompressedData["
1:eJxTTMoPSmVkYGDQBGKFPTsfNK6abF9ztfjiJb/p9hGTd3qar51lbzBL7OKh
+rn295YVe74OnG8f6/3/wj/u+fa3G3eWJayba79e8kWr97TZ9oy83bzKR2ba
rzxf/MDUf4a9+l6x8oLa6fZLV+3kXb16mn3Vhp3/3FdPtV90TszLvWaK/Tf9
7s0XDk629wEZJz/FPuB28aF8v2n2jRn/W/m5ZtlvlnKVscqcb78t9uj7Y08W
2++NU2rbun25/Ut+7raPzivt0/vvWFVFLbf/ya1XbvJxqb0/WP8y+0tLdsrw
rVlu/yJCaarEjhX2e0S5y/ucV9g/5lv3nqlwqX3M78/v/c4ssF+euOhfs/l0
e73SmH/md7rtTcp2TlFbXw/1Z769EceLTSXT4+x1AhZpr7Xwsi8Dh4u5fROY
FrdngAIYH0Kr2wMAtWae8A==
       "] -> 11.52, CompressedData["
1:eJxTTMoPSmVkYGDQBOIbN6Nrwyon288KeciV9XGafdT5tBm1mbPsCya/M1pW
M9f+yg+RVyc3zrfXelX1/MfR+fZnrkgLcjbPsxcOOhjiXDbHnm2T0eTbE2fZ
/3569STDqxn236fyvTzzfbq9m/la1hOS0+2nsEhpmf2fan9PUzmuK3uKPcw+
GG05Xc4lwXSqva/+jWuirTPspRZ1mJZnzLW/ML9a4U7GIvtJYP1L7b02O73L
O7/c/k37n8lHVy2Di8/IOtGnfHmZ/U/bopvPClbYMyZlb1o+f6X9353sh3rV
VtoDHS//yX+ZvVw448EJOQvtF1XceqylMMM+53WXUw9zr33+j/l3u/sa7KVu
Z994ua3AvnAB87ml7In2PNe0c+Yc8LYPWJ27f4+Vpf3D0I+pf/VU7BmgAMIX
gYsDAFAHnsA=
       "] -> 11.66, CompressedData["
1:eJxTTMoPSmVkYGDQBOJ3aqGSB1dPsj+iydh4JmuavUDcfL4XXLPs//NK/14d
O9e+cQ1PsmD1fDh9dnP1Ryuzefases1zYjnn2D8U3nLV33KW/cVpDIcVl8+w
38c5877U/un2H5ItXnY/m2bPo7jHTvbCVPuzkbKfw3Km2O88s5U/oGWyfVfT
qWvbN022/9a8oMt20lT7IiatwI/MM+2dnuaKe4vPs19m/uVwzMdF9lPui3qY
zFxmXyJ0T/FU5Ar7aiO3w9Wsy+2PGka/3CG6zF5+nbKSyo5l9vra102CvFbY
R4RGnbEoWGl/rm9ZlOmfFfbckknXDFSX2VvoHVn+Km2hfXzpodxX0jPs4xd9
zLnD0Guf05G8Mbqvwf5bWGG399oCe94vPfbarxPs48DyvvZeL6K6Hhub2//s
Osd7672cPQMUiHeD+Hz2MBoAcJ+Trg==
       "] -> 11.4, CompressedData["
1:eJxTTMoPSmVkYGDQBOLwWoOCvsxJ9uJ6Sekb9KfZX703Oe7S15n206ZmmB8u
mmvfmxqg5bNnvv3+BJM7N7/Nt/9W6f6t8PA8+7RlpzwuL51jz3bO0PfQoVn2
Nz7UMNtLzbQXYHlrzWEww75K4gm7nvl0+42G3xWPMU+zlwky2dhZMcX+bYbl
koykyXC60eOPyNK3U+ydWUvOpyjOsD+9yLRv78U59hHNlwNjFRbZb9qVXfJn
6lJ71yndzFlZy+3XqW6M05i2zF58o/ENce5l9m6yDGEL/iyzd/ypy3N88wr7
/PjwFQ3vVtpzZ/a7pFautAcaLlI1d5n9ge6WqKc7F9rz//OMsqycYa/Xu13P
+mav/YQ5z7K/vmmwPzT9lGyzeqH9l0nrzgskJdofKJJtdJP2t+d8tvfy37mW
9reN6rYqfVW1Z4AC6Zl/P95wk7WH0QAqyJeP
       "] -> 11.31, CompressedData["
1:eJxTTMoPSmVkYGDQBOLN3m4HjzJMtl98/oBCz91p9pPnqrz+VzfLvjNfLnga
91z7ju02+Rui5tr37Z0bnb57tv208Iuy5Utn2i8QFXknvH26/TL7lhfh9tPs
V6ZrTuEMmmq/upf5o8b7KfarM788mn18iv0a16dX+BYg6FVXFXmd7abaLzz7
9eLP9On2/aX19r45s+33pN1fNW/pAvvViteONVYssZ98ZcFy6dJV9nWX5Z2+
rF5vbyf24R6r1gao+1bZL+O6XHV231L79VGylwyeLLZfd3P7qnTNJfarFhTM
37F3if1aE+dSQfcl9tv878S9er3Qvpd1T3kj1xz7jao5KcuSJ9svFL9vs0yn
3X6yvk7R0UlVUDrLfur895YTv0RC/eVmX/0/qvvUSl37Lf8nsrcfE7ZngAII
X9keRgMA+OygJA==
       "] -> 10.82, CompressedData["
1:eJxTTMoPSmVkYGDQBOKkD3dvrYiYZH9OvcxjmuM0e7O+jvctL2baTwvq5yzj
nmu/wWLThrzp8+yXT1umXCg8z753Q3NNRfsce3uDKTVNObPsFyXqFXXtn2Fv
GsP/a0L8dPv6m/9tp6yfZq/oXiQ5XXSavciVB0dn+U+131Bw9ta84in2mttZ
Ni4QmGK/U+hm+pzvU+xTVcN6+tdMt48Q265c/WO2/b28ezX6nxfYO89Vj5g5
Z6l9cpvn7pbPK+37xI83/nNabf9p/ZKansAV9l/9NvpO51pm/7FWu33GiaX2
BXpL5YTfLLPXbLJayHdvuX1SyIWjE7KW23/d+iVI9tgSe+GCd7c22S6wv/zj
N9/U5mn2FbOfza6z7bbfeWuvbY50vT33r518ue/z7A/XnDyVOT/e/nVh962y
+z72p8I+NE7/b2ov7ViycGO9gj0DFJwHi7Paw2gAA8ihCA==
       "] -> 11.1, CompressedData["
1:eJxTTMoPSmVkYGDQBOIbEpOy5nBNtjdreVTfcXOa/T6xl6ulvWbZd7w6+Tdf
dq49f+nynVUW8+y/XMsrmuMz195siknCzJbZ9lOz5WI31M60Py0d5Kxwdbp9
0Dy2/kWzptnz3RQ3lOUFmsM2/TTX/Kn2VY4rclsFp9qb1+zkZ2iZYr+3qWmy
W8kU+w0/WY7U7ptqf3p+WvWT/zPsT6/fEf111Vz7yu8lD2epLbLni9XJfGi+
3P76N23+mNOr7eMaOU+nPVtjfwqsfoW99LOVFqveLrX/ZHX/pZ3iUvsp9x9s
Sf671L6K/fjB1ReX2a+35n9wP3iZvYu742+t84vt96pZ9+h8nWd/Q2H3LZWE
qfZPbecfOvS60z7usPDzE9W19vFgOtc+AUzH2gukht7M7PW0n3l9u8vt5cb2
/Z8+5f4o4rdngAIYH0YDAHRvoe8=
       "] -> 11.08, CompressedData["
1:eJxTTMoPSmVkYGDQBOJM/YV7W75Nsr8o3rO45NI0+xs/t9kYesyyv1Slc7Kf
aa49/33HGvaPc+3jlKevr3swx/5JVI5nP/Ns+3XPysKmi860T1NcM+1g9nT7
zamMpyyip9nLxTy89vrgVPsyxjdiB3Om2of7J9q2fp1ibz33WrJn3RT7jV+y
a6MWTLE/tu3aNDHxafbhjjlih7Jm2r+0mf7Iu3KefXVDWVfSpkX2rZfNCv4+
Wm6vrWDOmbp2jT1jW01/5ta1UPUr7adsLvvw5/FS+/2+hlk/bi+xX8His/fW
/KX2E3anCexNXgaXX9F9LMAmdbH9n96c9Zqm8+znLJ62oebJFPsHL6/92eDR
CfVnrf1+zfA/G91y7Z+eZpyWuy/G/vQMRoPLPZ72f1eG/V3vZWpvvnv1qR4O
RXsGKDgMlte0h9EAcOyfHQ==
       "] -> 11.03, CompressedData["
1:eJxTTMoPSmVkYGDQBOLDD/OFNpVNtJeb0rxKaNpUe4uizedOLZtpH/9t+jv/
K3Psb3larSrln2e/TJrbaJbsXPu5tU3v7/vPtp/Ql3W32X2mfa9jYVb2lun2
RjcOvJjZMM3+WPmZ2ZFfp9rf3T/fLKt9qn1A6c71V79MsT+sdVnDMWmKvdvl
WQKT6qfYKz8VqtpyYar9avWz7mYiM+13xXsUKHLMs58WePLOhKBF9hlsHxJK
i5bbLzhzTGCv2Rr7iMV7C166rrVf2Jz8S9d7pb2nAsjBy+zTdjvOUTReaq9h
tsgzjHuZ/a6L4gt6biyzvyj52mpu1jJ796tP94VdXmz/5R7bjnkm8+HuOrpn
Zmi8ZZf9vGNPWfOt6+xnloaZnWXIg/Lj7JOAttys9rZ/mrjv6to/pvZvwLSo
PQMOAAD7DZZ5
       "] -> 11.03, CompressedData["
1:eJxTTMoPSmVkYGDQBOLVyu0Rj89PtD8/Y92ei9em2pvfOJAtuW2mvWzf4c/r
Gebac0UFRXo2z7NfZbrj+pFbc+19ZZ4ccfSbY3/nmKvFd7NZ9ofLYwrONs2w
Z9TXyD1iON1+Plffa/vOafY95w4XVvyban/3YOQLM4up9vvTV23kzphirzad
a9FEnSn2eSUi1r56U+3XW0/6xvpjur329jx50aQ59v598VsFvBbaX1VXnN38
c6n9zD9Rb+fGrbKPce3/sGz9avtX2S5fVk9cYb/50OqvYbzL7EWSZ7Jrr19q
b31b9/fOI8vsl8qutVy0abm9hrLAx0UOy+2XTFz+asK8JfY7TrSKzNBaYF/S
bty5Pnya/c3d9Se/SnXb/zFYrvtEsd7e4ffECttfefb2YDrOvmK+nfqleh97
Nqt3t4/6mtmn+L44z75X1p4BCpzuzeqKusxsD6MB44OcoA==
       "] -> 11.15, CompressedData["
1:eJxTTMoPSmVkYGDQBGK9sz8F6/kn2+/Kvb0t9/Y0+4idM1dsqJ9l/3KjqONh
z7n2F9bNY/Aunmdvxvau4cOaufZiCZnn+n/MtlcQmLf1+peZ9mUiq+/4hMyw
X3boX6Yk83T773mFc7NSptnvP1q6auLNqfYCRS/uPrKaav+m+KR5XMcUewb5
ZS2bEqbYF4GUlU21TwQZVz3DvmNTwhZHvrn2CiDpLQvtw/PUtN7MX2bPzqte
Gi+32v4d5waT5+5r7Dsn79LvX7vC/scsu+k1j5fat8pUbd/ht9Te9b3Y9ZVu
y+xDnSINbiksh+vXBOqOFlxiH7qmyDgwcb597LEDsgLzptpPBxnD0WV/hc3y
S15hrf2aDfVRxw7k2vtzph7MaI6xNxMW/eZ/2sN+AVhc134ZyDtXhe0ZoADG
h9EABE6Z4g==
       "] -> 11.13, CompressedData["
1:eJxTTMoPSmVkYGDQBOJF3sqlsVcn2YtLVe6RyJ9m3/viHPMVjln2emrs7Em5
c+3jNabEVrEvsK95KZCc6LfA/vS/3sIHk+bD5WXX2cmHZ8+21/z+ycZ4w0z7
v0rxLwKWzbC/6Hd6ct6c6faOndEVry2n2R8sDBQOiZ5iX3HHYWcX12T7s7tY
DQ0WTLJvfx/O0XZ2sv3SKnP7nknT7Of8fhp0/vQse3Vun9e7dyywFw0Q6/75
YbE9k4H+JPVXS+3vTa/f6PVwqf31Az7XQuSX2XfJ5Vza0rXcvvxfy81HzSvt
D0yearzmyir7jzdXnSpJXGX/Z+9af8f05fbrf3Zoe0Yusj/KKl42KXymfdlu
8UTtfX32Qm2bI28VNdrruxvEH9xZaP/tiFnIZ+1E+0k1U9KEWP3tf0T82Wao
YWYvCJYXtGeAAhhfCUwr2gMAt1eTcw==
       "] -> 12.08, CompressedData["
1:eJxTTMoPSmVkYGDQBOLmCuZp/zon2xu7al2v5J1uf7aA+xJL9Sz7j2UTcu9V
zbVn/nBxb0nxfPura90Mp7jPt6+2NRJu+DfXPkh5dc3P97Pto7zXFwXzzrK/
NIP/RNyMGfZX1gge5l4+3f5dYiTLytPT7G9eEd2ZemSqfebh3SGJqVPsZ0l6
3nk3f7L9/T+S6/c/nGz/oTT6f+itqfY7Hh9vO1g80152qeR/wRnz7E+khj5T
DV5sbwR213L7F5ahfP7rVtjvFfX9VSix3H7y88MZdr+X2suuS+V7ULfMXt9Q
486Zf8vto+M35jLIrLSPyTR6HbZ4hX3qUos7seeX2j+3UFhwjHeh/V7uMzXS
E6fb33vpozS7uMdevH+teohHgz2YK1Ng73rRYotJSYL90RjO6+E53vZM4gtd
3T6Y2vOCaVF7Bij4Lgbiq9rDaAB1IJa3
       "] -> 11.7, CompressedData["
1:eJxTTMoPSmVkYGDQBOKKxFsXnphMtn94ueRW1Ppp9k1GEg06trPsy88sCHw9
Ya69iFgGa7fgAvtDt5puzvVeYD9528RjU2bPt7d9MH1rf+1c++ec85Z0xc+2
33Thwnz/RTPtD16M2bxi2Qz7ac/uay2bPt3eO85s2k31afbiqpkT52VNsWfp
PDFDl2+y/cr/kz6wz5pk735YcePB85Ptlz/Ptvs/e5p94JT4BM4bs+wfl69/
mr5mgf08VX3p028W2yetFVLLvrUUTgsU6f6qFVlmH/vrWp9Xy3J7ux/70mdU
r7QXXxF2ZO2RVfZ75BRlOgJW2b9UPBo2OXa5/QG//IaZPovsJxovmdzqONP+
8ycmttupffacNiwGfimN9rVgjxZC6UR72Xv1fXdL/O2TPdS5m40s7E9bvuGY
Ey1szwAFd8F8ZXsYDQBstpZe
       "] -> 12.22, CompressedData["
1:eJxTTMoPSmVkYGDQBGI2jr+fpl6aZH9v8vvPTjnT7A/dKb3npjbLnv0sV2Nh
/1z7o9Mq+eOVF9iHG13PfRi8wN6vRqCfe+l8+9/85dOl8ufaH5BlLb5eOdt+
3tJdik5HZ9pvvxeUEL9phv0F8dfzauZPt/f5MXHqAetp9osX1p7/XzbFXq5J
5Ziz8GT7Bk3juqxDk+zfnEvZUvF0sv03XvHjH9ZMs5+gue1M9Y9Z9qdEu88F
3V1g/6P7x9zzrEvsy3LP12gwL7NfO3+B7/NXS+3trf+tzpReZm9X0+vwK2+5
fUXe/xTblJX25ev7fp7dvsq+a9US3g67Vfbvz0+Z0+u23N7f9Ml1PsdF9rkb
s6ufOc+0j/kh8uRiYZ99w4vFL2/mNdpn5tWI6egV2meA6UT7vizXRB4fH/t2
9bA/gWYm9jxt906WaAvYM+AAAADplPM=
       "] -> 12.3, CompressedData["
1:eJxTTMoPSmVkYGDQBGLfHJfY4MpJ9lmas6aEyE+zn7Ip8dD5jzPtlyx2ZQ7P
nmu/f+UpxZXf59u/VQhv99NYYH+z6+7Xt2bz7W/K2BzpZ55rPzXT6HYd92z7
HD+e+4k5M+1PlbRnRRbMsK9Yc2dxbep0uLmT5P3cUgqn2Bt3G3byWU22L7sw
0+Hgv0lwcZj6m6nZqx+8nG2/etL+F161C+1Z1rvcOXhxif3MYo3i/7uW2Sv8
+/EwxWWZvZBR++tX4svsJc9P+H/Nfbn9irXWs69LrbSPs8xmnB65yt52t59k
2quV9qF6B3b7fFtmr/1OvVSJa5H9lN8TVircmGFvsTGi8alVn33/r9u/w1Qa
7X23FrssiS+E8hPt3U1mT+Br9Lc/x/bM4reNmX1G3F3vJctk7RmgAMLntYfR
AIXNmdQ=
       "] -> 12.21, CompressedData["
1:eJxTTMoPSmVkYGDQBOI/+tOX6F2bbP97O+uBbpXp9vWBBcdPdM6yz5v8zmhZ
zVz7zR/nL1Jxm2+/9tzyUykS8+1/Hn/0zfXgXHtNU9vD6ptn2ycf7U8/eWmm
/YrZl3a/8p1hz/nvaz53w3T7rARJFZ1N0+yPzHdh6N021X7KqmoJv7Ip9hVy
s3f47Z9szxzcX/OOeYr9pacmG3iEptk/2Dy5+uXumfYGDxZvc9Gfb79NdO6h
e5sX27t//V45u2S5fYvBRsEogZX29ScZ12RbL7fvOW11bs/7pfYxUpola8KW
2U8yemW8+shy+z0su521rq+w1wI7eIW9Q5+HyNr5S+3PfBPTP/hugX3bm5/N
2pnT7e3nqXqn2/TYn4jq0Eo5X2+fHWDztlC0wH6XyIyqJ8Xx9p5PRH8/m+5j
n90s+Of1fTP7BDCtZs8ABTB+nxLv3w/qhvYAe/mfJw==
       "] -> 11.9, CompressedData["
1:eJxTTMoPSmVkYGDQBOKvfLrbT6dOss84vvoSg/U0++Ipm/OmvJ1pnz3j8rZz
znPt94cebY5Omm8/J8Yj8kLYfPstygqdPBzz7O1yN078cne2/Y62tYdXscyy
d82c6LmrfYb91E9nv99aMN1eI4/lt+DFafanJC9cqdow1Z71loq+U+4U+9KY
e+zvJk62dzE+w2Z4fbI9P88pzYnHp9pP+HJX+of3TPvXT1vYP+bPs78gtkPu
vP5ie4VrO/krfy6zl7lx0njakhX2q3at3blUfbk9wx2T4HiJZfYHmnqrC9Yt
sw+dqabwxmyFvUvWzNsesSvtX6/bbnTz5Qr7vPhve2cKLbOfvuvHBBPXhfan
thiV7eeYYV91IqOX4XOPvY/+mn3fGhrs2W03ZT7ILLCfpLhMmHdGgr3ZtTyL
V7d97L+7fPoZImZu/xdMi9szQAGEz24PowGq8J3A
       "] -> 11.82, CompressedData["
1:eJxTTMoPSmVkYGDQBGIWdc21Rwom29sUTLrkxTPdPlhmqnlG8ix7xhbxNUyp
c+31yv/L/QqZb//s/NN3953n2zvte6Jz5e1c+2+6034W75xtH9X58NmG1zPt
wcYUz7CvXRUPNGK6/WVtoUfHt02znxE3UcB+21R7uy8r63wLp9jfkSmzFV4y
2f7vzjt/q19Mtt/5+/uF5b+m2n90SQQaOdN+yVSJPL7d8+yZwQYuthdOu580
0365vbGj1dmGiyvsT+87alSvt9w+5jzLSxPmZfahSTss31Qtswc75/dy+5B7
C3pfiq6031b+QGXp1BX2LTe3Rzw7v9S+qWQW42LBhfamzG7KTC3T7ev5QS7t
sTdRcqg4qNVgf7Sg+MZXnwL7JZd5JHo5Euwdrq7X7DvlbW8qJaiwJ8HUXstj
uaSBlKA9AxRA+Ir2MBoAExiT5A==
       "] -> 11.76, CompressedData["
1:eJxTTMoPSmVkYGDQBOJVQpu+xj+abG+y7uaVj87T7Xd5Mm5pXjrLftHxP3vN
kubaS0uadcxWn2/vzbVAVufqPPsw70UzLpXNted7fSn5X9xs+2kzwcD+Q9g3
yyVqM+xfGNav742Ybn+fh0O1vGuavXLK6/1Hlk+1n77G4sOioin2P/p4pI+c
nWyvv/StVbbnFHvtziSv26XT7F8BeSLBs+x3myXFVp2Zb3987qJWY4Ul9omC
/wp3sa+w33vdbY13/0r7knIQWG4vsVHP9tn7pfYmNvJnd+ous9f4LRMk3LPc
3nd1S87f6SvsRacu9gmTWWGvI77CaXH8Uvs0B42dwVsW2J9Z1ie/S2q6/b2f
GedyN3bbz19deHZZXz2Uzrf/0+v64/jLOPvfC574XTzkaf9rc/PSW7NN7O+A
aRF7Bij4AOar2H8Cq9ezBwBjKaDg
       "] -> 11.65, CompressedData["
1:eJxTTMoPSmVkYGDQBOLvLsvZdSZMtO88OFd9b99Ue3MB+d/1rTPtLbnWvjkh
NtdeLdOpI9lwvn3p/UeLfkjOt//xe19d86G59ir5W6ZJLZhtL8ap4RJ7e6a9
tMOuhQ9iZtj/tnrpEtA03b5rf/lZrf3T7K29//JoLJtqv3iqn2lj2BT7/6XH
w34smmx/eI7rm8UMU+yfzf/wbiH3NPuZyveOhm6Zab+q+QdnDNd8e577PQaC
8xdDzVtuXx+UZv9WeaW958bO+KdZy+2nawZc4VFeZs93S9dfecYye+VStaUX
+VbYh4uLbVqkv9L+QZqFec+uFfYaa0/ry/1Yas/1+MYTU7uF9l17A4tnvJ9u
n7fuULAOe6/9Nftrq2ZvbbBffkHHXbO8wD73+6o7V64k2M+Vzdk+z9XX3hts
n7m9yPTtVwwt5e0ZoADC/28HowHGRJhq
       "] -> 11.63, CompressedData["
1:eJxTTMoPSmVkYGDQBGL201wVeu8n2i/JWFgRc2WqvRObRWXXzpn2Ohd27xRS
mmv//s0WlgLN+fZMFhumuHHNtz8bcfnlw71z7cXzdEL2LZxtb/O2b97bwzPt
FYrC4v74zrBfVm/qd6t4ur1c9KGOunXT7A8/fbc3Z8FU++Yr+2PPZUyx/zZt
8d6rayfbb5vDYbxVdIp94YKIxaXq0+z1d9u83Hxjpv2Ly9xal43n20csW/V0
8p3F9j3SEx+nzV1uz73sgreY00qo+cvty3cy1gnJLrO32J/2+WPLMvvrxz4v
2Ph1uf2KaSeVI4RX2r9bydspunCF/VKwv5bac/pM/WUrtdC+ePubis/HpttP
TvBNeVDdY8+6pWzRBv8G+x+NKm/LUgrs78k2NDH3Jdi36v1et2yCj/2Wje3M
IvHm9v6fz671OiZizwAFED6LPYwGAMSpn0U=
       "] -> 11.6, CompressedData["
1:eJxTTMoPSmVkYGDQBOKr7b+295ydbH/+s19jpdR0+7YulbB102fZ7z/9XTh4
y1x7JsPHF1+zL7AXEGy5paizwJ5n+8HS7X7z7du8Sz5WKc+138+1oqJNY7a9
cJes4L/SmfZxW6Zfn9oyw/7V5gmTniZNt5eSO+kuqDnNnp+j7lZK3BR726Jt
/RNUJtsrbCqpU7kzyT7w7p9zMnpT4PbP+po11WrhbPsrx1bJHHBcaC/7Qu7x
rKYl9mb3uCJrC5fZZ11+4fJfZpn9rg4Op7cCy+x75C70HPRabu9W//tPveJK
++Pxi73S0lfZvyl5oLvp3Ur7gri+6lCm5fY5d9657Hm10L665OYLxrMz7OUT
d0iWn+m1386WyR3ys8HeemPal8MzCqB0gv0usL+87ZXYCwJYpI3sGdDAzrip
B1hVJOwvgmkNewDIQZQt
       "] -> 11.96, CompressedData["
1:eJxTTMoPSmVkYGDQBGJnpjOrJzBMtudSvpV2qGOafe2VFyLyprPsZ6Z8u6M6
c6799S0H1pvqLrCP+tUYNK1ugb22yoE9XJwL7GfblnumnZ9rf5/7fev3Q7Pt
a36nr7j3b6Z98b7HnXPez7Df/yGuQn/PdHsOr0iQTvtfKy5q2mVNsX+309uo
+t0kezuQ9thJ9h+zfbn/RE22Z50Rrsj4bCrcnDUTGD5rqSywl9zeE31Md7E9
A+/V2/bOS+2bQK6YstSevfBGr6PMMvt9YHuW2y9xW/5jxcWV9qxLdf46aK62
X70KDOwnn5m3W2Xzcvv9IGdVLLI/P/GZR/GSmfY+IFec6bN/vBiksdG+38R9
lvLZQnsLYbctZ1sS7cPB1vjbp2VHPbg+y8z+dahHQ6WokD0DFMD4MBoAQjSd
4g==
       "] -> 12.45, CompressedData["
1:eJxTTMoPSmVkYGDQBOKeFzrqH/9Otp9avl/zhuV0+z0PrE3eLJ9lv7Xp5qY9
p+ba79M7c0klcIF9ac7SBZ9XLLBf53jdj89igf0Xs7WHxPTn2a88MvW9rcIc
+17J2BUrYmbZn//zsGKW/kx75s+FR0tfTrcX55fgUimcZn96DoO5d9IU+wun
N35/dGGSfVAy1w09jklwvhfrirD/WlPtD/C//dIsNtM+flN83JZ78+w5Fz5e
+jd+kf2dzq+7EquX2F+qXjSjy3yp/fUol18neZbZV9WUN7+6s9z+yu3mWzdZ
VtlvvPRCUDRltf2r5VIH9D+vsmcCu2O5vUXGIUPH1Yvs9brnT1A8NtN+Q7DG
J5WYfnuh9WYnrixuhNKF9pd/Je2osk+0Xw2W97ffBXaPpf0xMC1pzwAFa8F8
TXsYDQArUqLW
       "] -> 12.69, CompressedData["
1:eJxTTMoPSmVkYGDQBGJ5+dpS8QOT7Ve1Vf8XZ59uf4uZzyx0wiz7xp2tbY4H
59pfDC6seOezwN6rxL/ac8MC+/cLX9ndMltgf/bJ2vu7XOfZzzXnrb5qPMde
fAHDYZ2UWfa7ny6aK6g/0z5e27Xi28/p9jUrz+R05Uyz9/2jzbE0aop9VtXm
PxZnJ9lXWH7/1sQ2yb7jhM5hle2T7O1tX/BGK061F73A9/HKmxn2EgLXLExO
zbPnX+F34GTwInt59rK4w9VL7PWnrdZK1Vlq/+XhxjZLkWX2cWB7ltvnd+WI
fVBcZd+/4vo64+bV9qr6Zv3nRFbb515qjH7zbrl9heKH+3qHFtmvVYtffPzr
TPt9qllPC3j67S8rJ3u5HWm05z0Qel12RqF9WSarqnZ/gn1uVNwL95ne9u/A
9pjZnwPTYvYMUADjPwHTavYAfDeV5A==
       "] -> 12.74, CompressedData["
1:eJxTTMoPSmVkYGDQBOKsExz8i6ZOsp+/ymnmf89p9ld6apRj/82099ny/Kvs
5Ln2v/pO8hnpLrBvEnDiUGxZYG9z5VfYVN4F9mrtOQdVH821f1c780X3jdn2
xq+S67X5Ztl3Rspzrvw4w74h+7NZxNHpcHNVY+wqmBKm2LvM7r218skke8MZ
c56fNptkL5MntGyj8WT71yyWTB9WT7X/tfN7eOj6mfZ/jSLsPt6eb+8MVr/I
vn2Dte1P1qX2tbPLZHJaltpPmJfO72W0zP7tla0yd94st78MdvdK++WOQeYM
SavtE1m520per7LvLz93gPfucvtrhqe/qO5dZF+qP/V437uZ9j2X6t+7yPXb
3/avWtO1otF+FpdnivqJQvuZYDrRfpXg+cA3i3zt1fl4bnduNbfv2rvr3PY5
/PYMUADjw2gAYZKcSg==
       "] -> 12.35, CompressedData["
1:eJxTTMoPSmVkYGDQBOL3Up5lR74vsi+tXRjy9e8C+/9hN5eIb59jf039rPWZ
3pn2C4wFxOQjZtmbek87deTNbPv4WSsYXgkusHfofKLncWKhfVjO3abgLYvs
c/yvXYtbsNi+yei8VlbPEvvN/csEfYSX2icpckeecFpmP6Xukf2qk8vsv1tM
5M27vhxOF+fK5XE0rLC/vW9T1XSbFfaVLCxrL+sth6s/x9m6RGndEvsrC7Ie
v41ZDHfn2Z+M+0wN5tgLb85f4FI03f7zRr2t/csm2qeuyN24rLgH6o4W+5NJ
MvVZjbVQ8yvs+xJAHii0n3i9UurTnHx7h8pEj2ivTHtIOCTZnwerj7V3AYtH
QmlPOK277PUtmzsOUNrAngEKAMATmW8=
       "] -> 3.73, CompressedData["
1:eJxTTMoPSmVkYGDQBOK/WT5L2LWW2x+QEn7ZeGqhfcHD8GQl2wX2x12qFhSV
zbZP6O384vB0jv2NGR78Iefm2ReXce+XEl5o/6rx1E3dP4vs603VLjFPXWwf
8+MqUMUS+4+rDSfKrUDQl5mnbo7+sdReBmT8zaX2Gds/AGWWwcU3HgNZtMz+
q8PTN2J1S+3P54EcsNT+BNj+xXB7OLTSgToX2ruBhLnn24uAjNOdYw9x/3R7
q92t8b2dU6DunwA1v9X+8HqQBU321SBt+6vswd55U2avDTLOsNA+E+yePHux
OpBHUu3ng5RJJdsngsXj7FvB6sPsC8B8PXsGKJgCFneD8wGujpt7
       "] -> 3.15, CompressedData["
1:eJxTTMoPSmVkYGDQBOJm3wTzjxUr7E+/29u32muR/b+eFX1fBOban//+8bm8
0Hz7g3mPPho8m2PvYVKnuDx9vv288Pt1N0sW2rtoe50wWrDIXl22ep3/t8X2
hYf39DQ/XGIfvCVyn+KZJfZ7MrK2WSQusb9VfrZlVtkSuPy6h02a7jxL4fpg
9ISL3cvSuhH0njQnX+uuhfaik68zP4pbYL/m3jHu0ycX2B8s4IrW2zvfvuyk
yYnqtLn2b5lnzmB9Osv+TkWipeSjqfbiU//n3DedbH8B7P5++4mXN/OnJLXZ
s/F8KPvA2WhfBNZXa98YIBOau7vG3kXnXs1G7hL73vPJtplbCuxZBRw8X29P
g4qn2D9nLNTn4IuwX/T00m/HXV72MVZrp03ZGmTPAAXicvzJ5xJd7QFC2Jt7

       "] -> 2.87, CompressedData["
1:eJxTTMoPSmVkYGDQBOKqWn3ecyzL7dOfHTuiKrXIXizhTOWplHn2a5b16iY+
n2Nv6bnoszbLAvsL003uaPAvtI+IZ3jm6bDInmHnweOhmUvsp7GHbAgqWWrf
0dB7sWzWUvvLy6+5fpVfBucz2Go96li7FK7+0nxWwf7pi+0rS+NupNcssZc7
7tfKK7vEPupxBkNty2L7xUwP7ac2LrSXthY1KwlYYD/l+0a3tuQF9qrPJ0Us
s5tnr3z/oLLDttn2MZ+5sjynzrBnOjjpz+6P0+yXtHlGnTg6yb614HX6qs4J
9j8D7fcIbeyzf7qJ1Z7Frt3eO2aR4sJVzfb/NnyY9P5Bo/1c9RnNr6fWQ+XL
ofLF9nPA/km1Xzft9eEp19LtA2qefbE8k2sv4tCxzNA5BSofas8ABTB1ANAq
l50=
       "] -> 3.13, CompressedData["
1:eJxTTMoPSmVkYGDQBOKPTjJPLV8us0/f/VH5Z8oC+0mzQzU0F821f3J/gsHj
knn2J4sv6S7VmwcXt2403RnZusg+FAyW2utsNg/88XqJPbOglO/spiX2WWop
15m7lto7trhdXqaw1F6u9ob/zRNL7N/Zc59+47vEfvG0eudDPYvt678XRW7a
t9T++ZJor1ibJfbijzTOe25fYp+qHLx327tF9uFvP++efnqRvZ73te1WSYvs
7cOlFPLPz4G7J/WbGlf93Fn2mtIzX20tnW4/6UTj7YTPU+3ZVu7YfPfHRPvJ
YPf2QvU32Z9a8O/Bnfo2e/XX0bKGnTX2H4Tui2/9U22f+8fDTvJKvn1Dv+CB
LybF9g9v5gFFMu19t0/ZVbEiyf4B2+z1Df2J9gxQAOEHwuX9uzLYHcOt7AGN
D5ve
       "] -> 3.09, CompressedData["
1:eJxTTMoPSmVkYGDQBGIHj+ezxHcvs/+84PesqJh59hOiG9aGKi2wr+BbtDTn
6Bz7pOb5ri4XZ9vrH7imJdixwF58Xv9b99tL7UvPdsdy5y6xX6/V7cposMR+
ypxpX7dVrbCXKXsl5PVmOVydjuYk34Lzy+xh9qS3TTRNm7TM/lqG6QN/9iX2
ievMBFIal9gXJd7z6kpZDLenSaStdYP7IvtfVkYZstcW2Qde+M4l924O3F0i
Ro9uHbs0xV7laafo262T7f8uu181795k+5VBBgr/5SZBxZvt06J/Zbk9qrV/
4Nz0tfhmg727gtMByTMV9pOO6wJtarTffdeoQV042Z4xZPHVBvtc++XqM0Pv
52Xa55u5N2RtybLvffNg1aaIEHt5LluGk4/D4OKaYHcm2DNAAQD3ApcN
       "] -> 3.01, CompressedData["
1:eJxTTMoPSmVkYGDQBGLuBfNqlt5Yar+k84zv15sL7OfP/Rbitn6+/cLCLpbo
rEX2rzcrPnouttR+0+fMb2zMi+wZ/Jxl9eQX2z/+ZPhyotdSe39Ft8Q7O1bY
1/cveusqvNJekstGdTvjcnutHmnx5FnL7He7Hg2t27PE/mPM+YmLi5fZb2q5
GqPxYYn9j55glRtBi+1nn7gTMp93of1G+Wtun9znY9DSe+sipE/Otz8k4HWp
5vNs+ymaRzR6pKfbhwWe+iwwY6p99/WMkyJJU+wnsb+N9nScaK9odWD76weT
7Z80z/XfbN5hf7D+XnY0W6e9af6jO78dauyryxOWrF5cZf9GaVv1Mc0i+0uM
+2LZ51fY9/y0nxZuU2X/e8nU3KJDiVD1OfbWfL85+I3L4OJLquU7mK9KwvkM
UAAACCubQA==
       "] -> 3.22, CompressedData["
1:eJxTTMoPSmVkYGDQBOJ/Je+fymQvte9o5Ty5MXSh/fSWOxErD8y3l77A8jxA
ez6cf/TckWcur+fYG379sXbegbn2146Kl365Otc+xvKgFcvpBfbrFgbIrb+6
wF43TGMCe/ZC+1hrRWsx7SX2NyJWTJB/vdT+RGIoUwHDUns3kbPF20wX2Rec
PPJU5PVie5bFE+R2iy62X+S8bk2CwiL73YzBE/hfL4KLP9nyijHGYaH95817
JwavRrhH/23FmjCHBfbsdgut9VbPsL96MLzkguh0+3ywuZPtW9/tWJPUMMl+
3coL8t9D++yVp36ztlvdbT8xqFr+eWi3vfCsx2uyGFrs+1RuPfNYXWv/92Hc
qY+htfaqYHXV9hxgcyvsbXyr5baHFtk7v/G28VudZy8J1hdizwAFaoenl9wJ
jbQHAKxnmwU=
       "] -> 3.27, CompressedData["
1:eJxTTMoPSmVkYGDQBOJ5iUYPJEQX2s+SzTq96Pg8+zMRdkkvwubYZzdKnnbn
mWs/fYGXfbHUHPvU1LIVut3z7FOl364Wm7HQPsDryfYZ6Yvt7dh1ry4vXwKn
3zzJ5c++s8RefSdL6K+Zi+1Fy3yLOFctsWc2ntYvsWup/dKXhzhZNyy1Pxzc
t+YM31L7+mcmOz4rLbXvmKD5ZtaTRfYXJdWY+wIX2rv/XsWapjPfXlL0IseX
2gX2T2LuPq1zXGDP0hco2Osw3357u2lelto8+y1cYo+sKmfb5y6uvcpkPM0+
/p04y/zmafaPvVcnKK6bbJ+50m7v4hsT7OOzzSecM+i0P/bw/t5I/xZ7NbDH
quyz1OI8L7cWQ+0ttF/9xXj5wbnl9vpBx5ldTpTYp4Llk+3FX/xOqMkMtU8D
m+NpXy11p3KilZ49AxQAANLTkAI=
       "] -> 3.33, CompressedData["
1:eJxTTMoPSmVkYGDQBOKNmUE8JqKL7JmiTh1inbDAXqyatTOxbb79/Ht7u3p2
zrP3sJxxdzHDAvvawK9fXnMttD9ib7XB1G6x/fn46Dci3EvtH5o6TxAzWWYv
6rdgeZzdcvvzeZd6Dpxdbv+VW9tEIna5vSxLOn/jrGX2bn8WvXp5fan9BLMQ
y5nflthXgKyRX2KfUHkrNGnWYvtHamfeZxUuttdJrLWTmrDI/v+/Z31fHi6A
u8M0WEHj9bc59lI7flVLr59p//vgx9lWO6fZe4W3yf1unWrP15k0f4L8VPvS
2Xq9J9dNtA8BCYt2QcVb7dfy5d9QSm+y3x799StLTY39PsE9seo3qu3fhaac
+cpQYf/6V8OMJ0EV9rJf3+ddvV5sv3RKy6d1onn2RuIuy2zeJNp/SePL0OQO
t18Bdo8dlNazZ4ACACAhms8=
       "] -> 3.51, CompressedData["
1:eJxTTMoPSmVkYGDQBOK+p3Y7T+ctsJ/Nt10vTGmuvYN8+7fv8rPt1+zYXdDm
PMt+zxfWZ6uvz7aPny790Mljnr2yD5e9rfdC+xprq/LZvovtt1VXxGkmLrG/
rpW1/qf/UnvNP190XDuW2Ut0+gbO0l1ub2FhvyhLZoW9odSs5+FBy+2TbYxF
Ls9ebn/tM49nSSeChqk/tv3QZb+vS+29Hjk/mWW71N4o8LvvXYml9m0TbGYY
31toL6WX2qLVuADuLkb9OMWk81Ps64qm31UQmWjfeSlnp0Fft/2HT8JrbKyb
7U32b5R6sbTBvmT9rfe138rsf7qLnb1yutD+Vs6sC9/+50HF0+ynMT8pvmeR
aP/nwOKQcKdI+ydzBbuXrAqB869W1R/8KBRgn9jjoXY6zsieAQpgfABzLpmD

       "] -> 3.67, CompressedData["
1:eJxTTMoPSmVkYGDQBOLMedl2spwL7V1fHXSZeGi+fajLoktr5ebZxxROktzj
M9f+8F2u+bHb59lvCjSPOLpngX17uMQqsQOL7JcKHBUVKF9ivzFMeUXr7qX2
3/7rukQ9Xma/OX/i5zcXl9sXvdyqEOyz3N5+889YpunL7O9nblg4+9xS+y/P
9v/4dGaJvaa6raU43xL7BW+n+ly9stj+xN3PNRtcF9u/WqX0JEBkkf3bLY8T
VRYssC/+62e3/Op8uDuWqsQZpzDMtX9YEZuvHznTXtdhdUudyjT7olscwfsP
Tobqm2AfpG3S7sbRY68ivNu24FubvXHu7NM9Qa323VXuxYFJzfYLBe6Y731R
b59//8ui+gMV9hlrJXg2Ti6xlzlREG21ucD+bvx75RNO6fZXdYV7f4om20uB
xRPsmeJ/KZrbRdkH/Az/UH7b3Z4BCgAgHpqg
       "] -> 3.82, CompressedData["
1:eJxTTMoPSmVkYGDQBGLZy2v8oqXn22/lX1XDtHeOPYvUzs9RDLPtZ9ZNTfyx
Z6Z93tY7rXud59g7v1Fe1XRqnn0qz7rV39sW2luvZ93g2LDY/r0Au2Te+iX2
dZET1Yr1l9kfdvezNTZbbj/30DHGdpEV9kETbnhZbFthP+vVUsda/ZX2gSon
sjY7r7T337G9S+/iSnu2Tzc3pzxdaa/NHcjfM2Wlvd7jwvNTK1fYH9scJ7tj
xTJ7oaDYLd2VS+3PnN9QG/B0sf2PnaafjXPm28/Tu/6Qu326fbeqKru82UT7
clv7Y7c+ddhfqv/0N3l9o/2zjiU3Ahgq7C+D+YX2u/a//iPanmXPDzYv1f7v
xLDNtoFx9rVvG9ze7QmD6gu0/wEW97NnmgSi7ezXbLNU0jRTgdMMOAAAVjKR
LQ==
       "] -> 3.99, CompressedData["
1:eJxTTMoPSmVkYGDQBGLlxUJLbyktsLe9wN9zw2Suvcb6hXvaPs2ynzfv1ZXY
izPthSI/zJzTP8f+Q/izVNvf8+wnLeLlXh2x0F6QI+dhnMdie9HDZQ5nLyyx
X3BZV+Pbx6X2VeKSUzWuLrMPjmZhit6x3L7ukvKXabEr7CPE+BNPOqy077No
T6kSX2m/wtP52SWmlfbGUb/O/lZeZc/x+Nbt/XUr7eUse/6tfLjcfoPlxBk3
Vy+zj/YO2pKYuNT+27f18Wyxi+1tt5xTM+ZbYN9VW8PK0z/dXuLHzsmpHyfY
38/e/bL5Zoc9j29i04f9jfZzM5c3Ht1Qa/8drK/Y3q06Y65vWo7994M5PHk2
6faLOQqr+4SS7D+D/RVn7/30nXPd8hD7hWDxIPsAMN/F/gdY3g5OQ8RV7BnQ
AACl5JgE
       "] -> 4.14, CompressedData["
1:eJxTTMoPSmVkYGDQBGKDDWlxR8wW2Jsc/XImdtVceydFK46NKrPtqwNFpasv
zbSfzKQ8/9Xv2fa/pkjumvxnnr0G05EDsyoX2h8/MvUdr8Zi+48ztI+1RC+x
ry006rApWGqf7bfKxDRtmX3Z4f5XQpuX2T+yedZl+HCZ/Xe1jd/eVC23n6rk
wLNm5nI4X3i/HMOliwh1h++aZs74tdSerfmbocPXJfapB1RYzrottp//4b/Y
9C8L4e44bfRv45aVs+xL/vhcilOeah/Z8sfUOmui/Re2KZ3ad7vttzR+0HVt
6LD31Nj+6/n7ZnsJ3yUGVh8roepL7fkNZ57P3FRs7zrL8FT9hQJ7+8lbrnuw
ZtivSn16psQxyX7/3N99ovvj7DULdFocf0fYT3GKrcw1D7afA6ad7Y+B5e3s
GaAAAHVxniM=
       "] -> 4.14, CompressedData["
1:eJxTTMoPSmVkYGDQBOL9S1YeCFSaZ/9iL8+7RrE59gwnNj+TD5plv6H806IA
q1n2ixplpC1N5tp/ftuc/UNpgf0iHYc5D5QW2VcJ383boLfEXvmEQfrVyUvt
tz2O/7Rk6TL71XE83662L7cX9Pi07Nen5fY3JoReaNBbAef/WnfWcun85fau
pWquG2WW2z8RXXnG32e5/cbI7zsfci2z59Pn+VXvsNS+W2nmYqfni+33+Z91
/Cmw2D7ltVXv4sML7fNDXtQ0cc2zb3ZdeWLp5Jn208yyRE7KTLXfbP3nQtHt
ifbcd1rCl7V32y93VfOMvtpiH3k9U0a2r8Ge/3q+9CauKvtMFkUrubIS+9Jf
3w6a1hTat8b1lyq45divBKtPsd8KNifRfkpI6l9zn0j79uQlG0UO+9ov8A84
6HzeHcq3hfLV7RmgAAD+2ppo
       "] -> 4.52, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAADiy3W+kZmeP6nLK44WJZw/agIuE0sBmz+9
FPKkhXGbP0onAGc7Vp4/FCZp3ZXVoD8c3cdeZMOiP0ydCClQ6aQ/i2YGpBsN
pj9+XUnzOw+nP5MdZSXq+qc/tuY9CHjkpz/YrxbrBc6nP4zdW79arKc/D8K1
5AIEpz+8r/FSyJOmP2mdLcGNI6Y/ybiuA6iRpT/5ikSXFXmkP7vBRhxKVaM/
0AoNM7mhoj/W08B9CVGhP4A5n2A4jJ0/vSZHbgczmD8UFBQUFBSUP2c4LW/Q
RZE/V7ln/Nu0iz/6AZqyVBiGP0RvVIxCXIE/4N3KhxNbez/kuNOb5ct2P3W4
Pzvv4nE/jbmxLFcpbj8HcFe18fNpP9NKFplI8GI/fHDrFejcXj+Yb8NU+wpV
PxImad2V1VA/vAFQgtmjQz+9lARxpA48PwAAAAAAAAAAqPKTZQ==
       "] -> 4.71, CompressedData["
1:eJxTTMoPSmVkYGDQBGJhQfGm7ldz7XesuLfwm+8c+2mNJ8/abZ4N59996lJx
xHK+fciLxB2cuQvtvT+uluvtWmxfteFDf1LjUnue88rVnt+X2bsIuLer/Vxu
n2YeE31v8gr776fSXK0errDfwp46L/TKCvuriwMLm9xW2Ot/s/BnnLTcPnq+
zr4D5svt9/2Tsri0bZl9697v2l+3LLWvUD3Rdz1iiT2H3qryFbWL7Xs0W488
y1tkv909wEj6zQJ7ddEr22cxzLH/ukXUWWXCNPtesPwk+xnTpS6EsPTZ64LN
b7cX2tABRE325QWsf+Zk1tp/Aasvs39WnbModVeh/ctP3iLhufn2/rJ+yjt1
MuxFwOqT7LuFTQ5dkE2AikfY94H5AfYbWtuY/U56QvkOUL6mPQMUAACyx5Tv

       "] -> 4.97, CompressedData["
1:eJxTTMoPSmVkYGDQBGKN+ZW7J56ab+9/Tp1H6tQ8OK3wp/Penb/z7V0mCHgE
fl9o/zkgZVMk5xJ7iboFRy3Dl9m7+53Zeq5whb3wrr75h4+vtM+p5ji5bv8q
+4dsC2vn86y2L5H7sTS5Z5X9fL1vry5VrbS/61Z8qfLBcvvZeSfs1/ots7/Z
5qoesmWJPWvF5IRVExfbG2Y+nMmQv8j+kfZyx41GC+1h7sqc4TZdXn6e/Qmb
pk8zt8+2T5R47XDl2HR7bitjz4r8yfb9vLJfq9gn2O+fOUn06atu+/RbXZqL
lrTbM013zjm8qNl+Ali+wZ7vx7ttX19W2p9ySMt9JVVqn/pXbgO3ZKH95uDN
0dWBOfartyz/KfYi1T7w63zeKwsT7Rd5m+x0vhVjf2SP2hy/+FD7Smuzkiuv
fe3lavQ6Ji61hNKa9gxQAADI4Jj7
       "] -> 5.15, CompressedData["
1:eJxTTMoPSmVkYGDQBOLfgnbteyTn22crsix+pzDP3kvwMXfL87n2QkUrpzE7
zLcXF7LweFGy0N6j2ibGsnmx/cwviexfTy21PxWbJu12c7n99GnsWeHWK+2l
rncfY1RcZe+4v13xX/Iqe+14GaHttqvsdyzTYDxUstL+1tNvab+/LrfnXRsq
8WryMvvAPy6ifX5L7Tc2Vz3lslxir54tffSc52L7tk8BU71NFtmfcnSY9P7d
AvvAjYV7M2QW2GsCTZFcN9c+9V9ou/nTGfY3sssc2Gum2C+OdDH/vHqCvZZB
vvOLr932K31dW27Pb7c/9yq3fdOGJvuPE0zPpfvV2l/jlVmc+abc3vZ02xXR
gmL70E6fxl+qBVDxdPsdXUwV2V1J9h5g/8faXwSLh9sf4+Y2PBAaYm/Lf2nm
rQAve1HuDVvblY2htLI9AxQAAOUOkD4=
       "] -> 5.16, CompressedData["
1:eJxTTMoPSmVkYGDQBOKUWXM5avzn2x/iVtBrcppnb/eebc42nnn2bPI1Hw6y
z7d3EFCQ5sxYaH8ln+uIfNxi+6NeYq0fZi+158wQtHqydbn9HKc1LxcwrrTv
F5bcsffVSvu3fVYXyo1W2Xu38ry/fn4lXH6uBe/3N2uW25f2lnWpZy2zn6ty
XrCVean976mB5t3fFttHs1+Jmfhykb2vZ5D9gstA+6LP3Nu+ZYH9rJLjy1RW
zrdXrl0U3GE61145/mh1jvlMqP6p9s3zdJ68a5pov/XSW87X13rtSxZuye8X
7rR/qNvzUKCkxX5n3vb+x+0N9pHOfTwnn1bZR0oLOf2cVGp/5YH0DcH4QvsL
BiK5G1ly7HdOM47afCvVfsL1OI62d4lQ8Rj7+k1ZJ8N0Quwd5Gadnansaz8V
LO8IpQ3tGaAAADfPlHw=
       "] -> 5.21, CompressedData["
1:eJxTTMoPSmVkYGDQBGK1JOF1iuIL7J/4x1w51bLAfvXXJ38SmxbaGxWW+cyR
XWy/4vVro977S+2TEm58Ppe8wt5FT0HZQHC1/ZXEjyURNmvt5723nPcyc519
3FGnoz3s6+1fL/xQpbFnnX1fetUs9qq19nn51pM8s1bbf+VhWx1XscI+RvFr
mMfepfYhvwJ3Hn+2yD64+52s6YIF9kzdZ55kH51rf5Hr3I3TR2fZf7BpW5kl
McP+Z2uSwLHEafbZVoH7p6dNsY9xBjlgov2Jgx8LC2p67I38bZsPrmq33yzT
MetRRIv9ZT+H7MbVjfYPGT+WO/yptZdNS5SsW1hhL75D6mHKlmL76LtNRyZd
z7M/LLzaMrw/3V6e8bv7gb+J9oVgd0bbT5m8Rnd7f4h9DFidn/10MN/FPhnM
t7NfqZr6O1fJ0L4ErF7angEKAEy5meU=
       "] -> 5.55, CompressedData["
1:eJxTTMoPSmVkYGDQBOIbUiaPnlUstLc96D0le8Ui+9pfJmEnzZfY36ytNnqW
tsyerfCQR8nXlfY7vn70NGNZa/93g8Vh7sfr7Z2V8/rEGTfa75/Yuvhxw0b7
vnoNtbsTNtr/ak+6xCu50d7PzT6lnnGDvZTUGhfnJ2vsL91hF/m2dYX9dJdJ
BR3Xl9ifLmUNZddcaM9bWrs9ecoc+ymqNZwCZTPsr/yWrc4Tn2qvLyPL3hMx
yb5B0nuv48wJ9mr7b11UMum11/nLtkD4e6v9gye1H698rrU/cmWimXhFsf25
ebddWT/n279i9z9u8yXH/q/vxyKer1n2kttTvjh/S7f3SqtS9P6RZP9RS2Hu
ki/R9sGd3t83/QiE8r3tr4D120NpfTjNAAUQvrw9Oi0PNt/cHgAk95md
       "] -> 5.74, CompressedData["
1:eJxTTMoPSmVkYGDQBOItcu1LNhyYb5/zKCtDlmeBPVO2sOnm4wvs79tHRsUa
LbIvc55Wob5hib3ypI1WuRzL7fUL/rf9nLHSnjX0+gSzZavtTePub5c4s8Z+
iUfTqdzGtfaTvkZtWRG61t53YclLr9A19rOTXnPPmL/Knjl+3duziivsOa60
b2fbu9ReZYq96m6jxfbFvrlX92kvtA9v516hYD4fqm+OfWaiTvj/UzPtg2bv
TPTXm2Gfms28ZZrbNPuff5vuHq6dbF/uqpJcemuCfVZ46K90/177yd9fzPtW
32kfJjBZu+Nkq720pu0OSeEm+6Vgd9Xaf2W2S92/pNxeq2Wtg8aEIvuOSQt3
BrTn2H/uWCnc/SjVfofafr8XmQlQeyPt3az6Al27gu3d1R5MF5vsZW/w33FS
TJCL/U+welP7rjkVYi+YNO0ZoAAAZDiTkA==
       "] -> 5.77, CompressedData["
1:eJxTTMoPSmVkYGDQBOLrTg9VOKMX2U91fu9vKrPE/twkbuf5BkvtBV25l/XO
W27v9CRwe2/Havs/PKUfW7ass88rZlQPubbB3lI6WPvKhY3273fUPqu22GRf
eu3JtBv6m+yz2XvW7ezeaH/Ru1hX3meDfXgTc8fpC2vs70dcUlrxeLm97NnT
FTpxi+3n8ry7/e7yXPvuyZJ5pz9Os/8ANmeS/ZamrrmJG3vtDeW6r7dc7bB/
l91dMi29zd77oST33eYW+3P3/25pYWy0dwS7q9r+x7m8J1IHy+G0EVhfBZze
Vx/0ccOaMvsbYH8W2WfnLj/17mWmfdgqienTrOPsBSf9FS/OD7Zf+PmI4Xw3
RyhtCKUV7RlwAJg8jAYApIOXrw==
       "] -> 6.04, CompressedData["
1:eJxTTMoPSmVkYGDQBGKWByWi2wMX2Reobvs/vXux/drDXRnb3Zba28uun8G0
Yrl996bXL+rnr7YvPx7/4NuydfZv93S7HziywX5i3iYX2+Mb7etrd5w5qbPJ
/l5KZ1Wf8ib79pWWm5NqN9pXeZ8sc7PaYL/l2Dm9V8fW2LNvPNmadn+5/YqJ
s4VMQhbbz1wZfOHu7bn2OpP3lvqKTLeHuGOSvaj79PYP23rti75xFbhLdtor
nnN5UnSqzf5W1veXFUdb7MMyr7bFszbaP8q13rDatcY+ePmC3dutK+B0huGk
eznnK+xrdjczKiVX2muDzS+373QyjFtSVmS/9Hyae09Xlr2FVPal8+oJ9tfB
5obYt4LlnexrwLSRfRaYVoLTDFCALg/jAwDdKpeH
       "] -> 6.16, CompressedData["
1:eJxTTMoPSmVkYGDQBOL5jCJ1oYkL7dMTN/RwXlhk/9S3mz3n4hL7CO+UvYnT
ltubJe3y3tKw2t5Rq4jt2f519uzmppWSzzfYu61dtO3U8432Hst+vt3gvwlO
/3I33rJm1Ub7G7POLWuP2mDPt5itb+HvNfYfRJ0PzRVYYa97fp7Ox7zF9lm3
LxsdFZlnf9/pqfwMk+n2G68UKkTbTrIXnLrlT+7pXnuF1QxnRFk77Tm/uPmU
d7bZ6x30mb3XrsU+qTZkfYFBo71W8Y42d5ca+8dqjn8NrlTYZ8kdik8vqrC/
am5vcWR6JZz+w+LazuVbbn94+flDCZLF9i6BewQU92bZf02+fk2YO8F+646z
fz/fCbY/N+1i+9lQJ/sTYNrI3gFsngScZkAD6PIAP0qRYw==
       "] -> 6.21, CompressedData["
1:eJxTTMoPSmVkYGDQBOI/+j06LY9n2yeZfVlZPHu+fQ5XgPnNrwvtjSV7mXfO
XGLPX/3t/8cXy+19E2RNVM1X2de/eMEpzLDGXuRLofjv42vsJ2/7q1S2b409
i4zehdX6a+yT9Ix8O76ustfYdeRy0YMV9jf/REZ8+LnUPq/VQuExxyJ7mQfC
u5VE5tqnLYy4uSxpmv3d/IYnfOkT7aVStS9JMPba32SR2Xp7fpf902d9WuJC
3fZy0X8W66j32u+zemhX5TnB/tcS+a7FLZPs7RvEJ7z6McW+59BMpeQz0+3v
/XrT9v7oLKj6ufbGmoJ7+5/Otf90gnFBUMts+wSD+XKdmtPso49avQ9N6rfn
/eG9649+s32M1TmfUuYy+2whoSlHZqfZ54DpMHtOpmqgT53t+cC0MZQWtmeA
AhgfRgMA8amSCw==
       "] -> 6.89, CompressedData["
1:eJxTTMoPSmVkYGDQBGJFyc+vwhpm2xtVsMfm28y374r+9un+7YX2d6L2d5tP
XmLPNGsXV+qP5fbZlVkbLkassv+5o23BKZk19kctvj1PebvG/viLZec3P1lj
/2ZGktHHgDX2VpHWxzklVtvvfvlZx1J8pX0VSJvUMvtS7QNnJbUW2e+UuFTZ
rTjXPumWxN0vldPsV/yeP88gaSLUvB77yJ9PiqLmddnb7ZwzbTlbN1z8U7R4
ymqrCfbJvztXBFdMsr9gNVs27vgUe9lbTM/FJ0yH6ptlfwysfo79NInj/+as
mWuvdXNr56TY2fY1Uok7lwtOs9fc4bLPOL7f3sx6T5+mWrN9U9WhDleGMvv8
Xzbe51zT7P1+GV64fyHMXu538aayPmf7NWD3GUJpQXsGHAAAVPGaJw==
       "] -> 7.03, CompressedData["
1:eJxTTMoPSmVkYGDQBOKg3UJbtQNn2//hO/Le4c88+0M/Jeb0H1xoX2Si5/64
aIn9LvGF1YK7ltsLghmr7Pczf7QW2L/aPjOm79jTjDX2oWv8jr4KWQMX77w1
dUVs5yr7ph+yHfcbV9gDOUCRpfZnLu6Q6T290H5pju+pa0vm2IsvS0+sEptm
rxMIcsBE+4c1POeOP+ix32glujp4Y5d9pfSk7YqV3VD9vfZ3JuzhPXl7gr2R
MQhMtt9sqhk9edNU+1URc7uurpxhf+o2SMFse7CzYubZC4AdNB9uH/vz5AI7
tun2NmCJCfZAS4A2Ndtrhy1PKtUqswc7+1aqvTXIeqtQ+2qwhx3t3whvsGf8
rWzPgA5EQOLC9m9A3vyhaw8AfgyTwQ==
       "] -> 7.23, CompressedData["
1:eJxTTMoPSmVkYGDQBGKrjmUvuQ7PtGe+st/20pq59jbSjFP3qSy0t2ebXBD2
arF9dteu3bLGy+2n5CxZ1J+/0t742mX+pzKr7fP2LeD7sXG1vY+C0QeDvtX2
iSeCctQ/r7LvkpiSIrJ3pT1b0JojsleW22+5ppNXI7LUPm5n/uZWj4X2zN3Z
x/o/z7YPmCdXXrN1qv0d6ztdFyUm2ovXPNh5QrDXvkpoo09xSrc9d9sk8R9B
PfZ/FN8mr2Hrt0/dMo3l3fKJ9iabmoxum0+xV/e7W9f/epr9wqRPLgl6s+wf
mAbKc3fOtZ8Z8cIqTGWBPaOxybTV/QvsP6sdE3JZPs8+6zKfccKbGfYsVwt/
McyZaN93/0rSormt9n4Gx1MZNSrtL6+N6tsanmn/YPEKgzaxKPs5V5VYi2Pc
7D0E/c37Hxva7z24z1PkFrs9Aw4AAALoi9o=
       "] -> 7.35, CompressedData["
1:eJxTTMoPSmVkYGDQBOL+rfMnNMdOs/9y7cPZGS6z7D23f8r6Om+e/eHSo87N
JxfaR7x/2ahfu8Q+2yjz9TqDZfayhypVrwkst1/wvW3q/L/L7Hcu/iD6OnmZ
feSHxmeTJiy1v7rzjmDahCX2KUfa7n6UWWz/oMdzSSLnQvs5E1PW/G2ZY7/Z
Mm/W7rnT7Xcs0HhxQHOy/dWtNfU3nCbYh/eqa0sH9dkbcXe+WmnRb/9/SWrm
4piJ9l8uJBS5XJhsf7Rqr1WJ1nT7iyFBQJWz7Sfujd867wfCnVPkupb7Cyyx
X/jtnYHNq6X2PA2TFHYVLLOvKVJQZ1m1xD5/RveVgJUL7NnFBJZ2rZpuf19n
u5gIa6/9oRLd+/LbGuy3z/sh94up0J5VoMHTzCzR3jQj2OssU4D9xN36b65f
tLE/sGyHs+g8SXsGHAAAgMuWwA==
       "] -> 7.81, CompressedData["
1:eJxTTMoPSmVkYGDQBGIb8ZXlhRHT7Lt1nQyTVWfZzz8xcfL/unn2W9bNvHts
zUL7bjctTZmcJfY3rvgqywgtsxdQP8J89cMy+/TTHqfbLi+z5yyrPutmusw+
+4u0k3LGUrj67/OeeSm/X2SvtmOeaczrBfbzHGSu8EbMsd8ydeNT3rTp9gt+
JTYX8ky2X+HDUbjKdIJ9/Jz/rDIBffbLK2+d7LXqt0/6vihHq2ii/fPrNu6P
v022n1L/Qm6O33R7U98KT62w2fZLwerm27OlTfBLfr7Q/lK8F6+o8xL7l/Gb
2K7KLrNf+yRjff2qZfb6W8W5Qx8use993v7g2M0F9h6VVk96z0+3F9+v4rQq
tdd+3d+A5RYfG+zPC0vlreIotBd0WPO71zzRvt3MfpWFXID9vScWi/7HW9nP
mHFBLHSqoj0DDgAAiaaNlg==
       "] -> 7.89, CompressedData["
1:eJxTTMoPSmVkYGDQBOJiWckAJ7cp9i76K73f+M2w1+oTrkpfMcfesf6CwqVt
C+x/xLLI3XRcbP9lyVz/xm1L7N/f0W1a7bXUPuG+u8z7q0vsV8upyT7hXmLf
rRwVmK202D5Xo6/1k8Uie/WsNgXtXwvss1pWC0ZWz7OfkSwkbjhppv1TW9cX
jZOm2rfa3mid+XWifdKX02VrF/fb119sddE602cfPUVKsbJ4gv1hlXQ53heT
7G/Pi/GLuDXV3ojhoZj4/pn2k/nDK2pt5tl3sXoE5ycutHd4Uh1Q9maxvYrq
lYavLcvstaXivV0nrbDXCHpfm6+20j53tffmSfrL7bnnXA3U2bTIXkRZ3XPW
tFn2/85f3NURMcH+sYDWa/aPTfY3Ch0D71kU23s1p7yavyTZvuA/W5Bba5D9
9+T6Skl9W/vHPn7P/xep2XeB3c0IpxmgAAAogJF2
       "] -> 8.13, CompressedData["
1:eJxTTMoPSmVkYGDQBGKBmy6VdZbT7G9XWJ5n2TvT/nL05F91s+baT5vxh2nH
3QX2S0t3Zyw3XGz//eZiZ4u+JfZhYvydzzmX2k80/H7iZ9MSe5ZNauvC1i62
F+paKVF6ZpH9rp31HKEPFtqbLPug5Dhrgf2Z94FH33PNs69s033fWznT/hWj
4k3J/Kn2rze1VggwTbJ3f/jv1pqf/fZNf55J7S/qh9o7wT5PoORwTMNk++LT
AZFfa6bZm/9nrnpTMMv+87HS1JCr8+w/yR1fO3/iQvt/rk8rjssusc8X3bBP
d+sy+9a4DZFrZqywfzJLen60yEr7nHh+lbS3y+w3+9pdPhqwyH75yUlHGi/P
hNu3nfl+bq9Ek718kk7z5NeF9n5LJ0a0uybZHxA/H3XxtZ99Bdh+MygtZs+A
AwAA4leZzg==
       "] -> 8.24, CompressedData["
1:eJxTTMoPSmVkYGDQBOIPHSX1s1in2M/dUVGQzzvDfrlEHNP7yjn2JoluiftW
LrDvkv5XJmyx2F49rsr8zIIl9sxSEkmzjJfav92Wtkxj3xJ7s7AlKZe/LLbn
muD49j3nYnuDvVrrb0ktshdky65wfbDA3rko+No7u3n2Qe66N4P6Z9ovEdd8
Uds+1Z7X+9omqa8T7ec+n78xb0e//dO2u/mS7/vshd5/TPnXPAFq3mT7krWr
9m3jnWa/rpyv6u/nmfYiH6NnPsiYZ2+3NeTOw7yF9r6L7vD8411i/6/0z/pt
S5bZt8wyen9pzQr7+LALkgvtV9pPScn66u2x3L5kh8/uhYcW2X8qMmg7MnuW
fcQeRS/z4gn268puxvcwNttzLt/FYJ5WbH/LxuZ6/ptk+8zq7cFHI4Pst8jE
uwWV2tt/FfOxWKGlaf9vp9EFqeMMcJoBCgD7v5l1
       "] -> 8.27, CompressedData["
1:eJxTTMoPSmVkYGDQBGLtBa9MVghOt6/95nk01HaWvY/p51qG1rn251012cMj
Ftjrty9lUcxZZD+v5dJ+xgWL7WeHpgn8ub7YfsmjVXK8BovtN86LvqMcsMje
vuhQoW3IQntfvWL9kJIF9ruNFCwf7phn/2TqPEXth7Pt5Z5Ylk/8ON0+6Mqf
3DeFU+z/+RnqWdZNtBfM3OUVrTfBvj+QpTjCa4L99w8R53XfTbQ/FZdnfu/v
FPuZc8U/dLjOsL/NESUs1TnHns/KD+iEBfY6EZah0ksW2R/XZ+q4YbrUfv7v
935Tri63d07425+0f6X9X16GuRGKq+wfyzVOmrF6ub2m5tmloncW2f9Yr27n
O3GW/aSGAqU4oQn2H8CMJihdBKWT7DX7VIPP1vjbx9S98NT4a23vB6a17RnQ
gDFYXNoeAKkCjcQ=
       "] -> 8.51, CompressedData["
1:eJxTTMoPSmVkYGDQBOLzS3rKV02Yau9x4NyDYxoz7Q/cFvB6fGCOvUVfzf9i
8wX2YmEx67gLF9kv8Jm/+vSMxfa+eyb2tdxabP+4vpfbT2GxPetPm49uVovs
u+IlN3p7LrT3fD17j0XeAnvNyCWJq87Ns3d1esv54vxs+2cThYq0Hky3f3RA
ZsG94in25ue5p7B0T7RPCmPumy42wf7qAn/VDKcJ9uGdXnx9PybaWy9gTAv4
PsW+atrc5pbKGfZt27L+/Vo1x15eWVRPtH+B/Z9XX+6sObHI/oB77q6nkUvt
95zsfszGuMK+w8Tn6k3mVfb5J58wV0evspffvmOv0Lfl9m4gZaKL7Sc0K9ex
nJxlP6d65c16nQn2qpursy8sb7Kf+fc408LLRfYNkxIMnbST7b3A/giw1+5Y
1x+XZG2/x1J1mfcLVXsGHAAAwlGS0Q==
       "] -> 8.54, CompressedData["
1:eJxTTMoPSmVkYGDQBOKQjqbwR4lT7PeamXZIWM2w3yfDzP9OcY593we5cgWV
BfbBU6WnfM9dZD9nq8KPU9MW25/Qn/1b/O5i+xKDpLn5movtw7uu27x0W2R/
XUDl9mefhfbBi7Zc4KlaYO9WPLV148F59nrn47mMjsy21305sTnmznR7mH1X
pDOMmEom2mvLfivdyDPB/vNh94p+6wn2fxao9cY+nGjvumXSFul/U+xlRRc9
mFoxw36dh3CO+r459s2Cr2u8Zy6wf/Jo34zNpxfZW1yN2+VWvNT+S//jVivu
Ffa9u1LnH+FbZf9ysZh/QMkqe5X/kkaVWivsC6yXfakNWGy/NNskPFJitv2b
m+fV1nROgPqj2X7p/Bme6zyK7Y9Y3Q9SY0mxZ+med89hcqA9m0G+2Ro7e3uu
lMsajPnq9gxQwAcW57eH0QDQo5Bw
       "] -> 8.58, CompressedData["
1:eJxTTMoPSmVkYGDQBGKvn5k6XzQm229Zs+H/XtHp9rtm7XnzQ2a2/b+/Qbxi
kfPtPf6n3jW9uNC+0FPq/oKbi+y3XQqwX/drkX2Bz4ztB3UX2du+M+/Utlxo
zzXhetRUlwX21zYoGHf9mWdf8CX+WqzwXHvZ5NLVK8Jm2Veaq525/WCavc+3
18GXr0y2V9hkzLyqZKL91EUu0hvaJti7Mz3ZGqY60d78ouDluQGT7VP5zxW1
cky3z/57M/4A/2x739mms/zS5tszl+nXamxYaC/QmKjwcf5i+0a/gIvqisvs
zZeWPso+vMLeas7vCM7jq+xzwfpW23+Stm+KW7TCfsf5S2m9yxbb5/6Kbp+/
e7a9/NaNt0+dmAC1r9k+TvFQqxdjsf0V7utv+LKT7aeA3RVgv3uu1VHJQit7
F7C7le0ZcAAAAESUeQ==
       "] -> 8.89, CompressedData["
1:eJxTTMoPSmVkYGDQBOKg6s+Vvr8n2e9XK94t+Gaa/Y2pl124+Wbbzz8hImaV
ON/+5JlNis/PLrSXvMB32+7CIvs0r9/qDO8X2Vsq18SzqCyy98wUWahgstD+
ybQNlmJ2C+zz7ic9Mnk2z36x1WxhhV9z7BXaA1TNPGfZX/5alXnk/jT7r7vy
XuefmWz/OPat1eLCifaZexpVn7VPsDebxfM512Gi/TqmrZw7Yifbu/i4LH9o
Ot2+sGvNvV7v2faWe9+u3zNvvv2nrEO1PlsX2htptH1tX77Ynk3iw2wb9WX2
mk1u/ZuOrrA/2fGPMenUKvubYH+stk97Hzvz1IIV9nv4u3wSFy62/7a+9lTs
1Nn2zBuj9mccnWB/6OKe7VmBzfZu33uBTi62dwfTyfZHnJ23BrwKsD8nmJf3
Y621/atriR8Wz9KwZ8ABAKT3ld0=
       "] -> 8.88, CompressedData["
1:eJxTTMoPSmVkYGDQBOIJ9z8nXrGcbD/HO3qRssl0+0T1I13TbWbbcx4yEp5X
O9/eLO3iwpRnC+1Ff74+yvVmkX3KhPeZafyL7V1Lblumei6ylw88tPdx4EL7
H7orHZOiFthvVtZSPqQx3z717net/ZZz7X9XbWTa3TLLfkdPKNPE39PsbWVY
nXoeT7bPe3E00b50or1K7VrLCy0T7MW99hYmK0y0h7nHbW3QJvf70+yDJHd9
mnZzlr0qs24xt+t8+wfHT2zsmLjQ/lntn8ANfYvtcxVtbylyL7P/e7ppnfDO
FfZqp7b+0li/yv7wjz1OD76usv96pDZpcvsKex2+3yu7GxbbX2E7futBBNB/
NptvJu2dYM+4/9tG2bBm++J5PxnTi4rtS8B0sn3w8tOMl9YG2icmWDNXXbK3
Vym6zxTgqWPPgAYg4jz2ALc8lT0=
       "] -> 8.88, CompressedData["
1:eJxTTMoPSmVkYGDQBGLd2+k//86ZZF80PWbP4cJp9sYmzJuYls2yjzmxOt/7
yzz7nZZBiZPqFtqffbujaHLKIvu4N8mZrzIW2fcbrTRynbLQ3rRlmtuLOQvs
fy/d3F8UM9/+udq06/evzrXft+/Elrucc+wf9juzu06Yaa87d8PD9IRp9tat
1SfjF062/2f8z/pd/0T7K4nz0vhZJ9o/5N5kVsg5yX6/lfkTzuYp9i/O3V8Y
dHGGfVisidV3g7n2+yve/Z6/f4F9x2eeGebBi+x3pOr+ucGwxJ57QdSXneHL
oOpX2M/RZq3iObDKfoPI1ifVrKvt2x8aSL+YscL+bLPagW1LF9vLPTwwZdvC
2fb96Z+6N3+eYC/VoXpn44xm++LsRsXa98X2wp6djkvCU+xX7ZbUKf8TZH97
gRWjrJuD/eH074wnOLXsjVx/rb4VLQilGe0ZoAAA1Kqfog==
       "] -> 8.99, CompressedData["
1:eJxTTMoPSmVkYGDQBOKizPdPdghNtDeYb/lJsHOq/fL9shyVR2faey44b84V
Mtd+67WANdzC8+150+48yFs+zz7lWbnIYe+59rV8Du9jk2fb91SWah84O9P+
5OaMpuiqGfb8u+5V2B2Zbm9VtWZShth0+5CNKXlCctPseXv5ygS/TLGfueJV
8rPyKfZBi0pymfWm2sf1XOfLXD3d/tqa3SoXns+2F+R7KMD3cIG9Ss3TZtPe
pfYRb1WK/O6ttDf/efN7tuZq+7DzLgUG/5bbp2l3rW6uWGp/+m6m32GOpfZW
2XsmRqots7/XEt+XaLzcvlYzcNc2xuX2HOq+y3KXLrFX6mDzq7deYB9b+5w3
avc0+wnTQ3Xvre22D+kyupl/sd4+FEzn27/9vXUKr0+CvcIDRrkHjH72Kzfo
smddtbB/ujcg+sZGFXu508Xr3foY7BnQAAALiI/s
       "] -> 9.41, CompressedData["
1:eJxTTMoPSmVkYGDQBOLSQ7L5120n2e/nf81a4jnN3v6eYztT6yz78vtTypPX
zrNXys/y/GC10P578YTP238ttF+3rCep6/lCe/uHiodP8i+0f5xueMpFeoF9
6KpW47UJ8+y/5NoWeH+ZY7/z5MufCX6z7ade+WpUzDrT/tny+0Gv+afZG0o8
yVy0YLL9erA5E+2rVJkrZmyfaG9efbIoWWqyvePB2K4Qtmn2bL8uTfa/Pcte
iMFHr+LwfPvgXj5txY8LoeoW2ws5uz9nD1piv/ZwQbxF2jL77MqV0vLHV9ib
7WDZkjJ5lf3xIJ5r+3eusj94/nzHatcV9ltOhr1ril1sP33Kra2rGGfbfww4
lr6/ZQLUvGZ7gcdXVN8EF9svrL3j7l6VbL+FsyjbOzHQfs+bza2RR2zsqzzO
Mk/UVbZnwAEA+MyRwg==
       "] -> 9.25, CompressedData["
1:eJxTTMoPSmVkYGDQBOKMs7tPXzo0wf6N2cOeX5FT7bO75vYenjPTXuf5W48T
BnPtO/7rPMteNs++/nJU6rq/c+0nHJX6+CJzjv3shYV7jjTOsk+JO83D9mWG
vb5hn+yyXdPtp856r/pNdrr9b+ZAPbfGafZxj2qvpe2aaq9/euXy1KtT7Nkf
LP+pOHOKvbDSYyu7aVPtm2V/W/a0z7D339NmtlZirr2k1qpVr/cstBewz9la
v2WZvUhy+bF+s9X21/N9zmyyXGN/7u7Uq1tWr7DfYTPthtXkpfYHTcvkIk4u
sf/g4+UbuW6p/d++1r7S1cvsq/aZ1enlLLNXm39dbYXOEnvf6WY++y7Pt09t
lv7+xWKa/fveezdW+XXbK007fVfaud5+smOGesfifPtvivJNaUkJ9qcmf2W4
ruhnnwMOD0v7RXe00oWkNexXgGkOKP3DjgEKALCsndk=
       "] -> 9.59, CompressedData["
1:eJxTTMoPSmVkYGDQBOK/z/9vfbtwov2fh/XKmVzT7G85K2+4ozXL3oazktPI
fK79ua2RtaHV8+xjF4a+sqyfaz9DQGsp1/nZ9vvys+WvvZtpz6O97tSqpBn2
Xaes3budptt7zmpqrd40zV58m/mWfLdp9scsBZhiJk21r3c1+uD1bYp9yd4X
/h73ptjz6r0TztWbZt/EfH3t8ayZ9lseLnzjZz/PPvJNAQdL3iL7HT4lBdNW
LLe/7fA4TSp+jX2QJI+Xefpa+4jHG3T2cq20P1D6emNU21J755tz62yKltjP
qf6jEWSx1P6f86TTmQLL7G88nzArYc9S+2M2Ad5ycYvtL1fWnQ1rn2e/4C7f
xSC7qfazhLPenZnVae94dm6ksXOtffbbw7dsF+faz+B9Fe3BHGdvy7Mz6AuT
t30LZ7iDD5Op/TOuDs8FTBL2DFAA4XPYw2gApLSR4A==
       "] -> 9.7, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAACTJeq+N8iQP4C4SGGqU5U/uLATgr6pmT9J
INOdClWdP189HypS9Z4/E4LdZTllnj8nR9Tao++cP0keU8ykBJs/el0vgLNp
mT+3BGn2zx6YP8wfNbGxbpc/sU96LJbOlj9WLNulb+6VPxiDIV7t6JQ/OgZL
29yIlD9PzcEhrWOVP0K9uXZ8KZg/ebWEl5B/nD8z+sbi+EqhP43LkMZzBqY/
uAbpxzVvqj/u+3MusUyrPzMAR1cqPKg/vQstY7WTpT/EaYb+RPakP722FwZx
9qU/twOpDZ32pj94sMQLkramPwNnlbrYcKQ/VicbGnEloD9WgrDr5rOWP3hf
r1EZuos/Hohl+WwNgD+UzxR5wAJwPzpYIH6IrWA/3I0S6PCvTj+rSLa/sFk5
P143n7UgBCg/yhRxoQBZBT/KFHGhAFn1PgAAAAAAAAAAnIyV+g==
       "] -> 9.74, CompressedData["
1:eJxTTMoPSmVkYGDQBOLc+qxLy35PtPdkY/BLMp1mf68wsXup8iz7lZEyc5SX
zrGvdl9SdLlojn1W2f6plgaz7HUnJ/X7755uf+1G8LOZ26faH85ufrujc4r9
NHXGIJ6zk+3r5Vxtn2yeDOcH2F1v/cA9xd6v4OF3n2lT7N8+5P998MJU+3mf
JDJLDs+w33vszRSWy3PtN86aJyDvvsheX99v9bRly+yZN4glKkxZaz/x+Z/Z
c3dutD9VGLD51dWN9qvUhbSOS62BmrPU/tu56+1Hry+y59vfl7x/9SL7rMd1
2+IFFttv3LzY07dnkX3HJ/aJO0sX2P/0ENYr3DTTfkvGlHmH9ky0r9qSPPln
UKu90zkNsStxFfbOYDrD3gVMR9ivTTp+Y0KBi/2BGO7XkkX69gzinHtENDjt
GWAAxofSAPtQlis=
       "] -> 9.94, CompressedData["
1:eJxTTMoPSmVkYGDQBOL2E/MVtjJOsrdLOKH53H6avbCJ6jkFkVn2Z51bzY3m
zrFPfNn641vUHLj4lTlxhX4zptu/MjKYb7huqr3X8zMFHgVT7NlunNs8beVk
e77ns2dJ9E+G89+tSv8v8HOy/bH4tNr22in2aatPri7YPdWeof5rZdW6GfYf
xPwj75yda1++ijV4o9ki+4WrfzUumLPM/vZS5tBjTmvtEy13+c1evdG+okNY
O/PkRvtvfW07d0ussY+d8+fIu6tL7X+UBkxjYllsf+jEhW9PHi2yT7ngf9XW
bbH9qetz76adWGS/6fyeoHWLFtjPPxWxIvnNTHvuADaRsi8T7UtPJleWtLXa
T1b5ZmWfU2E/BUxn2G9N0LrmxhRh/2OnybNJ95ztf37/YCRZpwWlpewZ0ABE
nMseABGcnI4=
       "] -> 10.13, CompressedData["
1:eJxTTMoPSmVkYGDQBGLDrfppT55MsGdV/P92S/9U+9vTS5l3Hplpf9Rp2863
/XPs3U50NrCHzrE3e/Pdp1hgln1zfv+HMwun2++5soovduNU++RpZQ84q6bY
f7M8pvP2wGR7hzYpHtf5k+2fqH00CT852T5loWyeLcsU+8DmhS+Km6bYF3eE
6bNenmr//sAMsW0XZthfNZnG8fLFXPumJ0svBkUvsj9yqFhj+eVl9pln7Y7P
WLrWfgqTUrjM3Y32PJXm0YEPN9pnvTMuMHZZY59U2mief3up/RXNrAiNZ4vs
T6kGK5evX2Rfccqh0Upgsf17779Ci+ctsl8JdvgCuL9+pCYl73450Z4N7N9W
e7Vf4v/Kt1dA6Qx7ppPHGiTsIu0fvV9bECrmZn9QbGrCpHdG9uxgcUl7BiiI
un0zVOAKgz2MBgDVt5w9
       "] -> 10.2, CompressedData["
1:eJxTTMoPSmVkYGDQBGLL7pYgRpmJ9tIiNu9jdk61N3l5aonbw5n24jqOKVP2
zrGva5l18UjyHPv8ity+i8yz7Pmux5g3FU+33/Pb3E2iaar91tKFS+SCptg3
qYXU18+bbB8/99P+o52T7TcZXbusuGuyvcy5X4L+Pybba095Vm4yfYp96/oE
3a7vU+0v9f7WYhWaab89sm5GrPs8+1Vr7I00uhbZP85iPRrKv9w+M+VoWvm5
tfa//XLTnP5ttM+5dbF8wfmN9p3su9PWZq2xt5s7d53YuaX2Ih4pBaEnFtlL
vugLOl2/yH5Tv+nTWTcX2SfPqtm8JWGRfWyhq7JJwAL7WY4qQuXtM+1tzvkr
/9s80X5jhfhG/epWe8tnITNMd1TYc9665Dx5ToZ9i/Xj50srI+2jnq1c+aTY
zb4wIUNy1n8je119nqaQRdL2VmD6tx2MZoACANL2leo=
       "] -> 10.41, CompressedData["
1:eJxTTMoPSmVkYGDQBOKOrZ8/VR+cYK/qJHKaJ2CqvVnJidz0uTPtO39l91hW
zrG/dK4x94jBHPtpf7ftjLs+0z7I9WdPfdB0+6tt3IUcuVPtS1NeWpSbTrG/
HLJkxpXCyfbVm1YcDUuebN88c7bdhb7J9lZHW2Ndr0+2v/L2ekte/hT7jBNZ
8jtuTrWfmtJ89sjNGfb/L6bpmxvPs9eOy6nf0bTIPt9jYstppuX2slf/qTU/
Xmu/emJQ52vmTfZ3VlYKxb/ZaO+zZcUr8ZY19o0qiwNEPi+13zv/tG7G+0X2
J3Tlci9uXGTPfLbRg1lgsX0zQ0aQ2cRF9kt3dL86XrjAPkvH8oL8hZn2vIcW
zL50ZaJ95K8W3aNNrfZ2h9p/uZ2usH/DVr/A6UWG/RrJGAvDmEj7Hc3FlXv2
uNoffdu1y13WyH4vmC9qv3y9y/elv//YMaABAF5pnPM=
       "] -> 10.47, CompressedData["
1:eJxTTMoPSmVkYGDQBGLTJ5sX+u2ZYO+brL2XLW2qPZu14PSSpTPtv76fbKBU
O8fepXRD1k7rOfaJbhYuG+7NtK892XVZPnM6XP1d7/eaTeZT7BW8GT+WVE+2
L8np2C+VPdn+rGaV0vnuyfa1S2JfmJ+dbG8eLnZ9b8EU+zVce/8FXJhq/6nG
8PemEzPs8+yXvjnMO88+NqH45sXSRfbHuZWupLxaZp++7lXGq+1r7Zcv4rol
9n2j/V/B45+c/2+099xhuoS7co19tHl2ldHPpfZZvTM+7vyzyD7FS3hH+v5F
9oe9ukLyZBfbbz9S//DkokX2rZkXbj+tWmC/NX2/UNi5mfZ/stb4MnyeaP//
Ll9z/vJWe28r5bj0lxX2Tkx+pl7tGfaOYDrC/qfjkncJZa72OmvuVRhGGdgb
gGkBewYcAABH6JIs
       "] -> 10.5, CompressedData["
1:eJxTTMoPSmVkYGDQBOLH05vuLpg4wd6w7bFfuutU+8/nDzzTmzPTnvmZunLV
mTn283m636kcmmN/gkuIq3HeLPvHzXP9N5vPsH9X5bnY0mKafaTfOv7Jb6fY
Vwflfn4lN8X+5ZufCtO+TrbfNN+4y4Friv3kGRGHsvSm2DeJVV7YN3WKvZnX
e23rPVPtwx6ZRhm1zrAX09e/Vt42175q2eL4jeKL7HuajWL9MpfZy/LNfJAs
vtY+8saCa51SG+03WjyObJLcYK/MkSiRcWi1/emJL4A2LbO/2VoRw1S+2H7b
HPFlh+IX2ydp/TFlvLLYPjbtQ4Ru7GJ7y4tH+bbYLbQPWj/1cf3vWfbPVS/F
u1yZZP+qNrV9+6M2+56f9tPCbarsQ9dU/mcMzLLnuXu5jOFslP2+HdtWcT51
t/c+uckyc5WJ/Tvdnmtz/8vZB4D5X+xgNAMUAABItpv3
       "] -> 10.63, CompressedData["
1:eJxTTMoPSmVkYGDQBOItHyZk8M6eYL9HYf01K6+p9lP315V1986095te3+K3
YI59+JKDn+dOnmP/5srNxV8LZ9lvD657r8kyw351mP6s13zT7OevfPLsz5Ep
9qZVrLc//5xsH7jwtMajy5PtD/e+YHz9bLL98jSlLX94ptg/ZNn8USNniv3/
043N2+ZMtf/wkU83LHmGvfstx+1+EXPtjbt+fGH5sdC+RvRpbpzfMnvf/Y2h
376usef6lLV2cchG+9XylzZZamy0f5K+oML16mp7g9gLgZM5ltnnLehfqhGx
2P7P5qIz8q6L7ZfbKTwO2b7Y3s7cecVnx8X24Xl/+D9LLrTXb1gTUHhklv3B
t/f3ek+YZO97ZZbjxd42+7/zIh+4rK20f9VylXHZsUz7+TJH27V0oux/xnlE
sDG42z8rfCNzk8PYXv/t02rFREl7BhwAABOGmtU=
       "] -> 10.74, CompressedData["
1:eJxTTMoPSmVkYGDQBGLm+0fSddZMsK+RufK6OGiqvfv3h8ltPTPt35yalsa9
bI69zAeVEo4Fc+yfqa9x/VMzy377D78158Vn2LOzpwreVplmr8vy/pfFrSn2
iyTjrl5kn2L/RtbRZO/dyfZ9l1UkD7+cbO983nHXdeEp9gE18Q/ZSqbYlzTv
CJsyZap9o9VSzs/xM+xZVS9tyUyba2+jEz7zxKuF9t5FOref2Syz/5a7+YjQ
1jX2R9v/6xeYbbS///DynFMvN9gv8T7LteH1avupZfxWl4SW2c9ljXFuSl1s
PznJ/mlV2GL7x1Uq17aeQ/C/rOm1zTVYaG/mMNHM/Oss++NiL/bp751k3+Zy
g194ept9yJL/XVvfVNrfrOqTOyuTZZ8QKLvpiU+U/b8X+pXZ3u72DWrsnyZ3
GtsLOGcfP8ktYS8Dpn/YwWgGKAAADvqaBQ==
       "] -> 10.76, CompressedData["
1:eJxTTMoPSmVkYGDQBOKUPKF2tsMT7O8XRtelh0y13/oweKHKvpn2t44Fztn+
fo790W0hVxUN5tqrLKt80+U12/6zoPe3p39m2E+dZKw35ec0e4eSF4bHZk61
vyHQv+nxhin2bxR6KisLpthX8DH9b8meYs/8p7xlQtoUe7bjaScE506xz9U6
4P6ldar9ws67jVJcM+yle9Uqq2fPsT/FVnsovXQh1Lyl9k9WTQ72uLraPrj1
+PXt9hvszdwyUzg/r7NvENKUeK602r47rUKuX36ZPcc7iQcRNxfbdwULNM38
stie3//p6js1S+ynLatd+ZRriX1U14XzpXcX2kt89/hYoTfHXr1tStfOisn2
ebYaT15uaLd/ILLttGtGtX3LCrYFL/uz7cXA6mLsm6bOY/6S4mlfn3/uFAe/
qX3z7jyb+7tk7b0veWq8ushsHwemP9sxQAEAA4CcVg==
       "] -> 10.86, CompressedData["
1:eJxTTMoPSmVkYGDQBOJk300Oc89MtL9m58/AqzTN/sj26oWXeWfZpzL3lxV/
nGN/Mhaswn5KLGvP4vrZ9meuZnRsc59p79zFIjLPZbp982cPX+YHU+0zP898
U/1/ij3rzKOithum2H/p/P6RffEU+8vZ0avmdiD477K5uFUzp9rfFHQOq9k9
3T5HsSY2THuO/ceitp1SvAvtGbn8F3kLL7Vf9dtT+ZTmavuJyzXCzkZtsF9Z
phSksmCD/ftjP1Qn/F5ln3h1DdCqpfY7std4iq1YbP97+ZMbr+4stl9g99Hu
X8IS++b1p7NaHy+236munz5j9UL7pTmX19/omW1/cUZ6iN77SfbrmI5d3H+2
zX7zirW18xiqoHSWvYGBbfzXaZH2b2aIbd163tneXlFujnuWlj0DGoCIc9nD
aABtypUf
       "] -> 10.98, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAACFKtGQ68CQP76sjxQec5U/8Xi+scPRmT9J
4sA+jR6dP4ZX08jkWp0/na0/eCh4mz8DWgRw8jOZP6R72/ETLJc/UwnSQE/L
lT8JKKDp3eeUPz4M2xnippQ/sGUo1D2ilD8hv3WOmZ2UP7JAcEcEzJQ/Nrxs
tQbClT9/3gcC8D2YPwxtrrQ14pw/+BF3f2adoT/EYh/7qsalP/dvt43Ivas/
iSaV8nvUrz8obSQB16KtP6HVdiqW6qo/2qwFYb8zpj9AWcpYie+jP0/tINgQ
CaQ/5iSrdwiLpD9sOoZjWRKkP5onyLdY5aE/N8ARi+YjnD9jqa4JBpWTP5Ka
lTPlyYc/8bknpztqez/aIlICgLRrPyApPOYqblw/CRCUVn+HST95ge2jOeM0
P0xX5y+i2Rs/JzqayhaRAj8AAAAAAAAAAAAAAAAAAAAA6PiT4Q==
       "] -> 10.93, CompressedData["
1:eJxTTMoPSmVkYGDQBOI+jnPWPywm2S/Zv98utmCafYtrGn+jyyz7j3NL8j1/
z7F/dlYvcfKcufainEwz+vjn2M99sFZT4NdM+5KWN+xJf6fbf+wO6tbtnGZ/
Qss3fVHLVPspPxlNExWn2v9KuDP7wPsp9lZJuXe2b5xi/3bqrf7nM6bA5Z/u
5qkt15pu3+agxLvEZrb9tXsvepoSF9jvSOmPXWa6xH7z5Es2Lgyr7D+uPpls
YrPensfpbPWzl0BaO33q2/xV9nPuPLC8f2KpvYvR5le5AkvsK5P/yawvXmIf
9WDy7yN8S+1vPtpas3nSEvuq0JUaR4wW2Xta+Z46XzTH/ojJ1eyYKZPtpd6G
r9/R224//3amuvGnKnvrkv4Dl5Wz7RddU1UNexVtb9Qx/6S7s7v9AUvJPMs5
RvYcvmcm+VyQgNIc9gxQAOMDAHMemlI=
       "] -> 11.07, CompressedData["
1:eJxTTMoPSmVkYGDQBGKWL1InpFdPshfPOSiWc3Cavdk29cWHSmbZ3//+4tM0
zbn28Zd8c+WPzrWfKOWbYmE5x7793k8bAb1Z9rWLlom+UJphf1F0/S6VpdPs
Y3m56hYtm2qfef/k7hXOU+13s88J/fZnir1BdPnc9CNT7I/fjJ78Z+YUe8a4
dRttJafaH3V+XyPHMd1+UmpzvjrTbHu2LpDJC+w9/n+TKPm32N43arnc+XUr
7TtmM+hfv7HO/m5izZ0d09dD7V9lL3hOnPnG7qX28q95fc4qLrFfsi7o6Y3u
JfZb5faYFestta+elSlhtH6J/YLo+3eM/RfZ23+qOvWqfo793qBLCU+PTrbv
LEkLfre/3T7fquog85cq+9bJhw0VU7PtW8B0tP0CiWfnfv10s3fdcoC31dTU
fr5rmFCMu4x9M5jmsWeAApg4AMBZlp0=
       "] -> 11.09, CompressedData["
1:eJxTTMoPSmVkYGDQBGHr/c2xeRPtozTcxFa+n2pvdlDrL9PjmfaHsnOFrj6b
Y+8e8DBXM2qufV/FllbjnbPtA/YIO71cMtN+rtdz49hF0+1bgsTfLDSbZp/6
xe1Ujc5U+69Ldt9ccmeK/exXEiGeG6bY/+bas5mveop9wQH3uoDMKfa3Vl6a
sk9qqn1st+7n5+bT7Q/ntfEz2M62v+Uju+lq3QL7Z6WXPSaFL7Hv9Tg7VdNh
lf2DYyrm52ettze0ORNULr/B/un5fL2Auavs/1gtXizxZam927SyFeFKS+zn
yUo61tUvsa/Zo6+kJ7/UPvRonGXW8iX27+69kVf3WWQ/w3GOzZ35c+ylc5Ze
irs92V5janSm9JZ2e7+dv1z2+VXbp/g9Xm9VlA31Z7T9xLpn9Z2pHvYOurEX
D+ma2c/t8iox3acIpQXtGaAAwme0BwAqlZZ5
       "] -> 11.15, CompressedData["
1:eJxTTMoPSmVkYGDQBGLGzHKtR/oT7U/rixy+2jPV/lJ9nFnjnpn2J1bPfrT6
1xz7r+9l6yK2z7WX4/kdrx8zx75G/v+Ov1Gz7HedPMXtEDTDXiE/9MS5k9Ps
+5alvZDdNdX++LOAiaUBU+0Xm4RGdvJMtZd138D3c+MU++vaNRca0qbY7w85
pbv1+hT72B9Mi9vmTLO/F7Xi9MLCWfY31nUZLjo+317LWUJmSfdie/UHezez
yK20l3995/kS83X2v89s7ln8f539i4XyLdelVtkrqbjJuvxaal9lOe29Tc8S
+ydsx1IXSi+1//CQ//fBC0vtOXYenNsbv9R+Ac+G+Zu/LLK/0va0/Mz6ufa7
udn/hMyeYq8y/Vfjkocd9o+afFvLO2vsH4LpHPt3sdOlZtjF2u/7mH9UNMvL
Pl5SUVrwoIm99UW2Xv57SvYsTUseShj8s2OAAhgfAKA7nw8=
       "] -> 11.29, CompressedData["
1:eJxdzLFLAmEABfCvUGgQKvQ77/ROkaZ2OZt6jgYO4dQSSBAYCN3W4iDSUNDQ
cJqJFmoHBiYOgtDUcv4DHo1CW+NtNkj0hmjo8Xu87aVOzguna0KIXXbLW9It
5M0F1aHmplpueg/jMkwdJI5C9AD9ak5txFaf1IK651MT0fQZ3UF6ecXLNyC/
5lT/+4uMv8lGJGQTd8MjG7JoKUWrAa0SjFWCLSR9kx4RHmeoD200VEfDAfRJ
15h0X2AUyolCeQTt/ZWeofQWsrdwfn+fINfT5EAp+bLkc82aNGsOwtk49ZEM
LI3AsoNIc0o2tEGIrqEfulSB/vZBZRhZl44Rq7pa1T2AFPGoiGewKWbbYpbC
jrB0Ya32xb/8ACN3d7s=
       "] -> 11.33, CompressedData["
1:eJxTTMoPSmVkYGDQBGJnwz3/O9Um2jft9T0ZMG2q/fLdwtc9Ds203zX3780o
qbn2CSmbPkorzrNfc028pvjHHPssgSmrbvDMtk+9MY3xiMRMe/6btoqRs6fb
R3ovXr2haJr9KqH/j9j+TIWbd6VlJcNy+an2qj6sFn9XTLHf9e2uy43bU+Dq
tzb9NDF4MtN+39VfTfl88+0X2zU/fc672F7pq6SOff4K+8qw/xEPstbaf+Pr
/vcteJ29vXyKjcTalfZ7JsXMfHR1qX3Sre6E5gVL7A+z+Hiddl1qn99SsauB
ZZn9QpaJd4UnLbXXUiqbcltusb3btWemvnfn2q/R//Hsw84p9hGCGxff+dZh
7/75vqX57Bp7nVSRuozwHPta/vKNV5Ri7ecIqtd6x3nYx2TMWT/LwNSe1ys0
py1X0p4BBwAA1j+Shw==
       "] -> 11.37, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAABMsQ+sldSQPyo4o+sJJZU/Cb82K351mT/Q
M5TYwQOdP44IkoE0jp4/CKftcxXSnT/nroWvOSOcP5lM35giB5o/CQUJWVhe
mD9hZSpZgwqXP0An8GbNcpY/r5lH+SjhlT9Mmcb0LDGVPxQmbVnZYpQ/H1Jx
uV44lD8eDJ+LhE+VP6Thnj3vOZg/3F+YOEfZnD+wsZCwkYShP0Y98haQXaY/
YXDKuIfbqj/QeWYGnOyrP8o1299nvKg/xs5mosYXpj+geioATpWlP+0io0Q/
mqY/QOEdOfOJpz8Ud9/mtxynP5mq+n1lk6Q/XRb/0koJoD8fxsxdqmaWP7pn
MHRrKos/juWoascZfz8SajaPU0pvP1cA/SKIHmA/Sq8GtDXTTD/zZi5rc8o5
PxOyEbWNNCI/zELCRhJGCD8AAAAAAAAAAMxCwkYSRvg+KoaRSw==
       "] -> 11.8, CompressedData["
1:eJxTTMoPSmVkYGDQBGJrrw1Jq0Qm2s9VvnmmInmq/SX5gmKV2TPtG7+IVfty
zbUPPG6ypbJmnv3p+S6i3zfPtW+6svCSBMsc+7Yp2xvXf59pb3dSxP6i+wz7
nYKvvE3+TLOvY337ySFqmn3+tcbYgvNT7cV6lJsE5KbaT0gxftwbOsU+5EXB
vS1mU+wTl4udmO8y1V5P68lfKYcZ9uKzD20KvDLHXnZOp0lEx0J7IyPx63al
y+zTy04vL3+3yn5fQMr1j0pr7I+ueL752LkV9vly89v/Ciyz/373T/C+iUvt
v/0t/PNp+jL74w6hD1nal9t/7V0TwCu93L4o733XuvYl9sutiyKeMC2wD9SI
1pdznmbvaZGlyn2/y95xh93xu9/r7Fltag6x3Myz/6bTdjUjJN4+bZpDwJov
3vaHP7DcCxawtG9Y2vtzkbuyPS9Y3T87BiiA8QHexZpe
       "] -> 11.76, CompressedData["
1:eJxTTMoPSmVkYGDQBOKeF2z/l/6aYF93bIdzRclUe3PLNVabD820568J1jqd
MdfecAdv6Wnm+faBHQdzV0TPs7c4uSXo0bE59o2Hjq89tXuWfThngvEEqZn2
01ceV/E6Nd3+ZPG1mtl60+0/HTBfuqlnmv3DRbfqjfZPtZ8/Lccm9MwUe2Pb
uRcSqqfYp/pv2HIycaq96ncff3WTGfbfHnhcFZg6x17L4HnH94KF9v1PRDN/
OC6z/9LmnFa8aZX95RMTAmR2r7Zvv5zX/bBuhX1a4sbp/oeW2ms/+ZhmZLbU
/jeYscx+Z2W1rLrScntdnW+fPHcss395vVk51HmJvWQq+xqNTfPtlbvd/jJ/
nGpf4SpVN2Frl/3ViJkZ3vvroHSefYRmYfI7pXh7M6Drr7H62DPfn3LKKMrc
/pxEOUf/OiV7acUvW/e9+GHHgAYA4wOYkw==
       "] -> 11.75, CompressedData["
1:eJxTTMoPSmVkYGDQBGIpK/btF85NsK/V74t+6DnVfv0N9nOiE2baH9+t3X3L
Z679gQqefVrG8+1jH3yMLDo5zz7VOeGwctBce2urorjvZrPtf6w6UxNXMNO+
Sof3uAnfDPv+SaXL53tNt2/srzZ4Nm2a/eId9v7sK6faT5n6zdqnbYq9ePjV
fapMU+y9Dxv2Mi+bYj879OLTUIXp9nM22aqtM5xtn39efcn5lgX24cvupO9+
tcTe4W1mrJrkSvuHLilzPhuvsj/872Jp7bvl9nvf5Zp9+7XUfuPsV5r73y61
v5FiFfZCa7n94b6fzv9UV9gnfLt333XPcvvLIdfEEs2X2hsHPGPct3EBVN10
e5sqgem/RHrs20PvK9gYNEDpAqj9Cfbfnr9U2Crkay9o2PLzlLSl/aNVt7a7
NCjZ61bJXXqgwmrPgAYA94yXHw==
       "] -> 11.7, CompressedData["
1:eJxTTMoPSmVkYGDQBOL0G5d6/xZMst/18OKqzI5p9rOlMsPeB8+ydzlpnWy0
da69480Dk9den28fWyNUW39ivv3FBrGuzqp59h+EHzs98Jhj72ZYMquycZa9
9qF9Pqe/zbC/FtD+Q1x4hn2Kzb9dk+ym2zeG8/Koy02z11205fWVjVPsbxjU
Tlc8N9k+bYnZp5tcU+x3zd1w79T/qfbuKw2ZbApm2s+0Kt7+dMY8+92eXI82
hCy2T5n1NsT51zL75LTAnfJTVthfPeGScItxuX3j1j9Lr99caj93Tn60R/Ay
e/e7Z+fGX1turwV2xwr7j+a/1nb0rLDX0freLHR4qb2QclXuapaF9vzBnP9l
cqbb82w30dlk2WMfD/ZXPZTOt9+70Unyh0KC/e6PYbefrPKwz5b5Ejnnp5G9
0PGdMboxcvYMaAAizmcPANl7mK4=
       "] -> 11.91, CompressedData["
1:eJxTTMoPSmVkYGDQBOK1kXclviyYYD/pfOSTWpGp9kdv6IX+qJhpr7xf+P0C
/rn2vr/usGpPmmcvKHxmee6NufZvDl1J2qA8x75pq4bMHMlZ9i4mmV8fZ86w
/wNSJjfdvjBpjvqT4mn2hhN2fo98M9W+ePN+g23eU+1ZsuT4medMsZed/ezD
32lT7N9cYvnGNH2q/dcFAgGfK2bYFwXlTJnIMNd+t1j7y9a1C+03PFf/XNCw
zP7kfpOmDy9X2ddWGjv+LV5t75UzSXvdphX262dd6CtmXWbf8XOrw5OKpVB7
l9nfOZBdfip0uT3Diet/4t4ss58/AeSxJfZreNq2fFNdYL/siM7rm5nT7GW6
t8WuVu62V5A9e+dPfL19A7fXAb8N+fZ+2QmmiwIS7Jck3/TbKudnb2j+b8m9
KCv7PVzKv9mnq9nvm259v0JExP4EmP5ixwAFAASEnuE=
       "] -> 11.6, CompressedData["
1:eJxTTMoPSmVkYGDQBGIXJoHG+iOz7Rvqj0izvJ1pv/dPxbYO0Rn2pS3ibLdX
TbO3YE/ODmuaYa/gdn+FBv9s+/8z9QOmlc6zP+Sf3OsmtNDeLF9xzfqIRfZ1
z5tiYg8vtv/A5lh9jHOp/a9K3UBeu2X2rxZfVXH5uNxe7PKnSw9vrbQ3WvJd
5ErmanvFc/NfcMmutddy7NkXGLjO3mb+Eq2/q9fZFxrq6suuW2sPcddquL49
JTvKlrEvsz9t1a+82mKB/WqxBVy/10y1f705bAkHb4+9x1lLiejNTfYspbfS
zBoq7SMWT3RRYSi03y7oq6DyPsP+R+aaix5KSfaf5jVZ5RpH25t/f/h6YlqI
feHOt3n/d/vbfwbLO9m/BMtb2/8B843sGaAAwlfC4MPUAQCk6pDJ
       "] -> 2.93, CompressedData["
1:eJxTTMoPSmVkYGDQBGKZrw9lZmrMs7e7entLysVZ9rzl+mrXHs+0N53WZMm8
fob9ukbDec8ZZtvHO3eX92bNtW/RtFR4qTvf/jx/aV2+30L77tYzGxLLF9m/
r1VxnPF8sf35a+eF57ktsX/OqhaduneJfbePutuE/KX2HofqKppmLLN/w9GQ
vNZruX1E5bWbYk+X25c80Z7y/cNy+6MvdQIa6lfYy6TrfLK2WGE/h7l+ucqe
ZfbiKZdefl611L566vknv5WW2PPHyd1MnrDAft5Ek0uNa+bYr9l1jWMnxwz7
3Y8r7D+kTLZvA7uv315lWWvu3Kgu+ytC59u23262Vw4sXStY1Gh/bEP703Xl
1fZshdWibidL7N1ETA2Ofc6xd2mrZ81kTrdvuaKREOuaZu/+4+QtbuFEe45V
Cg3iFwPtuf8bOCze6QXlO9ozoAEAbliQ/Q==
       "] -> 2.81, CompressedData["
1:eJxTTMoPSmVkYGDQBOI90Qvfd22ba+9d/jg5fPVse4m61ljnLTPtlQva7/hd
nG4fKpb644HELPv2PU4ixQlz7D//+n9qEc98e397PsnvZgvts1JrBZ24Ftnv
v+C9a8WkxfY19q/jW+WX2IvaSCXzSy+1F345s6I3e6m98VZOtztzl9obJnVG
R71baq/Pz1l4w26Zvduj73ULk5bbs3+f/rPRb7m9dibHnCv3l8HVw8xj4tfR
8gpbbP/eZN9tNseF9g1iTvb5jHPtp4e4ZjTdmWmvvaejLax/mv3hMp/+NR8n
2Vv0JKgeq++zf2i4PGctbwfUnBZ7weV6dZGXGuyDClKU7+6ssi/wffmgkqnM
flpZvoccZ4G988VHfcE+OVDxNHuDyfdTHQrj7cvB+kPsY5e/4C5b7AanGaAA
AGDBj7o=
       "] -> 2.81, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAACqK4VkpWebPwlFyF4BwJg/6jFxlUxLlz9O
8n8IhwmXP6WEuevGAZk/zdXGdVe/mz/N5aemOEKfP10QdGegTKE/3uPZo49/
oj8cgheeiKejP/BA60TZbKQ/TmoPcBZIpT+ZvpKSevelP8SHL4Sa86Y/ZeZ7
8c3Zpz+wOv8TMomoPy3vCXCzF6k/2wOcBVKFqT8aGmln2uuoP4RxYiISjac/
bX1mOcu8pj/kiqUcbuWkP9OlI+OzNqE/aRW4Ah0BnD+f3e1y6JuWP9/j2aOP
f5I/H9EVEZrUjj8gsVOv186HPxhjvL0aA4M/HtEVEZrUfj9aMDbJYlJ4P3SM
4OhX3nM/JpGRTRXJcD/KLvv8eFlpP7/gYwu8jWQ/k49WgSvQYT+F2nfaFKpY
PwPnTzxjcVA/WYlqUITsRT8uOF3G8y5DPwAAAAAAAAAAEBuZ3g==
       "] -> 3.15, CompressedData["
1:eJxTTMoPSmVkYGDQBOKa83/vXpo7216NbdP8sokz7SuNfrPv655tXxD9ubU+
dLb91Ut+JyLOzbU3uDZ/071/8+3dd1fu3KOw0L726IqjxmmL7NcaXf09deZi
+53L7ge/fLjY3nfxh0MF4UvsH9mwcPDeX2I/cZ/OX//vS+2DutPPqPQtt1/3
wC1SYc0ye6MzXrPsjy+zt3MI/TSJf7m98m7bnOs5y+yL5wgtrHdaav/llTBP
l/dS++U/zvvnlC62D9ZvERTIXGi/WCDSbYfdAvvJ24X6KvXm2Ock8X4NlZtq
73zmhYOR4hT7lV5xnx4mTbAXFG9u+Gneb//mYO3zq+od9qndrMXiL1rsv33J
UNFsrrPPaHnN7ChfDXVvif3pZbW/blsX2ueCxbPt14DNSbDnfr1xU83SJPsN
zi7N3LPc7BmgQOnysSRls2A4HwBxoJe+
       "] -> 3.21, CompressedData["
1:eJxTTMoPSmVkYGDQBOKFS1ctnOk42/7UzM7FHybPsF+aJBl4jG2G/f/equOS
rLPtnffeqpasm21/7I7Ul8PnZttvi3pXn+CywP4pf/xmE5FF9kkbl0fP27jY
3nnn9p8nji62N/9jb2lcuMRepC2CXfbSUvuIrTt2y3gvsz91g6H5ztJl9hwn
H7i11y6z/+L38Wj0leX24WWOdwwsV9i3Z2m+/yC1wj7ng0FszKNl9ksXTjDY
JLHM/l7QB2YO/6X2RWvn83QuX2wfUSQX9aBhgf2DqV2pLpKz7d/7vdjyyWWq
/Vbp8gUlRpPsl8d9O1fqN8Fe1/n1r7dXeuxz9VfYeHxpsT8a9szA26rB3r1M
beXXrgb7SPNTf1zUq+ynKbfbzXcrsn8t3O32LjoHTi9c2C7v2ZlsP/EJm5/X
0kT7aWA60P7AHY5LH9e72V+7wTnF1dTTngEKAFEFnBE=
       "] -> 3.31, CompressedData["
1:eJxTTMoPSmVkYGDQBGIJg9/PNlyZZz/z+aQSFa2Z9m2l304qrpppf3WJ+MTT
V2baZ53iPiWbNcv+wPHuU6yv5tkfsYh++s9kgX3KP58JH7cssn//6lOxU9di
++XdF56+CFlin2v6++mDK0vtG5ZPn/A4ZKn9+kN11jdKltu/fxFUYvBqmf1J
Fil57VfL7ddG6surr1phL2Fi/eyKyAr7Px0Bzy5cWWH/7+N8pqb5y+0DuwSe
3ZmyzF7gb8+Ep1+W2GuvKJ/w0mSJ/SfvQxNXX5lvH6fFF1FbP8M+65z3ScdV
k+17va8yrqifYD9/68e1SfW99uev7QjvrW+11xM8vmbW/yb7zHiZdVH/6+zn
+TlNPBxSbV9z0yJ86f8CewOwfJH91E0tcu6rkuwv5nNavwtJtk+fuLdEZlWU
fSvYH6H2/xQXnjRcFQblq9ozQAFEnZU9AAgHpmc=
       "] -> 3.59, CompressedData["
1:eJxTTMoPSmVkYGDQBGLZVcknr2+ebR//c5PawpaZ9uG7Yx2e75lm7/xhpdF5
22n2xUfSTHYyz7KvYdojVXx6jv0Zve7Ay8fn2e+JvJnz/O0C+xd92dVf/Bfb
v9Wdlndx8xJ7jv4+zvYDS+wnlWQICDMstc9pE/T7b73cPl/VxvHO/BX26f3f
N9sJrbQ/6KEq9PfoCvv1qk2xjI2r7U+1Vf3Y1rvaXrD0i0fsoVVweZUZ0/9G
sAPpD21LbM4usbfkcvn8w3qB/SMPjwX9ZrPsz+gWP7BznmxvuTln78pfffZZ
YPva7UOzbfrWeTTYe+v9l+hkrbQ/f2buZenlJfbGJf9To9cV2IeD5Qug7sqw
77yn3FxalAqVT7B/1doqurUy0D525USgT4Lt9cwPfTDN9oTSmvbJYHFnewYo
AADGUZaP
       "] -> 3.48, CompressedData["
1:eJxTTMoPSmVkYGDQBOKLGupbHkvOsZ881Tx3nvsse7HWPyFft8+wL9/dsvHS
uen2JWAFM+035L/SyDowxz5l1Xb/y4oL7BfZLp8m8WWh/f/OyxnX5Rfb51qw
x3XXLrHfraTDG1q+1J6LN3CPXOEy++Ozri/V3rfc/mnmjmVtOivtP1+b2PIm
Y5V9QuvRygXHVtvzbXRx2PFwjf3b7+xb7TrW2vvrTRCUmb/GvujOr4cq71bZ
b/Er+SG+cKW9VH7EfeHFy+w/C2pcYLi5wH5W5vvG27LT7IMl3sy26uqyf7Tr
U3rNxkb7K+wbmyf+qrBP2trJ5aJTaH9FqNmOiTXL/t7RI0pvdyfZXzT+mRei
Emt/93bGjHMXQuwfgMWD7C+D9XnYP1+vsJZ7uYP9bTDfAspXgNMMUIAuDgDB
Fp61
       "] -> 3.69, CompressedData["
1:eJxTTMoPSmVkYGDQBOLXQTPrI17MtvfseaBooTvDvjiPd8Ij2Vn2x35YhH0r
nGl/NnIb8+7S2fYTHBaW/JGca7/tD/9T7bsL7H1u1QXYSy22/+kf3KV9bLF9
+Z7V+15yLbVXeCd5bePPpfZWi6fpa69fZi9wr8FHkXW5/cHpu1cY5i23V/Of
3lz2d7m9/PFTdnrNK+xj/36L6FVdad9xiMdm+vkV9ltPdzgeNVth/1wiO1M8
ern9r5ws0TM8y+zPd9kuV5RZYn/ohJPPDJEF9t1sxXG7e2bYv07jnCHnMcn+
lFF6jvn/XvsNCZfbZZm77W1PPT22TrXF3oDjdbaqXIP9u8oXYnfiKu35Zklp
/XUvtxd4sSOCxbTIvsR934+45Tn207b2WbXXptqbgNUn2F8B+zvafs2bsujZ
LwLh9GywOlf7pxPmqZx/YG7PAAUAE96XXg==
       "] -> 3.87, CompressedData["
1:eJxTTMoPSmVkYGDQBGIBI8aKt9bz7bV2/vRMZJ1jfz3hh9K3hzPsFy0zzXRY
ONPeYq5KtUf3HHvXN4cNF9fMsxd/Mb8osH+hvUSwyI8jvxbZc92K9Ql8sNhe
V8TTXVh/qb2k5l+mNReX2t/9s2QDk98y+9cPzj98eXmZ/d4Ziw6oX1tuPyV8
2qan65fb1+d45dUFrYDTRR3yttPPLLf3ApoSumy5/Y/Itt7Yd0vtY46/eusx
Y6n9znBXg7OTF9t/vSI/e9Ls+fbqFXN2sh2ebu/Le31jlfUke7nV25UTw/rs
A/snXtI/0GW/IPXGjadxrfZcLKWOWZyN9syPEw9O8qq1597gFm6xvcx+Ncey
yqJFhfaLn0/6Oetxrr3U1XMSVfXZ9o9nBNrx70q299254rjHy3D7zY0xqs/2
BNg3zG0qEw8Osc+4Z9DZtdHGngENAAB3N5WD
       "] -> 3.93, CompressedData["
1:eJxTTMoPSmVkYGDQBOL9zxgOVW+Za3+KKcnNomOGPVOQvmdi83R7/6awn5uf
T7f3+KK6/WrtLHu2Zfl+Ww/PsU95soMlXH+B/bbWGTcOvVhor+D/qsr9wGL7
/+r9buaPl9jvU/j4j/XeUvttGQq7/l5ear90Yxr/P67l9nZCW/MXX15uH2al
brfn43L7XZMO7FEvWWGvulirYTbDSvsm5887/1WstD/oNZHRoG6F/WVG7zX6
7svtDV9qszeVLLMv/HDSb3PlUvsJb1saZm5baN8AVj/Tfqtdw/bLxpPtD4fv
fDqFs99+d6nHvKT4HntjAxeNQs1W+/bpxvuDdtbZp1/JOPVtaRXUvcX2tTza
l/N9C+zNhM9wrhHJtD8/YVKH2KdU+ze9vrv+6CXZl/E65Vb0BcJpP8F5V2dN
crO3Bqu3tE/iL1jYKaBizwAFADBElnk=
       "] -> 3.91, CompressedData["
1:eJxTTMoPSmVkYGDQBOJlXwMZdQRm2/MKPp5wV2+W/Yyn/Xsetc601z40t4tn
0Uz77awibqWz5thnMy2ba3h6vr3n1KMpJZcW2sdq7vjlv3+xvVtD3GJXwaX2
+tdZfKyTl9nHzWjs2pyw3N4p+/tDsYAV9l7FES3WoivtDyvdWXlCYZW9qKSL
MdOXVfY/X+/sSn28Gmr+GvvJFzR+bz6yxr7DZTr73zmr7Tl7N9l7n1lpf82d
dYNDzgr7yZ+m3n7TuNQeaPj0BLv59vP44+wdOCbbf+n8Jslj12JfcZTbOKCw
zD5j8h3ec5o59oog62Yl2v9hUPSZsiTC/qLqjPPs6/3t+/JSu6LkXe2Tweps
7NvBfFP7UDBfx94KTMvYMxAAMHUwGgAxb4SL
       "] -> 4.15, CompressedData["
1:eJxTTMoPSmVkYGDQBOKOJ7/af4vNsX+0/GVRz5NZ9nJa91KcJBD06T8msX0T
59j/AFEx8+3bfovJTJmx0D43IIltmutiexXhQxdWTltif8r/8lOJk0vt7X/9
uDVz/jJ7p6OzfTicl9tPTVa5bn9nub351UlVDtkr7L3UWhYG6660t82+ESu7
aaX9gztujHKOq+wdzKrPd4euss8xUuSZm7XSflv+QcdOyRX2CUBbHt9ZZt+a
822e+Ool9nxtfluXyC2w5zfeoCP1fJq9lCPIwn77Tx+3Gtv7tttP3nYo/pRw
o33NDpABlfYxp4QDP6oV2/cDbb8Rm2ufCzI2Is0+zORcrsiDRPs2sP9j7At7
QIww+8kCIAv87CvB+j3tO8F8O/uQhEigDhP7DDCtAqcZoAAAszaVMQ==
       "] -> 4.35, CompressedData["
1:eJxTTMoPSmVkYGDQBOLgs4FcPx/Msp+8v2WBktZM+3max1zqwmfYH5kUesBp
/Qz7pSETL+urz7b/wzZHW8J2nv2y5ZvyLwkttA8AMxbZi2ROffdZfok9i5dx
xavopfb870/+Oq66zL7j/gz7w4eX2Tv+ff8j0325fe95vg+fvi23L+IW+86d
ucJeTGpqZ+XXFfbnzd84KVSutP8dOmfCpPSV9u83sPJtnbvC/srG7WY+xcvt
d2zKjH/sscw+9cOV7VppS+wz9b3PXjm8wD5j4ZWgDdYz7bfb7F90n3+yvVKB
9vI7U/rsVS2//2/a2W5/aBmDu7Vtk73dz3MHHdtq7B9fkFwbal5mr+y7qK3a
vdDeBiyeY28eEVnWU5tmf/Fo0l4XxkT7tfsulXeHRNm769zZ53wjxN4VrM7H
noP/3syM/c72lVce+m/qNYTSivYMUAAAV4aeUw==
       "] -> 4.39, CompressedData["
1:eJxTTMoPSmVkYGDQBOI/mSL3hITn2vN1fMzxa5tjf1H77L2tJXPsDc1PLeHN
nmvf8P5+zoKUBfbL5OunBqkusn/07qCtsekSe9fq1i+17Mvs96iqWbH4Lre3
jjd11/BZYa/pGLHjzY0V9ofUN0u/YlkJ5xtdOFbfNWkFXJ3qgYnHf/5Zbp+z
WkXW4MRy+1KryU/ONi63n1nmy+Sascy+42lg5MFvS+xf1xqwXny32F473axS
kWmRfWhxy6GWwDn2N+ODy6ZWT7H3fiL6+9n0HnvL7ACbt4Wt9ncrxZxY6xvs
T29TfNy+r8K+u8jYvvJHkb3FMQugVbn2YvrT5Mq606D+SbL3A+uPsS84+vzF
/NPB9kw5C/f/OOVnr+NbvHbjP1d7LjDfzn6vbYxK3wxDKK0IpxmgAAA56ZQG

       "] -> 4.62, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAAD4FveaAi6dP/HFeQ+H4Js/5RjC432Qmz/g
vIdD8I2cPwS58bH5yJ8/bHfMbFiPoT9hv1csPYqjP8JVMlrNi6U/Gm1yLJu+
pj+4nb0ZsoanP8JKdUW71qc/jAw/JsISqD9X/CXXD9CnP4ONpMr/Q6c/yaav
5UjZpj9D0NNPRLGmP/M3Ltk4TaY/YrSaFyvVpT/Eg08qFA2lP0QJrjSd56M/
jFDWHy3+oj/MGGSv+kWhP0ndueFUE50/hrvBmkbFlj9QwSJ1uOyRP7L963+5
mI0/GTSYR0KIiT//76IZVFKEP7LyLmun438/+CG0rxTjej86UTn0geJ1P/FN
qAJdt3E/y2IY7N3taz89Rnzfby1oP8WODD8mwmI/ma45PbmtWj/xQuvtSgJU
P4lJDdGUWEw/c+TgZHADPj+frjk9ua0qPwAAAAAAAAAAS5me+g==
       "] -> 4.82, CompressedData["
1:eJxTTMoPSmVkYGDQBOL9MiEFD7fOtr83Z7fg0V2z7C+7eL+35Zxtv+5JZ6qi
8xx7jyXzN7Bsmm//YeOtv8UTFtpv/vsy2XzeYvsKSzW76T1L7cN627g/rFtm
byb76Wv+yeX26rF2qv/cVtgr5wpuTExD0DpHGy+/EF9hb5x5Yd6vB8vtbQ46
HGyctNze4W1FkGv2cntXyY2POVyW26cI6u+3slxm36MqtODM8yX2q5ZWOm54
s9j+fqXA582yi+x7/twTDc6da59+NEBsg+I0e8Fnyd/O1E6w/y2jvHnF/k77
KbVNh4JntthL2V2RCNFvsGf6WzP7YUOl/WJbs8lHpUvsnWximKQe5tszgMUz
7ZeCxVPsA//wX+5OjoeKR9pvAPsz2P7cn7URUuXe9tvBfGd757/e91Z0mUNp
dXsGKAAAH4abAg==
       "] -> 4.85, CompressedData["
1:eJxTTMoPSmVkYGDQBOLr5VG83P/m2Fcune7J/G6O/Rw1+3/55+bav4i9dOgw
+wL7d51hGdcdFtmnV5ll3E9cYn+6ovbir1XL7Lfp7tT+vnmFfUOi78W2Oyvt
SyqFl7zfssp+d6TtRa63q+yf2+b/ezxnlf36U3qbu56stC+6ZLeZ7coK+7pd
FQ/m/l5ur3Phvaeu8HL7YP2iQ7ezltmv+H5Vpu/UUvuGj3Wbv01cYi/A/U/G
RXGxvdHTCw+OKyyyv5xtqXNdf4H9P97HEUJvZtjPnn/2YlrERHu+K989X3e1
2V//8OIBY0eDveGf4vcOPpX2zecjyy04i+1FC7x4+/ny7N/+VGlL70633yYm
JlvXkWgfqvJhyjTeGHtFx4faa7nCoP4NsL/VY71kKbeH/aKVOtZ7OJzs07+2
bd7CaWL/CCyuYf8GrE4BTjNAAQA53J89
       "] -> 4.98, CompressedData["
1:eJxTTMoPSmVkYGDQBOI6q4/Txe/PtY+f8G+PXeR8+wsvmZ7b3V1grzU1+Or7
rYvst83f8sl66lL7FFX92HqFFfbPZA5wuZ1eZS/r+331/+9r7JXkQGCd/dI2
w3DdjevsZxcnPl9es86e5enac70Na+0f3hLjvb9ntT3/rabQJa0r7Wt7K4A2
LrdXfqTu47B/qb3YP4OsOSlL7D3OHVZpCF5sf2p55Mvr5xbaV/PfzFqjtcB+
UsLEciWPefb5x2sc9+TMgrprkr0Fxwltb402+1NHQy65/Su1l4y7GlC0KN3+
7KVCMefmeHspMD/c3l8gV+l5YpD9i9W29X8f+dj7gPlO9hbmC3fqMJnaXwWr
14fyReE0AxSgi8NomD4YDQDzzY+x
       "] -> 5.2, CompressedData["
1:eJxTTMoPSmVkYGDQBOIje8tf9JxdYB97wT9eWHGhfROzktpRtkX2z3ybGO+H
LLb/9Xrd56tSy+zLypnz3XpX2NvwHFGt0lxtX9HQ1dNkvNZ+7uaYYBPJdfZN
5xew1k1bZ++8Q+ijqN46+9aijM13v6yxfyRQdTjabrU9f9ftp2cerLCvlDot
s+z1MvvO9QUfE7iX2hfl1QRyPV9sv9zsy5uyN4vs5z6/W1zdudC+V257XeXP
+farllpV9d+aa19/TPKF44eZ9rf/ZXc8/jjRnqsx5MQEqxZ7pzeTBWPnFdqX
CLr8z3RNsj9xvlWZVSoKyg+C0xBxL3u/n2wTc4Ls7Z2WsWyb+9AEjVaxZ4AC
GB87bWJvDqZd4OYCAO7WliI=
       "] -> 5.3, CompressedData["
1:eJxTTMoPSmVkYGDQBOLj51a7RcUtsF/DH3v8+pGF9g/XHQ2ecWuxfYe83Iat
7cvszZf1FSzzXmX/MKirzztjrX2EZbxFq9kG+5WXd7IGhG60l77m8PTUhY32
lxTSc7Y+2Whvfcfuhl3qRvtXjk+4Stw22BfttW0oc1hr/zg36ZD41xX2Rp4K
isk/l9ifdft0MtN2of32dG53pYVz7P00rfQWls6wX+Aw26/k5RT79Wv1Vsz+
M9E+8rqBpGfeBPuJYYyLXBp77AVKdtryerbaKyg/3rRascY+/fhe+QydIvtr
DOczPjzMtn+2krVlfkqm/R6FrdGbUjPszVsPP3qVkWr/UTpy7f63CfY/gmzm
+z0Ps78BVu9tL7N05dU1bxzt+1QFuZbe1YfS8vYMBID2nZ7j1s/U7WE0AAVM
jR4=
       "] -> 5.57, CompressedData["
1:eJxTTMoPSmVkYGDQBOI564RbDaQW2D835w6sq1lo3yVmZd5Uvdh+55SK/XdU
ltmLsnRqTHq60v7MurmrFb6usTd59TbJ7sN6e7dnHkJV/BvtA87sTtg/faO9
jl+Z34z1G+3DNt1u/2yy0T6W+5GepfYG+21/XvEVG621zzoTPNvjwwp75+XS
u4xtl9ozxn6f4te80P684vUgZ8u59koXTpT9kp9pv2Eda+H0OVPtnwbaBUaf
mmQ/NZT33ivlifb3q5o9VrP22U9e7KO75HGb/cH8Uyw7fOrtr803ZL5wt8T+
teyNgIV6BVB35tizHuU3Zk/Psv9j/tfm6b80+/yUh96bHiXaH1Hs3vqvJ9I+
4OuyZYYr/ew3saed3LXHyd7YL//I6QITeyswrWLvmzFlA78jtz0DDgCRl7aH
0QDWxo3T
       "] -> 5.75, CompressedData["
1:eJxTTMoPSmVkYGDQBOI316TqficvsG8Qnnti6cGF9u9bihtX7llsb609bwVb
6DJ76bu8Und5V9nLRWnKRmmutVdqMr35XmCDfXTwflMu3Y32QlobBLU2bLS/
4xuxjeXYRnuV8vRbT5w22rs/mJGtqb3B/sq5+T/Ejdba27nZr1b8tsL+46pH
Tee1l9oL/SwS/Fm00P6XDnN3oM9ce7vymtVBxjPtz9w3+6hxcqp97Kps88Sb
k+yFTpgKnjCdaP+rr7Z787Fee/E5f0Xn/G21Tw/67cCZWWN/Mvflm23VhfZr
VeKSJ1lm2X/5dqBVmivDfoVId3xTWpr9+2dvG7nNU+wh/kywF0/4JJbwKcx+
NVi9l71cwwwgsrM/CjbH0H4PmFa0Xw2mBe0Z0ABMfDFYvxacBgAAJ5KF
       "] -> 5.79, CompressedData["
1:eJxTTMoPSmVkYGDQBOJcPdmsDdaL7auSv7JXLVlifyrj4yn1pGX2EXaCm3eW
rLAXNpzt3S61xj6g+e7MHrH19tu/HXvF/2WDffxPlzPPLm20n+p/JEdPdpN9
a3Q10IRN9t9B0h4b7T9wg1Suh+v35LQU/cC93B5sSs0i+ychB/Tv3Jptf1o9
yWw631T7AJAxWRPslznzlqUbddkDHTX54qNW+zfnUrZUPG22X7t34y9m2yb7
/DX/HPqnNNg/Altca58EcnZLjX0i0BTTG7X2D8Tz3vZerYfTMPlXYA+UQcXz
7YGE/IuJSfavga7ltAy1vwwWt7f/AOar2jMQADB1MH0AkN6QtA==
       "] -> 6.05, CompressedData["
1:eJxTTMoPSmVkYGDQBOLEMObp+6cvsN9rveCeZMsi+1tm3pdfcS21n/Rf7ovr
p+X2sXmnD394vtq+dc+j/pdf19k/q9/ZFHx7g/2zRvmPa85stD/es8z9heQm
+4TIOXuOMm6yf9bwxpIhZKP9w/mSma8+rLfXunr/pqnEGnszmRdSrt+X2ftu
izGuiV1kX5vskrt11mx7p0yl5Qmrptif/b1M48vlfvtg8cn8YnWd9iUsJf9L
slvt53n0Ll53qNk+e6219yzGZvsw9uQ5Xp8b7ZVzBF3MjBrtp3wMeX85otG+
c9GWL3Fbmuzrg0V+veRvsf9wI3xpu1mLvaRsoefB3iZ7E61N8tsn1NpffHzv
96HmEnvFGsftjHsz7N++aJcIPhhtn7U3e19qj5d9apoxV7eShX3gjkMLr/oJ
w2kGNIAqr2wPAPc7mfI=
       "] -> 6.27, CompressedData["
1:eJxTTMoPSmVkYGDQBGL9+Ls394svtH+w7ZKxz5VF9mJaFg/9ZZbaf9u7yfEj
5wr7nNb5cUJ/V9vrKnybPJF3vX3R9VSvtg8b7GewZ8lMf7LR/t30L19TzTfZ
H53kP81edpN9YgFz3qu8jfZBuosmfZfaYB8240/6l5g19pnTDu4sdVxu775u
/8ttKxbZN8xdeFyqfI59uknTgjkBU+1tHP7Pvlk1wd7Edqbyz74u+79AXTJh
bfYXGQSeyHi32HPuKZ9c9K7JfkGS9xE9zUb7d7rrbH2D6+2zhexeXT1eZ19l
5P5J1rQBLt+YqT6Tx6fRfoN12nOOmfX2vv/vLNcJrbRXrtstvmxLoX2VTwvn
0lOp9j0fVf4V8Efat+9yCW/64W5fDxY3tU8D+0MRSgvCaQYogMnP0GBdGq+m
ZQ8AnMKS5w==
       "] -> 6.28, CompressedData["
1:eJxTTMoPSmVkYGDQBGJGMR+OY5Fz7ReeWfzG8OYC+4xzRUuELRbbl07oz3/4
Zak9l/Dnq75pK+2fiYjuFn202j5X7PUrl1dr7U2va/FN+7rO3vt6rXWN0Hr7
12Ed+QUT1tl/m7roY5D3Wnv7KxdvyzKttj8qKKZ3ccty+z6+I8XLshbbu4pr
bnDinm+/e2KOeNyy6fb1vWa2mYyT7A+IBjcIM/fac4Pt67QvFlo3g2lOh72C
sBuzSXOn/R+RjBe//3Xbu4H199vf4/F4uUpjon0lX6HbAd/J9qYTpj3XmzfV
frZgwWWW6un2HwX3dMx9N92+DOyPqfYmvFPmOc+ZaD9PKOTzuasd9mvFnhR9
d6iz5+R951yeVAiVT4SaG2hvwLOhrtLRwX6xKEOw7jMd+41gmseeAQogfBl7
GA0AGLSMAg==
       "] -> 6.89, CompressedData["
1:eJxTTMoPSmVkYGDQBGKhqUUPMx3m2ctzBDHZqC60PyP28aHLusX2H3ZeW3T+
wDL7rdeOSsTOXGV/KW6l/fP6tfa/4t0vvf+03n6+pu68qv0b7DNOr4+r/rbB
XvCS7zmrsxvst7452mOhscH+4ZS1xS+ur7Vvvsaw+rbBKvvyDLefp7KX2ltv
F1i0m3Ohvfduy8WRc2baf7XLeuskP9m+0iz7WPqyXnt1E/2FYQc67HfM45/t
q9Nmr1vGs8XnVat90F+xbf7H2uzbdqm+Cf7Vbn9irUVYZFunvb5G2KHEd932
W/hqpuWw9UPdMcFeAeyfifan45tS8rr67W1bTfMjXDrtmznu3LX71mi/oZmX
0ZehzN4sy/hquESmfSKPQ2G0QpR9Epj2gsqb2W8D02pQWsyeAQpg/BNKpw5Y
NijYAwD+6YzX
       "] -> 6.87, CompressedData["
1:eJxTTMoPSmVkYGDQBGLZ384+nonz7TdvVpwcfHWh/Z1N3/6UhC6xP1B2Ndw/
c7n9vNfZngpOq+13BSmfPaq9zj5zB1PWn5gN9iVea5MfCm+01zz28Lq6z0b7
pMxdDJ8VN9qfTZt2Vaxog/1Pu4tFzLHr7Osrzr3xmbnKvl9jR4vKuqX2P96J
L5rluNDeT8VOt/vfTHv9Nq5P5hGT7b98/f11AmOfvYr8t2uX5nXYS8003Ca9
vNX+t+qUSI9/LfZd9x+xbwpqtV8R1JDS+rvVvsYxyHT+nTb7fzECgt92ddjP
Bbuz2379gYrLD0p64eZVaLY1O8d1258TSdNKut9qv0DpBcO5f3X2lVzXaj/K
F0PNS7VfCaZD7evB5rrZd69IC2CZZmh/O3nd5GwpVfvKW7ZSVso89gxQAOHL
wOUBT3KZYg==
       "] -> 6.8, CompressedData["
1:eJxTTMoPSmVkYGDQBOLCuzcuOHlNt1/iZ9IW6jDbfsKaG09trs63V85KuaVR
tMg+fjJIYKn9xOn3or4wLLeX7Tn1vY1xBZy+PjFkpW3jcvvNgU+eLN2+zH6V
zrmM7xuW2qd5z1ScILjE/hHfrLPLny60r09a8/b+8bn2t8X3P1aeMsNeTPiM
/7aVk+1bhLjtwpsn2Hvo/IjhdeqzlzGZ7X96cZ997M7Iors3JtjHqTUvfcg1
2f7b0fc/OFSn2Xt9DLA4e3Gm/eoozt+KaXPt73foTz54aYH9a+MNnmFvFtkv
X5asJzhviX0pf/R9Np6l9o7cmrE/3Bfbf731sjnw5zx7GfmFR5rOT7Xnl/mY
ahTRZa9e9OlSdHed/c/KqUcl3+bZn2u02HHdL97eWsSvuOSbp/2bLwdX1ORb
2G8tn1g3N1jJngEKPoHFOexhNACbsp9n
       "] -> 7.56, CompressedData["
1:eJxTTMoPSmVkYGDQBOK7FYWXl/dOt/+75eOjZf6z7Y/9arR0XDPfnlOFcWev
wyL7Nv+TFR4/ltjHZt18sW/pMvvbYPXL7U+WP1SoqlluL5938ea9h8vsbRIF
q3cJL7NXClzIwiu01P6nxc9LHf2L7eeJ/Wy4lLnQnufyxqxlBnPtExsStz5n
nWEfZ67ofqR0sv1PVkfDvvgJ9r5PHd3Wh/TZc314aF/B0G9/UrDwbovMRPtC
i40/P7ZNtn+epXgodN00e6kVhi1NjbPsrZ5snNzoPM++UuSmdLn7Qvtn5pkK
0XWL7T2CD2ZmmCy1d47KLBJcstTe1dZyrv2VxfZv/iycN+fcfPuylIOTnN2n
2b/cnGhQaddtr/eJcellpXqov/Pt1zMypl+XSrD3mMN4o/uIp/2EcEYT+UpT
+wdCjBM26SraM0ABhC8IFwcAbxOUlg==
       "] -> 7.85, CompressedData["
1:eJxTTMoPSmVkYGDQBOItPIJyrrtm2n/4yqQ1/98c+2JZSZ6n+QvsLf0nBM+t
WmQvIgoCS+15nO5tMli1zD56zy1T9+rl9jmp3n+FQpbbb+Tkk3bavsx+3/GH
+lI3l9rf1lPj2Xd5ib3OxD12RyMW28teeKr2ynih/bK0xZE1T+bYn+3Y4f71
73T79pM91zZ7T7bX7NtpfSh0gv3P0zb9bTl99lvUqwrDOfvtudVL4+WiJ9pL
v/Au/1k/2X5BwtzgsnvT7Hd+X3vBonCWvawcCMyzr+DYtu+G2kL7MgUZ/hdF
i+133nGpVVNaav/xkHFbbfJS+wPrq+9z9S6293SzFJprO9+ePdyRwfbzVPvp
S884LtzfZZ++tvadg0WdfSqYzrPfBrY/3v62Z3/8BSUv+8zy1e4ys4ztH4H5
UvYMUADha8HlAXItjm8=
       "] -> 7.9, CompressedData["
1:eJxTTMoPSmVkYGDQBOLHF77es1Gdan80P/fYfpWZ9ju4F9jb1s+171HS/rNK
ZKH9J16PHy0TF9v/3ej/Qo55qX3yXeYct4lL7Tc3CHa80Vpqr1zukfkieYn9
3Xl7V4mVLraffszojUvbInvhhRyuGk4L7QMWhJicuD/Pft1y/esf5GbZL9Ja
HDLx2VT7zpPlUV7ak+yNbot+yOKcYF9dl3l+iUS/ver3sormtgn2yw6/rbV/
OMk+Lttkw6XzU+13dZ/zu7Fwpr1vu4XUVvZ59npNSX5cCgvtU2Rnf568aLF9
dsZ7x7Nay+xzNSJ21UuusO+fMnfmiwkr7G+yFjdmVC2zL456y3OHb5G9Ee9H
1uiSmXD74l8n7c/91GifAKYL7Z9lOnC8lk+yn1cxU58tMsC+TyS/yzfPxn5/
EX/wbz5FewY0sMp5f96SfWz2AL9zkpM=
       "] -> 8.17, CompressedData["
1:eJxTTMoPSmVkYGDQBOKeL/pzU89Msb9m/Fn3w8kZ9hmb+qJX6c21n/UvsPnH
pwX2UwNetU/IXWx//dS2L/dvL7GvCC7h0E1far/y1pvbq78usb/zQzirVGeJ
fWWWrqeXy2L7YPv8hG9hi+xz+DqyjvAstH/a38xwcfo8+wV1sk9vv5ppbxE5
V5T7yFT79fLMk+KUJ9lbFGQnneWaYH/x3fHsGUb99nOnMtg5z55gf83rYNUm
gcn2r16nM7vxTIPrN/q7Q2ia/zz7GemLT6z1Wmgv/flVzPTzi+0L+jJu+OQt
sz8V7nxyeuwK+9jcRXsdr6ywf7aXq2/D7mX2RXtuRbZrLLIvVWVq/7Rmpr2U
3gKOEzP7oe5ost87KXEjo0WRvYjrjNwrm5Psd1Xvrek8EmDPc4nf7PlpS/ss
vuI4+cUq9gxQUALms9jDaABmapki
       "] -> 8.21, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAAD1X94jL9CWP16ItTzGppo/Bh988MEHnz8I
WyjVzuShP69div/uiqQ/E82jrPM3pj918gqVigenPzSpdNzc66Y/A4QU97VM
pj9RzIegM3alP7+mGbUsdqQ/28kseYMAoz8XWgXGnvKgP2EcGsahYZw/tmD6
L++Rlz8NyjN88zCTP4ZZ8LxOYZA/B/oiDguZjj9KjWuLJpKPP0h/ZavFkZE/
DhTmQGEOlD/W8hibamiXP98/O5DYTJs/h7GoYR0/nz9oNt3499ahP/7KVosj
I6Q/UvHggurkpT+jqF/TjFqmPw85PyMYfaQ/xqKGdfx8oD+2O6FNOCOXP4Gu
ODEdOIw/5TSl4HdTgD8mfjuZJW9wPyejlHvc3WA/SGgSqW8jTz83GICDATg4
PzXwtnBKwiQ/AAAAAAAAAABGQEmWuK0bP0ZASZa4rRs/84+VSw==
       "] -> 8.11, CompressedData["
1:eJxTTMoPSmVkYGDQBOJJXQdeLOWcbr/KYcrCw89n2e/nm7hyveQ8+9diXAlz
by+w/9lx5J4d92L7BgP9nZd0l9g3Ha+PTs1bYv+3YHZ/wfbF9t8/FtusObXI
/lORz8vndxfav/6sMk354wL7EzNKyuXnzrffunzS0p0Nc+xnR+V5cSbNsG+2
fm1cd2SKfQGQJ7Fiov0pngf+Fp/77dMec8Up8U+wz899pz1p0kT7xlcpqvcj
pthPm1qTHLhguv161raO6pWzoeoW2H9+tv0gg8ki+xaweUvshSfILfsdstx+
/p+qdHfLlfaKTDdV5rastJ/k8i1kk8ly+9I3ovVh9Yvsl2jJrMnZNdP+mArn
fDb3fvsCFvtzKpcb7QvBdKF9/oTLX7lrE+33Pnif0jXD176P4a6UWZsplBa1
Z4ACCF8VLg4AtRGWhw==
       "] -> 8.31, CompressedData["
1:eJxTTMoPSmVkYGDQBOLrV0zPJS2eYp/xf5mWwJEZ9tZf1WdlfZ5j77rqSOHW
pgX2U3Nscg6cXWQfb8xQPOfXYvuV2v6X/jovsTfqkiw3n73YftPuJef3bF9k
H2gzo9tu30L7i7nKTw7fWmA/+cm9B5qV8+1fnZ/5LiR/jn3EUo1Jy/1m2Esu
cH3Iv2mK/YYwAaYX2ybaV0iHvfkpPcF+17NUoAsm2Od2M7y3WjHRPthObAVH
2xT7LrFdPG+eT7e/VQpSONvetrZVldFjgb1PyVue+JZF9h0iNh8UFZbaH97S
dfnJ7uX2HZsXRz9ct9JepJzp3Hu2VfaNL6sOmK9dbl8he4XjyGOgP/IDdQMD
ZtmbBrjd9OGdYN8mtO9yeESTfSuYLoLyk+y93vQ3ntD3t2d9vGH6HGYze8GW
afJqUbL2DDgAAKPZkgw=
       "] -> 8.46, CompressedData["
1:eJxTTMoPSmVkYGDQBOLN+opvFpVPsbe17POb0D/DPr6nLSfl5hz7Lzc2yNyc
vsC+TeBJwufbi+yfJ2x7J8e4xF7q2VSDPa5L7LednV8eOHexffBM65C2bYvs
wzSbV7HsXWj/+Ytcu+W1BfZhBxz/d7TPtz+u1usmmznH3l5W4Yl+4Ax7n8o1
yztXTrH/GLbgd9eGifZaXG7yoYoT7Cfc0Th3TncCXLzhyjPPaROm2PN2ceYm
vZ1uP21y2Xl/1jn2MY3vtA+5LbB/u0Ox4E7XIvvH95aevSC51L7YoW5j9e7l
9jkK71nq1620t3iodPYS6yr7myxa2kdXLLcPXl7Uue3qIvuMEkuXBZmz7A+b
JxfcFplgr8imendHUBOULrJXAtNJ9hpqWzq3xgfYPzD6wPPpiql9BNifSvYM
OAAAEsyRvw==
       "] -> 8.51, CompressedData["
1:eJxTTMoPSmVkYGDQBOLkLS9dnCZMtjfgiD6ffm26fbnYy8UyxnPsn12XK4o0
XGA/UcVzkornIvvoMJ4pH9wW26+bsy80O2+xve+sQCPfLYvs9x+dc/XEwYX2
kw8lLFtwcoG92br5Z+Y9m2+/yEvyJNvrufZR84ofXOWdbX8t+XTM7NTp9q+0
Dn4osZxify4g2XHVlIn270z/KK2ummDvcat7avnrCfYaas9XWhydZO9kaOl/
VHOava3aP5n+FzPt3a/X+vyxnGe/gfNRsar+Qrh7EtyPqXWcX2pvd0TUkDtz
hf2v2Wx7twevsj8CctbEVfaxtxZxnONbYe+am1G+V2uxfaamlc/2B7Ps/x44
1NfjO8FeHWxfk/267FPxK9cV2U8Ite14xpEMdU+AfSU4PGzsUyt2yXj1q9kz
QAGEz2YPowEpDpfv
       "] -> 8.64, CompressedData["
1:eJxTTMoPSmVkYGDQBOKV9bevq5ycZP9lz/wnC29Psw9Y8I4j33O2/eZUMdM1
V+fbu3dsX/1OdpG9/XmPrx7Wi+3Z2YQZlFMX2yum8pyTWLzI3rjQYULa5oX2
DjwdfjVbFthv+KJpWHJsvr33p0OrmQ/OtXfMDvga9neWfdtshX+9dtPtX5rq
6n0Vn2L/krGh+UPjRHv9tL9mOpET7E+ohUd03Jpgv4zv/eU3OyfZ+1tM2Zwq
O82+22HXmlOPZ9o/cjQ4qW48z36O4uUiJ8eFcHewWx1Ypf57qX2veEA0w4oV
9rkFV27NmbbKvmZp0bstj1bZNwXP81bIXmHP++I1++Tmxfanv3EzzzaabX90
a1ZIwOkJ9gfZ7b8/cWqG0sX2j4ND1Fp/Jtu3Gh9b0SIUZP+O9dEN9gI7+4KW
lY9Yr6jZfwXz/9nBaAYoAAD6EpfS
       "] -> 8.74, CompressedData["
1:eJxTTMoPSmVkYGDQBOLlZ1WUfj2eZJ9hl5zv8Hqavej+5VnLwmbbT1jy2opz
x3z7jN8zovcoLLKPd9JaKma32D762OoJcuGL7bc5Loh/NGORvfTWieHTViy0
f3GLaZfH5gX2n2+9mcB/Zr699oez/3PPzrWP9lr0vPPPLHulzRmfYlyn28+c
YR4eIzXFXtFQIKevf6J9AuO/RP3kCfZr3VnTQm9PsH+UoFT2dvck+y8hEZns
5tPsdd5MjDN5N9NejOHK2l7DefYzwrlFSu0X2r+bvlZQo3Sxfdr/K3++/l9q
X2TxL+PsihX2Vsqyv/KWr7KfmKio3vp2lb331F9pu3JW2Lc91V2uWbXYflPH
MpEFTrPt25cwpjjNn2BvOV9tMTNTs/2cq+o/OcWK7VXX6wQqpyXb33vEOjHi
aYA97/FVjts6rO2NkswYw9hU7BmgwBrMZ4HzAU+tjyg=
       "] -> 8.78, CompressedData["
1:eJxTTMoPSmVkYGDQBGKtj8Zef3om2a90PRG/efE0eyH+0nt6D2fZs82bquHB
Pd/+xyT5w8L5C+3lXu2JPWS6yN59X/A2C/VF9mt0tJ6r+y60T3HWO8kctsD+
Mbf50ku35tlzzehYcj1hrr3X+oNWEgdm2x9JsFp5MXimfYoid+QJp2n2OTO+
A02cbH8IJPt7ov0O44WXE5dMtDf9scrM7Mkk+06D5Fms86baH3rs8JpTc5a9
rGbt/uYn8+xzzq7+Xtq00D7mjGP/mquL7ONF2l/IOi6x952mfKgnc5n9jOMp
lkpnVtjfN06fWTdjlf37GrHonRtW2XvMMXD7K7zCPqyLc9dqkcX2W+MvOHAs
n2XfK35Uscp9gr1gms/mA5ub7OdqH6iLW1AEVZdsv1h186+3XwPst4PVW9nr
lFj1mCQp2zNAAYTPDOcDAFLoj6Q=
       "] -> 8.88, CompressedData["
1:eJxTTMoPSmVkYGDQBGL7R5N1nPUn25dqaSo8VJ9uHysisrPYe7a9y79/gWz5
8+2Tg+QvhM9baP+w6jSXfOki+5ldk1y+5S6yl056xqk/faG9UYfsh9lzFtgr
2UpbJgfNt7/eK5F58vxce68Yv/SXwnPs4w/vdn46d6b9ysWXuvhqptm/XM62
smjfZHuxLyWlPicn2ufqMf2UsZpor3+zNFXLa5L96qAq0YZzU+xVZK9bpTDM
tGfSvr/KsGOu/b5fsi+47i6wD5gVWXc2bZE92+8KXWPeJfZfGWufSgYus38w
i59T7vgKe4+5LbEVM1bZb/JbaOOyZ5W9+dU5Pe/MV9jbgf252D7tw7eHFs9n
2cepPjFkCZ1g776vLJTjdBOULrK/cIh15xTbZHvNNVbHrzEE2n9RPPhYYrGN
fc3NC6uCqlTtGaDgN1icxx5GAwDt+ZDK
       "] -> 9.01, CompressedData["
1:eJxTTMoPSmVkYGDQBOKgmJBbphun2Bc8PiO7sG6GfW+WayKPzxz7B+J5b3uv
zrfvYHj2U+vYQvv/73c9cqleZC8QtGDpwpRF9rvVpjk5Ni20b+B7wvymdoF9
+LHNjuLm8+17Vl/5Omf+XPvHIQf079yabb9lzce9S8pn2v/alLHgW+k0+78G
XuVXz022L5vHYH7uzkT7e68STvwKmWj/D2z+JHveK/vOHeKean+tYI9znNdM
+6znnECnzbXXVsk0lXm/AG7/rZz6j9J/FtubdXV77VZbZh/X+DzKZeoKe/Yb
vxVYo1bZfysVi1tRsMr+g1Pr5RtXltvvSle9fvHqIntOsPwsqP/67Y3EsrWj
zZvs+cHmFkHpJPs0jZksJQr+9pffzZWyXWxmfwJMq9kzQAGMD6MBQ6CfaQ==

       "] -> 9.04, CompressedData["
1:eJxTTMoPSmVkYGDQBOJTz1tvf3o70X7l9X8KsSrT7DuOl6cdj5plv1LyTN65
oHn2Pvsdl+2av8C+3LPa/wjjQvuv00/ySa5dYJ+o17xgX9d8+30fczsSN821
X3ynqHwK2xx7Rbtj1eUPZtkbbmYR2TJtpv3hNz8NtS5Mt7/1aunVmz1T7fdd
XXWE5+Fk+/SD5kU/ZSbbC7Tvmnry92T75g0aP1dmT7Pfb9s0Z1bOLHvp/fPN
zqQusD95sDrw2oTF9odVORmvRi+1V7MMUnX4t8Q+SfWo4o/nS+yLEr+86hRa
Zn9r4zQ2fcYV9vcZvzp9r15pb66Ze2tG3kr7cOFXXEK3l9mbX5nlPlNwkf2r
t0fPH9CeaT9P9/dDlsV99lcuh2Xsmdtoz+2VOK9/faF9hVkZl9nlRPvg+36T
5hn62z/vSvLLarKwrwGLK9oz4AAAPx6Xmw==
       "] -> 9.25, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAADBvjsdLsaRP5lsqShwBpY/gy9fzHdWmj8T
iax2o1eePwdOTjQssqA/t9EQLL8UoT8ZY5bM8cGgPxZOusC7qp8/g+BrtHbZ
nT8nsvVwgjecP0kXeFf1A5s/vUdGQfqomT887z/NeueXPxvZsP4ImJU/JIvO
Vmzekz+xbgHPgAmTP5uAqoqJ1pM/WLalvaM9lj9N8IYDJyeaP86/Z3C2R6A/
x9JXYmtUoz8VO5QIvyGlP4jhYUG33qQ/RNxP28XapD9nfN9aRBKmPx0UvpcU
A6g/VRikqn2FqT///UmsxnGpPx6evkgh66Y/tkcQe7Isoj/s6AEUAWKZPz5R
WZ147Y4/S8lf6RDOgT+ACDiyYf1xP8hcWBN4PGI/iLpVCsVDUD9z3yR+ypk7
P3RWGlr+tiM/+iMqkDCL/z76IyqQMIv/PgAAAAAAAAAAoFSWBw==
       "] -> 9.36, CompressedData["
1:eJxTTMoPSmVkYGDQBOL/mutSdCwm2YdcYWG9nDTN3q5I28h5yyx7Bs1Nrgo7
5tmn9Or9u8+40D4yYcGcqr6F9n+KMjx9Qhba/96tpJdTsMDeSVjuD8Ofefb2
SycddTCZa3+Tb/WM/lez7f+0769OKphlv03/RN/BlBn2r5l+msRfnGq/bBWj
x76jk+25+ZoeFvZPshf/FBq3/dkk+7XBGxUdr06x57DUSV3lPsNePn1Rq8G3
ufZvgws0XbYutP++OVVu+YrF9i+m5P6bx7nE/nCKMMOb+Uvs/R/NcjMwX2Z/
0WiKNn/0Cnuntf5XWf+stD+/butine8r7SsaGqoXZyy3r+WREfaessj+5B7v
p52nZ9pPfBirrz693z7QWMhaVLrJXkq3irFKr8jeUURKmrcmyd7w0K509tgA
++jS7+cmrLKy33XyZ/qxFGUozQynGaAAADdbkuk=
       "] -> 9.35, CompressedData["
1:eJxTTMoPSmVkYGDQBOL82y//zH8+yT749bm183Km2+u1qvobWM22b12yxW/C
27n26Q5cHaYH59lzL6jec7prrv1UGadvAqtn27sUO7LJrZ9pb9Ku8tzZYYb9
Jp5YVyG16faF/pUlP2dMs//m5fDIxGya/YlfFX/+z5pqn5gcEyqvNdXeqlO5
Ptxtqr0Fh8pm38PT7FsNVK+b2cyynzbhYm5WzHx7/l3RqTp6i+3j5qi4Hqpf
YW9ctWXS5Ly19ht2blnDp7vOvqL+vL2w5kr76zrn4nUNl9ovTKvI6r632D4n
6pXBtJQl9q9mvvISVF5q//O0/Tq7nUvspTa+dFicschefDrnDKejc+xZD5/t
3Pp5sn2D9bTJl9k77Hd/qzpzo6/afqHwhYvtT7PsrWo2ay0vibKfLefYp7LR
w155RbmM1GJD+7s3VY9rWsjYM0ABhM9jD6MBd9+S1Q==
       "] -> 9.51, CompressedData["
1:eJxTTMoPSmVkYGDQBGLRqpSPl6Mm2qvvdfqxT2aaPeM3y7xpabPsA6e+/2nT
Mtf+wMq90ikl8+wl3gb3R0XOtZdZ2L/SuGu2/bq0+yKVm2baK2cHsYhbzrCv
WveinFduuv2FraIWaXOn2dd0sLFWmU2zrzuSv0N8zlT7K6fnVBRIT7XXnJ7Q
qm061X7LpLdTe9dNs2ea8s49VXKWvYilRGmjxnx7L55K6TXsi+036va8kA5f
YW8qUGNo7LHW3n9Fwma2H2vtT5dN+9uuu9KeRzWu7HXOUvu561z0JusvsZ9d
dLvq68kl9jzXmjlbJi+1/zD/1dqHBkvt0+uqtd6cX2T/56T228asufZX2dl0
+Bqn2J9JVnXZt7PDfsWN1lzjzBp7yVS1b1NVcqD8GHuF0NOHeXZ72t+ovzHJ
08fYPv/xneux6or2DFAA4TPaw2gAySGSjQ==
       "] -> 9.54, CompressedData["
1:eJxTTMoPSmVkYGDQBOK8+5yqobcm2H/q8fFZ8X2q/Uud6lp2g1n2PyJsYhUk
5trbWvnZTNeda6+5J/DTTMPZ9rmR+06/eDbD/lh1kaLwp2n2niu25n9ZMdV+
6m2mnf6Xptgb3qjdLTRziv0R87PSryciaMaazRHlN6fY/9aseDfp6FT7DgPH
TSsCZthvKteqW8k0115UuvmM2PyF9n/A8kvti14Ec4ozrrH/unzZGrfHG+zd
FbJTlrzYYJ8/N/migPtq+8YfvfYda5baFyiv16q1Wmx/53D8qSWOi+0FsqVS
3XYvtl9W3P5LwG6x/ZxJ24L+8S+0l7liKrFy5Sz7/+Z8wf6Vk+zDJlz0fGrQ
Zs/C8i/5+MxK+6Am66catZlQOtI+P4Hz3zEHd3tp/omW/I8N7fdubDxUN0/G
ngEKToP5f+xgNAC1wJjt
       "] -> 9.97, CompressedData["
1:eJxTTMoPSmVkYGDQBOKAzU9N3zVPsJ91UfKfmtVUe6XoSOMXvTPtL29rZsws
mGO/csvbBAepOfbBDWISbctm2qfsfHCnRm06XP3uhrtBhWxT7KWNm2b8CJ5s
37xAedlK98n2NbV/Ek1aJ9t/PnGwuuXhZPvyT6sWFi+bYu+vcIBji/g0+wmv
FVv5XGbaC7/i/8W3c579edmMu99uL7IPbGk455S73D4hPcQwxned/a5XNlrS
bJvshat2aetO3GhfGS29r6Z4jf323kSxVO5l9p8M3nw//3eRfcLBLZ7fNi+y
7zrs9UqOa7H9/zKrhl1Ni+zbf5+MY4xfYL/sTc5VpfyZ9l4aU0p1l060F3dg
i3kT0Wqv8WzV5xU5FVA6w77TQHXvk7kR9k0gb4m42ydM5HTqfWNgv7wm703s
UTl7BijoB6v7YQejATPqme8=
       "] -> 10.39, CompressedData["
1:eJxTTMoPSmVkYGDQBOK6kFw2j00T7BsXhwe/2znV/rPJFN9i61n2O2wrL25O
mWvPlMXq6sE9115u9d6uP02z7Nf3aTeeezHdPqZ3ouSSZ1PtZ/8Ma9u1ZIq9
QVB+7uOPk+2zlE+5fnox2f5Cll90l/oU+1a7Q8+/Nkyx//h0JcNZ46n2lRHW
tsd3TLNPVZ9RU/h+pn3MaaYNGxvn24uYl5++H7nYXo1z16ffn5fbFxUGJMYZ
rbPXjRFc/6Zjg/3jzYv4bNestU9/M+H1ijmr7dVcDjYfcVtm789xafG7gMX2
qpNWpKVyLoabw/ffin3iiUX2WYUbNSavXmC/eMWSa/MVZtnXZG75HK86Cer+
Vnu+7skN9mqV9j/O/3tYxZRpn1L+7Ffg1kj7ZDDtaZ+QzGxfwmBsLxrQ877s
spQ9AxrY2RXr5f+I0R4AA32XOg==
       "] -> 10.4, CompressedData["
1:eJxTTMoPSmVkYGDQBOIaw9vlSjMn2M9gnT2pLH2q/RPH0xWH9s603ykUPfnb
9jn2V1+xLP+YP8f+RKZi6nHWWfZnlnG7zCqcbt/7et/8itap9qyHAjYnB0+x
94mrTAmfP9k++EqyZljvZHsHl7mFkXsn28ufYDSIF5xif/f8qTVZO6fYB2UW
PWySnmYv6adbtNNypj2fQXqbSN48+yWKbxg99i2yf8hxetI06+X2JgFfvvLy
rbP/53s7y+LWRnuDDpez+jEb7V8/dtd6Z7PGPiHUPbvh+1L7/v06m72/LLJf
efSuvvumRfbtD44q+XIutt/ZvDrApWOR/aQ/YpPkEhbYv+tcd+XA0pn2AqWq
4aZrJ9ovlS9vLfFstU/tcw9cU1lhH+2W8nXtxAx7j21zbTcejLDXLn9zq7PR
zf7Dj05Ra0Yj+5nftsssYZSwZ4ACCP+HHYwPAP30k50=
       "] -> 10.34, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAACqJ/P1iIqQP3uF00LuWpU/NE95htSqmT/G
x9i9zq2cP1qvbYkJXJw/oWfkupn8mT9SxVeiwWKXPzwib6L5fZU/dZ/2RZNC
lD+xj+xnWpOTP8awuPKrh5M/5xsiAj28kz/JIydx2ROUP40zMU8Sw5Q/dSET
uwkzlj9TR3QXOFOZPxH39ld5u54/R6lhd4fVoj/HtPHcmGinP2mtB8exIK4/
jHCGn2DasT+eHuSrhEKxP7PY7HZvTaw/D672SGQBpj/YXhb/z++iP5wtkqLN
pqI/wz1KdH77oj82unUwKHWiP4m8ieb3VaA/6aF3YaCNmT8Q3J2iabSRP1FD
Oy1LcoU/N0DLj4tGeD/hu5pkRXVoPzqzOQ650lg/L+d/FAOiRj9kYM7Nr4Ux
P09LrQElNB0/AAAAAAAAAADi1b1n6lz3PuLVvWfqXPc+TPufUw==
       "] -> 10.36, CompressedData["
1:eJxTTMoPSmVkYGDQBGKlR8FvfnBNtPcMi0xYs32qvXhYnOkyhln2tm/N6iJO
z7F/WmF2f176HPvdC4v3hv2YaX/IRdqlMX66ve80Z0unmKn2z1vCnxzVmGL/
nkVn2sfCyfY3n2frMUdOtk+6dq1Uf/Jke6ZHjKpezybbP3bJ5TZomWKv/3Od
vMavqfYqYrIH0t/NsO9cWDEpwHGevcb/rA/9ExfZ31l4tIVVdrm9gW7F52l3
19rvyl318rnIJvvYnfsLZ/Bsst8m56hcnrzGvu8sX8uhK0vt+RYdWM99ZZH9
aa+GCofORfbHuabNX/Vkkb22/IM7t5IX2Yu6ZpiZWS+wfx99wi6+eKb9xGKR
zwvaJ9rfPjIjksW61f7Zv2OJRh4V9sW6Mk1f1DLsoy4UOhZkRth/+5d/tPOW
m33ezoyr7+cZ2BeBaQV7BiiA8AWg4gz2ABq9mtc=
       "] -> 10.62, CompressedData["
1:eJxTTMoPSmVkYGDQBOJ1EzMTNwdOsu+8oqgXtnuaverEwDMXKmfZOzgW8P5+
OMd+reeqndpZc+zlnnLaHLs/017mzPNGVePp9ufenjd6ETzVvnP3/+KtfFPs
m/h3PF5VMtmeP9pseX7QZPs9L380nmidbH9Hx3ZmzO3J9rKbjx5vaZtif3Wm
+OFPb6faZ636fyFJaKb9T/VDHJme8+w3pveu3DFvkf3jj8sesystt7/1pPbj
lc9r7Z9Obdt+WnST/QRL83cLlTbZhzJ5+tQHrLF3qyjdrnF4qT37+ndiqTsW
2bPcPHUuPnsRnB/uxfGFzWKRvTLzW+1gkQVw+/xOzJH+HjDRPrSXLW3R9BZ7
W36dmTs7yu0LbFWXn/mfZr8oW27r/bIw+4sNXzmCHJ3t08PcE3PXaNq3WN5y
mCcraM8ABVPAfEV7GA0AQrWZdw==
       "] -> 10.7, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAAAJQUmP7E2RP/VIFDZBaJU/X+O87jC6mT8D
lShCB9GcPywbHUiQ45w/K6c+MBSGmj8MneTWYGaYP6J2GjbtcZY/0Z1kDILm
lD+hAjwecRSUPxSloGu6+5M/d3xHGOgBlD8E2uLKnhqUP5wn90Gng5Q/1rKY
9AmmlT81I9nc6XiYP4kXfxj0WJ0/bbXnQXnroT/WT5D6aD2mP+fZ8dyZn6w/
FtDovvMasT/VytvEEeuwP8gJh4+krqs/4aIRuVv2pT9jnFWPRGGjP5ztBzbp
VKM/5aZvgwjBoz/B+79ZST+jP8b/HST2CaE/frMnPCarmj+mo5HufHaSPxUZ
f4M2WYY/DNfT4h6VeT+XNG+V1a1pP7PvpfpC31k/fXk4MGh8ST8WjV2bsrY4
P88phvQFiSI/AAAAAAAAAAAcjV2bsrYIP9UphvQFiRI/56CatA==
       "] -> 10.75, CompressedData["
1:eJxTTMoPSmVkYGDQBOKKLPt9Vhsm2JvOuVJbmTPV/qDjUf/3Z2fab1ctDP71
bo49l0zIny/35thrlKcaTNw8y/4YUDbTdob9pdJElVz3afYRbMKWqxmn2qeb
LX65x2yKPbdypvUmsSn28271r+fTmWJ/2PPu9ONhU+xBoi5nptjnul4oCPo+
1f5EyL9fHy7NsJePFjSZc2WufVPrhI0idovsNWvL04xnLbNP1e9b9f/fGvt7
sy4UhjJshJqzwV4xRae1f91q+/9/vj1Zx7PM/lSMmPPJ6MX2wd+fbhR1XGxv
u00pw2LlYvvbE7cqJKkttv/15hjQpgX2GwVN59+dMcu+rjIH6IJJ9qVJ6mVJ
6m3221XyvO7PrbQHeuZaU0em/dRd+v1rOaLsr7X0rWbi8LA3XfBg4dMNRvYq
YP9L2TNAQfek7WolMV/tYHwAJSeWgg==
       "] -> 10.76, CompressedData["
1:eJxTTMoPSmVkYGDQBOKXx7fvO7Zpgr1KPMNSnbyp9tpFDMcyts+036P87em1
bXPsQxd1/DwxYY696SO/Cx6es+w7S29kc5+fbn/M9+Ghfzen2vu/uXbQYMIU
+33nvWsmn55sX1m59p7Jpsn2/qmblV9fnGyfsTycjYF7iv2DRrvMjmlT7MMf
e2SFPZhqv8huwZvUYzPs42b+WvjuwVx7SSWF3d0Ri+x1wop8g/Yts7eX19/1
Mm6t/RWXuPrnDRvtfWYoumj5bbRfNik0K4djjT3XkvqE2M9L7WP/P/ymb7DY
PvUFT/Ip5sX2a8susUqmLbY/bhjs9eLBIvtNk7Infdq6wD7+m0f3JM1Z9hEO
04N/aUyyX6IkVOJ/ttV+y3TJ5AfalVA6097WJWze3LhI+xu6ddf3/XWzf+13
O4an0NDeDCwuac8ABc5g/k87GA0A3JCbXg==
       "] -> 10.79, CompressedData["
1:eJxTTMoPSmVkYGDQBOImN9/8pTcm2d8seXHuystp9rxXlBQ2t86y93M3f/+B
a669lZeB47S5c+0v3uEVW2w7x/6cXJ8xj/ws+6lTlk05KTvDPvnza9WmBdPs
QxQnHe2eMdVeNOfvjSeGU+1bWc4G2nyfYv95zpxTk/dMsdfKZGm3nz/F3sci
deoEkan2i1Y0CGmyT7fPyH/9av3dWfaTW69YZaovsN/18QtQx2J703MGNRkJ
K+1XHbTXtixaZ28q3/zZ0GK9/ffvtxl4OVfZf66+Y33/9FL7ZV/evnOMXWK/
+4IJ34ubS+y73/5sNK9eaj//FYPBpBdL7DVWtyxZ0bDIfuHPS52f7s2xj/Kx
F/7wd7J92H3BFUrb2+3NezbE/a+rthfd6x+wjjPb3hLMj7aXE171uuyKu31F
rIL9qhAj+9MnjGc4h8jaM0ABjA+hee0BpQ2b6A==
       "] -> 11.06, CompressedData["
1:eJxTTMoPSmVkYGDQBOK6jQ1iHnET7bkWK6Qanptq/7j+YP/eOzPtwxN2pfmf
n2MfZJxS1K8x1149LCMgp2i2vdT83INTnGbaZxQVHcl2ng7X5/5eqfvErSn2
fjKV9R2NU+xvzTjn51c4xf7zxMq3NwOm2CuGV5oZZk6xdzp0ZhqHyVT7w38K
w6RKpttnPN/j3H94tn2BUFOCzZkF9qdY/Vo11i2xz+eY6p05e5X9Ix6OF2t+
rbdfm3K4xs1hgz1/oP3RX4dX2cvll/L/ZVtmr//q5/8wnSX2BdV+nytrl9jX
S/mubOVfas8ed2760s4l9s9u1cUxKS6yL2/b/XNW6Bz7f69Vr0XOm2wv2174
4sSSdnvJ7ZmzEh5U2UuA6SwoP8peSPfof49wD3vrAJWrezxM7FOLm1cZWCnY
M0ABhM8A5wMAzqyQZQ==
       "] -> 11.1, CompressedData["
1:eJxTTMoPSmVkYGDQBGKDLRIlZi4T7SsOiOwSODTV3pNPdV3gs5n2Uws+yNqx
zrV/XRf10C9trn2lmN3O42tn21/yt4zZ0TPT3nXHCsm386fbZ+/7ebHdcpr9
0qKNBkrOU+35WFwCGD5OsS8QOfl75q0p9iKtgUdctk6xv6Tit9z4yBT7AwtV
vdPKp9o/Xq6cF7xtur1A6+qZL//Ptu/MzfK58HWB/T9tZs49X5bYJ03auJnn
1Cp7Mdef++aqbbD32uHn4hG6wb4o69OvgGOroO5dai+70c1X6NRiezEDy5tn
WZfYnzwrdcW4Z4k9e8SPiZ2cS+xdk+qlzLYstJ95bL97wLLZ9v9Wr7kspDTZ
forUcbl2yXZ7Gx6uYydiq+xNu/8EtszMstfqfJj5WyDavnRq8y0DFw/7W0uj
pSs6TOwF1h3fPXuVkj0DFDyrsf959C6vPYT+awcAPf2XWg==
       "] -> 11.13, CompressedData["
1:eJxTTMoPSmVkYGDQBOI1LHc8zOwn2s91rtNZvHKqfePf2a923JppbzzBm9dR
bq59vljb4cMm8+xNFy8XKlKba38h5PTtMO/Z9nGNWfVPzGbac947VdG0dLr9
cW6FtdZ50+xX344L13491X7ad17x+x1T7auO+xw8xzrVPrZFP623aop92uPf
DU2Lp9hv9W0vD5SZZp/N9n6JdcFM+4rSoHs7YufZf1X6ruk4fZF9z68rDGc2
LrfnZ9w3x7pojf0RF7MDQjlr7dPO3pqyInylvQH30SdL/y+1Z+DiD6lSWgq1
d6n99W0xd79sX2ZvM8GT66/FMnv9aVdvTVq62L6N15jTcf48++pbK479551q
nyvpvSqnotPeMGsy033eWntNOeW3Um9z7C22MUss1ou1L0ndvd9gpqd9HNjd
JvZNzGo7uJIU7BmgAMJngPMBMXCN9A==
       "] -> 11.37, CompressedData["
1:eJxTTMoPSmVkYGDQBOLQVX8V5Y5PsO+ZJf70vedU++nzrZ5rz59pf5e1g3+t
/Fx7V60fykWu8+zn+d9wZLCca/9czezsl8TZ9t8kF6xR9JtpX3714+O7m6fb
RyfodXxvnmbf+G3+QtVvU+0vl3PUvJw61X5t3Nk7FkJT7R+9tX44Y/IU+4iO
+1G826fYJxq9WnlHd5r9Y7/n87mmzrS/vm1qsVf7PPuDyp/veq1YZJ/+WSxj
5/nl9s9W/g8qL15jH+uy+MzraWvsz+itfN2tsNJ+wvs5PeGsy+wLVsjy92gv
tQ9VOu0/9/NS+wefz72Zu22Z/a5bk33fGi2zP7BsT/LZnYvtdXqbv5Y+mmcf
ezeFqbRoqr2b3CWejP+d9vKCe1sOHqyF0rn2iTKffl5NjrMXf/Jifb6lt/3R
Ou6J29tM7S2sz1602aVo75axcFmf0xc7GM0ABQAJQKNt
       "] -> 11.32, CompressedData["
1:eJxTTMoPSmVkYGDQBOLnnyPrzG5OsNfSmnivI3Cq/eT+TcI35s60n5ckssLq
9xz7IhkO5+mc8+yv8we6iTyaY7/L8cPl5d9n2R9eVGlm8XCGPa/31k3SodPt
C+3+bZ2hO81+0gLdszfWT4Wbt9Z0kVrMgyn2U15NmX+oeop9i+XfyYt2TbF/
lWq0gcN3mn1uwgm72ydn2mezPtv04fU8e7198c0xLxfZ//3yci+b3gr7iDK9
pZ+41tqLPBXZuXXLWvtr1TPEFPpW2q95bRVSJLLM/rqh+05RtqX2/lvcT03Y
v9S+nHtncWj9MvvpuS+6pjIus7+y7vNZp4bF9u8Fvv86XDXP3uq2xqsVQlPt
pTLqJDPqOu0/RsWdXetWa38N7L8c+zqGpxN+VcTaT43JvTjlvae9gePmPP18
E/sf5eomv/Ll7RmgIOtY0OFEtZ92MD4ANNSZPQ==
       "] -> 11.34, CompressedData["
1:eJxTTMoPSmVkYGDQBGIj7RxvB4aJ9v03T1x2bJpqf1bB6+DO3TPtXyRUKM/5
Ncees2Nx3I2dc+3/uW+pPRA6x75We/lFE7dZ9uLTfAtuOs+w33bAeb3Bjmn2
z/Ieb760cqp9QdFbix2WU+3zJh19Efdvin2A9ivfq1un2GdfKvVY0z4FLs4T
Ftd/8P40+5QUZ/Xt62fZ78pTMyiWXGCvozL9kP3uxfZrT0bVNYeutPd0y7OZ
kbHOPqu3UL36zTp7J12dKep8q+wVY4tm9vxfan+wvKZhwsQl9g/31WcXiy61
j5w91+z5gaX2x8S/FMxxXmr/pnXJFLWLi+ztr+0Kbouda99WyejcHDnF/pG7
WbX2gg77Hu1nQf8VauyPWPq+iLfOsVfo356x+GaM/avjV3dP6PW091rtxVtw
wtjeHUwr2zNAwV5LvvSpCb/sYDQAwNCapg==
       "] -> 11.32, CompressedData["
1:eJxTTMoPSmVkYGDQBOLVilLNy0Mn2r9011b8f2Gq/bTHjGktb2fap9QWxzQI
z7UveNj7VvrJXHvG0HeuB/rm2DsHqqxcu3CW/cb1/P5r+2bY/7p7qeoF53T7
PU9L7735NtXeiWfaMuXWqfazLzDoeFhOtedyO3ap9NYU+2Quw4hZfVPsv0zJ
3pjzdop98CJbBt590+zbUkx4T2bMsl/cs+rnylvz7XP2abE8LFts/7f3c7zt
pxX2F663WvcxrLO/bb3gjObFdfbpL1jtve+vtL8y7cL/r4+X2r9PuvdCrnWJ
ve0tjntXZZba639pzHQ8s9T+17EflbtCl9rfmLXy2PPHi+yz1jOonquea9+f
82zWmowp9urhSfs0ZnTY/1ZKrC1Sq4HSOfZL4r599y2Ksb8w6bsFyxMP+0Mv
/Zbe+2ZkfwxMK9kzQAGEz2QPowHBBKYX
       "] -> 11.32, CompressedData["
1:eJxTTMoPSmVkYGDQBOLvDd5O610n2W9Z1vjhzsZp9gvLvybfXTbLfgenifCO
/rn24Zt3dAjVzbN/qakty5481/7WNwmbhZGz7fUr120OdZxpr2LAH/PizHR7
ief5LNUR0+wf3mEtNP4w1X71pdl3X7dPtV8R+2hGvu1U+6XF+fzlK6bYOxo3
/r7BONXep0Yh2K1smv2c3qZbTwRn2WtwVB+2/zrPPmWqfKad2GL7Ly0Xp4m6
rLCX9lJSDzNba7/g3cdLPR/W2p88zBZtHbDSXqf3x3/NtUvtrT35ih7kLLFX
X9xaZiix1D5BaaXf11NL7Z1XWDmE+iy1r1WVfvf0/yJ7uf23sy81zLW/NjlN
8lj1FHvtfmut2DUd9nw9J7tyyqvtecF0tr2NOXuAPUO0/d0H3UdnvvO2nw12
n5W9LNh/avYMUADjw2gA7P6TKg==
       "] -> 11.32, CompressedData["
1:eJxTTMoPSmVkYGDQBGItoT+sR15OsF9+bLqbWtZU++YNpZue755p/+z92eVm
zHPtU37lh679Odf+a759i/vmOfYMu8UT4jbNst/+gWmb0pIZ9mFt6l0nFafb
m288zr7pz1R734+FQadbptrHFD7Wu2My1T4/sNDp44Up9lfc3tyOqJpif/RY
1X/3U1PsT/0WZnCqnmZ/wvVjtKbkLPv8945H1jfNt0/r0X3/wXax/S6FiRdV
Zq2wL731N+PQ1LX2f1m+7nYNWGffEBBZ/fj8Svueb04r2RiW2R8Dm7fE/i+3
8Iuq3KX2rWZc1v/Ul9nPLtvSKr5hqf0eRvM17uaL7Tetd1jyW2qe/Um16WY+
26bYe1v7r9uk1GnvqipweeqVGvt5v0yPf9iZY2+2dN63FpVY+0awPZ72LwL/
qlYEGtl3LY/KUF+uYM+AAwAAc+aXXw==
       "] -> 11.45, CompressedData["
1:eJxTTMoPSmVkYGDQBOL6f6tP192cYG9WUfkxP2GqfajL+cYzW2fap50+mLeK
Ya49n+rxN4f/zbWX0pjt9vjEHPuTJRO8NpyZZX/09LXdXqdm2IdmZtUWm0+3
f2Cxcku/wjT7Z2z/7OYsmWp/oUf6DFfIVHtrt3PVNU+m2O9/0Pu4tX2K/dWo
gjDxG1PsV62w2hVcPs1ebktC+wSeWfaSzAzeNu7z7Wcpepwt1Vls33HGe9Kl
mhX2u1ZHBuxKWAt1x1r79xGFMekrV9qLJr3NPMq+zH791ePzDW4vsb99sqc1
uGapfVvXHo9im2X2PRGCl+sPLLXfzBTaymu/2N7h+YOYz8rz7N9Z1/KtfzXF
PkpIheemZac9w4NkT9cvNfantslP4efNtf8tyL/foiDWXqlpq+DcCZ723p+i
Uxg3mtpfknjIs2O6kj0DFJwG+/+HHYwGAHYknWk=
       "] -> 11.32, CompressedData["
1:eJxTTMoPSmVkYGDQBOK1TEqrtwRNtH85dZ/d/K1T7Sdt5Sj9+32m/a/Eg1X9
snPtVyYy+J2XnGef/i5PlvnvHHuu9x/Kmllm2z/eenLh3t8z7JXWTddiy51u
L84Ye/qz/TT7s0bCYYf2TrUXuyFtJxsz1X6qc/V3w1dT7MXW39rgVjHFPvSn
VojNxilw9WYcvC+1js+097vr6n/5zDx7kyaGDJGzi+wL7e51XBVeYd8cKMX2
4Msa+9aq6Mnbbqy1F1LM0BNqW2k/R29n7rJPS+3f6VXNSvu2xJ71Z6Z6zdql
9v2CLA6LM5bZaz3gezTl3VJ7HXUP5fXpi+3PeizleBE1z95ZqtJ2NtNU+9kC
B3cmxXbaZ4D9VQP1Xw6UH2Of4pX1YkWup32LdUfwrnATe6OTliv13BTsGaDA
CsxnsIfRAJbOkAg=
       "] -> 11.32, CompressedData["
1:eJxTTMoPSmVkYGDQBGJ1U1a5Pe1z7U0ORn6LE5ltf/vG0qB992fY3/u9i+O5
0wz7y5Oqn+VIzrKPmyQ3qe30HPuPS09nLI9eYH9Gviv9juMi+7uXfVQ2cyyx
Z1sqeODW/qX2p1UeT30usdx+1cFtXq5JK+yXzVs4Reb/Cvu9M/r2uvSstO+M
6/q/aPVKe3utmRI3bVfax2RtWBs0cYV97dk7P764L7ff4cut/OLdUntHVYdX
Z9OW2FcvzRM5yLvYXm7W0l3fSxfav9ly7fOJB/Psz+enGbhsm2UvM//fCybf
afaZ56YtPPh4ov1MId89lUXd9ipPNUJDhFvt5c8c/e0YV29/Y+uEOVNrKu2/
nLX0vT21xN7+70XWWToF9n8dtM9k5+ZAxVPsjQprdb/PT7K/B1YfaS8deaVm
Y1u4/VWn+bKsSwPtF4DN94aKm9szQAEAYJuhPA==
       "] -> 3.77, CompressedData["
1:eJxTTMoPSmVkYGDQBOKrDC9df2jPsy9WEtCMiJhlf/14mObvI9PtjWyXxdjs
nWa/ojpXeEHldPtntiHP3cpm2l+5m+rb3DvH/knZM2aXu/PtlSXlpphzLrSP
VGDrtNBdZP+M5dApT/7F9lclz8g5HVpsf0zvWpFV6RJ7m9y5mvMMl9prNS2v
nfZkqf3G1SkPGN8ttd/7797SGwzL7OX1dXfsv7jU3v2A+PsSl6X23hGTry6t
WwI3J/42S8Y91sX2U/ZnpmR1L7IX1tN4ob9nof2Fy0d1I1oX2N8zeCAUtWCO
/YSrFR2fgqfbd+S8nze5YpK91AXnd93/euzDzETXHvjaZr86Ne69+MYm+w/L
7l5YGlhn/++xR9GX2ZX26zoePu/xL7H3WcVx+k11gb2ugVGH//NM+3qbHxcN
WVLs0w8p9k/Jj7VvAfND7P3A6hzsGaAAAD52mlM=
       "] -> 3.46, CompressedData["
1:eJxTTMoPSmVkYGDQBGL2dtvFC37PtV9WzXro5ttZ9queun1VUZ9hv3rW875T
h6fB+b3e/ovtmmfZLxQ80te3Za59E9+/7VqJC+zPzlMQ+bNgoX1hT+LXiZ8W
2XMmubvf4ltiH/Ipc/Fqv6X27UHXHjxUXmYvp7HHSMthuX1Ah0ZBgugKqLkr
7GWKpWe2LF5hP2HrhGude5bbB9ue5GTbtMxe9+v2aFmhZfZXfawK/s1ZAjfX
WGSWBt+LhXD78zeGB0bcn2MvKJC4+A7XdKh7JtqXgoyV6LKveS/92rK7xf5q
ocGZI5119isMlkXXd1XaS+g7F5x9UGT/orn8jM2KAnuh6AOc5nkZ9p63+ETi
JFPt58cof30hHg81P8Z+K4vmIdG/wfYrwOL+9i2RsXKtRwztGaAAAPO1k5Y=

       "] -> 3.44, CompressedData["
1:eJxTTMoPSmVkYGDQBOLMzf/nKuyaY8+X1tUrtGem/ZGD8Q1W4dPtNY/kV2cW
TrOf09uzVX3zdPvVITO/bLs10z5UcpqF+Is59pMmLC6KNlhgHzfvz6SCrIX2
jR8mzrwzZ5F9dirnpf8TF9tnlbzK14lcYi9g36/OpLHUns+v4Kje+6X2WmBz
l9mLabGJJcxfZs8dG5gcvW2ZvfFEFb28qGX2hfGJcV0Xltrf11Pj2Xd5iX3n
bY4OK5El9lOApguZLbZfrZKa8t5hkf09MR6XW2wL7f3dLIXm2s63N9ohP6Xu
3Sz79ElrVrc+n2qvfPDeEXXdifaGYPEu+75j9WUzulvtvVgm66bPaLT//OMw
Y799jX3ihrzn90rL7S+lS57VW1Nkf+LRpqKrmnn217JWNRd8SLePXXvXYK5h
kv0qsP8j7SPB/CB7l7nv+NKX2NkzQAEARFWVvA==
       "] -> 3.67, CompressedData["
1:eJxTTMoPSmVkYGDQBOKQOR9a36fPsXfN95/d1zjTPvn6B3HnGdPtRTZOLc5k
mG6vM6GI/Y/DDPs4Px19xUOz7C+F902892eu/RKDHz/Pzl5gX/K6r27914X2
Te93rGCIWGxfbJ2Rtcxnib1M8kWZ2VFL7cW7jD2adJdBzVtur9oXW3S5fznU
nuX2BpkCd0TyltvHXL3dJPV8GVx9ftKpqb3yS+2ZW750cEgtsZcV/mGwhHmx
vVPtOqfG0wvtv+t/LDqQsMBeuGo/d7rRXHulrfvn7kqaYX/AwsevIGGyfWVY
Q/Phtl77WXL5Gl3v2+wV30xl3WvQZF8FFq+1j/pju45xV7n91tiZT/Saiu1/
Ccr1b5LOt1/jLSD8+mqmfdfHs7aanCn2inUvTXdMibN/4LBgkZBqmP3lpUEv
1izyt28Am2NrzwAFAJu1k8Q=
       "] -> 3.68, CompressedData["
1:eJxTTMoPSmVkYGDQBOLXxt1H91XMsZd1tBfzODzT3lHly4bEO9PtvZ0S+a55
TLc3YbBbnt87w55H8PvmqPWz7M9l/Lo9++Vc+1Pz3oj5z1xgvyGsgTn790L7
GdMbi5wNF9uzLWY6X268xP7L+6nTvPWW2j89fb8n8v5S+5vLNZvTJyyzDwqx
Efb/sMw+8KK4rcB/BD86J+GIa9Uy+4wJYufMTy61/9t1T7Zx5RL7nm/v7SZc
Xmyv8DrvUfTFRfbGigwfjx1faO/9zF0vp2SB/fW/P7cFN82113x0wfO3wkz7
lnune2d6TrFf2+rq2HSh317vXdKib087oOY021/aJnDCVbnBXnjZtz4hjyr7
nGnxVVtXl9rvrTLjjfUqtP/omnbKXCHHPrnO+uQ+xTT7g20nUiP4E+3t5Faz
PPkZbr9nbuaniih/+3tge23tGaAAAF1bnYM=
       "] -> 3.76, CompressedData["
1:eJxTTMoPSmVkYGDQBOI1/v8rFmvMtbe+vKMxMH2WvWntnfMq+jPslYSXqU3f
Od2e59SGqHzHmfZnzvZLTro92z5gC8+uQqH59lJua55e915ob3D7wvPqu4vs
D11dXr8ncIn9UYZpNy7lLrV/eYVJ+13EMnu2kisrnDiX20ve4wq6ULfcXsfD
8Xfsl+X2/h/3f0k6vNx+ivPe5zmJy+3/2FleqT63zP5a1pnGhMdL7VckHomq
27vE/rZn95JfTxfb/z4u7fpyxiL7xBkrbzx8ucB+GhvX2uoN8+y/Nezucz85
y36ixPm+MNdp9robHvWlHpxovzM5soAlrdt+07R4fdcfLfbLXi07/bq9wX7p
T6XjZR+q7I+A3Vlqf2qfsBx7caF91p0DK4x7s+35VubXcrqk2y8Gq0+wXwFW
H2VfGbHHeM70YPvFYL6XfTaYb2zPAAUAYbOknw==
       "] -> 3.96, CompressedData["
1:eJxTTMoPSmVkYGDQBOKCqoeG+1bOtf+/SzwhbtMs+3Rro/QrTTPsl1j/uCHu
PN3eavfdiwuLZtpvsXogyOU0x16syoI9snO+/SabzxHuSxbaF94R2PD/+yJ7
9Zibiavbl9g///1tR/LtpfbLZ4sIyOgvt8+e7TfvRt4K+8Df7TK7f62wl939
S6JBaJW96O+Dq8qtVtlLRt97WK22yl7HOufrhEMr4epX/TZwV5Bebv86WvhD
+vGl9i4xe6TOPl9sf+bOzlspEgvtD+8KfCf1abb9t+qMqSXdU+1Vf618nGnZ
b3/ytzCDU3Wb/dOahpimngaoOeX2O/9oH/evKbS/8eu3hUlVtj37n5uFrdap
9rvA4on2QWD3RdjfBstH22f8yg9d+9PXfi9YPhDODwer87B3+zP/8YnfxvYM
UAAA806i8w==
       "] -> 4.13, CompressedData["
1:eJxTTMoPSmVkYGDQBGJvdpkp2npz7c9YnvaqyJplH2gp9YypfoZ9fc6XmKjs
Gfbz2D5eVqibZS9zxVH2iuNc+2cBbIl8qQvsEwK3H20OWGT/saX1M+uxxfaq
QfONbyYttT+zo0srI2mZ/S1WzrTT2cvtY95ERLy6vtzebad1/13fFfYqbA75
qyetsOdmaz6YYLDCHqhZWOzccvtC+TLF74nL7SeyXop57bLMnjfoUWsfw1J7
HQu7g02PF9tf3a6RWNu9CG6/h1XN+rehc+ynzxdUS/863f4My6t3U40m21ez
T3t/4FOvvcl82XybnDb7BnNhxgrjRnvh3KR8qZ1V9gmsEYxhDaX2Hy882W48
rcC+IjdMzdUpx/5ddpvXLNk0e955jl57LiTaO16ew2hyNhIqHmZ//ErO3Xsf
/e0/g/lu9rsvnlHtXGFszwAFALpfjvE=
       "] -> 4.45, CompressedData["
1:eJxTTMoPSmVkYGDQBGJeF+fjh37Ot9/S7sGzkG2evXPW/0U2K+fAaZh8b95K
a77rC+3bubr2SP5ZbM9/feIUt2tL7dezvJDaJrXc3tfIbqFq/Ar7qgm767ZF
rLRn4Q+eFquwyv7qP9fKIEsEnaSfe6H43Up72YKFLgu6Vtrf2HB1xxm1lfby
SoYtUhUr7HlUmULPvFhmr27xwKnTYal95K+a+XyiS+D2X/TZZnnDe7b9izvG
Zqu2T7K/J/LV/CBju33+iZqGs4tq7YuiT/sG1hfbx4Io4Rz7V2B1SfYtR1ev
lzaKt+cDuzvUvgvM97e3vvj+06MvHvZvweqcoHwLNBohj6pOw54BCgDzYZ3i

       "] -> 4.65, CompressedData["
1:eJxTTMoPSmVkYGDQBOL3EsnPPwrPtU/fk++xrm6WfY2ci8ybjzPsp/6ry2e/
P8P+fDVfKNeHWfbhNxi/+LbOtZ+hydb2YO0Ce4HrK3Yv719kr3h0zRMhhiX2
9sp+27nTl9rffiiq1Zu/zL5iwd05fBXL7YUVPvkvPLzcfoF+ZuQyiRX21utr
eSxTVtjv4l+y5iDrCnvXB+nfrs9dbq91sPLx2c/L7BsmiRzf92WpPZeKauCz
80vs3UVbH+5+vBhuH5dUf83tiAX28rNUz1kazrH/Yb/9T+u16fYWaSYV9gaT
7fdNX8Cw6luvvfPCLWYvH7TZ/3+xZJKNfKN98+3Y6B0a1fbLH705nH6j1P7U
y2od8Y4C+1c316szh+fY3wG7O83e5MXZH4nbEu3F7nL35/6KtC96fDjWyTEU
qj7A3gnsXnd7SzBtbs8ABQAIvZ2z
       "] -> 4.8, CompressedData["
1:eJxTTMoPSmVkYGDQBOJAoYcrJDIn208R4FbUT5huP5GphGFO+2z742+euW/g
WWA/LeTAQ6GURfYv6vc7z9q42P5i5imDORxL7CH6FtuXnIsXtatZZL+u9YjL
zkUL7V/ZaJaYnFxgXy7ClhttON9+xSOvYk/WOfbyn/M2GV6Zbs95gbFALm+K
/b1p86V44yfav/ndbM0xqd9e+pP/wc07+u2DZupYJoVOtD9yz19d1mSKfep/
fe/bi6fbe3/blP5p+2z7r482nY02XmD/4sIb48lFi+zvLBb3UpJZCjV/uX3b
Y1PzfZyr7D/YW/55PXWVfc2R77kPulfYZ3zaLn3s2WK4exr7f+zjrZlon3F9
xWnZwBZ7i9X7lir+L7GvSwvyu8SbZm8t/vvpodBg+7UnokTku13sLcF8Y3s7
MK0MpZntGaAAALHomD8=
       "] -> 7.78, CompressedData["
1:eJxTTMoPSmVkYGDQBOItYDDF/vs6mR/rZGbY7yx6sLvowWx7/Upug0ruBfaJ
q22TVtsushdujAGixfZGEQuNIxYutk+y+wpEi+wXHuNfBET2DSBp4YX2+5/o
Hniiu8D+DpPPPSafefbSl0Botv036dTv0qnT7Tcr/gWiyfYFu3wKd/lMtJ/L
+3I+78t++/exlh9iLSfYB5btB6KJ9iUzHwHRFPsbWf1ANMO+6tXRmldH59hf
kFwDRAvsjY6+BKJF9iJWzaJWzUvt26TsO6TsV9hrPPTTeui3yt5S7KyV2NlV
9ss+Nq8AIvuki2uSL65ZDPefwAlTwROmE+2FRECgxX6S147JXjuKofwUe36w
fCCUdrRnTfgklvBJDU4zoAEAkjOPPQ==
       "] -> 8.24, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAAAABpbkZsOTP1/0fkdDgJc/uLY0K7HAmz9v
y6NNXTygPwte/OJDvKI/E0s0nyoLpD+xsiE30HakP865jLA5+aM/ew96hvMb
oz+2HVB5xiCiP0yYBVWFPaE/oBetgYoGoD/Gz59mBoycP8l5yWuEY5g/O9Vw
FLKalD/WulQyZ2GRPwNgf9PJNY8/7xrhGAbujj9SxDjU87mQP3bjRgeFn5M/
rUfz9NnMlj+qncnvW/WaP3MR/XZ5lZ8/LPsAnOT8oT+uHIj3mLikPwOIn15X
aKc/R0SySomOqT/iFQaj9zuqP1cysoidRag/deNGB4Wfoz/M+9LldAicP6gE
5T1xVZE/VUZCTuRehD8NHwEgvI50P83k9616DWY/vQqINa1vUz990H7Da+5E
P/hyRxfj5i0/91ts3+jrJz/UW2zf6OsHPwAAAAAAAAAAlxWcSQ==
       "] -> 8.44, CompressedData["
1:eJxTTMoPSmVkYGDQBGKl3A1Tkt0X2s+wDZB9e2uRveExvbXSt5fYs5rHMvIv
XW5vecE9++OW1fbGjY8E+H+vs+fpfHysm3GjfcTZS3yLGTfZV7YKinnkIWi3
tTLPeg9vtH/aknBhXu0G+56E6kUBZ9bYC59/en/e5eX2e2v35ImHL7a/HKH2
W37rXPtNyzRPre+dZq/Paln8uXSifVRHW9E0xR77V2w+Lu/d2+3D2Gb/cw1v
tX/hGsZ1/FEz1NwGqLoa+xr2v50zLCrtF7pn3j60pdJegGPdeUfNajgdeXyC
Rd6eCvvnYP3FUH059npg+xLtD7C+2jEnLRhKO9srcgpET+HSt2dAA/ZgcXmc
8gCAtYLB
       "] -> 7.14, CompressedData["
1:eJxTTMoPSmVkYGDQBOJtjvdXszvPs/c9HvJasnOufYJlgFv/17n2DFxnxe9+
mW9/+qbWhAqFRfae92PvuOgvsf+UERF9NmWZve6N73OmTVphf8nD9fXW+yvt
J52OE5R5vsr+xeW3ZVNMVtu71vhG3ju/yr71p7FxxYmV9tfOZ5jLua6wf8zP
ZXjwwTL73UJpXrnyS+2Xte/d13dqsf3MrZMevFq9yN5xSpgXZ9lC+1nKnH9e
aiywf1Wn0vNv/jx78cKkWzud59hPtryqI50yw74kWZWfMWyKvWrmXcfIyxPs
ay7ZZ9mJ9tg/ApvfZm/1pfWsuUaTfU7lR3ujiTX26y4dCTjVXGZ/SGHtI9tX
hfazWu7sC5PNtlddNtf6yME0+4/aMxKTyhKg4tH2U0QPJUvGBUPFA+xFff0F
d9i624vvycz5+sfOXhbMV7dngAIA5ymWlg==
       "] -> 6.01, CompressedData["
1:eJxTTMoPSmVkYGDQBOLSwCktk63n2c+3Sjjuf26u/boEnojslnn2H4uMXz5t
WGD/5oXohLyti+yNIle7Lzu3xL7uzrTjr52W2/O53++/5LDSvqz31cEdE1fZ
9xx7I/Vo0Wr77xfbfjbfXG0fvL3EnStqtb1NXdG7Bx6r7M+qCH55M2eF/YYb
Oy5tNVhuX1Rd+bi7aKn9fM0rl5hfL7a//Kqlq3PfInuLFeG+N+sX2kvH/Nde
JLzAfpnvtv5YzXn2xSeiRf+unm0v9SRoY3j6dPt+Zg2nFyaT7bcUJylU3u+z
nyw6U0E0pMP+8+/siBqBZvtcO7s9rQ9q7YUv/nnhyVNu/wksXmxvqn/sxdrp
ufYtaVsUkvlS7a+uFzZ3XZJo31mh+r9fN8r+9sEW0aLDYfbGYHW+9iutXTca
cHna+5xjvvfF1Mn+PljezL5oK6vv+wBtewYoAAAPdJ0l
       "] -> 5.78, CompressedData["
1:eJxTTMoPSmVkYGDQBGLLLCk7XcP59nEZsW5X7s63X3Sx65z/nQX2arxNSn21
i+wnu9q19Notte+ZN7HZ8Oxye5NyV5Y5FavsQz7mzQufvcae0c+md+2FtfaC
OddN21rW2Se+KduyP32dfeX7jcv+ua+1XzZl4XrGtNX2r23OrHJOWWG/NPmm
TtqnpfYC2We5T9kvtk+9wHMl03+h/cuXVfs/+863n/DpzQxbjTn23lUN325F
zLQ/Zte5aM726fY7nBt7TF5PtU/w+Zxad3SSfZxW1t+TSv32yrsMzO3SO+1d
js5jDYlutS/314vYu7TR/thalzynZ7X2c/bo6HA1Vtibn5r2/nVfsb3aWtbC
8/J59suOxHM8nJJqf+z82WvfOhLtrfZma9a6R9jLHo/+u2ZdiP3BXfkmG3U9
4XTlZfdjK/Qd7BuBoSPwx9D+yYb6hMZjPPYMUAAAn5aacA==
       "] -> 5.86, CompressedData["
1:eJxTTMoPSmVkYGDQBOKtL77+19w4355/y4RddV0L7feuuvv06OXF9vFTT/65
92yZ/YQ0Ge+HZ1fZmwRyJP16sNbeKqrs+QKfDfYPBCVX3HbeaF9+8EReesNG
+9UvC7oVkzbanzvGq7lw9wb7fV/CRCKer7PvVWY5Fsqw2p7tOtej9V+W2q9Y
FsE2bcpC+2T2vXtPhsyyj1G+Zv2lYrI9Y07FqdNneu1btB/8Cv7ebi+i1lKd
+aPF/vkxlXeB9S1wfuWHxauOKbTaX1yXdPSrUBtcPYPt3L4cnS77ar8opdbE
HnvL6xY5gjW99ooTZrOH5Xfbz3JepLwhuc3+I0i7aIN9H0faZaXeYvvkGw8b
s7ak2SeC6TD7ODDtZq90+nr4Y1c9exWjp/3T9UTsGaBAAMxXgfNhAADyiZYi

       "] -> 6.43, CompressedData["
1:eJxTTMoPSmVkYGDQBOLpp32Xtx6abT/Loufqtfvz7NkSrcsnpy20n7Hx7K6n
mxfbW8lcXvVw/zJ7gYzPhZ2vVtiXTk/3M3JdZe+/uKX1zuxV9hPnCXEaVa6y
v992Y9bd0yvtb0TO/dPZtAKur2jvq4/9XEvsb9rLCrwqXmCfvUrf4c75WfbR
j6uuPpafap8fsOaw3dsJ9nbf/NlbfvXYh17Yr2zwtNt+539jhpv2vfbmTmF+
9q0T7E9OejFx4qVJ9tfexJ2zSJ0KtWeGfQhY/Wx7n4Bjztq98+1fRU7YM9lo
of3h1LWfbTsX2jOYAI2RXWD/u7c59O7/mfaTWibJTMqaZO/Gyb3T3LTNnrV6
d7JxaSXUfxn2yk7JfaZXw+39vjkd713laj8rjsnSLtTQngEK0PkwAADcFZT1

       "] -> 6.94, CompressedData["
1:eJxTTMoPSmVkYGDQBGLdxVnFRsJT7EN/nnon8XC6vZHfmgPfzsy239yz6uxJ
nwX2/p/+WUlsXmRfvuSljPXXxfbuD3i+zQtbYr/9WbvrqQOL7TcbKKT33lhk
v2T3dfbrNxfa/2rZcGUqw0L7zcq+z2+snG+/4WR+/g3TOfayZbzuzDoz7JNk
11dwz5pir+4gEvm1YKL9kqXdT5/W9Nu/XcbV/y6u337FkYBVwhwTofZNts9q
YJ3sYTPdnj9Ic69A8Wz71/wZpfcZF9hfKLPuMfNaZH/95sRlxW+W2Bv+dX9t
1L7cPiF11upJG1faf4iTj0l3X2V/EOgZdtkV9u8zXd/eL11s33v2Tfan27Pt
4w9fZOBWm2gvrbqy0P5Zs32H0mo5PaUSe1Hh7TrHOlPtfxvOF5i2K8g+Aexe
F/vIbf8awr7r2u/n2P+goVLNXhfM57VngAIAkMKb1A==
       "] -> 8.27, CompressedData["
1:eJxTTMoPSmVkYGDQBOIpe57ycIpOt+cqXtxzt2OW/YHFAYs+ic6zFxI7+uKp
5kJ728PyN66sXWy/T98g7K/0Unv/U0dUFA8stY98yHZWLnqpfeeZpoxdc5fY
V9ny54keX2z/Yece9/d7F9mfbpm8annpQnuNrNW1FULz7QNZrp6Stp1lv5Zx
DSvTs6n2Py/8e/8mYpL97YPm020O99v/kXWwMNbvs8+8WlUuLzLB3tz7Xatu
0ST78nn/xPenT7VfcbgrMlR9pj2fz5EOvdS59pav/t1uvrjAXk02y9TIZjHc
Xeyzmib0rFluH71L/WS++Qp7oCFCKXbL7BWWWjzuYlhkr7wjs/Va5Ez7gt93
dm871mdfe0f+SLZak33r58SczIOF9r1cS0TSYxLt57Zmrl2R4WN/37bq/VQH
S/uUdbOLCz4Y2e8C8yXtGdAAANCbk9g=
       "] -> 8.33, CompressedData["
1:eJxTTMoPSmVkYGDQBOJfRdFGPGaT7c1DNfKf/ppm//vLBmk1gdn2TkFfzc+V
zrdnU9qzR/H3Qnvx97qGquyL7SHqF9vrSrLN5sxdZF9r3cykULrQ/lwsQ5ZZ
7QJ7e82Kt8YO8+3nKV/W/OU01/5twJ6Peyxn2W+envO/dtU0eyf+r5HL1022
l1AWv5OtPdGeI2xpeob8BPt+m3uKWUsn2OclL9UtqJpkn/P70vVHhtPsX6rb
L1dimWVv2Np8+FTmPPtZ20MZLd0W2v+bfaNmWfZie7WObb8evltqLxRcZBA4
a4X9l0Xb2j4uWWU/T8++a5nhavurhgEvWg6tsE+7e/Dtl1eL7S+erJ30vXKO
/dwHl7wvV0+09+nKsSzzb7EPvpN2btWuEvvklTec1h1Ltbfe++tIkXMwlO9q
7574/t1tSRP7DY1T7FTPatl3gmkuewYoAACJeJiP
       "] -> 8.81, CompressedData["
1:eJxTTMoPSmVkYGDQBGLl2B+L5lfOt38xy//wk+6F9m8mr7jqcX+x/Sz2JVvj
2Jbblxh28v0XWW1/9kwcd4DnOnvhvd268tM32Gv+XZ37o3GjvUjp/4crr2y0
n2K5w+zigY32/0DCghvtz7Zc2n+rbb39gp+ht9TWrraXTN/IVlS9zF7kTa9F
9J+F9nKPrlzp+DXLXqzB2n31jcn2yjLCrseS++yPmci0zhLtsBf3muR3+VgL
VL7Z/qBBO6/pvmb77IeXLu9b3GwvnhfxhVejxf7QNfF8Je9W+3xOvY9xMe32
x9/0W6oGd9ofP3Fy8quPnfaFl1t+tHl1wM2R70g1K2uvsc8ofJ21UqPQPmcv
j16LU4r9gV93RWLXhNiLgtU52+eE+m+xLNOyjwfTUhg0AxoAAIQ0k3Q=
       "] -> 7.06, CompressedData["
1:eJxTTMoPSmVkYGDQBGJmh+mpT+dPtJfpK/ltem2qfdCEP5VTj860P3ptO6Oz
6Vx7zbIWuxOd8+xrvRwyQi/OtTey/uPN7zLHXkhj+Yry4Fn2xySSewyPzbAP
NQzaz9M33X7Rw9cKpx5Ps7+tKq8lkTLN3inNcY1I41T7RU2OQNYU+/WnWr89
6J9ibyr3V7p07lT7my0nnyyYPQNu37uD8pp9Fxfab7R2nBp4YJn9oo2BVYe9
V9uLzUxyf9G8xv6sTWsI444VUHOX2k+z+nt14Ykl9oY8b8x7lyy1P75zx8UV
fcvsn0QHXTvvt8z+Jd/O/3oCS+wXNW6/vGfzfPuvW5d7hWtPs7/5uHi+5uUu
+2sLT4hYO9Xb7xF0+PK7Kt9+QkTbjAPpCfYhRcXby9T87A98cTiSeMXCPvjb
yTPBHqoYNAMUAACU15zP
       "] -> 9.98, CompressedData["
1:eJxTTMoPSmVkYGDQBOLkZd3TZ+hOtue3eHpwM+t0+6q9Hm7q3rPt3dNW5iTw
L7C/rfQg+ljGInvxp49Ph69ebP80Ops/6u9ie/udq5L2ZC62P9vmcWVJ3SL7
NM4Z2WrNC+3fcmRJ/lu0wN74teWPZN759nb1cikT1s6233mw+8LNydPtj4QW
2LCZTLGfXfmtc432RHuhp3aqAi799j/W8Iudze+3X+R+yHevwkS4Opg+mUrl
iTZPZttruk/5PcVhgf3FXD0z3cpF9jqXFZa26C+1bw3U3RT8erm9sdvkDX8k
Vtmf9dlzteLQKnu+qzfeqm5YYX+/d763J8cS+zWnZk2QnzfHPmi+icKXxRPt
k5zrD3PdaLH/kXSo7V9bqX2k0HLtnN40+2mb7z6c0BBif+BTckbFPVd7wW9e
frfSDOzz39c0iYVp2+8Fi6vaM0ABACoYmPw=
       "] -> 8.99, CompressedData["
1:eJxTTMoPSmVkYGDQBGLXsP9Fd79Ntn90kVU74950+yTWs7+bqmbbL/4osO8J
6wL7qQnW/9r9FtkLNlrMdq9ZbK/7oL/Vc99i+ydTIg/Icy+2r3t1WuCL6CJ7
kfCwlCjxhfa70htWV9gtsJ99zZXlUc48e6/+WL73jrPtVwuDFEy3h9mnc/Zo
4Dv/ifb6uZv6TC/3269fc2KLntIE++DnV4ys1k20X83Qq8T5Zoq9YlLLT/fS
GfbvT2b2/Do7x/5pVnmn0bIF9hfYL53/eXuR/dvKz2/DepbaszLr8rsZr7B/
cXZ7tGHYKnuBF8dsaresstc0Cfms3LEC7u6Zh6svtP2bba/y+2u4kO1Ee1+N
8zk7OVvsfcB0if0JjzOcleap9ufA5gfZXz12fWpVg4P9Gu7d27956mDQDFAA
AGNWnNI=
       "] -> 8.94, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAADowZqr3H6UP0TGxwumVpg/9T6AfY2jnD/a
xkrqNcqgP4Z3srTHZaM/X4U9U47cpD83LyAeqnqlP/iX95DTIqU/nbi9DLpb
pD/0z6bpfXGjPxW7FaxmgaI/9g5c4Xg5oT8hwZYtco+eP697XnW2wZk/u2R3
16ejlT8bwhtLt/qRP6dalroakY8/RBCuwwV4jj9bmPnPiBqQP7w/hPv3kpI/
bluaOIWAlT+nELACu2+ZP8fhXKlYyJ0/c9kEKHsQoT8JrQluxY6jP0cFfQOh
HqY/aBXfoTk/qD+vF7ahC+moP4GVn/Em/aY/YcTySomkoj/GvGnNqLeaP0G0
kKzwg5A/7WT4doIfgz9A2YOIoJRzP9ZI4Po/OmU/DrQPDRYIUz80poRuT5FB
PwAV3WKERy0/ABXdYoRHLT+X3bDoaWwnPwAAAAAAAAAA40mcGw==
       "] -> 8.45, CompressedData["
1:eJxTTMoPSmVkYGDQBGL5J/U3efZPtrecHKLMsn26vdGcz/+3ss6xF1TNeamW
scB+quKcFo4Hi+xFO4+e/2S1xN7IR/HBsg1L7K2X3355wGSJfc+xh1Xvohfb
V8Q5lIRkLbJP/jYvd1fFQvvLu29l63ousL+0MmjHU8659jcWbL5tvHuG/VWb
qK/pL6bYi+0qspRrnWhvH83+YXZMv/1a28yJtT/77Hu/9z2RXDYBau5ke5N/
vpd5Zk2zT/kxt0F/+yz725fjI644z7dv3PmrNu/dQvvtlf+ebC5aYt+vZZ24
S2+5fdTrbc3rPVfaO+5NPPzpw0r7W829FkffLYe78+2uxqvG02bb5wZGll/5
M8FeDuz/ZvsXn85xzPlQbP+zfNqmJetSoeqD7TcxylloK7nYT0hpXz79uAac
zuleunfjVCV7BigAAK6fptk=
       "] -> 8.49, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAAAz+WWzdnySPzUFnXzuc5Y/owMX4Qm4mj8W
saTH8VufPx4AZZ0i+6E/VTxUXVIfoz8lcsYRzVijP7XQb/RcrKI/2jzWO0mz
oT+MGyDW1qugP84BUNYpsp8/Mb/jCkWjnT8hLA2gI4iaP+1VSIsmypY/3MJx
IAWvkz9rm38e2QaRPx1guEm+u48/YD1YGkBHkD97qLqkPiaSPw4Tm1BGcZU/
9Ir38a4lmT+XAhMkHJCdPx09F6tE/aA/7/gkRHsyoz8Twq7SEtGlP20E2i78
lag/GJEzjmjGqj+gF1FRG1arPxu6qyt5Kqk/inhDHYJDpD+OpOsfg9CcP6ty
SPDD7JE/h4x9jZPhhD/2LdSqA451PzcFnXzuc2Y/TWTIPXVbVD/3LdSqA45F
P00HpfbJwzA/UMHrhCDzJz+nmrzQ5igjPwAAAAAAAAAA3kGS3Q==
       "] -> 8.8, CompressedData["
1:eJxTTMoPSmVkYGDQBGLG0Iveh5gn2btb5XEv5Jhmz/mGoWmW5Cx7J+ZS2Sd+
8+yDDm2cVPZzgf3NxZOXiWxdaC//UWnKm0UL7RMn3NrGfRIonhCucGHhfPtX
lk8d9p2ca3+Vn7d9e9Yc+6Dn6Vba52fZC8dVCeyLnGGfem1/8OnlU+0ne8/f
8zhvsn3P+/dqRfcnwmmY+Hzmf8+P9U6z7xFZdk5t62z7I5W73/CGLbBPaC3d
talgkf2NGXqrdscstvd0vcz+K2GJff7r1Rv8wpfZ77i9Nqdtywp7bTOtqbUN
q+xFGd/ekz25yn7axJbIxb4r7H3/8Z/nblxsL77+yMprE2bbX/u6+3b02wn2
H6udta/cbrZ/tFaK3Z6nxD7H9srTqf2p9lZN/A/2vgyy/++Z45+52tn+oFl9
2kknPfsZP2a8zjXVsM8HukZIQ8meAQoANuOetw==
       "] -> 9.52, CompressedData["
1:eJxTTMoPSmVkYGDQBOKUP99nuS6cbO+4daZ/StB0+3MLFx4vfTPLPrJvpX17
2zx7o57CTPEtC+yPdBbNiFRfaB9VtI993v4F9mdDXW9JtMy3b4t3lBPYPtd+
gun1eSKMc+zrrrJ3Z1ydZS+5cp7V+kkz7ZueMTjNXDfdPkotScoxfKo9zL6J
Z/srz12cZC9iEBdn0TXZ/o1ysmfzqan2J++w/FtYPdM+911FsPGm+fZcDWUh
SV8W2fuXVQlkH1xi/3/lg8uxq5bA+VsWPU5QYVlmf0g8w+Qc1wp7h/7XN0zn
rbT/cChwjkb7SvuAgDMzbXiX29946biGNXgR3F06ewUT/4X22++fpx4RztQE
pYvsHRi/2RzclWRvbRNZ/NYz0D4hxf5A9wUbe3uwOer2pmBxQzjNAAUAdXaT
PA==
       "] -> 9.61, CompressedData["
1:eJxTTMoPSmVkYGDQBOKrPfs+nZ84wZ598o+7n4yn2ufemXDSMWGmPQfb32O8
M+fYn7IWnXLKao799fWvb/K5zLK/+v/Q7VffptsLSTUJcHFMs8+qsT/78+gU
+8JtWh9mn5psv0m2w8RgNYJ2FHBiPHhosv26BiHl+xpT7MPkQtPeZ021//LE
rJRHbYa9mNYfrrL3c+yvPbn0MXHHQnvt3G/t37mX2Vusebr1xYI19icOXF77
M3Gj/ZLSVx/fzNpoP4VZt3k3+xr7orTgd/vFl9mf4S3am2e42P5pwjOTGNPF
9k3l811DFy+23+3zN31rxGL7xEdM6/jVF9pfLGXYnmM/237a1c418f8m2Wsf
5WrvNGq3vyJUdmLvwSr7C2D5bHsX4/wX/0ti7WOlZUo62j3t/Ze76rnUWdvX
g81VtrfbP2PR7mx5+/z+TzvPTBC3Z4ACAPfCnHs=
       "] -> 10.36, CompressedData["
1:eJxTTMoPSmVkYGDQBOIltg5H/2lPtDd/97lBfOZU+2mHOpa5zp1pH810kHNL
2hz7p5GBZVbuc+yjtqpJy0fNsv+WZ1sk+366/RfFxc0dj6baR/W6HTyxfIr9
0e03CgofTLa/mfbTs27hZHvFTxY7S08j+E2v24sfaU6xl214YrooZar9lkVv
SvosZthX6e8/NpFvrn1UZdiUuecW2nulZM3YpbbMfs7UdNebL9fYJxW+P55f
utHe99C5d0lbNtr/5ijyd+dYY/8VbP9S+6VdtzZPtlhs/4V3c1gs52L75H2d
21iaFtvrP8pSkJJcbK879YJhK89C+2X/Q/7UfZ9lP//0a0fto5PsGRY0pEee
bLPXmfHt25yUKvsSZbO0KX1Z9krpmxkTu6Ltl2zaxfvqlYd9UsS+yXqzze0v
la7In1wpj0EzQAEAhXid7Q==
       "] -> 10.66, CompressedData["
1:eJxTTMoPSmVkYGDQBOLsCsVC890T7Oe0OJ6uD51q36Hwk7slYqZ9YsmuvEcu
c+C0QdRH5XzzWfbyM/33xd2abp8snnji7JOp9g+q/8VELptib/x3em3U9cn2
rmceXZ66fLL9npS9GhX7J9sfWqn9oXv9ZPtpx9RrGOWn2E+1v8yckzrVvjnp
/h5WpRn2k0VvGL7mnmtvo28Te+PqQntv5hWr6lSW2WfP2BpremGNfYaQw8Wk
tI32oc5fq9SnbbR/c/u+JIPuGvurWWdD5/AsszeQ4w6Ttllsv7PVgNFSZbG9
j2Dg7JXTF9sXrn/mrmCx2L5R7ee7jWoL7e/fCGfOY5ttP4GDT7f5xST7Z5sO
Gzspt9vnt74unX+vyj600CgiQC7bvmTPBp+O6Fj7S1fPA63ytOcyZf+fdNfa
flbZjFshj9TtNXdobnN7rmxf9LlUufCGvD0DFAAAJtGUkw==
       "] -> 10.98, CompressedData["
1:eJxTTMoPSmVkYGDQBGFrpuQn1RPsX5so1HZKTbVfencJf0/GTPu37Iuin/bN
sT9/l2Xrs51z7POfP2f9fnSWfd+rGxVLymbYb7VLLv5SPs1+Wb/PipfyU+1/
7ekScfabYq9eU8Z3kHeK/afsjz0L/k62r9o2w+zBp8n2Pt/X2CQZT7Gf/utv
SJbpVPvDbyvt/p+fbr8y6Vyb65Q59jseqwX0VCy0V/qSrBC3bqn9ytBXp+rv
rrb332YxsXXhBvv7LlPZFhlssPc/pSe9b/lq+0d//XKLzJfZ10UUzzm3f7G9
1eb5x/WOLraPeKWg9TlgCdTexfZfXFwj/W8utNeKubPikcUc+xkPTO/eOz7Z
Pj1/kRdzYAdUvMZ+Yuep9Jf8ufZNfC49XyfF2S9iCXS+2+Ntrw2Wt7GXWXv0
7vUHWvZKYFrK/sWHrI1rGkTtGaAAALZGpBY=
       "] -> 11.38, CompressedData["
1:eJxTTMoPSmVkYGDQBOJA9mW5fxgm2vuyzvrZ3TLVntdz3x2lxTPtU+6/nx9f
MwdOn7G7xbEkbJY9t5IV44y30+2f1Glv3fNlqn3VRYupSeun2C+fe93A8tZk
+8nxk35M2DHZ/r1cCPfJw5PtLRZceBqxdrL94/DlNw3tp8Dtcb/DuWpC0Ax7
M+FAls7AufYXpTJuH7y90D59V7mFq/Mye0vr25I+R9fYuzj8tE6t2Wj/PKdo
nvf2jfYPFy+Wua67xt50/qnVCu+X2r9cvptlh9pi+6uZZWf4WRfb5z5m73Ao
XWzf7Hn96mquxfbuGc2BGh8W2CfvyD5y5dgs+9nrlymLL5hk77619Rzr3Db7
gnqJb9neVVA6y96vSq1HZ2mUfdDibbfVr7vb33nAd1lhkbH9bc75SjJXFOzv
bq9rVi1gg9MMUAAA4QWY0A==
       "] -> 10.82, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAAAHnKrR10eQP0LfZjtP95Q/qzTqQ+hLmT98
YRI1jWucP8dBgo5vX5w/2q4sRzk+mj89jU6SfeaXPwKJgbjM+5U/ACEGVJ2u
lD8W9itxltqTPz9369YfqpM/ildbMAKekz8ahzOqLrCTP+x0bAsNC5Q/Xq0P
9g9GlT8ZnZZljOyXP7mOa+Om3pw/4IJm0H3FoT8j6DGsJSCmPy3wmqISoqw/
2j0h5U1JsT/ezige5h6xP+/CQfT4Lqw/6/8d6Tsppj/ZyNLCfGejP26JsnVB
T6M/YdabynjOoz9q+Ko8qXmjP9asGay1c6E/kzY4UoaXmz9tibJ1QU+TP9JN
LkVCzoc/B5hnEfJaez+hUcphfmVsP1VIzjMz6V0/Ql1FW9yASj+ZWEfEtkI7
P819N3zjMyU//UVPaCBKHj8jaz8gTTsIPwAAAAAAAAAANMCU3w==
       "] -> 10.95, CompressedData["
1:eJxTTMoPSmVkYGDQBOKe90bbb+6fYP87+9CHVWZT7T95mdlHpMy0X3Om5JlO
9Bz7aIcbyYEpc+yVfB3zDtfPsg9ns5prJj3DXnBHhb619DT7suKaXslLU+z3
8vV6Xvo/2X5JhEXk9xMIevpf3oedayfD5VfdV807bz/V/s1hD62Gt9PtjzWd
vMY+aY791Af7av90LLQXfuvekXBkqf2/CMFMjqA19s2fnn3NMtlon2Dv5qJY
tNH+uvskhgP/V9tb/Tv2YYXYMvvlveybZIoW25+/HFrclbvY3uJhea/0p8X2
m18YanX1LobqW2h/e6PBJq6g2fZCrCdqf3hMtv/TIRhiEd1uv2XBRs9D/6vs
C/Lt7UNUsu237GVY668Sa6+pWHcxQsXTXh1MW9pnmC6ssLytZn+HJ1qrIlfa
ngENAADDfpKr
       "] -> 11.33, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAAAk12CQClSQP0Q6xVeS8JQ/BgTHR8c4mT+U
Q2AG7GucPw4UkBvmZZw/wL3/Y91Tmj8VzgzVge2XP3fELYmiBZY/iI5zFl26
lD+X3ywRiOGTP2Fjq7pYsZM/2jPbz1Krkz/oknulXreTP8xbrme3EZQ/KAP4
GetKlT+qXH2Vk/+XPydZRDRu8Jw//0FkeXbGoT/dyaYUwyamP0OQEXIVlqw/
qRQYVvE+sT+xgC4KvwuxP/nBZSScGqw/3cmmFMMmpj/in/GDIHijP04RgcMO
ZqM/HQ/9+43noz+yFvpOL4ejP9+Qmawgb6E/iNbYVf96mz/brGdi4jiTPzEF
2hIpk4c/bhiYqudiez8pS11ZjQtsP6Gw57bYXF0/Ru3PTuNZSj8e3tWooBo7
P2tXpti1FCU/faHtEJYdHj/LGr5AqxcIPwAAAAAAAAAAVwCXUQ==
       "] -> 11.29, CompressedData["
1:eJxTTMoPSmVkYGDQBOKzknFXpoZPsH8eVWN6n3mqvdE7iyXzPGfa+y/4b5mT
Ocf+0+MdNq9C5th7z4pq5TKaZR/8+cf1H4en2x++lycx/95U+18SzC7106bY
22hqJEw9NNm+ecOs1IkzJ9sfvHEy2XY5gl4v5Rw6V2SKfaTPdK3noVPtjz4R
PssgNsPepNlUpYZ3rv1cL6GFF24utDe70Mm73GCZvc8aFm3zW2vs919SWX87
f6P931/Ba9trN9prLpzvVK2xxv7l3XP8E+SX2fs9X5dnGrrY/nHCnUIP28X2
fKdbEkN2LIaLX//9ees0m4X2D6fdSjpnOtt+b2JNVfifSfZrLD69nqLbbi/8
sqLA5XyVfbEMb/iavmx7N8c9RjILYuyPFWfPqFnkaX8ETFvaG/l+2vVXTNG+
uTog7k+4NJT+bccABQB+QJuf
       "] -> 11.24, CompressedData["
1:eJxTTMoPSmVkYGDQBOKzvxrOaZhOsDeMnPvX+8oUe8+tBT8vuM+0d2d07WPq
mmOvnNTwMHbWHPsLLXMv2+TNsn/WwnGGU3CGveap69t/iU6z57rx43HNvin2
G30N/pr8mmyf4v385LRzk+2lteuYlU9Otv/evTOs7uZk+9sbtjTrmU2xBxsX
M9U+TE1sjY/ODPu5K3U5FDTm2ltf7HDKv7fQnk2m2THbcpl9QcpJkT9H19if
+6eadUpio73s/ZV5H9s22IvdYtDbwrjG/lG3X9xGs2X2y7cpNCwoWWy/9OgG
z+7ExfbdZ7ofpz5ZbL9i+YRtW9sX2xvLRBqx1i+0PyL8Q+Fg52z74yml3/QD
J9t7N5Slnt3Zbj+/xLhEZla1vSLQFOOSHHurCfNvty2NtWctWMj7wMnbPqfp
5fKL823smcF8bfvzdxKsg6MV7GPUGpdInme1Z4ACAPJFlr8=
       "] -> 11.09, CompressedData["
1:eJxTTMoPSmVkYGDQBGLLNFsO7oMT7B0TNNZukJlqf+Vy/Dv38Jn20kZ8lRqN
c+wXT82c+91srv3kc5tCIk/PtufjcXxie3mmvV/bV8fZp6bbL7gbmLAzbJp9
yIkTK5ncptqHBR98OvnWFPsstyi58hlT7M+9Tz14RGWK/a72o0eKfk+2X8pp
EvBvxRR7rTNLD0gunGYfvebQtdaKWfYbmB49tuZeYL9cXvWEwqXF9p/yA146
TV1pX8HnV1H7d519g87af8wv19vfTjtmYbtulX2LY2LqPoll9p25zqHM2Uug
9i6xr5nBuXjZjKX2oWD3LLXPL7Lh2/Nqkb32zyMHj72Za//FZF3d9UdT7F9Y
M7ye2dBpn+E+Xf/+xFr7E7c2RnF9zbUXVvzq9YMpwT67uFJe5Ym3vdRyUdvp
b2zsF4HdrWL/3OrwTcN2BftzYJrBngEKAP0ympg=
       "] -> 11.83, CompressedData["
1:eJxTTMoPSmVkYGDQBGK3z5N41TZOtC//k163QHSa/Vm9I4Yb9820t1BX3XPh
1Rx7xUSFpwfT59pr+PC7Bjycbc817XGY/7mZ9usqZjhvWD3dPmfmUyHJkGn2
SzsKdfZJT7U3k93qy7lviv1uvzLms/Om2Hd53fTcFjDFnr9m1v9Kwyn2G15/
nu56d4r9JCuGxBUPptlPtreQ4Pk+yz4lIeDU/sAF9lPXRm+1FVpifwbsjpX2
/MLrJdforLc/wXKdr/n/evvnOTEiOztX2d/0uJF9kXeZ/etpnubPPZbYT89U
tbbatsTe4mbdZdakpfZvg4T3Pn6zxP7W/0yrrNmL7N/HNGuvlpwLd0f9m76p
k5Z22F+Re+2x2K/G/vWT9/KbLmZD+TH2229LrTfPdbfP5XFMX9dqbB9Sdc7O
y4bf3hRMy9szoAEATOOSkg==
       "] -> 11.76, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAADHkYdkF9qQP1ItZ9TGPpU/fHUDWhpxmT9M
VVrzBrCcP9OiZ5x2eZ0/Zz290IU6nD8jNCdRU0uaP1DyhSq8U5g/0Y92f0HJ
lj8V1O2ofqOVP8L0Wy1iNpU/Hr/rpnPilD+J/SyPxFOUP+bHvAjW/5M/Whhl
0rt9lD/LBsMO90KWPz8cii7S1Zk/tFi6MU02nz/OQaS4AS6jP6XRF6bYwKg/
uLoEv/furT96MOZMWveuP3OKBVwlMqo/iySWcmQhpj8FCC4QSrSkP0xzDh0n
XKU/++uKy/8Ypj/o7iXsdc2lP3gxbfaPZKM//iXly9SWnj8D14jJ9FeVP4H+
tspk94k/KIL5F5PmfT+vzwbBArBuPzymx9q8/18/F+fexbNTTD/3sKkh9S05
P8xoDZyh+yQ/miBxFk7JED+JIHEWTskAPwAAAAAAAAAAWlucJg==
       "] -> 12.23, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAABJHDeEciWRPytbX+5mY5U/8KUGUZpqmT8E
QUBxasScP5QFxZYv1p0/uecVyarWnD97cyNhghebPxCR7204Bpk/OmqotZBr
lz/phI20KiyWP/v1tU1orJU/wg20PuY+lT+4ilvQYoiUP3AomT2A/5M/m5ba
yKFRlD+wnIulqL6VPx8LsPGYIZk/on+FGpDxnT+bAVKF2GSiPwXIHtPhpqc/
lba0fzmSrD+NyORUf8itPwZdpxark6k/2wrNMMoQpj+tVhN51RWlP2yAQT+Z
3qU/i7o6cy2+pj8GeQ6862KmPxdVrhFg9qM/EFkhI7dnnz8Y6jZVKeOVP6rY
zAGBzoo/5erfl5UVfz/k6t+XlRVvP00Tn5lPimA/jXnUPYmETD/Q5C67jqg9
PzxhEMtt0CY/LrSm1VdAIj8TtKbVV0ACPwAAAAAAAAAAXMSX3Q==
       "] -> 12.22, CompressedData["
1:eJxTTMoPSmVkYGDQBOI25aTATycm2Nsr3j3sYj/VvnffBtF13jPt9wjO6GJK
m2OvWWS/+vX5OfZlHxZquGvMtk9+vmwCO8NM+/a+/x17eKbbr2lseaK7cqp9
v/kMdsntU+zTEvqairKn2F8s4XSY7zrF3ivpHIcUJ4LewbeoZz/TVHvpqpbT
/UbT7R17qn7zNc+2bwe7Y4F9c5zfn1Nnl9gf1/k89+fzVfZrO1Y6/rPZYD/p
5QPnwL4N9g5pT04aWK+2n/y17X++3DL7CGsJkYxPi+3Z/x+bt9Voif2VA6aL
o68usX9Q/LLmdNkS+02TjswRNFlkP7ltV4bEqjn2P/8/S+xknGK/5W/ildvl
HfYbLPzqt9TU2DM+BwqL5NpvzfjPvWx3nL2B9A1Njyov++z1Gx4XxtlA+Vr2
85075852krOfAKb57BmgAADKFJdM
       "] -> 12.03, CompressedData["
1:eJxTTMoPSmVkYGDQBOJDjNL3v0+aYJ+rKcD6WXmq/aKrT/ZqZs60v3HbYcaX
KXPs1edn3Y77Nsc+L0P1epTWbPvqUxuXSH6aYa+aEMr5/f00+412e/Ye65pq
X94SuODyxCn2twKsOLdGT7HXPKgem2kwxT6vebpaO9cUe/fTC/7oKEyx3zPz
b8TyH1PsS5TrfRIDp9u7MWfP2XZmtj33O9a7Yt8X2C9OO/xPj22pfdbEZxP5
dVfbv/0ttGWO6Qb789+y3715vN4+zPR1zSPz1fZVIa6bHUyX2Tfdn2S95f9i
qH1L7AUean5admqJ/V63g5kfs5fYz5WUOMHls8he9uObgBO/59gzcRoa87tN
sd92b/HjBRc77Dcpe+XNWlVj/89yw4JdM3LtLdzD1ybLxdtr+Oi9WZHpY68F
pm3sG264c15bqmqf8uhrW4KNApQWsGeAAgCSZ5p5
       "] -> 11.86, CompressedData["
1:eJxTTMoPSmVkYGDQBGKmjYfP3NeaaN/6wePW6rap9tU2Vzz/V8+0v5lpfPDf
jDn2r4rceFIt5tpb5ardkJ882/4ny5zeOQUz7fdyN+2+lzLdfrJ0tUn7j6n2
pWHL2Ln/TbF/mbQmc9L0Kfape5hNs0qn2N88wTn9I98U+9j8TaclDafYf5HL
817xaYr91n0GQX0K0+2NFK7mnfebbb8B7IwF9o9bTlewZy2xn8G4sqy6bJV9
7YnjznO/rLfXXLfZyDZig/0yndsXwl6ssp8Etnep/Q2w+UvslTLXS4WlLLE3
LToEtHqp/co6kMYl9qohla+eBS2yf7itRcv/7hy4e+7aH09QKOuw93+6cra3
Z429N/vJVQekc+ynaotej5wZZ8/wuKZOfZ6nfdjhrp5rZTb2MWBax34DU35B
xVE2OM0ABQDQE5oh
       "] -> 11.83, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAAAZO0Dy+YSQPzL4s1p07pQ/Fy8LLfcpmT8Q
75pm6JmcP208DUH6x50/PatF507BnD8rbSgKo/WaP+Go7pb/+5g/A/HtT0te
lz+f2QlgqCmWP/d8QogwmZU/Z37Q8GsclT+4V5cDY4WUPxnFQUF8+5M/Xd9B
ApY2lD/wstByn5KVP+Go7pb/+5g/qoyb7IL8nT9HvGuaoWeiP2JO/NtgsKc/
LhdivCy0rD9eqCkW2LqtP7Pcp2SVsKk/o77C6vAspj9rY4l7tB+lP1faUBRG
66U/Vcq0YkLHpj/6UV9hdXimPy0+3vbmC6Q/tgBHtJ3Bnz+mo3t1OTCWP22H
KMu8MIs/iEScMzeafz+BclxFpAFwP3OzlfPG02A/G2NGLgNfTj8QpH/cJTE/
PyoiDYDgjC0/yxZeVUCzEz9kHijHVUQKPwAAAAAAAAAAlwmZuw==
       "] -> 11.33, CompressedData["
1:eJxTTMoPSmVkYGDQBOKuyexZBv8m2DsfuNa632mq/Wy5hVMMQmfaZztH5GvO
n2Mf/ct+x8Xtc+H834y6v6TuzLK/cOl40aNLM+wPxS/k+uQ43f7Uz5c7zbmn
2QfJlU19XDfV3lqQvW6tylR7/u8a/o4FU+zB0mJT7Lde/+xpGjPFXnR3/Xr5
x1PtPdZZTzeLn2mv9/XFQ8OIefZlf71um25aZF8UmG6bzrrCPnyGSEfSvzX2
i/IMr4lpr7M3Zf6xPn/fSnu/ixf3Okgts++4NKd46p8l9gk1okvZdy+1z+kV
uNsxaZl9nUXIEX/jZfYTcp4q3T662J59fqLwErH5UHVT7S1TlR/cK++yn3D4
7Tv/rjr7dfU6fDOY8u2Pf/vr/2Vmgv1Zwdga94s+9iXs68+zC9nZV4JpPfvA
KHlTVh4RKM1izwAFAB7TkQ8=
       "] -> 12.37, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAADAKBZYiE6QPwuGz0Zt9ZQ/O4TNFa9CmT9S
Uy7hzk+cP20+8UfSb5w/rIzC25tvmj/Me9hPwhWYPya1bEqPNZY/YV8nCTji
lD/UU2BOhwiUPw5C9alO1ZM/YxtNbBnCkz+cfdqAgMiTP7jclaAjIpQ/J+WK
ZhBPlT93LojUV++XPxjZkT6nvJw/hX5bmd+hoT97GsxTuuilP/x51h4EY6w/
TVEbAaE2sT++27lNnyaxP4oHR2DG/6s/7VLfNSgvpj/XMfP/d3ijP57PZesQ
cqM/Ky24EFL1oz+6uihSFJKjP/fOfQkOdaE/qdCceLqPmz8Q5gt/byiTP84f
7yTjaIc/cPoWq7NPez8ZlbehiJxrP1AjEMVNNl0/WeOINVKcST+NceFYFzY7
P8P/OXzczyw/hqomqD01Ez9d44g1UpwJPwAAAAAAAAAAPkWU+w==
       "] -> 11.97, CompressedData["
1:eJxTTMoPSmVkYGDQBOJJMybYtNdNsLc6JLk3+f8Ue7nMLpfbxjPt/3EYZt5d
Ose+hf/E77youfY/mM4u0/8/2z7tQ26/09+Z9qH3HD0sOWfYu19Y2+TXMs3e
9thGu6a8qXBzftibTHl0YIr9lt1NWpe8ptgXWs5lDOSZYr9t3xZuzXlT7N3O
uz9qy5hmr1Hc1rHcc5b9rWXcvgEP5tvnmbI2GM1dbJ/4ivPslLCV9v6zy2bc
WLDOPmyRw2/f5PX2p0x03p4uW2Xf4qP/UlFmmb3YvxL3Mz1L7G83RTYeEFhq
f/Ck2Ic955fa17mdVispXWp/skDXarvMYnse8aN6J7Tm2e865NPrzjvV/snb
vLrz2zvtOUUm+xZer7XnkZyYH56UZy+pGvll0/p4+x8MjGkLjnvbswkm5ki1
2Np/A/O17f+CaW44zQAFAMKTk4k=
       "] -> 12.17, CompressedData["
1:eJxTTMoPSmVkYGDQBOIol6aeWu8J9has+ssfPJ1i/2W+Xepq45n2MiKTtp+Y
OseeyzD+RJfbXHsOrhbfE7tn27/0Cs7fOXem/VyBWXYKc6fbO+4KlH6vOc0+
WvsMc6XRVPtdLxqWGl+ZYn+o7MS8+t4p9p93fHm73meKvYJJrYOV/hS4PHPM
tJtqP6bZT+dMtdssM9v+1ee6PWXNC+yP2ubMVs1aYv/2oNDq3MBV9uZ7rG7Y
r1tvP2d70KaQB+vtT3pP7H18e5X9kbmLJZ0kltmb9uVn6xgtsV8jc624t2uJ
fUHrPr1s06VQe5bYn1xyQ3L9jEX25mueS4lqzrUvvLrofUzcFPsKL5OEJf86
7Hf1W0pmiNdC/ZlrbzsrbVLthDj7wL1arU3NXvbBYNoKSmvZ+6+4MCl8IjuU
/m7HAAUA04SWsg==
       "] -> 12.66, CompressedData["
1:eJxTTMoPSmVkYGDQBOK3NakJT89MsP+2gN18nvpU+2TrGQIRxjPt9QX3vW25
N8f+yEzpe1ea59nzqyx9PPfdXPuGaws+3Y6aY+/VeYP1f8gs+/VHFcUU582w
N9LUVOa0n25faMugta1tmv2+45369R+n2j95/9viy6cp9r1bpZwM/k62/7tw
t7Pvxcn2F+0+WHntm2J/yKZD8U3WdPv9r8p/diyabW+xxPH+3NcL7KO2eGzu
61lq/3bDh445jKvs11rm/L6Xu9p+VdcJsck9K+x9b7/QTZJdZl+8YO2GY5eW
2s+7VaA6g3G5vb2N3mwRsRX2CqIF8/z2LbevtNtilmqw1H5RaOdDnXUL7Nd3
1yg7mU2351q/7KNBaY/9udDlyfKlDfa3TkcmWc8osDdks47835toXzJr8rN5
833tr3qp36nbYQel9ezNwPKCUJrRngEKAO1gmoQ=
       "] -> 12.54, CompressedData["
1:eJxTTMoPSmVkYGDQBOKf67uPr9SdZL/tv/78Cr9p9lMWfe/8cmumfaHr/pKC
9Ln2txTkGkL+z7Ofynn3Q3ftPPsThyWdjX7MsfcQWN7/bNks+wcmHi1M/DPt
yyNfVsiVT7ePa7x6Ydveafb1V348TtacZv99adnRS6pT7fPKvyxzVJpin9T9
6lLv0cn2m/pMzbiWTLFnZ65m+qoz3f5IkPytw76z7Sde0dlzdOoC+25XXktm
rqX2VaceP+xRXGm/uorbKGbKKvtPsxMP/5ZdYS9S0h8+hXeZ/SphtdNHPi61
v3rWw9DKbLm91vEZdQLOK+ybXD/7XLq83P5wgcsXcf2lcHONnFa8DP06zZ4j
KyGz53y3vc/e1zp/hRvsPct7vtV65tunTv1/JeVsgn3ntrdbHeo87VteKL0Q
tHSw55ozdXZsl5E9Aw4AAJExlhE=
       "] -> 12.43, CompressedData["
1:eJxTTMoPSmVkYGDQBOKo5WpH93+dYP/l+cr4zYFT7Vne+d/Uj59p/zMlveTe
mjn2C61tnSafmQvnW/DkTjt9b5Z9ycx50jffzrDfEVVxa6nTdHvBlkU8H5Wm
2deKym7a1TfV/v3Zq4cu6021v+69cVNpwxR711dT1db/nWwfqL1C717IFPs2
z6OvK69Mta8+cKdNQ2mmveGEd/9f2s6zF775yLy5f5G938m/JneuLbc/wMH9
5uKdNfbqMW7HtH6stZ9oOv2E2P6VUPuW2a8ySDeawb4Uat5S+6cZET3Cq5bZ
31R3a3kStMy+MTimVvv+YvuL9m1J/prz4fZuvPfT+cjCLnv7e1nXOpbV2fvq
PF+jzp9v72KU03wxIsH+nXJozvpQH3vLI9MsVzbbQWk9+3wm3qxz+YxwmgEK
AJN5nbg=
       "] -> 12.31, CompressedData["
1:eJxTTMoPSmVkYGDQBOLot53qL35PsBdcveJqTNpU+z3Vr7cLh8+05/v+zstl
9Rx7n9YIFZUNc+0P9XUfr+6YY7+j7+zNF5tm2ZcztHbaH55hz3axd5Gt8XT7
cDV+FsNfU+0t4qPED5ZPtU9l4FwnKTHV/teFD7YPi6bYM+57O+kq4xT7yzL2
f2oSp9i7+Jg9rvs41f586JEbR+Nn2rPIXhFXrZhnb2s57bLYgUX2P75N/hEi
usJed99i8y26a+1n5WonB3qss7/ttGBJ882V9jMV2coXSCyz/x2Q8NP1xRL7
6Qun7bZevNQ+Wfj1+XfFy+y3ZXivWK26zD7jrVqPy57F9jFFwumrRebb7wv1
+Dt/y1T79rf2Z46pd9lfr1ZtPHO9zn73Fn9uNYd8+7It8XP7JifY9zE8uK0X
6Wv/xen3t6J8O/sPYFrP3lVty0bHFEE4zQAFAIbamf4=
       "] -> 12.45, CompressedData["
1:eJxTTMoPSmVkYGDQBGKr+gY+K+6J9pPlgzaoZk61Z2jO8PPJnml/w1A4asax
OfaHr97nnMc8z75p5eEXawXn2jffXjBBx3+2/b69sTfnRM20d60KyK7aOd1+
R/E/BtmSafbJLXMff7w7FW5exYMLxm8WTLFv6nsVnck0xX5FdSuDgs4U+zL3
R/d1mqbaP3V+flFo8Qx7fk+W5adK59rvK1i+5CbvIvtH87Y/vaS/3H6+lBJv
mvga+5/uC7Mm2K+133hRtVAhfaX9Xi/uqbdVltnLNZboOVsvtT9j5vw3XGKZ
fS7DreQPjMvtFdWWSDWvW2b/U+fEXW+DJfYHFzMlyR+bb58z88T29QrT7KuP
le7J4+m2j/oY47Gzu94+ia1Dpvxcvr2v01Gu0vUJ9hwmNy/xGPvas4FpWyit
ax8IlheA0gz2DFAAAE6kjvo=
       "] -> 12.41, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAADUO5/aoL+QP+FZwj+NKJU/qTjpstxjmT+y
+iDl6dGcP1l2CpGX450/+WJiCs/AnD+Wyokd3+GaPxvjNQLryZg/dLnWvM06
lz9vhjC9NgGWP5zIO+dfeJU/PjrExr4RlT9rfM/w54iUP2nOWVd4C5Q/mJWV
58g+lD9XN7WOMsiVPxyRq5taR5k/5su9QYl9nj/mL1ZxhbKiPzsSpi42Bag/
MmZ+y0XxrD96U/BWUpytP0wvovhiuak/5bWtcmwjpj94ZiW7fQOlP5JjFoPx
uaU/H5CEAJuSpj+I1avrOjqmPzsHHscn2KM/Rgir+5lhnz+ddrGAz/WVP35S
ybuS54o/umBt5BdFfz/p/mNBILdvP9Q7n9qgv2A/KoaJzf7uTT8phonN/u49
P/mLpz0Xgiw/ZbqXvtoaET8yox/+eM72PgAAAAAAAAAAC+GiMQ==
       "] -> 12.51, CompressedData["
1:eJxTTMoPSmVkYGDQBOJXN0L1bdom2n9wXCPzfvdU+zlqu68WLptpf/BInIOO
wlz70BkLtFuL5tmHL2yYXjN3rr23bFfa42ez7a/XTf0x8cZM+7O/5h3/oTjD
3mOv8FP1O9PsW+XOFdtbToObx/jQaWLe5yn2CmIT+MrMEXS7+rr7ZilT7dXr
n/3WyJ1hP4XJWm3Krzn2qoYGQTE7Fto/e1uwZnPXMvuYPQq3k+RW2790YT9U
nrXG/tCy5PC9H1bYWxnYekz/tdS+/k7Q7U+xS+1XTZ3WOTlimf2xHcr6a9yW
2/tz5L/MfrTM3vfGZg2+2CX2Gs4fNL35Ftgv9rJu9Q+aZm8/YfPJINZu+2TV
8hOiIfX2b0sONV19nwflx9svW3hxlrCRj/1LWZ1cQQFL+2Kxh4K8Z5Ts34P5
nHCaAQoA3QiSIQ==
       "] -> 12.53, CompressedData["
1:eJxTTMoPSmVkYGDQBGL+i24LM2dMsI9P/7tc4c0U+89PL2Z568y0r3cMech9
eI793MxYiVrnefZT3LjPCM2aaz9x4T1l3p+z7R+2umt4fZtpr3jSwmaH4wx7
/uYpix+/m2Y/S+hx7l/vafaqiwwtxFdOtTdn2lMlcX+KveJflgmCHFPse71S
KnsZp9hL199/veb/FHvDrA067Z+n2ytNzXkRVz3HfqJybOmbjIX2T7KNK+39
l9lPWnexYvGrVfaGZk9u6OqusZ9h+apw3pMV9kqP5Z49UVlmn9nl/6Vr6lL7
7sLsWr1Zy+wllz177ztjub2Xde6+MIfl9kedtZzOnVtiz/z+IdPZrAX204Mv
SJ8+Ps1eJaTeauL/bnv5on0TLbwa7CHhUGDvEHlL6o5for2VfUB19mc/e4tZ
ypdTg2ztDQNONUUJaNkrg9Ur2FuA+Vz2DFAAAH/ekuw=
       "] -> 12.61, CompressedData["
1:eJxTTMoPSmVkYGDQBOJda5xmm8lNtP+66scRjfCp9ivb0r+pZc60t72x0y30
/hz7ou5tn4Wb5tlPm7SXb9/Pufa6k7XDcifOsU+oiDxwqXKWvVu2uuTdnTPs
60yWx3lGT7evDAhtdlo0zX77X7UlW/9MtV94xe3Gsa9T7C/adHEEMU2x95Ry
Foi7Pdn+qsKdxxG7p9gr/N0Rw5Y63f7f4YaWrctn269K37LK78ICqHuW2q+p
EEhZdXSlfRTnMYlSx9X2ZmozNb5mr7CfGx4z743kMnuljl8asU+W2h+4rPjW
Xmi5vdpDLgteuRX2yu8TT3UeXG7PH3j41EfLpfYNNdFb5s5fYB/i6ZcxQ2u6
/QGx9clOvj32Qgz3DxZFN9iHTWTa9yavwL4tYW3/kohEe/1fk77PzPOzL+Q7
s9Nymb39jymlOtURGva/nCcq/6lUhtLC9gxQAABijZm2
       "] -> 12.65, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAACepbzXM6CQPxPYCBXYCJU/idkXUks0mT+p
N7DjxZOcP6r7pOSJiJ0/qgZz45RWnD+JzklTQGaaPzI2oaZSaJg/wE8zbPrd
lj/3uoCHnrmVP/dYBoc8P5U/oRcK3KXtlD9MpdAw3l6UP70DVWmu/5M/obWP
20NzlD9prLzAARKWP8KbEW9GvJk/HuISH+ISnz/Z75/2thGjP1AXHjVQrKg/
jnyiVu6+rT9kuDeCf6muP23tzMRCIqo/wLx7a2cmpj8/Lyvq2dWkP+mxI0AH
eaU/XAXaecxLpj/NY16ynOylP9lRGvcYjKM/5FBWAhjInj+ieYTcB2iVP6dN
TOHbL4o/yD6cc+lGfj//AJaQ5M5uP55DQtfRJWA/cXW2xsoLTD//eKyOXOU8
P2dVEL+qZSQ/MEc4n2P/ID/nccD+ODILPwAAAAAAAAAACH6cIw==
       "] -> 12.39, CompressedData["
1:eJxTTMoPSmVkYGDQBOJNn+YXPV44wX7Dra8zrbim2s/bMUXzjOVM+1tbFXpu
b5hjv37Vwhcvbs21f2T1J9zu7Bx7OU7f5z/+z7K/0H/FRZ5jpv2dtqc72nKm
23NMSompdJpm/+CHVGL3lqn2LstnTTcMnGp/aXmd7In5U+xX8Zkq3RKcYm93
+6b8xYgp9kCOyJLdU+1viGwQaFKZac8wzd/4uNQ8+4iyg+/PVi6y/zMr+IXg
veVQd6yx7yi30NQ+udb+TtUEn00LVtrL7hZrKZReZj9FJ2PZfZGl9mfOZ1hO
vr3U/pSY39MJ25fZ5y87cs4/epn94s7IsPKvi+3v8K+JNk+cb68V//Y+242p
9j02K14y7uyy31KWlOB5uc7+8ZR29Vm1+faLgL6VzUywZ+VovX06yce+efsZ
2flzrOwZjy1+IuGlas+mapy5f6+iPRdYnseeAQoA0O+dfA==
       "] -> 12.47, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAACf0nqnuHSQPxYHFcci1pQ/izuv5ow3mT+V
vjHbj7GcPwjUE5pdzp0/698ft1zDnD/zcfZsn+6aP9iUCJuM3pg/Apaj2CRF
lz+PgMEZVyiWP9V1UDrwmZU/j5fHKkUjlT+cdmJjAImUPxyC5Wt3BpQ/XPyj
57tHlD9JojgKrLGVPzUawQrAJZk/FJyowSo5nj+Ey1nboJOiPy6bFz6U0Kc/
CesZq0vJrD/MizpozKetP+8kMuomtKk/rIu7DUYupj9WgdNCZxelP6T1CzAs
3qU/15Avc7W5pj+U5IutvV2mP8iS3NldD6Q/HU032Ampnz/gPeVhvQSWPy2I
6lR9+oo/E4WisDw+fz9XYyvA57RvP9robo+WgGA/WpE34sOqTT9bkTfiw6o9
P77lJutVxCQ/TnQs6M+7Fz9OdCzoz7sHPwAAAAAAAAAAEE6cBA==
       "] -> 12.51, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAACotUkpDvWQP631G76KNpU/EEbvE7FemT9Q
6McuKAidPzN3tXJUv54/D8m6N6VAnj9tGctxJbycP3AW4VuEsJo/V+LzAubw
mD9VIgN8vIWXP4RKC5l8w5Y/U2IS9ZIalj+gux1VUAyVPyK6KMp/BpQ/dZAr
Iu/Ckz98DSMaoY2UPwcJB5XVKJc/lcTbljMvmz9anE1CJ5igP3EznXT7GKU/
4b1uM1xrqT8eQN4DFfSqP1yf+nNuUKg/H70S4CASpj/k+pOWkfSlP3RTBr+5
Oac/J/r6XvxHqD8Qhv6Mh/OnP4OKGhJTWKU/nHtLwNPKoD8UQwX+D1OXP2Hf
zAjrkYw/TWJP2extgD9m1kurYcJwP5e+RE9La2E/X+K2HoydTj9F7tg+xHI7
PxEGHX80HSU/QWtK/ynkID9Ba0r/KeQQPwAAAAAAAAAAuomQvQ==
       "] -> 12.69, CompressedData["
1:eJxTTMoPSmVkYGDQBOJvDcvWSzdOsj+9YKboofhp9u8mdOQlSc2yP8/5dtnn
qrn2S5eqx3oUz7f/WKoc4OQ/3/71jJ9nWZ/PtV81d9vfJctm26+R/OcbfGCm
/UmVoKPCbjPsJ7JZlr/PnW7PK6FidnHnNPvdWf8OzCqdap++94Z3iuEUe47t
jizO2ZPt/8deMIx4Odl+vWDvu/Wfp9rLXSq38uqaaf/73BQl3Yvz7M/dYulz
b1tsf+pR6dtXQcvtZz1O+ql9bYX93WsmWS89l9uXmwZUbOFbZt9wYa7SieZl
9n4Xu/Q42VfYv/dbM81SfaX9z+WymSorV9h3afJ/3cS6zL7//sG9z1wX2q+d
6jqP8dZ0exXjqJwbN3rsf/x5+//krAb7CXOfPt0bVAClE+z/HVM+3MnibV8L
Nt/M/vNN8SY2ZiX7r2BxbTifAQoA9Cmgnw==
       "] -> 12.77, CompressedData["
1:eJxTTMoPSmVkYGDQBGLHbSy87xgm2tcctlfQtJxqvzU/43FS5Ex7228aZlM/
zrEPOVF8fc3CefZ+j8Xdl2nOs3+86fXVCQvn2MvUxqaUzJxlH5nF9jj65gx7
t92fDD0Kp9tbb47faLtxmr0Rz/0GE85p9pWM0g1qnFPtc64F8EswTrEX/qL6
X+TkZPsTNkfjFWZOsXeasdvRRXO6vXrrhyd1kbPtnwtujXkxY4G9+mLLDRqG
S+37FLu8U1tX2p913NxSxbnaXrN0uVRo7Ar7+NovHGaqy+w33b56w/jvUvt3
N44rulout9cQmXoq2HWFfcWGwF9+b5fb//3scULTdan9lM2Xe14dWGA/q+pZ
oHvidPtew8ui/Y099lYF03SeFTRA5Qvs5+9O4/3akGgf47NXfBOjv/0hsZfC
OYxW9j6MiUIBjBr2vasdeB4wCMBpBigAAGT7kCU=
       "] -> 12.7, CompressedData["
1:eJxTTMoPSmVkYGDQBOLkVW5LOu0n2kv6X86Kzpxqn6Zfs31B2Uz7xZabFql/
nWPv9Xf1+2er5tkveS3DsdVinr3Xp+7rk47OsX833/XLyg2z7O+JZ+jG3Zth
X7JQ0s+lbro9d0uD4sf90+wnvdR0WyYyzf513dPVaxmm2u8NdbKy/DbZ/tWZ
KjeFvZPtz2pvnf29ZYq9+0Xt/mmi0+15P5eyJOjMtt+q+6/7R+sC++1zPuel
f1pi36L5XWRCwEr7iBTNPLOzq+yV5JLSrpqvsPfrqorKkFxmH8tuwZnABqR3
Lsp767nc3qN52hflyBX2LeU965l4V9gv4DVyuh6/1N70VsTT29cW2KeqxMz3
mTjdvu1Z46TCyh77nz1ry80aG+x/gOkCe/VtAS9XdSfaTz8uwtPy1s9+Jpi2
s6/LPPK4skcHSsvY///Q5BTIIWzPAAUAwHeZTA==
       "] -> 12.71, CompressedData["
1:eJxTTMoPSmVkYGDQBGLfa6+V/1lOtHd6zzk7IWyq/QmL5icZWTPtS9+k/pB8
Mcc+UEZCSe/IPPsvjCsiVxTMsw/pXh987scc+x2yWcWBv2fZ7+5hXPpRf6Z9
19O1ZwoPTLcXKrZq/ft9mn3lfIGZtg7T7JcK6XY6q0y1T9y2xPv9/8n2U870
h/IvmWzvx1jwTMp7ir2qRv6ri2um2dekbPAXnz7LXiBApe2p0QL7i0Hhn9VX
L7EPn3PBxmD/Cnv3xu2nJQJW2fv/ZFQW+7/c3nvSjS1VYsvsZzEct+3UX2Zf
Y6nT+6t1uX3gMf65XxausLdxObvX0WuFvcBNuYkOm5baf59o83sz80K4OyH+
6LEPvj/PM3pLg/2FqKPbdL4X2Huctfi3YH+i/Ykv+aVP3fzsn2otChdRtbZX
nc4mU/RQxT4crF4BSjPYM0ABALt/mT8=
       "] -> 12.79, CompressedData["
1:eJxTTMoPSmVkYGDQBOJ+3eRlzXcn2L858Vf6ieFU++U/pzbOip9pv+5iuUvB
pTn2y4/13dnvOM/+c+4Ny/ttc+2ny2Tckbs+237VgY9hW4/NtJ+/pInRS2uG
/bVYiTNGt6fZF1klGy43nmb/rj/y478ZU+1PVvkuXHN9ir3JyteLX/BPsT/y
Zuq3Ms4p9rMn/xHul5tqr/9CJ+SG8gz7WuXTD803zbG/cvLw7E8TF9pv5c8I
/N2wzP5UTjSHEs9q+9cSR3f2Ba6xNyl78o/30wr7qMc8DN3Ky+z15jHZWNQv
ta8x3Ft1qHaZfRRQ9e3S5fYFM0AOXW7fUOrFG7F8if1m2ahXrT4L7I+aHeAT
XzfN/pqWoHrE3m77LInwMEOZBvs1b6PLWjML7POX8TGmv0qwP9LWvubgWV/7
rXcS1igkW9tP6RBec69XzT4DrF7BfgPY/5z2DFAAAHFRmoo=
       "] -> 12.71, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAAC13LQVqpuRPzHI8b30mpU/q7MuZj+amT+I
QO85AhidP4uxOpAtEZ8/xnhWqnXDnj/rXOEs3j6dP4XPo+PWHps/XITwe3tZ
mT/4cSH61+GXP5XawD+YEpc/p0wGgUxQlj8JcxvlYCaVP0K/yDdFMJQ/Gmry
XrG7kz+R7gYiCXGUP8+h3FngxJY/SY0ZAivEmj8Lz7iRgCqgP8L8fxt3hKQ/
+OyPwTuKqD9KEqs6xxuqP8ZjqABqzqc/nRj1mA4Jpj9EMBSOcCmmPwErxBqy
gKc/bvY1vS+XqD94r9jdCTaoP0O1pcYMgaU/s2FGTkbzoD8zOT0UIJSXP3XY
zGmGiYw/jAxwdbJ+gD+f+SN+ymRwP9y2HCfaZ2E/OBvUwHaGSz/H04uP+jBA
P1kxDnn5bSM/d+wSTPfnGT937BJM9+cJPwAAAAAAAAAAGvaXwQ==
       "] -> 12.75, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAABARZKA2qKQP2//9N1g45Q/sn3G80sWmT+c
4HyFwc6cPzeaNb/Fj54/1Bzj3h0cnj/ejgALIp+cP6GpcWsVmpo//I2B1d7f
mD/q2fjsS3eXP+6SBwPOuJY/4IenYOsHlj8uUXFYABOVP4d8cqxHF5Q/2+5k
6gzakz/WNVbUipiUPz1M6yoROpc/ZKQWLGWBmz8gbtA9qrqgP8kaEGLWXaU/
xTlCxMfDqT/lAB43JiKrP5sQL/U2bKg/u//J7yEjpj/8rU11gvOlP1lykT+o
Jac/9DM9YZUrqD9nffHhitanP+nx0aQGRqU/Elt9s97EoD/8nWelsGmXP4zV
HOPeHYw/Zs1v8aOHgD8J+UVXrMtwPynIFLLzbmE/TBezjazDTT8k1sYGYZ0+
P8radyKPNis/HOTZWetoFD/R2ncijzb7PgAAAAAAAAAAAMif7Q==
       "] -> 12.77, CompressedData["
1:eJxTTMoPSmVkYGDQBOJthxmPfBefaM+x/IKnUdBU+y/BN5XiY2faX15Z+NxJ
dq79O4UFu0Xs58PpkD6JvY8ezbW/bz4lwOfubPv3PB55UX9n2r91/nVIqmiG
/Qm7la32E6bbL7KM8EhZN83+1ca4nNnRU+0D5K/nZv6fbG9e+M3lesZk+6S9
N8y2r5psf0M4drHvhqn2/sb6u5UdZ9p3G2Yf5i6YZ/9ef1FpgsFi+0ertY1N
BJfb79nQJmN2YYX9nucWQBOW22dPY3WyVlxmL2w//6bE5mX234Sqlx90X2E/
s6S5a1blSvseWeGyQL2V9uVvS8NacpbZc8ccW7599kJ7bsucBRszZthvyM0L
XX6s1376uf5nCYqN9g/4n2y9Hllo/2vvkXuZHxLtIc7ys/d5M5dN/qGlvfJh
URnXS0r2W5corEq3loHymewZoAAA29KVxQ==
       "] -> 12.87, CompressedData["
1:eJxTTMoPSmVkYGDQBOKwEDeHwh0T7Oe0TP7PwD/V/o5S4Yt8y5n2XNwMfjX3
59i7flN23tI0z97I4er+wH9z7f0MGtPPZ86xX++6TmNB/Cz7oolBJ8KXzbB3
YLwmEug63b7m9Po3Rb3T7HfHHdRf+nqq/buzn49O/TjFvlzi2w9rtin2hW1t
StK3JttbtD7Zyrliir3LKd6GxOjp9p2/ouw/bpxt3/6+cf2TBwvsbzmvk97W
v9Tex+3/vRU/Vtpf2+itn5qx2l7yrdeBiY0r7N8fMuHS1Fpm/yy998T350vt
+xv/5V8VXG6/9e3ssllSK+wvXepIWr1vub2iUfoCSYOl9lfzV3Flrl1gP1U4
z+2b7XT7xU6SM0uSeuxd5n3fw2fSYB9w6FpmQE+BfRbX1MOXbRLtj63bNt8y
29f+BJi2tX93Y3/2pb2a9gfBfFn782D6rx0DFAAAkQ2fWw==
       "] -> 12.76, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAADn1n090qOQP+6gHlHG+ZQ/qBZ+4LoimT/r
ANq5sNOcP5v3JWCsaJ4/tvph063hnT9Py7VBMkWcP5m6Jrw3R5o/C+FZaDyU
mD9fd68xwDOXPy8mqiDCf5Y/27clvcPplT82aL5lRvKUP7jCd9BIEZQ/I6eW
N8nrkz/qE33hRsWUP/gfMjq/jZc/bluTJLPymz85uGAxUQWhP+p/lC6EwKU/
Kklm5Tc4qj8xz8ARdJyrPx82akl8n6g/8pnXDYMppj+0DQX7Q9OlP0qV/eAA
9KY/uHLVBD7+pz/DraIGf6CnP8yDn/7FF6U/1YFtXJKYoD9c6g3CQP+WP7uv
1KiyH4w/Ty77NNNJgD8K9PyP0oVwPxoog07QV2E/qcbbFLAPTT+U3eKArf89
P+CBxtC3Pyo/jN3igK3/HT+b3eKArf/9PgAAAAAAAAAANQukQg==
       "] -> 12.77, CompressedData["
1:eJxTTMoPSmVkYGDQBGIjpak/KtMn2B+4s7XWdccU+0PyyWI232bYf5d9YZ6w
YY597yk9f+32efaBiwq371aaZ5+9rMS7e+4ce5PJl/Mc+2bZGzD/MLt5bYZ9
/LeHi4PKp9v/n+LnK3tlmr3wHncuYblp9m01zxi79Kfaf5rey1ZsMsX+TNx2
97VfJ8PtC1jzaa9Z3HT7e2nCzkzrZ9ubsPWwhVxdYK/fYbFrWslS+9M9Hqp1
91ba9/jnX3qhstq+kGP/UqWcFfbT+w4zR6kss99it/rg9hdL7VcsWMCqJbnc
ntHRuHy17Ap7TiaTmPg9y+19LBQqvlgstX986d5ikZ0L7K32cj/tsZhuv+ur
1oIP3j326/0l/xslNtjf1n2+oW1Ngb3JqyYRPedEe3GnRdYMs/zseyfJZN9P
srffEmC8Nslex/4Sn9f7p9KS9vfA9E87BigAAGg5k8Q=
       "] -> 12.85, CompressedData["
1:eJxTTMoPSmVkYGDQBGJBMJho38qg/fej8VT7n+9dXl4Km2l/5MGKTzeU59pf
vi5wyyxhvv0dnSIe7+L59s7tvzd/1ptnf+ZJm5eH0hz7V9NY4/1dZ9kre6zg
mrxwhv0Ob4l1C/ZMtz++JNxC5dw0e5VV9Wt3lE21/7Je9Po6pin28hyVP/J8
J9sbbrKOnV482V6IYa/HhICp9hvdrcIM982wn2j8ZB7Lsbn2AglL7euWLbKf
9bvAZn/eMvtqz0/qO7xX2D9aXH0+gX25/Y4/zfXG6svsL/zckWXxcJm99Ge3
G3V9K+z13/WI+5xcac89i93vd81K+2/+ug8OrFlmD3SE6IIrC+115nLaLt8y
w973Tswzdqc+e7td33nKChrtA1J2Fc6bVmg/g+coi4N+kv1yPa17Fxn87ZeC
aXv7lt7/E73n6dj3gmkZe07O0EQjEWZ7BigAAECjk8c=
       "] -> 12.98, CompressedData["
1:eJxTTMoPSmVkYGDQBOLywv/ykjaT7Cv+JNmvNZ5mv/AJj3HUgZn2bE/a33lP
mWu/eHvZw0+MC+wdnONdp6ousD/+uNXSTWa+/eH8jzofP8+xj2p3bbF7P8v+
z++4qwudZ9oLzZfa1qc2w36y8Gad93bT7RdErhQ+dmKqvdO5QymaslPsIwrr
XMUYJsNpqcKaCQIdU+zPabV8MW6bbu/ypHNxIM8c+5TtJTpvOxfa74/UeneC
Zal957a3RjefLrMX7fBe7B++zH7ltjzeO4rL7CeB7VluX+Zbc0NMfKX904jF
X7YkrLK3L/g67c/jlfZ3Vh1JNFVZbn+QQzA0XnGRfXxBGdDHM+2fPWYT8Yzo
s9dasDhlhVOj/YeOS3OSfxfYbytkvCq3JcH+w9aMd6d2etn7OIUDXWpmv/ic
6xfDi4JQWtGeAQ0AAGGnk+E=
       "] -> 13., CompressedData["
1:eJxTTMoPSmVkYGDQBOKv3LnMG99MsK/68er1cfmp9nLdn4s6jWba/88UNF/A
Mtf+W+Kd9d5a8+3ruOvDzZTm27u3XqxfcGyuvdHz6gyvg7Pt/y6avcnzzkz7
vBxpRc+IGfanF3TI3cudbj/pBq/q5tnT7I+GVoTFRky17z9/qu74n8n2Erut
PNyzJ9ufkX6wW2bPZPuHO00vFx2cav//ScaVe0Ez7V8GpDRxb5xnr8HXMF0m
erH92tlPBOo8l9v7thxO4GRaaR/spX3sROpye6uTin8m6S2zd781U/Py8mX2
/unlwi+NV9jr2gYZiqSvtK+8s2avndhK+wsqykkc0cvsBc87v6+etdD+2aGK
yriEGfb/1F1Euft67WdJnlXf6NtoH3N2+6vovkL7dqe3UzYWJNkHCa3P3Bbk
b7/uw5pdG7Qc7JkzmSU4HTTsN4H5ClCawZ4BCgCvWJaM
       "] -> 12.94, CompressedData["
1:eJxTTMoPSmVkYGDQBOLyyrPGPWkT7Yu65ikX5021z5udLxxVNtOeLV7uWYvO
XPuDZi+Of1s63/70h4N3nR/Pt/cpFapfcHOevdvCY2abl8+x924PYRHePMt+
8y6W93oCM+3vd/wUPiwww377gkl7+qSn2ytv1DcKnD7V/mWI6Pom9Sn2ospc
V8Q0Jttn3kwNuC872T40RvBR97Yp9rpJGaxPn0+3nxWutLl67hz77rcN8WoP
F9oXg9211P5gVM6l2xHL7RX3ZXgvnLjMftfkyMV2isvs+46m1K1SWG6/7q54
SsfHFfaJ786JxRqvsr96tG73nmcr7TtflH9mZlpuv6+pY3O45CJ7AW2rRhfn
mfa297zvrants7917H2Ax45G+y6wfYX2m68+3xZ1Lcn+HcvdN13L/Ow/gmk7
+zdgWs/+G5iWs18SMdmDPZ/FngEKAPWMm90=
       "] -> 13., CompressedData["
1:eJxTTMoPSmVkYGDQBGJhx80uF3Qm2oc2vlB86zbVfnrjzRmTM2faX278e+uY
6lz7n47tG5mnzrf/27jy6bEL8+1fOf578G3pPPtTjY72unPn2K9y/HOhbOks
+wmNPCkKzDPtGw8e/9nJPcO+kLG5/7PwdPsoRjtl3zlT7R0YuQIamKbYGzX+
2NSmMtne6KCN5F/pyfY+jTptwfum2Nc3TtF5+3G6/ZmDJTynts2xV3D0Xbft
50L7qIfSHyYuWGpf8VB34uq65fbZijd6rVcus09SlPm0UGGZfdHDhBgLieX2
fQvtDbbeWWG/mPHPuTTVVfZzE1tmeV9ZCXXHcnulxDiPGeKL7Cc7bk+5oDvT
/m2j4brJ+/vsZRsXrWU732ivxPhjXZpKkb0B4yQJ349J9lyMR27P7AqwF2Js
KDcWdrS/x6ggOOuhrv1CRgfjs3Mk7cXA4oz2DFAAAED3kgM=
       "] -> 12.97, CompressedData["
1:eJxTTMoPSmVkYGDQBOI4Zobr6z9PsPcXFJ673HSq/Y1XNxULkmfah+9Z4rGC
a669r6O+CAPXfHsPW8On24/Ns58UzaFyK2Ou/cwr/xzuuc+2Xxr4uUcra6a9
EufGhEmsM+xdp83N+G8y3f5saPis72HT7GUqdDiSbKbas6RtNZnLO8V+ivab
NY1TJtub/5998hHbFHujDpUjTZ7T7KUm7HLuU5tlr7Hp8Jd3O+bbsz4vcciX
W2IftWyqioLTCvsHH8IyYk6stH+dfWYOy8nl9knyPY4qisvs0xadSpkVvMz+
5SueiUY7ltuffXT38P07K+wTVk0OzmhdYT/R1GTz5+dL7Q3zxAs32S60b7eu
65L9Md0+7pBi/5T8XnvtLEmnrF8N9qmctbJzIgrtCwQrq3XuJ9pvKa0O1Zfz
t4/zX7Gj5qu9fZzp7NQ1L7XsI8C0lH0qmP5lxwAFABpgkvo=
       "] -> 12.85, CompressedData["
1:eJxTTMoPSmVkYGDQBOLzCsypFz7Msz8dnZW19vds+9umNxsb38+0F/ML3+u8
dab9ROc3eq9N59jL3+jY1Dl/vr3VquC/mxYutNe68OTpvbWL7dcYGSYXaCy1
15ta+4Bx8TL7N/weM0MfL7c/Pu1ifhfbSntxsDkr7VsE52jcc1tl//HKg8kV
N1bZ1yx5IvPFZ7W9Y0/aQ8P21XD+T8cZ85MurbQ/z9xZXcKwwv5agUN73K9l
9lXtWcYzYpbYuwT+vx1SM8+e54jqib+nJtvPiTjkPcek3X4S2J019nt4FlS5
yBTbB6Rd/cFanWm/MndGhq9xEpQfab8UzA+yX/vos8MjOV97plfbNmhed4Xy
deE0AxRA+Lb26DQDGgAA0fWYMw==
       "] -> 4.74, CompressedData["
1:eJxTTMoPSmVkYGDQBOIN9VHHDsgusJ/25qLF7blz7O/MncOmoDzL3vf6IXHr
dzPtn89wydH5P9v+HuPDyGrf+fYXVO9XKF5aaP+UKS5/sf0S+z1HS1dNvLnU
PiHg765Ew+X2m0QdD3veXW7/68daqz3fl9ub/3JW3Nmw3L5z2bYQrkfL7JXM
pv0/G7vM/ucx7ol9SUvt965ZcvVX3xL7+km2Uum7F9vzObiZbF26yD6U69G1
CaUL7cU/VEn/XbjA3t+aPXuaxHz7iEtZte6nZtsnZp7r/1E9wz7BXOfZqWdT
7XkjxTl9Pky2f3phN8hF9uEsvOql8X32Jbo1Gx/P67R3WlXBwVjbar+7iknn
7M9G+2O2xhYTtOrswxecuCxpWmnPPEHQN3dlif3bmQcbQz4W2G92f5xTXpQF
FU+xV3jqe/Ftery9FdicUPsrPHxLutod7BmgAABqHZkq
       "] -> 4.28, CompressedData["
1:eJxTTMoPSmVkYGDQBGLd2Vu2/s2cZ3+ng2WlHccce2PmS9Z+LLPgdGvGPvPD
n+bYO+hOyWyWX2AvLLas7rnVIvu0q5JzPvAvsefnEJDSbl9q/2juU/ubosvt
eZbbHtvhtsJ+a9v3EFvDlfZdZSFz6pettI9P2/j4oPQqe87Pes0TKhH0/X7/
2zJJq+xNwPatsk/M/SO6oHSFfc91tQ8fny2zt8p+f3DevKX2gnvkYoNDFtvr
eVQcc787176/29RYassUqP4u+5fxXc/3Tmu0N4mNjH30qsJ+qlv/CoXbBfZm
YH6G/cRJDak/eJPttb9aX58YEGvfo5V8f3lxuP0LsL5A+3Yw3x0q72tfDeab
2z8Cyzti0JPA8ur2DFAAAIeEluE=
       "] -> 4.73, CompressedData["
1:eJxTTMoPSmVkYGDQBGLHB6urss0W2O9RWcdQOmee/fP3ep3aDnPtA7veuQS8
m2v//oGCeNfxBfb6G+K9flxcZP9ik/GeIrGl9uv87m648myZ/fGXgpwSaivs
H7S4JUanrrT3lmeTbRBeZb9159EbSw6usm9487RqUtYq+77W3X8rv620j9xx
e376/JX2c+QmNiQ2rbRPD9yo5K+90r70VdtSs+0r7B9L7+V7brvcHmiIVGvu
UnvLTfvkQ1qX2Ps84go4/nKh/cXXBfeKb860N45wtm+81mcvqTYDqKTe/k/l
t5mFwQX2gb6fy6cfSbW/D3ZPJJQfan9IdEHfZeUg+/Q9M73k2XztI8C0LZwu
BdO6cJoBCjzB+l3t0Wl09QB0ZJTt
       "] -> 4.99, CompressedData["
1:eJxTTMoPSmVkYGDQBGK9eocb2T7z7HUXfDi7pH6O/YwIf5Pl+2fbM3/4u6Tg
zBx7puvnYv4bLbB/E7s0SEdtkf2iDh/RiMol9j38ytytOcvsZ8xaLy+ptsL+
se6KwuqclfZ9Zw/JC7OtsrfIvXt21fxV9n5Hwx65VK6yX6xqY7L2/kq4Oou+
3sOPL62w731XJOpjucL+kV9E+pb5y+1vHD4dpPBsqf2OB0c1PwUtsTf/OHdJ
X85i+9y82rMn7Bfai2eqr3e+Oct+bailaNzMSfZrP2mYbP7fbr+m7CXX9DMN
9mvA/HJ7xm1y6cf+F9qv33DCw3Fmtv1ak0551bQU+zV5GbHnjeLt14HVhduH
fw0+/NUo2J4B7F8fOM0Fpm3sV4LVudvHgNU5w8UZ0AAALASbCw==
       "] -> 4.99, CompressedData["
1:eJxTTMoPSmVkYGDQBOK/B+of2H+Yb//+QEWCjcE8+5cOpQusAubaf1hQecEm
Y559u4OLgpLAQvsZE3w81FQW2686EPpAq2Cp/Y4DMQl6BsvtDxckWRjOWWF/
1iF9gfGFlfaXH2R+MKlYZX9tQfYF0xer7K8EZGmYTlllf5Ehs8HEYZX9mQtp
GcZbVtqfakg9YJSw0v7YgeQHhh9W2B+akHjCIGWF/daC6B26d5bZrygIsdCS
WWq/oCHAQUNhiX3vA7cC5R0L7U8npBkYz5hp/6mhysF2QZ/9FzBdZ9/c4OSg
uKDAfilDCIMWQ6r9DYYCBguGGCg/1L6DwY1BuSHQfh6Y72p/CixvY78eTOvY
M+AAMHW49MFoAGSeeVA=
       "] -> 5.03, CompressedData["
1:eJxTTMoPSmVkYGDQBOK14Vf3fZFabP/gZYtvSvdieze+J1nOOUvstRV+5Vim
LbNf/UJOum7jSvu5Z6Y/XfZgjf0rJl7Wmt3r7ZVm7BZcfWaDvRrj21KX9I1w
+nOe7fMr3zbYe0Rw3HjOvsH+u9wUq+CeNfbav9PN0messH+z+7no9ANL7PM+
H0oPKl1oH+v8Odwod659eVh+D5/jTPsHRz6JTdo71X5yX+33PY8m2YssPCa0
7OREe42ejZM+6PVD3dVmH5vR2sdiXW0fJZeomDA/314LbH6G/cTM1wdeiaTa
H1HQbdMJTobTe3uerH4sHQOVD4XyfezXg2kb+ylgWseeAQ3A5NFpdPUAdIKU
hQ==
       "] -> 5.44, CompressedData["
1:eJxTTMoPSmVkYGDQBGJehrcf4r8usC9R+FMb7bLIvqPKUT3s2mJ7pq9TY322
L7M/k2YTxVOzyl7swLyn6WvX2jvHv7kiUrbBXvb1nLry/o32lXGc20tFN9nr
XvPh6dfcZN96S1lz1faN9lcMIz4er9lgzzD9oZyZ01r7HTzfNwi+WmGfzPbp
wo73S+xfRYnu+Pl8gX2Lr+hpjo7Z9nEZTNO8bKfbT/kWPbOrYrL992v6Wnpd
E+xvK006MSO6z36uq9f6wjNd9qvkJRP2PG62b5PpfWGfWGXflN3He3x/gf08
sHyWvcvC0Cmr5DPtxf1vs7l7ZthPiMiJkzmWar9hL8dsrWmJ9s5g+Uj7wD7j
p/9V/ewXg/VZQWktewY0ABGXgsvjUgcAurOI5w==
       "] -> 5.82, CompressedData["
1:eJxTTMoPSmVkYGDQBOJZTauPRV9fYB9zk6d1tuEi+3tFTmWpxkvsF5ktXLdX
frl95oxgCzWJ1fbrOl491y9ZZy/5wFKU9eAG++gpmkrvWDbZ7/lVNi+hdZP9
HJOexYrTNtlLHy44eejnRvudHtMOzjq2wT4n7uCChZ1r7VUZdcvrZ6+wjxPd
or7Hc4n9jV+fDVSYF9irX7g2v11xpv38ZzkNz0Om2M+0PZG8btUEe+3Udwbc
kj32alFzUx9Vddorc2Wa82xos5f+cmzBruJGe1Wwvkp7GZmH21VvFkHdVWAv
GVbsvyq9AKqu0F43ZlNBHUuevdoeT5FLeRn20hwhOgVqSfbyER1Rbh9D7GUa
FhVuDHOD0mb2QmBazZ4BCmB8dJoBDQAAFBCHFw==
       "] -> 6.11, CompressedData["
1:eJxTTMoPSmVkYGDQBOKPIVO37L080/5yTORDsei59kt73n5wWbjAfuv/fPdz
cYvt45fEPp0Tv8z+aUytf3LzCvtX1587TPqw0r6+Z6nImoBV9o+jrM6m8a6y
Zz4zl9+hdqX957AbZrs8V9hv+P3S6WrRMvufMQv3rl+92D5Rf09VcsgC+1zR
uTs1l8+yz1D2u31kxxT7NZyzUwpaJtjbrZjN+/dXj/2Lq0v2Ta3qtj+e9O/n
/im99lzRTSv/x06wr50zc4fzjUn2VTOEt3i9mWqvYssYJPl2hn34nMA7q9rn
2IuH3p0QprLAfm9dgu237Qvt5wJNk/FYZG/tuPpIHONCe13jayblx2fbe23R
lX6xb7L9g/vnb5sv6IDqr7EXsVdIO2mVY7//MS/LDOt4+wjV3PclbB72H9LO
3Aq86GAvHhjeE2thDKWV7RnQAAATaJn1
       "] -> 6.92, CompressedData["
1:eJxTTMoPSmVkYGDQBOKpUa4df47OtPd4fdV3a+hc+zcHel/uiFpgv/W7GW/X
pkX2L2UOfvSftdT+k+zzJerzltvfLT/nxn9thf2HL5/TeN+tsN9V28wmvGyF
vZiE0VPlc8vtr5WtmGx+aZl932rWwEilpfYT/r4+09u0yD5nj27A9Kvz7MXe
2y3nlJtpb9sbdj+Pb4p9Wf2Cn9vTJtib523Q3W7ba7+0tUXnWG2PfYNlcMHU
t332yTfbZ8+fN9G+rfFNfHreFKg90+2XryvPeqA7237CtooJk1nn27+ZPmv1
vFUL7ZWeiZ+rc1pszy72rK7k2GL7rwc3z5kQt8h+cczEd6vPzrW3SUleGBI3
1d7iwLSVr+d22UfbcxjM3FtnHwWm8+yBgSG5rS7BvnaLjtaTv172R8Pu6K34
a2tvKlSrqvDP3H7pWVmZGf8M7RnQAACoG5tf
       "] -> 7.23, CompressedData["
1:eJxTTMoPSmVkYGDQBOKJe54vyV840/6kYsfHI75z7Tv2h6XOKlpg37t3+xUP
/sX2nvGHTv/nXGZ/VtZ7ftP/5fYX5vy+dtN3pX2nw9K4R6tX2h9YUua1P2ml
ffrFV7xh7SvsTbJWG6wvX27feHjy9jsHltrP3WqTmPxrkT0vw99Jd6fNtw+6
c7mI9etM+2Ub9O+7202x77eeuVo9Y4L9d07x6SL8vfZbVwXpBov02EtVXny+
wLjPXqC60D2Yf6I9W6Ov1vMDk+3XrJvg9+3WNHunJ37PXnHOss8KzFqmenqu
vWF2dULH0wX2b3qvyr+YuAju/qZDR8JSTi+0/wE2f669xgf26uKnU+wh/u60
t8y8zXCNs87eGkzn2c83lrNwCk6wN35zMvKCnJe9y4tuC90Ieyitb68L1q9i
z4AGAJdzlq4=
       "] -> 7.57, CompressedData["
1:eJxTTMoPSmVkYGDQBOJ8ZXGmXS+n2s+f5WRx8/QM+0lLwlIeXJptfyZNpWi+
x3x7t+UPTcVbFtpfEQ/92Za4yN400fPLr+JFcPGwt5XlxlMWwNUXSqg9XL5p
rn2ouX3Uie+z7bMrzrImtsy0/+Lx4m2n8TT7Ixf3bM8KnGy//MNVg+5pE+1v
CXknM9+bAOf3r3dv/cQ5xf4KSJnwDHtF0VPqARvm2H9d3Fqzv3GB/QbrCg5t
rUX2uZezpky7tNj+K9jcZfZ2gX62qTtX2Msdld2lM3OV/eJX75b+ebTKPuJR
R5hi7Ar7F2tnrjjWsdier761QqBztr1EQ1Ku9M4J9h7fexdbzW62t1/z+vQs
9mKo/5Ls+UwPTK1WDbDXAPON7K3AtBKcz4AGAG/NmCM=
       "] -> 8.52, CompressedData["
1:eJxTTMoPSmVkYGDQBGJTWwneq5sn2mdIz4zw2j3VXvjj9+07zs60D3uw57b1
/rn2kraiO5dkLbAXeHPx66NLC+y3i9VMYp2zwH7Pkou7rEPn2zcLd6ak1s61
35pxy7Pq2Gz7rvDJsjaTZ9nnh084ye010/7Oh4/8EdbT7R8t3im1kxto/k8u
hnMhk+3XLN5cFFE5Cc6H2a/MZDPh2Hag/Y2qUneEFtin8SX4xVsutmdrc3qg
YLTUvmKv/P2zr5bYd5xL3n77yhL7b493R85lWmYvEFzzP5xthf0qrrias2tW
2ns+ORKqd2+lvfiS/Yck5y23n+yoc73j+yL77T9lfrznnm1fLJQt07Rwgn3u
uYTk1d3N9r5rbmzq315sXwk2P8VeZfbEtsCWIPvVQoVHHhk7268E08b2U00+
n5lbqmDPgAYAyFyVpg==
       "] -> 9.23, CompressedData["
1:eJxTTMoPSmVkYGDQBOLXR/sObv451f6h+beZcW9m2N9YGVvEeX+2vUj8ygWv
oubbG5lo3lU/uND+1cqKz24bF9kHGZnuyz20yJ7ZdVFR6eOF9lvC+dVrWRba
T41kdjNnXmAf8zKy63TWPHsjx/mbDwvPtc/at8/19L+Z9vqcxeKvmqbZp7VN
Wvkxd7J9WCVjkITnRPv5zJusf0ZMsBcyk/3zcP8E+0Cw+ZPg6hVM+GJevZtl
7+xnwD3XYr79j1mfazb3LrRfKH+CM23hYvvd19jDGWWW2VeutzxvfnuFfYDy
1GNzzqyyjz7rvCdOabX99V73JXOmrbC/veNv5q0ri+H+c1RdkjZl7gT7W2Dx
ZvsppZIiS7yLoXSy/Ytt704+Yvazr8zo2HNKzdB+75wzUga7LO0zwHxFewY0
AABnDpVh
       "] -> 9.2, CompressedData["
1:eJxTTMoPSmVkYGDQBGKju5ejlodMsQ/vTeIweTLdftbF/HOd0rPt1xpUczne
nWt//lLj29cV8+0XvK1P9mWeby9mV3W0cNFc+xPbCiM0Js62/9T7Wvyp0Cx7
mdTU6wunzICbM2lrvOUx4+n2IfW3bIM+TLU/df7K/LL+KfazX10SvSE5xT7x
0NUnrqem2P85FPfl249pcHuXSDDx/mRdYC/qGep0b80S+8MLl64IXbzC3jtw
tZshyyp7rRUJdVPzltv3L7+e98R+qf3cj2K/TwgvtW9KuXP8Q+oy+/NPFvh7
1i63t/g0n6vKabk923/RbT9vLLGXK2+x/D9jgb2bzf1pcWLT7Y+D3d9t/8Dd
WbnGv8He4kHDChm7fHsTMB1vz6eUZbBul6d9hXdlw6J0W/s2MC1rnwWmde0Z
0AAAKveXLg==
       "] -> 9.48, CompressedData["
1:eJxTTMoPSmVkYGDQBOIVK9Yb/5SdbD8lm8/H5vI0+wUL/VTTi2fZu9e92n0r
aJ79/bbn2fduLrBvZZd8fGHNQntLk+wWnd6F9pnBufm1rQvsU4ym6etVzbdf
+HeHy4v6ufZvF20U9pGcYy929YTiieOz7FWDTfZ88Jthv3euatSOxqn2rabn
igSNJ9tfvHXMsfTMRPt16U8beh9OtHfw5/7oGDvZ3nF1qcDhzGn2e0J/zdg1
a7b9ekuDjz7RC+xnnrtZ6d+1yH7d1FkC59IX25/ydGtR7F9ifzHl2Qez+GX2
nGdtb9xdu8L+XcmfZu7Jq+wvvmNd8OPjKnsVsP0r7HuUdvo/q1kMN1c7auqp
pp8T7GXvaBpEFTVD6WL7yfxLdHYfS7Z/WnzJY7NyoP0ex91W5qVO9lF3e+Ts
JVTthXwur41bom/PgAYADmuX/Q==
       "] -> 9.4, CompressedData["
1:eJxTTMoPSmVkYGDQBOL3bz0vsWZPsV90k9Xn9+3p9mK6S/aaCs2272xw0i/w
mGcfyC7/65LsAvsFrC5HbNIX2DuvEszofTzf/nXzj1lzts61v/z1z9W0Q7Pt
I1K8l7IkzbKPYb7aIlE+0z5+UVyKTs8M+/QHhcoh26bZ58m1Pqp+MMXeSPXj
ziu7JtsLRT4yLZ872b731eS0m3+n2CtwOcYUBs6wz//klmUVOsfe4yS39erP
C+2lG69Z/Gtcan911dJCadnl9ivFJbmV2ZbZ17b0LNF6v8Q+SvKLw849S+1F
nA9XXgtfbt9/pWSVxY4V9g7X/B+cy1sBV/865f66SbMXQsVn2J/Z/lLMfkav
/W6jkxlt+Y32Nkx9EQK/Cux3gfmJ9q3yZ/haYn3tF4D1m9mXg/m6cDoKTMva
M0ABAJKOkXo=
       "] -> 9.54, CompressedData["
1:eJxTTMoPSmVkYGDQBOJ1Jo8fH307yX5hXL/epU3T7J/PnB1gIjjLXu/q8qJp
+XPt94eafPI3nm/PdErKQu/hPLi4wa1EAcHPs+znRl6dEK4/0/4W450Y85XT
7RtU5nA/vj3N/sml0pINCdPs3y7m79GUmGp/1Wpbw+Yfk+292jirf2RMhvO/
5L9n1fCZZn/tj+L+Paqz7OdJO55PiJlv75fzc/t3piX2bR+qWx/yr7C3Wv1b
vWvVSvsAY/kp1ZuX28+pmP/xksQy++yFRrY5Ycvsb4LtX24f/v8fb9XzFfar
BOKfnm9YYX//Tav5xmNL7Zc0CeuekF9ov/P4C0uPS9Pt65+xe73h6LWvTzI4
e3Ndg/3Ba2LCO2IK7Fm8/0ZM40qwtwbb52mf9j6pLa/DBI1WsWdAAwDmG5nA

       "] -> 12.23, CompressedData["
1:eJxTTMoPSmVkYGDQBGIxmTepXOIT7bmvf7E9bz/VvqxB8FyG3Ux7+6+ZbQ37
5th7L1jevCxynj1Pwb3a9U/n2mtemvhNM2uO/YNvXZ95omfZtxhmcy1rmGF/
cgH/zwMq0+2twlLYOwun2a/m3ikauG+qPfs80ymHtk2x3+w15V/Ju8n2DDrb
HVYumWwv1eFXxdM0xf7jWob8RJfp9vxlv/Yc65ltb1AtaP/z+AL741n33tnn
L7VfdOzgW9HnK+3vff4T3Ni+GmrfCvuwrZ0PypWW2S+etkZpzY2l9gWCilK3
/y+zd2NcxLKeZ4X9pEdH3B4fWm5vE/lpmYjrUvtvzeyP+e4usP/6bL9E3tnp
9hP5fYoO/u2xT/rLt8LubAOULrBfkjY93OlUor2DBu/H0gX+9s5g2t7+/Br3
8vdFRvYeYL68fetRjm+LRVntGaAAAIVnmSo=
       "] -> 12.16, CompressedData["
1:eJxTTMoPSmVkYGDQBOKAh7qll2Un2l/Nb+9eHjzVXmBqkcBlvZn2YiWZJn1n
59h3KO4LONYxz940vIaFW2We/d+A98xh6+fYM09OsfoUNMt+0fJtk++vnmGf
tVBzspb5dPtTuZVbj5VPszeaPWdS6aGp9n7xgfeqN02xn8ahfuH+lcn20Ynx
W2L6Jtu/upQhM9tyir3o9edu+Zem2e952efRZzDb/takebZnJyyw//fl9sNH
L5fYB8/lfZ5Rv9K+e/Gs57JfVtm/2RBxNTVrhb1wufR3H7Nl9jfOB98++X6p
/bMP+00VjZbb5yceMsrPX2G/wP2V817+FfZzNXr2u61can/G4Ij4KYmF9kJm
a7UXMsywn9sy/+HOvF57j4aoXQeEG+0jnBgNnqkX2jNdbzkR8zHR3k1SucrA
ws/eA0zb2TuDaT17XzAtZ8+ABgDvrJEG
       "] -> 12.33, CompressedData["
1:eJxTTMoPSmVkYGDQBGLn1U7rP/NMtC9i5l6lEDrVfmtrxFYfv5n2yYwHD0+b
P8deNHJN46zbc+1P90i9D2eaa185k33NJ9fZ9vulZtueUZtpP3eR8Jn29dPt
v97PmsbsM83+Vl/K1Yfbp9p/99XJS3Ccav9ebfVe27gp9nOPXltUvWayPd+z
orA9zyfbb10h3ePgPdV+6ckpNasmzbDfnjT1XkTgXHsO3c21334utF/5zuzA
Vqbl9p+ns9aw3F9tf/D79bQbmmvt/Z3l5O4WrLR3ltrHsFhqmf02sDlL7fed
n2OTrLfMvnLPqaZnTsvtNzVXepjeXmbf+aRA7VzDEvuf9zbIbDReYB98rdHS
9do0eylTfcOQY91Q8QZ7ppLPSwx4CuxPfE0uNv6ZYP/pgYpAWIqPvVOnZVCQ
hrX9QguBc5ELdO1lqrfesz4gbM+ABgB82pVT
       "] -> 12.09, CompressedData["
1:eJxTTMoPSmVkYGDQBOJJ0c5Xqg9PtP98cOIE5uVT7Q/vO3Vky+6Z9nte9uXe
mDDHfvH3F+du8s6zr3W29K0LnWuvPv9LcfDy2fbub36VifvOtL9U0t1rzzjD
PuCg2bnP5dPsL79LawjjnGYvf3FhmUrTVHs1HabbL5dMsb+a4VScKzjF/qRO
7NyflyfbP2tds6s/c6q9soX3191TZtgzFmb+f/Bsjv1EsHsW2qtsUntxac4y
+0fiUo+8AlfbfzFp0cxducZ+05NPzO3xK+3va/mEnXJbBrVnqb3gDT/1pQ7L
7C8Z/mTzZl1un3f9c8pUweX2tV5Ky7Wjl9hf2MeW95Bpgf2bNEMdu5Zp9hcb
riwX/Nhtf65H9tDjB/X2r+M9Lk2oy7efsW2xheOzBHsNsD+9obS1vXzWj+89
+Ur2mmD3StgzoAEAZcObRA==
       "] -> 11.97, CompressedData["
1:eJxTTMoPSmVkYGDQBOLn107yzs6caL9mYmOqa8VUey3eX99ka2bat0kw17+f
OMe+mPG1m8abufZSXF9+B2XNtU9eMbn0xeLZ9kU+lnvft8203/3qhlnrgen2
h/asvsWxaZo9a2fFBqlfU+2vXT4sdCF8qv3FhEAlgalT7F+9uu01/e9k+zNv
7xkGXJpsv+PasZ8dOlPtW5MDv27TmWH/OsQ+juPEHHuWK8fUHk1ZaP/239v2
yROX2a8L2MNbo77aPubagYspm9bYr7h84N9eqZX2WUe39BsbLLP/cuGAtnjz
UvuihQJBW7OX2ftdcpj6ym+5/eWS5HgezeVQ+5fYi7++F7fSaoG9+s/nOxVf
TLPPlGZLW5HWAxVvsP/19qFrEn+B/YmbZ74E2yXah7K80314wNdeEizvYC8G
pg3sz/fV1fUsVrVnQAMAm4Gexg==
       "] -> 11.94, CompressedData["
1:eJxTTMoPSmVkYGDQBGLj1VLWq/dMsl/zhIn5Zf40e8NZuyL/882yN1mzd+um
H3PsG+NNSjf/mwvn1/kaSjKIzrb/f+/R9vUPZtgr8bzIK7acbv/vzP3oP9+m
2uesjb50IHSq/VTFU3VeklPtBetEW54nT7FPSft059eryfZhr5T8lP5Ptne2
fKtqPmkq3JxVlxcp2h6aaz+J/7jSdP1F9jyXNsxYF77c/vkPt28bP62257bw
59Q0XWs/c8+5juvlK+1vi938Fqe5zL4o+7DkWu+l9g+vONh5yy+zD7Tbl/Ty
0zL7aatO66j0LbP3yAve7ym8xD7BSH/f+6Xz7R+D1U2zf6u7tv9IcZf9Zike
cWbdevtXXF5BqXfy7ENfHz2haR1nz5u7dZH1Nm/7o++W1PgaWtp7g8X17CU+
NRsUqovYM6ABAGozmGI=
       "] -> 11.63, CompressedData["
1:eJxTTMoPSmVkYGDQBOKzEvrnRJkn2q/X3/CH0Wiq/QILwZgk7Zn2wgd6VhtV
z7G//G/OefWcufYnOT/VTfabY+88OVEuv32W/UV2Rfaf+TPsbeZvKE24N83+
8a9f9z+tm2rPfkMrSlRzqn1J9leG6+en2H97yf/RTW2KvdC580H6uyfD+Sar
WFXPHJhq/+G59EJr25n2j99st/iWN8++4XHN3cNHF9k//MlgkWu1wn79Yn/L
G6Fr7SO/84vIT19nn1Cu2BAus8r+gOzp1Asmy+wd5U5YCr9fYj/Z+8MsyblL
7fX0N2vsL19mL37M9fBj7WX2W3We3nl4b7H951uXFh4pnG+fn3dA4bvSNPuC
VJuXqvLd9s9efCoIWF5v3+bO8ZvpdL49JDwS7X9dZ29aIudn//lRjKEAo639
PpVo32n+avYzAtZzud5UtGdAAwA56pRh
       "] -> 11.44, CompressedData["
1:eJxTTMoPSmVkYGDQBGJuJoXLS/0n20/i2Xs75NE0ex1rq7JSz1n2XL/MI2KY
5trPV/z+ZhP7PHsZOYlXZ6/NsX+4aqfe+u+z7K9N5E5Ys3qGffm1Nw2rlKfb
s31/y29+fKq9S2ld3xG9qfa+7XnhfyWm2k8Tfz/vcNYU+8OF87vv/51svyt+
/aFlwlPg6leaRxdPkJhp3/tXLNrReJ593omCUrGERfYuxUf0i2Yvt7eJTVg5
pWuN/b4E+zWVu9fa1z9Tej2haqX96wOyW3s4ltmHz4xTMGNeav/3yV+3f3eW
2q926jX7v2CZ/dXJR/f9s1tmf3Pe98bc44vtbaOXeTl9n2cvIX1u4YrZU+1d
C7kuynN02be8VpvE4Vlnv8L4+dbXH3OhdKz9kZKXl1ksvaG0tf23byD3qtoz
gt1tas8DpkXtGaAAAK+3nWA=
       "] -> 11.61, CompressedData["
1:eJxTTMoPSmVkYGDQBGIh643C1hsn2z+Zr710suh0+7QDdnLck2bZK39694Nt
3Vz7eeFlP/pXzLd/O/uuQOGE+fZuEc1AJfPsYzwYHs45Pdt+0jzBk0YvZ9rf
Un+bruo/w/7Lpa/RH2Kn2yttPMEmsXWa/emNV0s8vKfaq+RVn5r+c7K9vWTL
viSOyfaMHM9j7mVMhsv7XHrxdv/xGfaHqvZqnqyda6/3bCc724FF9gJ1//x3
5yyz18wJaWAzX2Ef3XbMM/XjMnu//tkb7XmWQe1ZZr+pdedtk+gV9ufXr9Pa
3rHSnvegd4+1xkr7F7dPHT5Vscz+QHnsgkWrFtpbz5czT66fYS+8X8VpVWqv
fVn+1GU/VBvtgzkZLe2nFkDpBPtmtcvdR5S87Ys37J7xXM7CPh1Ma8BpBjQA
AK1Tk90=
       "] -> 12.54, CompressedData["
1:eJxTTMoPSmVkYGDQBOLtL+Y/a30x0d63cGfjFtFp9s2bnHpqG2bae6zqu7mG
e679npjvh1Z9nGfPsiPiyV3G+fY/z15beD9nrv2176of1qnOtl+9QE7jif9M
+wPKStmbfk+3bzuVW7aZY7p97j079sawafan9yzObhKaas+4VsdE9v9ke0OZ
+GeysZPtNWZzXGg+N9meRSwioZF1mn2N4ZvSxx9n2k/Jk1Z3UZpvP/OJa6/s
usX2BrnxGj63l9snue5l22i/0j4i2vrIplXL7Vce5vg4i3eZ/cu5wn+M+5fZ
c9Q39zzlXmFfZrM6JEV9pb1nZN/0ut4V9pZVp40Z9ZbZJ4ov77WsX2j/cMLy
D3U2M+ydNC0OC9X22s/9U1AebNZoPwdMF9rfu1bd9GZ7or2xeve0e/F+9vr7
4rOqIm3s5d9wCG3y0YDTDB7RiYrGAvYMUAAAgfuSyA==
       "] -> 12.38, CompressedData["
1:eJxTTMoPSmVkYGDQBOK5shYLRNSn2F891eukWzfdPqZNcvuxj7Psud8k2EXv
mms/+a0uW9bu+fYu978bv5w3336KcX7kfY959grsDNJ+n2bbmynN/+6gNcve
29buinHSDLg5gl7L7y2tnWb/f1fXirkJU+39+ZnOTeaaYm/T8HR699tJ9keP
f97EXzPZfsOakGsyLlPtX0SuqjCdPcP+wqaOr+Eec+3nJ1d+7tyyyN5XTeFi
stkyewvuxi8F/5bbX8vVe/P8yDL7f+Kv/j2SXGa/Pk24efm2ZfbKZsrZn4NX
2MeeieKyqV9p/3wb5/mqkJX2QmB3LLO3O6b2mqF6IdyeJ+3P6q5+6rEPmt1S
UqfaaF/p6tBeWVVg78CTYVfGkWC/0o/P7FKDjz3LbpD7Te03gPkycJoBCmB8
ADb+lU4=
       "] -> 12.59, CompressedData["
1:eJxTTMoPSmVkYGDQBOLjM/nv3MydbH8g8rVN1o9p9o2Myrt/Bs6yrzz4T7rr
zlx7fZbL7NyWC+xLlBSUfcoW2O/avzNd+P58e+6J28I6quban570m+t/+Wz7
g2ueLCxbNtO+XJonqLBhhn3youtPcrqn25edEHqbcmmqfc6j3813GKbYb1W4
nXe1YpJ9HYd5zxX3Sfare/dmRYZOtp90JSXu6aup9nd2mAl/3zfTXumf5vlT
OgvsJzZm/7xhs9j+bXfFtkfhS+3tN+RxpSxcan/iDYfjM+ll9n1bLvXpblhu
/3LffW/z0yvtMzNi6myVVttz2u39WH1mlf3RM2WFeg+X27O7XjwUdmiRvf5d
nfQKjln2v7Kq/SYY99sn/XkiFaLfZL9v84+iwDmF9nvBdKJ9mFL/st4Ffvbz
RDr/hiQY2deC/SUBpTXsGdAAAItTmNU=
       "] -> 12.87, CompressedData["
1:eJxTTMoPSmVkYGDQBOL7oQu5k/wn2gc/dnaKs55qX7T5r81Pz5n267ScjbK1
5tpLJIi0XLo3377B4fmrbKsF9qIzzpl/K5tvH5Ub9Y3Td669V+vfij2us+0n
Kp1vXtM8096IVzR5W94M+zkP/zKY+U23D1/d2We1eKq9QKmojP2Pyfbssi7m
qw5MsmcO/ffqbMQke7fDOoJvZ0+2j7UWVf9cNM3+yoS/K08fm2Xvc+2T9JpT
C+w9u4tiTzIvsZ/UqSOzUGyZve0LhV2BrMvsX2hZ1H1QX2afuv7w05lly+3X
ra1dUti50n5u3OE+/fer7OdULchw3L3KPrOc06js3nL7qVfW3Gq+u8je+Wvh
A+ayWfb8IroZ4coT7NnA7mmyVzpy3rBxUpF9itG/8AVXk+29Pp3/undagL18
//aMxTdt7FuKdHY1iajbPwaHl6I9AxoAAPDKkXg=
       "] -> 12.91, CompressedData["
1:eJxTTMoPSmVkYGDQBOLGd+cmZ3pPtE9o0Di6KHWq/WTm4A0JPjPtY5784rIW
mWtfyc8dKHpsvr25a7GaCPsC+y3+WibWDvPtvzhWVIV/nWOvtn7hnrZPs+x9
py/7dcJ8pv0z392zE8xm2FvNUG5PUJhu/zqi0eBS31T76scc/79/mmzfefCI
ScKJSfY7avYLz+yaBBfPDJZLm/lomn3Tmf8etZGz7a2alO5dNFtov8I1Z83W
6UvsZ/JJul5assze5uOuHbdtl9n3PeouSuBaZv/r4N5djJHLoe5eaS/47/1T
9QWr7FdE54a6NK6yv6uod/Ld7OX2hlZrJy5at8j+p48d/0nfWfYHqrezrb3V
b39709R3T6Y02Ztf+Fx1+3eRfapRuMbMBcn2x6KqPRkTAu0/7bn3bR+Lk71E
eLv44r2a9mvB7lGB0iz2DFAAAMninF4=
       "] -> 12.93, CompressedData["
1:eJxTTMoPSmVkYGDQBOJ+yWqRNZUT7UW/qzW9zplqH33/x3WN7Jn2QYEaJrUf
5tinblvwhDV5vn32Q4vWv33z7f24HJLUN8+zd7gQHzQtZ479YcY/wR8mz7Jn
tdtn63Fshv2LtKNSRa+m23tUNagv+DENbq7qFPupBkxT7OtrkhjTn0yyd2jv
eJnyfpL9D3m9eNGJU+wVDdkn1Wyebl9/1DJrRuIc+wWznL9N+rvQPlJ8ptXT
3qX2NdxNT5l7l9vXSGr92zR1mb3O4naWUzLL7P2XSpyYrrLcPt35ouHx0yvs
hdvc0jpEV9kHVivUdXGtst+wSnuPmNZy+wncl3//KVhkn5twcCf/+5n2GgeP
nWHO67fPuMBY32HSZJ/7e6Z8Q0KRffelSU5hNsn2ekoClndqAuwXP5aKP1Jl
bb8CTGvbv20S9bnwW9WeAQ0AALqdj3A=
       "] -> 12.87, CompressedData["
1:eJxTTMoPSmVkYGDQBOLTj0T2V72baP/9/FEZhWtT7XueVU3Q6Jxpf/TTOrsI
z7n2ejz/fndvnm+fdaNCIeDrfHu9Pf2SHy/Psxfos7vI3TLH/jhTyvT2VbPs
TyS1Xwp8PcNeWXbW1v5/0+1vPNSNW8Yy3X43s/eP6ClT7de4vH40+89kezG5
RrGUF5PgtMrdB9oqDVPsA6qUl+t1TLe/cvDwGnenOfYmPJJX7+5caG/kcynO
02Kp/Vf37IIO1eX2N3Z+e3NjyjL71Tz/JeZrL4OL50Sw8Vb+WGH/Jf5th5rJ
Kvsdk4tSkj6ttD9xaBWvjM5y+6BZvRG9XovslfaWVR3dO9M+NrP9rZZtv/3u
wxPzPog2QekiqLuSoPL+9g7er/+W+FnZl1YU7Lu+SxlOM6ABAL6EmDE=
       "] -> 12.86, CompressedData["
1:eJxTTMoPSmVkYGDQBGIQzcAwyX6rduBuoa1T7Scc/Ckxp3+mPdvz5AI7trn2
c/tBAvPtn4G4z+fbn3hQw3Pu+Dx7EPmgZg6UnmX/zuvKOpe3M+xvT10R23lr
uv0voCkHf06zzwpfVKaaNdUeYs8UqPgke3aw+ZPtFwNlwxdNsT8EsvbgdPvO
WyAD5ti/BZu3EKp/qX0KyPrk5faLwOqX2f8Hg6X2QmCHL7e/A7Z3hb0ImL/K
/hHYYSvh8hbyzZ8NLRZB/TPTPmg3SKbfXhVsQROULrLfA9aQZA8ODu1Ae10w
7WjPIAlytwYazWHPAAUAMbyUpQ==
       "] -> 12.8, CompressedData["
1:eJxTTMoPSmVkYGDQBOLrWq/83b2m2E/ZL+nFmzDdPuKYcr3xlFn20md1t0Se
mGv/kPV5Xb3jAvvv0WX6C+YssL81mcdFXnmBvXB0cOXPlXPtJ4V9DzVtn20v
axawwnDhTPurB49H5xfOsO/1tedf6zjdXl3Q93rmjKn2mz8s1UzbNNk+VK1P
p1l9kr1FnIoj07qJ9tk1sncXN02yf9tQyZCxdIr9Wf+3CvzBM+zdK31EZ9fN
sw8CcSUW2d9ODs8tj1xiL7h7r5qn7VL7sG83Qm/HLrM/LdbAfN95hX1w77ZE
5tZV9queflZu+7jafmp/SnHqtNX2d40XTTvfv8J+ZuLKaFGPxXD/XVY04tzP
MsE+ZkZG+mPXJnuDN55si/oL7YVUHkgpiiXaO7AX3bJK8LNPa72qrHPCzN4d
zJeD0wxQAOMDADtIiYY=
       "] -> 12.86, CompressedData["
1:eJxTTMoPSmVkYGDQBOK97QbrUs0m2r9Rj725VHeq/VOb63evWM60r5y+qrTH
eq69r827dxyKC+xtWwp1N3cugPOV5/w7fV5xnn2xSd7kGrE59hHbKnjZTWfZ
BwXbaH/nn2nfVL0p/8fV6fantyeH/fo31f75EYXvUzmm2IdeYXcObp1kb7/T
b/7bExPtW5j/dOxcMsl+34+MyfZ8U+33Zy6skHw2w55Zh9VT5fM8+0im9M0a
2YvsGfksuS+uWmJfL/ijuzl8qb2uy+qgOcrL7DetWrY17utyqP2r7F8um3jQ
c8dq+31L/7zeUbfa/sznfSdnTl9h/+9G9Mxp2YvtT+lL2VoazLZ32nRhbkf+
BHvbA2cWBCk12ydPZmLjKyu2d1bmbE5yT7EX6oqKbF8ZaK8+teFU1gkb+6kn
S3xvvlOxj9fT/+KaJm/PgAYAMa2SMw==
       "] -> 13.01, CompressedData["
1:eJxTTMoPSmVkYGDQBGL7QL0FIesn25dymglYfJ9mb9bYad1cMMteT9K8U+ri
XHvXnQ1Be/0W2E+NKHp9Y8YC+7kv2dvWay6w//zjTtq5l3PtGffNjoo8Nds+
Wsnn+f8vM+2llrY2Tzwzw34Be+rfa3um2x/w3p1uyDDNvv+DvGXBz8n2Vl8O
xhnlTbKftfWezu+bE+27J2/+7rtjkv1U356qSVZT4frzpv190/FzHlT9Inth
+WuRjLOW2Jfbxme+cVtqny5tYmKvusyed3vz8hm/lts/eTh9UbraKvtJfLUb
pvestq/pf2p5QnO1/Yyy80kMOivsbxstnZDJtNj+d4I+0Gez7L9K9u9cyDLB
vlREprEutMn+6lULf/eDhfarrnMmrfidYL9sWzj/1Qd+9j8up9s8azOy1z56
f+ndzRL2zmBaw54BDQAAo8aY1A==
       "] -> 13.02, CompressedData["
1:eJxTTMoPSmVkYGDQBOIev/A0oeWT7TclFWc3iU+3z9j/dtWpvFn2CjIZr4SO
zbW/+vGO2in/BfaKEofKHWcvsF8fl1XHp7XAvu8y5war+3PtK44frfx+bra9
ndbRc8wfZ9rzTjToVjs8w957vS1v4brp9g0n76kvfTnV/kaJzfbOT5Pt3/xV
iOVNmGQfvDFst9zJifbLby8vXnNkkj0X38VfaQpT4fr35sz7LM47337xzY/2
C3MW2WvOvW7NM22J/bMakbZtQUvtRUQ+T+3QWGY/7apS3Iufy+0vldy0ea6/
yn5GRNO75XNW208NO7Nrjstq+8e/2dfHu66w/8zYe0RZYDHcf+E7M6ayLem3
r3Wrn/7Urcn+yc8tX7+tL7TXlNG7H+6daH8ob/vCo+qe9nyTPS2v3DWynwvm
S9pvBdOa9gxoAABtt5nw
       "] -> 13.06, CompressedData["
1:eJxTTMoPSmVkYGDQBOK6gP/vPrNPsmfpX573mnGa/V7nbyWKS2bab02LvNPd
M9de8dv11zfMFthv5w35mDB9gf2kW5Mue6susF+obtuWzj7P3v7ivamBz2fb
r2K5JfdXbpZ98d1iy+/7Z9hzOaSf3bRjOtxco5C+aUmfJ9vf/jq3walwkn2c
ZOm+m08m2q+s//6T+eQk+5vx65NvO0y1VzJwbpr3ZYb9rAd9XJYK8+1/6mhs
jJmyyF5FcKWu5d4l9h2b6tY0lS613/ywbPsks2X2/Dbzdq1lX2HPuM7xcIDl
Kvv+On7fVZtW2y/aq734nPlq+yXBUgdMM1bY200v/t+tudh+2x/3n5/2zLI/
5VPg3iozwb7TI/fky6VN9uf/6i/zuVxoz5fjwt4omWTvYP2h4tU2P/uq4qSw
uA+m9lP7pV0lehXhNAMaAADUgpZ8
       "] -> 13.08, CompressedData["
1:eJxTTMoPSmVkYGDQBOLfN5NSf7hNsbdb+/KJx+Tp9s/YkrhCDsyy17r1onMJ
zzz7rcsmK/vGLbB/OXPD9etzFtj7faiVSdVfYP/t2emrkufm2u+4fPVW3a7Z
9qJW7yw1j820X/k5m3/nmhn2i41vdzGXTLc/zyb/o/buVHudXPNwjZeT7cMd
qo8sCppk33nZf9ulLxPtD6ht1dlxfpJ9msLT/oyEqfZ3n3Ucdn49w15/ViVf
lOt8+17jGRW6ExfZT2ueqpC9ZQlU3VL7C2bOkau1l9nzSIl+lvi43F48S2h2
mMgq+22LN1YG5qy231LcK6Eit9q+5ILWLwaFFfZRCw63/X23yP7xMkmPn8qz
7H8vi4k6z9ZvD/ScgIRIk31Qwyv7t5KF9s/B/kywXwR2v7u9BNgd+vYMUIDO
hwEAybmRDg==
       "] -> 13.07, CompressedData["
1:eJxTTMoPSmVkYGDQBOL11xdH7z49yf5qUpsMk9s0e7a5HyVctWbZH5nXmh7Z
P9d+d4XHXgvXBfZ6G+Wz048ssFdhmq6fHbXAnuPVz59vLObZX67zu/BfbQ5c
n7/kshtNjDPtZ0yNmnHgxnR7loCX5nOlp9mnR7+fXftlsv1l0TrrKPNJ9v2n
OFce651ov0RDWmF/4iR7R1nRPfc6pthnrvheo8o8wz7tyH4D5Sdz7etWy1h+
v77QXnqB2FWx/4vtM2cJL14mtNReQS7+cYb1MvvQTi7eMN8V9pVXTxwrXrnK
niFn4+tZf1bbV4u8PTvn+Gr7NZ+z+XeuWWFvf+/Dlq1Zi+03F26R5X45yz5/
b/63i/4T7Eutd7Co9DTZG35wLprwqND+7ZLz9/9YJNrvfv9HO1bV1747o9Ov
yMjUngEKIHxROB8GAOAVkHA=
       "] -> 13.14, CompressedData["
1:eJxTTMoPSmVkYGDQBOJNH77GqcRMtA+tOH9jQtBU+2//VwT99Zhpr81mn1Dr
Pde+ZUrvRyu9BfYHWZZ7CW1eYG8ucHhNaRCQTtVbZp84z36jKs+6c45z7Jni
Z8zYHzfL3rmlePohlZn2X7QmMW26N91+y9PEyP73U+1LFhhuyGGYYq9zUUPw
cuok+/bMJY5tMybazwrKqd0fOcn+Mu8Rg+y5U+wXyLw/Xho+w7755Y9XLLbz
7Bvun/bmf7vQnvEW48kjZkvsj9v9328hs9S+M07A5qP2MvulibedDHVX2N+R
Mf52p2CVvY/eQvPIn6vtdcpEut9uW20/1Vcr3PnaCvvj6668WtG+2L7G/rRX
XsZs+/nsesqvZ02wt9v1wYdHvdleZm+56lO+YvtisDtT7DeCwyXQfvkxmQwe
HWv7kzf3zoqVVYLTDGgAAKabkdc=
       "] -> 13.17, CompressedData["
1:eJxTTMoPSmVkYGDQBOKTwX89bS0m2vsoL9H6Yj7VfhbLbBtZp5n2e+cFdtYq
zbVvz3r894fEAvtu4ZhLpjUL7M1bb7sv0Vhg3xKtHLVEfZ590r77oUUcc+wZ
emoq36rPsncrk9rU/W6GPVBQZs7+6fZ7A78WdL6can/890dDhS+T7Zsz4wXn
F06yd9PcN3P61on2j+b5L/06YZL9oWXFF6+8m2Ivo3/rzaEjM+y1K1Tyj5+b
Z69skl/rEbTI3lLLuWLr0iX2R/3fLBUMWmrvdk711AqjZfZHvz/o/cK7wj7h
YA6vi/sq+86Y5W7/zq22jxdNbzRdutp+EdOkwqWrVtgLWzQC0WL7CVHzqtvM
Z9u/9vBJ65k9wf7ASobOZbrN9nUiDzcE5xTbB1YoddvbpthzvZRRmvAzwJ4D
TDvY/52ivCDpiYp9Tbzph8lh8vYMaAAALvGRWA==
       "] -> 13.14, CompressedData["
1:eJxTTMoPSmVkYGDQBOKmU31Tl06daK8pv2J2d8NU+3PFBxcWZs+0n58sMqfH
fq59ipjUnOV6C+wjSjlE3sxaYL947WHdGwEL7DkDXNaXxcyz57mzakqu5Rx7
5ZRG8QT/Wfb+rnl1Auoz7ZcenHLz6/Pp9vs8s2Ne/J1qnzU/LrKUY4o9U1jH
/xNJk+xh9k5XXlqZHD7J/oreC9W5c6bYp7ZP7Gv3m2Fv/Lp28WrXefY52kft
cp4utPdkumu8z3qJfWbk6mc/JZfaG1WxbTytusxe7cPzP2E6K+z1kiyf3c1e
ZR8mkrYu8v1q+/KNzy8L7Flt/3NjiP+T0yvsr5bMniHRvdheSe7ckicJs6H+
mWAvtn7e4zaVZvupDd4HVB8U2U+1muG76mOyvXPljLIPiQH27+efvuIh4Wj/
CUwrwmkGNAAASaKWdg==
       "] -> 13.17, CompressedData["
1:eJxTTMoPSmVkYGDQBOJTCfKvOKQm2dt3LlcUfz3V3sRk0iOrBTPt06UzQ+3q
59rzn/rhkuO7wJ7vQJ682N4FcL7qscWu7Tnz7HV+hDKa2c2x//R44tN1obPs
y+rPnpmtNNPeMmZXxeSH0+3tWx7xvVGaZu+6bcqpWV8m23dJrRS6HD/J3uct
98ySvon2XHO557xwnmTf/OJbmErfFPsdVybdCTKdYa96OiNik8k8+yw223jL
2wvtjxgbObYKLLFf9CeJa5/QUns7sLnL7C3Cv6ZmSK6wv3jg2s/JFavsc+3O
3Mj+sdq+P83n+sa5q+3FtDaEfF+9wv6YU2MlW+Zi+4KgB8oSkrPtBY6CDJxg
735qhai7aLP9icALG9sPFtkfs92TdntBsv355qZcs8kB9kv0dQuPptvbH5eX
+3bjvQqcZkADAIyMkfg=
       "] -> 13.18, CompressedData["
1:eJxTTMoPSmVkYGDQBOL24jrmkx8m2tuaX5TfcnCqvXxaqs/71pn2VzV3ZNwK
m2t/7ievymH3BfaOpgcnftq5wN7C5a20tN8Ce7P4KGHPxHn2C+PDz+22n2Ov
78FrMS92ln3j/oJz+Qoz7S+ZXUlxfDzdPkG+65wy4zR7j3uHIpaxTrE/6/wh
YUX+JPu9iR6lP6dPtFeVKm70CJtkn+T8eanpxCn2BXdPPDrgMcPe/tGjEk3R
efaeUx5IH7y70P49u4MFm/wSe8E4l985YkvtOTzZ1zVLLbP/LNcrvFFphX2+
+mr5ZQWr7B1nMACduNpedoN755W1q+0rzs2JmLFlhf1hvc3C+4sX278INmJe
6zfbPkZn2amu3gn2XBNvxiy3arbfbXt/7nP2YvvIJ5el03OT7VnDlFe9WhZg
P/POuZzb3Tb2B8DyynCaAQ0AAKWDj6U=
       "] -> 13.18, CompressedData["
1:eJxTTMoPSmVkYGDQBGL9etWrz9dOsVeR3cWW1j3dvpZBJXPNiln2HW0/Hl97
Otf+g4nh4r7GBfZxect+6HxcYO/Zlra+YeIC+w1hFWX6S+fZP+tIvs7ZPsf+
dOzOgBMds+xvM/XH3PecaT/X63zDLa0Z9k3yqr9m6EyzZ12/1Kn/3WT7OWpp
VwwFJtkXhT1zvBkw0b7dTq27dcNE+0WZFwSPr5ts/9vHqoT3zDT7Zue+ZY7u
c+xDqtiuhB1cYN/c+2Gxi/xi+7o7u/Yw9y2x1zr3/u0ymWX2DBOWbFyUtcK+
88vh3qYbq+xNnv3Yp5q+xl7+347SSvY19sel/IWNX62wn15q8PZD3WJ7l+5z
p2w0ZtubzAM5ZIL9Jr5lsvfym+xVfgZE7S0ohPozwd6e9Ze/0Gt3+1VA0yWe
2ENpfTjNgAYAUQyYAg==
       "] -> 12.92, CompressedData["
1:eJxTTMoPSmVkYGDQBGLBC4XCt6wm2stXqUaGm021X7rbvM++YKb9x7oLv5XL
5tprXO/+eiprgf3OSdYZV94ssG9Zr8to0r/A/nDBHHMnsfn2jbKeZ+ufzLE3
myK36BvrbPs5rQlnKw7PtD8Yu/fC5LIZ9js7HuterZhmDzZOdop93lGvAx+K
JtnzmrJtLkuZaP8v+fBEn4cT7V2CmmKKXk62V9gyefam2On2TiwpSyVuzbG/
tK3ndZHBQvuP67cDnbrYvmdf6TPfLUvs2Yu5y9PYltlzrq3ceVB3hb1bauJh
hc5V9uWnrLK5VdbYz91/jv/Kq9X2QZK5znN/rLDPdBdjtN6w2P7Vym8RqRWz
7edermu5dGmC/ZUPv3TPhTfbn96lnMu+uth+82bObrHqFHuOWbOChPsC7b/o
vrnQauIEpY3s19canfI/pwKlWewZoAAALgeaSg==
       "] -> 13.05, CompressedData["
1:eJxTTMoPSmVkYGDQBOLne57dPf91sv2eFbtyr+pNt39UtE2oommW/Y64rkW1
u+fay5nN5vucs8A+eb1Vcvr1BXD+/CmVijrR8+zdzWKqnrnNsXfYlvbC1neW
fZFXx6sHvDPt3Wb/FNvHPMPeTpqlVZRrmv3Ue/tOGN2ebG8gLZl4RGyS/Q82
prMVMRPt79t89Fb/M9HeAmSswBR73vZHTUWe0+0bvIr5jBjn2tdbuun2miy0
X+Ts3hndvdh+5rydguw3ltg/vB683t9+mX2XyMxso7wV9mvlZh1nOLrKPk/1
A4tpyBp7zTUBGw68XG1/vtfiwLIbK+wDUuVL9hUstld/E5r+5s0se63Zyuel
ZSfYl07ZsdWiscne66nmI9HyQvuDn15Z6C5KsDcOvKcuOtfL3gpMW0FpLTjN
gAYADImMsw==
       "] -> 13.24, CompressedData["
1:eJxTTMoPSmVkYGDQBOJp79+wz1CaYs9rOGONUuR0+9j5B8IkVs+yv/Yg+/ei
h3PtfVP6Tq0uWGAvv84xmffNAvudv3x8E+sW2L97GyWj2jbPXspBbGWs2xz7
ixKebtcjZtkv+pfFcpl/pr2qXfvZJX+n298V25UlJzDN/vHUT38Ovp5sXzp7
0fxlkpPsY/s216mUTrSfnac6y/rfRPu9h/KZdNkR7uCuajrvxTbX3m7erw8z
DBba1z/6+0y0brH9uj+3NaSOL7H3Xlvx9rLsMvuNR/7dfeq/wj4e7O5V9vbC
Mxd/0lpj7/EtSeDPqdX2YhWfP0/cu8J+6daGh6uSFtsL/NyV+O7hLHvdkqs2
CjoT7BmVpDY8z26yN99t0NI/odA+7Srfsck3k+z9b+rUsmZ724eBaWsorY1G
S9szQAEA3o6YCw==
       "] -> 13.26, CompressedData["
1:eJxTTMoPSmVkYGDQBGKu9w7bl4hPsk/g7nFf8X+q/Y/lbuvqFs609z8y0a6p
c6792gPu51wiFtg7T7hk6Hdqgf3SC5XFXIkL7DObuQMU6ufZpy997esUP8fe
WP2HFlvJLPuYF2/fW1nMtG9Z+XhL/p/p9vbeIXf2KU2z9/O90B/6cbL9Sz1O
n91Wk+znnd8tub9yoj3Mft6zCTubzKfYX+MECUy3T1ii++Vb+Vz7Zfs7S34W
LLQv+3s1tPLoYvtwnXWv634ssVevfnWa33aZvURlHhCtsGdsV+FasWKVPdAS
4TTjNfY3j+q5Fj9Zbb/V4vi1PddX2M9fe1t67szF9nnLVi7vdZsN9ccE+1Q9
rfmix5vsT+RdfHAxtsie6V1TbKRBsr3ZY3P9Q5v9oLSdffRz/WnvA7TsJ72X
T/HqVoTSgvYMUAAAmGeZ8w==
       "] -> 13.22, CompressedData["
1:eJxTTMoPSmVkYGDQBGLJxoCsBK3J9sd4Sn9/2zDNvnjGzJ5e81n2Wl2KZzyu
zrU/faNicWPGAnv2rtlJp58vsL9mdydwWf0C+4qQmxM8y+fZV2m+fvo3aY59
Z0rCy2ups+x/mYbw/bKYaV+Wu/qho/IM++YVCk+l1KbZ14if7171a7L9Ajnu
N2e0J9l7vntfsbxoon1XkEt/89+J9u21RlbnBafYy9lOyJPJmm6/p9f+z823
c+w19hzNtdRdaO8qeU/5c9ti+6cJ9Szt15bYt4LNXWY/4c3iqbKxK+zXe+7x
vr5tlX1KrErnFpM19nYVJ9S2PF5tf/zVlL9XLqywt95cVXouf7H9dT2JddfZ
Z9sfVXX3eR8zwf6GzJ/glvlN9lN3LLddIVJk/+7FoQ1nzybZ7wPb72N/GEzb
2Dt19Jxqija0Z+ZOS16nog6lxe0ZoAAAGSOd9g==
       "] -> 13.27, CompressedData["
1:eJxTTMoPSmVkYGDQBGL310JMct8m2aeUly1ybplm75p055KIxiz75Hf2xVbb
5tqHXTityJyzwL775o2dRo8X2O/4f+bljbIF9pyLwoXf9c2zX7dfbvKNtjn2
E+oeN4lnzrKX/LhfiEtlpr2G4sJDwVwz7EP/5CRN1Z1mXxKjf0jj12T71Gl/
P4oaT7JvdnzxkLdgov1C89+JWbKT7H9LmjyqV51if65zwqVFRdPtOcP1mzvl
5trHbX7S2eO/0D71oWpT1eLF9tX2Hlqb7i6x36adp5Vtscz+Ss5KK52wFfbz
f745dHT/KnuGEjFpBus19h9/8NwOfLLafrnbVq62Qyvsq7/Iz/LNXWyfHPE+
qPDqLPvJhScnhodNsDcv4DyUP7/JXqrqm6Pwp0J7SHgk2W8o+cZUIuZtvwpM
W9tfFjrOuMbBwP7I4TimCatF7RnQAAAXqZF8
       "] -> 13.27, CompressedData["
1:eJxTTMoPSmVkYGDQBOLbulvNtiRMtJfN/Xr6eshU+6NmhsqtCTPtr2wovv7Y
Y659wbnsdTEOC+y5U6+8eL97gf0ShicHezMX2C9lNw4xnDfPPnvGzGcXGubY
/7H9/qd50iz7uDWmib89Ztp/uV+4zJx7hn1b6/k9r2Sm2dfdNjbw555i76rQ
0jM/eZK9444NP2wrJtrf3T051VZwkn39Vo2p6m5T7D+z1jrGX5huv+hoVvT3
8rlQdQvtn8gdiJpyarH984SO4HMfltjv9Do7d73GMvuvO9O4BdxW2Bswf73r
MW+V/RwxDYNAkzX256dsq7z4fLX9d3dXq5nfVtg/3uiqobF2sT3DslMTntbO
tr85/xq79oYJ9tXFCXPeyjfbV4HpYnufD1pbkqxS7PnPLq8JXB5oLwCmHe35
wLShvTCYVrQ/ktb1+2Anuz0DFAAA/ead8A==
       "] -> 13.29, CompressedData["
1:eJxTTMoPSmVkYGDQBGL/U87ayXET7bk5GPRtIqbam29awX4mZqa9oHhPornj
XPuiqJBtUrYL7PnPshXNWrvAXvrvtq86vgvsN1joakX3zrO/bqj+yjxhjv3i
rauXxxbPsn+a87hjuc1M++3b9aZa/Z5uL3j+WO1K5mn2fyqLJiYyTrHP7Gj0
uRAyyd5gsczVC8UT7c2zHivbyU+yn8/yt2+V4xT7a/dCX595Ot2e9fntu0sW
zrX/GHJOY828hfaPspRrZzxbbO+fpyar9XeJ/VwvpnRNzWX2Z9YtTbdyW2Gf
mh7722LeKvtlwp0Hl2qtsV+tncic/2u1vcujiO64PyvsHR7MqPdftti+TnW2
zLIps+135GduXLN3gv3XTaudvoQ221/tbnmTmF1sH/n++WSJg8lQ+QD79SsW
JdkLOUBpA/utYFrBngENAACk7JL+
       "] -> 13.28, CompressedData["
1:eJxTTMoPSmVkYGDQBOKQ25W/wjsn2j+8n6dTVD3V/giDE5NU+Ex71e/uSbkh
c+0t30+LrPJcYB8aHBjy/sgC+85ttwTjyxbYLzdMU5m8e5699Tcx1YyuOfbz
wu0yzi6fZT/jU5BBcNJM+/2zw07NF5xhXykZs3GSxDT77Qf1+G79nWxve2eV
eWzwJHsWETOn4piJ9iejhWZGvZsIl1dLynStL5luv6Fs/eGs93PsN/t86uzT
X2g/K7ZEOLVpsX3xloJKictL7M1bSssyNJfZnzu72T3Kf4W9m3XCEft9q+z1
juxcvtZnjf29P6XvT8ivsX9853KYGt9K+xX9FyfIH1hsH/L16fOkA7Pthfdl
SR69OsFersOxc2dCs72Y8fK5AkuK7cMDttUtDk+xh4RLoP2UHx23X9k42QuB
1RvYy694rBhTpAal2ewZoAAALTGW9Q==
       "] -> 13.29, CompressedData["
1:eJxTTMoPSmVkYGDQBOJo8WtqOQaT7NN332dwYJ5mP23a9+0Ka2bav7wU6PGh
Z679YU2v07+jF9iHt8ibXL25wD4s6rX55/IF9m8D3tlM2zTP/rDs8jLbiXPs
SzcHXr4+c5b9PRaRIquImfYeYdcE5orNgJt7fofl8nt/J9ubPzjuGR81yZ5f
W7ZiTdxEe7Ntk31rf0y0lwjsir3FPcU+O3nDx+Nd0+0Pu98ukv88x36h25Jn
mzwX2sev6pFkbl9sn2zrzDPr7hL7H68bcs3ll9l7Zn/g63NfYc/25JP9+a2r
7A1vvOYOdVljP3eSwcKc76vtd/RtnxX1foW9mHpY4o+Vi+0PzOdqmp49257v
+pb6F7Mm2C9j7r+qzdRsH+PIpew3qcheHKwu2f7jkjDTqDJ/KG1vPw1snrb9
EjAtbc+ABgBHzpQS
       "] -> 13.31, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAACj6/LVcsGRP7j4HGOxr5U/PqTbOj17mT/F
T5oSyUadP4q6VQrFQ6A/knXf+P7CoD9H5+SmCHKgP08fzCjEoZ4/oNE5uSmC
nD/de1rNY5yaP7BCcIWKWJk/ggmGPbEUmD8zUjucOAyWP+Ga8Pq/A5Q/Cz3E
ks5Xkj9YXfiDfHCRP7+uyUDYBpI/QDE4yeEalD+rGSA2CKGXPzfuLl0WJJ0/
YuEeQpJToT/PW0BOcKGjP2SvmCKB36Q/+ALx9pEdpj/YG6dNvUioPwxHfrT0
p6o/7CjR2vs2rD9pS4zjXverPzXpUUwD/Kg//iZkNQGtoz/u8W2q15qbPzTf
lyrdq5A/vByQoSA/gz/Y32YMhoRzP86So36UPWQ/73ntJ2kSUj/7xrC1WllB
P/jGsLVaWTE/qF6WR84hJz+oXpZHziEHPwAAAAAAAAAAjjacgA==
       "] -> 13.3, CompressedData["
1:eJxTTMoPSmVkYGDQBOLiLSbB5rFT7bccWfBNi3eG/RnbCZ/8VWbbP9tW/67E
ep69wUZFQakZC+yvMez2rRNYaP9/uvlXn5UL7KPe6vHzHJ1n3y1c1LN+3hz7
KPaHF3fMmmVv8V+LYb/TTHvx7yV6R19Nt1dos2aZpT3Nfsu9oJ3XH02235sr
2b9GeZJ98blnok+MJtp7mWflic6aaO+4YvEMh8jJ9t/e7Ys5PWmavUOJvfDz
tbPh9mfbKzjwf1pkf+yR7qIrfUug5i6zjxKxMu5vXWGf1Onntv3DKnuFeIMH
Ytlr7CXuHsqWEF1jnzxt+fLe2yvs75eeT1hWvdhevyBF6xXjbPu76jslFvzq
t1dY8PaYG2OTfQnYPYVQdyXabzK9pRB2xtO+HMw3tGfAASDyivYAhM2NmQ==

       "] -> 13.36, CompressedData["
1:eJxTTMoPSmVkYGDQBOKSAMGLMx0n2jvUulY8N55q77qxpGB3+Ex776eLM/qr
59pb1hXzLc1ZYN90b1NTzKcF9gWtefHa8xbY7++8/7ZCdb59gpVY8WaWufbm
n9w9S0Rn2xvEMKVNPzfT/s33Dzcu1c6w53Tdv/FOwTR73ci4x+42U+z3V3/e
tj9rkv2HNytUMkMn2t+ebiblemaivdO6C2+zj062f5a4+utXs+n2+r9eV/Wt
nmN/YE2djsufBfZhzM4/+v0W2+/2s4ryWLLEvtr/sdUdjmX25Upa91KcVtiv
/JN9qXjtKvuDr7/eaPRYY6+j78mpwLHGvkTtz7dC3pX2ysdfSVQcWGw/zzJ3
kvyC2fasTtL6vfcm2EuYlvutcGm27+Oy8xRrKLYvevfr6QS5FPuPYPcF2u/b
lZX8d5utfXXNnOnB55XtW8E0sz0DGgAAbw+WVg==
       "] -> 13.34, CompressedData["
1:eJxTTMoPSmVkYGDQBGLtHTsm2bZNsV/jnrNgTcZ0e3abrjnb9syy157Oezfy
y1z7Hp3fBqfbF9inTkyVT/u5wF6j8kTfv6kL7Av01jodmjfPPuu8cZhS8xz7
WZyhqi+bZ9m7lWwQrfeead+65lqf+63p9uGbjk9wMphmL7Nr8wvrH5Ptd6px
6V8wnGTPHmsaNMtvov2Dg/MdTA9MtK9893gr++LJ9pcfMW4S/D7N/u+cf/dC
vObY6/84lfz/zgL7hZ2Vx3MMF9snBgb7LVm0xD4CbO4y+ymrblt4Zqywt72q
EiF7c5X9jJenbToi1thHXdRbo/B1tX0uv5v6k5sr7Fdy1MzJrVhsX5y3X7jl
6yz7zSDtYhPsJ3aXyGYvboK6o9D+IZhOtDc2mzlrd5qP/ZoXnzbz+JraW4H5
MvYMUADjw2gAicOZsw==
       "] -> 13.35, CompressedData["
1:eJxTTMoPSmVkYGDQBOLS79x7flybb18wLUFoc/Yc+3nhrRVdS2ba2wg/jQiI
mWF/T//Do+j6WfaNPr9z0hfNsT+9ccEOA6UF9rESgi/a+RbZH9/+z0SmaLG9
Qfibxg1Xl9h3OtiXTGBaZv9Yc1Jagf5ye5nl6xc/f7fcPljl7IO4dSvsW9zm
fqgOWmm/NSOXYea3lfZreRUu291eaT/lj7m3QedKe5Md07W/Oaywv1wMctgy
uHn/gbZMNlxifyvdGuiyBfZ1r/0PK5rPtN/KmAIUmmy/EOiqC/y99kDHS945
3Wqf7FiY6LKg3j62Xopv58kK+5C9h3fpfi60XwpWl2svB3ZXuv20qXqq/88m
2atksn0vOhpnrwgWD7cXB3lfItBexo3l18LmEDS+i70aR7SvbpS2PQMUAAA1
YZTS
       "] -> 5.61, CompressedData["
1:eJxTTMoPSmVkYGDQBOKYdytupIvOs28ROnDikcFs+5kQYD+32dS7x3+mfYOG
iviHqtn2ESy86qXx8+wFwWCh/ff5s/vSPy2yf8Q7QWxVyhJ7/7LXXplHlto7
Hva8O/34MvstXPwyzjuW229QKM4KYFphr21TwPMwboX9ch9r9uxpCFrTfdHm
580r7NdpLxUMV19hb3+uumXem2X2gdk7FyfNX2ofLxctaDJniX3FLCbrJ/cX
2XtAJOyBOLTiwQz796eTtZvaJtt7uVkKzbXth4p32L9881Nh2tdm+0iw/+rs
N4PdU27/ddVZ0zzxYqj6fPuVZtd3xPpk2L+9NvVSx+pkqPo4+5333Oo1VMLt
b+qp8ey7HGIvcf6J6kujAPsNYHF3e6Z61pnBzUb2DFAAALT3j1w=
       "] -> 5.98, CompressedData["
1:eJxTTMoPSmVkYGDQBGIxpy/sK2rn2Z+7quJ1z3yOPTe7acKH0tn2so9WnE9i
n2OvLptRLsU/3/7kfP6uJ9YL7RMkks8aBS62l59eEezst9T+tJVU1sOdy+wX
PKk97Mi7wv7IrNRFagYr7dfni5+/dhNBXyu9KTjzICbt2yF/637FSnuR5S/V
V/9fYZ/G7CHIO2W5vWHRm0Nb7y+1n7Zyn3QX61J7P9v3sQf2L7KvP7ngSGTG
HHsBnvvu6xon22/a/9Foy7wO+/C7i1WrPRvsezm5Qs5Xl9u/fB2eyHEx3z7w
xk/bvbYZ9tZJ1e989ZLsw4R3Pi1xjbZ3m2s1jdUs1D7Rr6JXx9fP3huszsPe
FKzOyd4ezLew1wDTGhg0AxoAAAX+kUI=
       "] -> 5.54, CompressedData["
1:eJxTTMoPSmVkYGDQBOJnn7xFwnPn2wuu723STJxnv+5oOUffrnn2sdKswYds
Ftiv1fgzvSx7kf0/0893tGYtsZ/jdz9l4tdl9vMCHqZN/r7Cnn91Z51q7Cp7
m8yz734GrbavZzWatv3Qanu17jXbBW6utne7Edv1jn+1fR2zwZStB1bar9xf
yNSxZYV9NaPepM37ltt/PZHibHF/mX3ehNlf9vxfah++oWL3xeYl9ot2Zv9p
XLfIXqZx0Vq28wvtL4ho3839PN/+3itnHv/U6VD39kHlG+15lrdWKUaW2fML
gECBPReYn2bvaftE+uahBPs30ddWuqpE2mt8MvH+2xtsf1JA/Wbme297H7C8
A5wWAOszQ6PV4DRMHQMaAADybpAe
       "] -> 5.38, CompressedData["
1:eJxTTMoPSmVkYGDQBGKR+cm53CcX2O+Qn5pY5bvIvqunpEvDfon97aVSSb4J
y+07p8ss/hC92v7DA4/IxWvX2cttXxYT9HCD/ey5c/y3c22yv3h7z3btrk32
lxf2FttO2GQ/sTUyoeDTRnse34+W17ZtsE+YMNf5UORa+7Bj9jMXNK+wbygx
nP1QbYl9VGynZs+a+fYFTenvAw/MsC+44GNSzjTF/oGayMEV/hPsm7mrtc/6
d9tXzVp1b8aNDnu3k2eveDC02buLb5bMc2q036FlW+WUVWmvqVG+si2i2D7a
3fLH76JC+5blrlvFryBoiHkF9g+7PM3jTmfa/zue9Sbre5L9jM5nfg2Hwuzr
wfZ425tzSTi/d7Ow1wbTGvZOYFrCngENwOTRxQHzhobO
       "] -> 5.97, CompressedData["
1:eJxTTMoPSmVkYGDQBGKhUu6+V5cW2D9wKPpfGL3I3rknz7S9fYl95t5fu1LW
LbeXVCx7+PHWavtJFgrRrUrr7Sv7lh23ld9or71lSZKH6SZ7jyhey6PLN9k3
8a57fnfOJvvO5xlVdz5vtDf9qvc9dc4G+11tj47b8ay1371YYr3U+eX2i9WY
/K3CFtsXt83+6l45137ux8med1Wn2bNqpGbxmE6093pnn+ft1G1/Krzvinht
m/05Vd0boXNb7F+qeSoavmyyTz30o3k/cwNUXbU9l3L6wo33K+xT30dvV+ur
tJftcH0s8LoKLm/RmajzxqzSfvun9ZN2FJbYxwTLbVjlm2u/tPdiQGRaElQ8
xJ4h6ljaORFn+8zumfsWnTO19wTTovYMaACXOACaaIwr
       "] -> 6.28, CompressedData["
1:eJxTTMoPSmVkYGDQBOK62kNni0Rn2ivVst8U3zHHPmKf2+e8rgX2QnW7dme5
LLbXWbJO7pbHMvtEL8d/4mYr7O8+dsp4Fr/SvsC2uJ974Ur7yr1BfL+dV9r3
7BXkudW5wn6F7YaOFUXL7fOur335afNS+waVrimuzIvtc6etPmGxeb59di3z
hcnnZ9r/+CttPyd6iv3X6WEzm/Mm2Iv/VY/SEO21PzMtbe9kgR77lOSX3/ZI
9tlvTgk/l8U80Z7r3y2b6oWT7bfW/j/G/3ya/anHzVnsUrPs54lxOj97ONfe
3y69pP75Anu1usqdnl2L7CXstKofiS62zyl84Xzr2EL7xsftxd1Mc+3bpt9Z
5nl6ij3z9MXbDB512k+dpnnkm12d/SQwnWfPZ6CtdzQj3n5WstqHyNfe9qv+
ynsouJjbb5guueDZHCU4zYAGAKYSlZE=
       "] -> 6.83, CompressedData["
1:eJxTTMoPSmVkYGDQBOL4WyuEnQJn2z+Yt1Au49k8+/2+H77Yei60Z175ZI/O
o8X2zy2i1cx/LrNfMV2Y94fWSvvJgXsvHtywyt5hUVJwiNVqe3aja5cqeFbb
2658NeFH9ir7o+cjzz51XGmfaTqdPTVhuf3Gn512+7OX2PvkXv/c9naBPcy+
i1oeBzkCp9rrm040nnltgj2fyrFwg5U9UPO67RMvK1ybK99jn7+d4QFPZL99
x7XbZvteTrR/lSm2f9bMKVDzp9tv7GSetP74LPufd/NlfunNs98TUmH0qGqB
fVTnr8t/fyywX6Xem/Cibb691Yaic3PmzrSXfG/1Iylmkr32mUlHdFPa7KMf
GgQ+a6qyjwTTWfZOYH9F29+QsXA78NbNfpnoKpMAI0P7e2C+GJRWs2dAAwA1
05Zg
       "] -> 7.48, CompressedData["
1:eJxTTMoPSmVkYGDQBGK5Nb9ucfdMs5da4ghEs+x/6D7Q/H9xrv2tH2X9l2wW
2selTGA12r/YfuaLH5Umbkvtl3+OkBH/vtQ+W5xj75w1S+2vfth7LuvTEvtZ
Dg9T1nAusU+YwPL7rcJi+9NT9ZgqTiy0N97kMY8xcr59WMOkSrmeWfbbtXS3
bOWcZj/niK3rA71J9g4vZcwWZPfbG3MZdlbK9MH5wRsl/I5fnGi/0tuRvX/X
FPvFzh1u6gUz7H+2nhApnzrHfl193t5NaQvsVbZsnl18bZG9vvX2WKWkpfZH
OCUT70Qst/f82bc9n2GF/ePzK6snOi6zZy+qT/wktMj+3vEPuzS/z7R/3W4s
9FJogr0xmNEEpYvsn9dXBTaeSLb/ymd+Zfq8IPtLYP+52KdPC9r3+K02nL4O
lheyZ4ACAHnrmq4=
       "] -> 8.1, CompressedData["
1:eJxTTMoPSmVkYGDQBGLO9/GVmcZT7RVfKm3J859hryqbvH1R/2z7hsx1M6Tt
59kvWTMp9/2K+fYXLGbcmZgw337t183s+77Ntf85IdaD4cZse6ZbdY/Oqc6y
vz9tFu/v3TPs/Uo1lAXZZ9hflrQs+KE73b7Fy1+niWeavWl16gvu11Psd8qX
mX4WnALnw9Rl5L+OFVOeba926rD7VZkF9j6OL+TvHlsCNXeFPa+tQ9124VX2
e4K3WagHLbcXDVIEoqX2ZmBzltg3g+1ZZn+35hf3Q+nl9v+W2t2f9XSZfcXZ
t331dUvs+VkcBVgcF9iL5RwEomlQ+7rtfx+Z620iUW8ffHeFZmV7nv0isH/j
7VPB8t72r7/MsUsRd7L/AqaV7B+BaSN7BjQAAJHejrQ=
       "] -> 8.61, CompressedData["
1:eJxTTMoPSmVkYGDQBOKdMxgmP94zwX5tPvtNTpWp9vM0uHKPZsy0L+X/oDRt
zxx7/pe9a6W3zbUv+vi6QHvWHPuDIcaJHw7Msp+4//df/w8z7F/m+q6Wz51u
fzpP69AUj2n2e79J/nq5b6r95jm8T1aGT7Wf//2bQPysKfaT+l4sfKk4xV76
UuGmyPwp9keMlOL2M0+D26e+e1U32/J59kWFB9m+3Fpk77RH03hv5Ap7ntOd
vzdMXmv/Nub95H1n19m/075jHvF/pf1+Vplg+QtL7SW25DK891lin77d/nTj
4yX2dVVRAeaHl9pXx4TNO7NgqT0zQ+iVvLrF9iYqO39Vy8+3P+qosv2LyDT7
M+vsyw00uu1dV5+WjtlVb7/B99vVG2kF9mdtxdP0qhLtVwq+K2RWCrA/wsjP
FGnqaC/pPOtwtKyevcmhSU7rm1TtV4DFGe0ZoAAA6daWmQ==
       "] -> 9.4, CompressedData["
1:eJxTTMoPSmVkYGDQBOK4Yh7FvaqT7Z16BY3+Mk+3/9b155ZZ/Sx7u5NrJBdJ
z4XTyV7mrqxxs+19NBbmLVCZCVc/Q2vb0bSVU+21s6ujZ5yaYv/bL/HzxPQp
9u+OR0Ve8Jti/8ghZD+fGYIfwNCveVdkqn33dotzbTOm268piXvY92m2ffCN
mieSrAvtXSo7+qX/LLE/8kPNRVFhtf1Wx1NVtq4b7Ff8T/UsWbfBfvUrSYF5
71bZy+XtnHR861L7vn61zsMdi+1niekqty5cbP8YbN8S+80qVuEclxfbK7kt
92VZttB+SlrgWu6Ds+0bORTeMxZMto+aLZfWYNpun3fR9v6xsmr7ezXvl232
zbKf+zbc/ezNaHsZnna2WQc97Hk9n7YYTzSy5wLzNeB8BjQAAORrjKA=
       "] -> 9.67, CompressedData["
1:eJxTTMoPSmVkYGDQBOIJc49Yztw+yd5LKDO3auE0+1n9GZ8nl86yz5wmMd/o
7Rz7GcvPOS8+OMeeqZ13YXT3LHu2/OUBPvYz7Av8nq1l4ZxmH3reujHw0BR7
Z9VTO1peTLbnsr+9Xnf5ZDi/yKwh9uueyfY13DsP3tacYn90tuTk/y5T4eZc
7N3r84tprj3QMDHbTQvtOcIdGWw/L7VPOHjfyqdhjf1lh7aw45Ib7SNWL+qw
Cthof6mxa8mnO6vt3zw+WT3x0lJ7hqxF3u5Wi+1nFP2dW6+y2D70MMdNzzkI
frbnwxX/mRfaXy4N//Nq2yx7mH9XmlzdFu3VZp+0svKVjUmVfZ3AvmMP9DLt
D5x+aix3N9LePOP7krXHXe0dnUz5Zlpa26uD+ar2yn07rQ+FGtgzoAEAuzKV
2g==
       "] -> 10.22, CompressedData["
1:eJxTTMoPSmVkYGDQBOL/vhZ2J2Im2n/TTMys2zfVvsqEMfRH60z7Wdu/tBks
nWO/nPEij/b0OfatW5enJkyYZb9BdcXDEtMZ9itzzd3mC02z39Hg6ajzZop9
1XVDyVuSU+yPT4622Xl0sv3a/4sMjjycbL/Ls37bvsuT7ROcK3mfmk6xj6ty
nhHkN9X+sa/kz7i/0+2Lb8Z/dTg/x/4Yw83HD2YvtH95v+Vx85ml9l/2/tLn
cl5jbzV7+oz1shvty8UuR/qkb7SP4bsbd+/SavurBbukeh4utdfY768xIWax
vSmnzrouv8X2B/Nyf+4+g+AL72ViP+C+0P7CitnCa0Nm2yfxrG8ql51sPzNK
1VvIst3+O8iXWtX2cdeFrhTsyrLXeJbt/oUrxj4JFBqdHvZz3kwwNecwtb+W
v3jNjTZD+2lgvqr9j6cgdTz2DFAAAPommJ8=
       "] -> 10.48, CompressedData["
1:eJxTTMoPSmVkYGDQBOJ9V6Zd+dQxyf6rZt/UR/nT7Kfwb1+eZjDL/pn8opN6
3+fYC/23U2dzmWu/2DhhSerc2fZFkmKiTc0z7df0/71m5Dzdfl52yC3ja1Pt
W+PWCzmdnGLf7776rkkmgk7O4GuIlUHQAdPEXpXfmWIvpqCvcVxmun1FyGG3
voDZ9ipa0l+qpi6w7wPrW2Lv8vhilrnvKvuOmCINtYXr7YXXn1rFYb/B/tXZ
D0mip1bZ+9rnz2X5vNS+5kzUlENCS+xXrP7+cWb8Evv/mYZrPX4usVfeXtmz
oH+J/eSvP8ukbRbZt1XkOPfunWN/9of9xY9fJ9vr6V55v0Ozw/4nUJeIeY29
T6nay23M2faLwP6Mtp+1l9XRl9nDfh6YtrB/eso8/bqpMZRWtmdAAwCIRZJ5

       "] -> 10.86, CompressedData["
1:eJxTTMoPSmVkYGDQBGLxtXoX5hydZB9b9PNNbsY0+yXmRzjtuWfZq/0/3ain
M9e+p3Lz3EcF8+yvLKuKjb451376jd2XBezm2K9L8sub+XWmfdurxWuZ9WfY
a812+7byyjT7ms/TpWrVp9mvP+Ul6Lh7qr3iEqtk5bNT7GvVxd4EcE2xn7Ni
i2TCycn2YpUb/p14NMV+58GwJccPTbdfyOxmka0xx/69SQs/+/8F9kvnH1jz
7MJSe5HvX4q2a6+yf2XA++PxhNX20XbV0rNaV9hzm6RvZGFfZr/z65XS2UuX
2u+4LdpruGWZ/aE3DziU1i63L1jnd3aH93J7BbD9S+zNk7zP16cvsFco2DPR
/9U0+4MtT1KrnndDxRvsvXfEzzCxKbD/Gc9Xkvgywd4LzA+wZwqXYn/xwcne
Bcw3sN8Cts/Ufj+YFrVngAIA1JabRw==
       "] -> 11.09, CompressedData["
1:eJxTTMoPSmVkYGDQBOKPf8U0Vr6cYP/Xf6XkP7ep9i9qlPbUxs20j/69+v3s
ojn2rWxWPKln5tgfnRUrEW88235/4ZT5W1hm2l9oz1/xmn26vVzpoYzLPVPt
165xP546d4p9y8Kdq+Y4T7Ev8+j6tk51in3Ahm0H7l+dbB81Tbvv8svJ9ifj
luk73pxif+/BvJibqtPtH/rsabDKn21/c1/RsuPbF9jvmLRnSuTGJfZKNs+v
9rxYZb/sbP4eLq8N9rOjFRXcdm2wv9Bw6WmQ+2r7e63ThRuFl9nHcT4rOft5
sf3PxucvV2stsT/2+rWH+/kl9lLLGSwbC5bYC9WZH7jmuMi+RuGoXeGOOfZV
u13urtCfYr94v6n5zRMd9uVruSLK19VA6Rz7RXnL2T7qxNv7vsld+Vffy777
VJOye5GZPTdfpP6Wt7r2omBa1p4BDQAAoK6btw==
       "] -> 11.05, CompressedData["
1:eJxTTMoPSmVkYGDQBOKHkptyOc9PsA9Z5hS/3GiqfalW8ML1wTPtvXuTVROz
5tjPm/r4yrc1c+zzY51LWl7Psr8gGezUcm6GfeQtpRfnLk2zn7P2UsSrnKn2
6X2b2CyLp9j/bw56/Vd+iv2DhqaTrOxT7HsrmKQKjky2X1N9yTrj7mT7GzOZ
bhw7N8V+4cNNDwV5p9ubFAp/Xd452z5NatUJo8sL7B/P+tQreX2JvXHKbaF5
iqvtlXi/WYhkbrCHuHOD/foC6Vl1ravtu44mbYzQWQY1d7F9amOVij73EnvN
qV5Lg1Yusbft+qT3LnCJ/Vw3pr9vTRbZn5i5eI3juTn2mh1Chz0cp9gfk0ju
MTzWYd85mTkzcE6NfeOa5nKhlFz7o8+YXbTM4u1nJTL7nOfxtjdawnyiRtHW
fq0I04PspQb2G8G0gj0DGgAA2g6RSw==
       "] -> 11.02, CompressedData["
1:eJxTTMoPSmVkYGDQBOJ5GikNwSwT7e24mDcF+Ey15/tVJemYNtP+ux3nkSfZ
c+zX9LlfmbR1jn3ls5MbPD7Nsp+twrZb6s4M+1XfAj0jbkyzlzRS2qVeONVe
7Km/c03FFPvs05yFM1Sn2LfnftL6zjnF/pLsFinPA5Ptt1WfTnh1e7L9+klL
Z56+O8Xe59b8u4Um0+1v+ftNvtU32/6sme02t2sLoPJL7GNdHn57ybva3nLJ
47qYnA32IfHbU+LOb7B/3Op2cUnravssr032XdLLoOYuhtq3xP7txyKddwuX
2Lt+1qjM91piXzU39P9VxUX2+3+ZB6gvnmMfES/5ldliiv2OY+9KKg90QMVr
7GcphUf8O55jb7/A81aeaLz98cex4m4Lve1Pgmlr+8YXFcKpbOr258B8aXuT
t5P5W7KZ7BmgAAD9LptV
       "] -> 10.96, CompressedData["
1:eJxTTMoPSmVkYGDQBOJf5Yx/3KZMtNcp3ih8bftU+wkn9+xY0j3TfoKltrHm
yjn2fYkHRP8enQvnx/YtfeC4f5b9t3KlZTqbZ9j/sH+dkaUy3V6nmsnx7Iep
9vHneBaKZky114ne1/2BZ6r9sRLFxGVhU+x/nq9595Rtin38svJ9jt5T7I+t
iZiX8XSq/bd+UT2huJn2X9xjHdxr5tkfs3ml/OT4Ivsf8fpy7hwr7L+JlxvU
qK21j+HbtnWL3zp7rXaeW5uurrTX/r/qugfvMvtJiuKMcfeX2E+05Op07lpq
/3Oxvxdn7DL77+JhbdPYl9nH97WYxSxYbK9++E9TssB8+5/8rJHzz02111Ze
8UN4bpf9wTeMm9nP1NlrbI7SKJ2XZ5+olv7y3O4E++//m1dMq/axj0sT+Je7
yNJ+0syt/z6LGdrPANOK9gxoAADwm5N5
       "] -> 11.23, CompressedData["
1:eJxTTMoPSmVkYGDQBOK/n2+6PauZaD/54Arh3jVT7YX35AcINM20zxBQz/VZ
PMd+yo4Ylv1H59orzW1USrk/x94u7XTcOqHZ9juL5/y78XWGvdSmjX/Moqfb
s92OrdujMs3erPq3RWPfVHvzyqsHQxWm2k/fbbaOK2mKPe/F+VqP/062zxL3
ZX0vPQWuzjWGl/vq6xn2H/9x3j/1eK69Q06ctXXIInupzS47fCYtt7fJsT1i
ELvG/nCUgtn6uWvtz7ubewm1r7T39Z/Wskt+mb0F2J6l9uy3Th1a9napPes9
sY1/Ty6zXzntmtSdkmX2X//vFXwtuMQ+Xs5wfc2y+fbvOWtSj1hMs9eY+tJ1
m1q3vdTK1LcZJfX2b9gW7a6Yk2+vO6WccfWzBPtDMW5rb3H72R8B03b2BdyZ
Vq/aDO1Pgvly9gxoAADSHJOB
       "] -> 11.49, CompressedData["
1:eJxTTMoPSmVkYGDQBOLssz67xC4stV+bbNJwu3u5fYWGeeqXwCX221f+l51k
vMg+9Xnvqi0GC+2vLw6us/RZZG8+yX++/rRF9hKZsx0POy2239O/T/fLpWX2
eQ46h47Lr4CbAxPv+sYg0ay81P6H/fPHYe8X22d0nl2vtXuRfXjP4v/X1i2C
82H2TOHN2VEyYYF94raHkqrJs+xd9XMP6s2aY199qiwr685UeytW/eUPnk6x
r50tlrt04TT7W2LGba9mT7HXqJyRXTyt317SytrlH3uL/bL9K57PyuuzV1/x
I8PiYp/9/bMTZ7QzdNnHLjzE86+jzX6u+apLh1w67OUVfgUnLK+wV5p8M1rw
e5a91J0qz5JJpfYiYDrUngEK5PyjAlUfpdurX49I+8udZ6+cUhnnsyfbXgGs
ztUeAI9smpg=
       "] -> 2.93, CompressedData["
1:eJxTTMoPSmVkYGDQBOLAZgv1pXnL7fu8yiOiYpfar1pxK/bk7UX2l5pYrryp
Wmif414UIKW1wL5vg29NwqwF9kcvBwVu3b3Inr1Ybvq+v0vtG2Yfvao0b5n9
jaiJLxzOLbPfqy/5NeTdMvvZx2xP8tUts5/ScWvClrcIdXuSWNhv9Cyx36ay
8Fztn8X2Dec2PF9qs8SeYxnnSsc5i+37a5Oy7v5eZP/l9f3/Rq8X2he3Xu0o
2bXA/rntNOUc4fn2Giv5Njaen2GfYPRq5R3dafaBL/m8V6+eZK/pbNFbPanX
vjI2ae4J3jZ7kCqJvjb7qolbQ/dMrrdP/P9vemR/hb0AWLzMnjFjWcFz7mL7
9qJXzmxcBfZLWBYyZvKl2++dFr7/tFCcfQXYnDD7k6vvp3LyR9gHb1O21OBN
havrButzsGeAAgAIIpiL
       "] -> 2.91, CompressedData["
1:eJxTTMoPSmVkYGDQBGKT2g3q934st8+UejBVtmGFvbj2ev6/ExbaXw3O7TzH
Od8+R5Jvrf/vufa7RP9lHvNfYP9qfu6JX2sX2x+3vLXdYcZSex5W/Q/P7Jbb
10Ufze8/scy+q6F42fWpy+w9901lDHBcZq/i3x1bfnOZ/br3tV4b/i61vxgq
GJ0lvMR+zo6Hb7R6FsPpSXNWeTIKLrU/qP5mAvOXRfb6pdy1vdoL7d33p7+S
PbbA/uMyh67ab/PtBfmWNbNOnGGfraIpxBU+xf5Rb/3CvZwT7fdwCsrY5ffb
c/zZHnPiTat9Dli+Bc7P1V2wVGNlqz0f2L3l9pKa3HaJ7Tn2G96tTnxUkW3/
70HQopxviVB+tD0XWF24vf2EAvOXiq72S06dF84wSLPPkN5U95ol2Z4BCmDq
AJ0KlYI=
       "] -> 2.94, CompressedData["
1:eJxTTMoPSmVkYGDQBOIP836aBO+Zbf/1gza7uvFM+/DOdctvlEyH00HmNVdZ
/s20Pxewl69Gc6794aNT3xguWWB/cVbj2pNli+z71JW8WnmW2N92C2n93rvU
3rN75d9rz5bZq9nmXv8fvMJeVMzfZQrXSnvht6bRWv6r7BsNuy9zrlhtH/DU
k9mwfQ3U3LX2dvu0C47arrXfGLJ5VwXvGrj6Z5/UYlWXrrCf/YeXW/b+UnsW
gTtpPMEL7G+B7ZtqL2GfofvvaLu9H9i8GvtHB+c7mB4otL8uaz2n91Ka/Un1
JapCeXH2t8D8MPuHYPlA+xv5uXmJni72B8DydvbnwHwT+0dgWsWeAQpg4ug0
AxoAANNxilE=
       "] -> 3.67, CompressedData["
1:eJxTTMoPSmVkYGDQBOLy0iP+zo0L7DetyA99KjTHfgp78gaR2TPt/QM3z9lq
Odu+MCU4XPrdfHvL7GKzCNGF9gpfDxum/1hov+yB4v8JCovt3x/U23z+zhJ7
ln9Clx86LLf/ZHzoRIrkcvvrLJ6WmveW2c9w1Jv6OXiZvdNB3XLx08vtj38+
uPPbleX2tUJbWXdILLP/oRZu0fdhiX2g5Ovs/1uX2jO5enpMV1pmr5we7v7H
ZIl9k0/Dq2kXF9nHuHkfYHdbYF/8NGTj+o7Z9ilzWBmP/55mH5Cg+HDL9Cn2
59Mjmre4TbQ3UbLirfrXZV+eFsbtotxuf6rksHB3frM96zGvRdp7G+3XbL31
dLd1HdT9xXD68++f09dNLbTvFjnn8Ppwtn3IpS3fPK+k2TuIXzI4w5VgXxH5
uir3V4j91tksR/leRdozQMEVsL2O9gD5apoS
       "] -> 4.01, CompressedData["
1:eJxTTMoPSmVkYGDQBOJYK6Nd/msX2kvHyha2JM6z3y4kotFfP9O+/YVq/vLU
2fZfo16cPf52rn1aYvv2vx7z7Z+GejRUii6yT58s/I3JcYm9r4leSMuppfa/
Ayv3Zi1bZh+j+EbK13C5/X6rs7a7VJfbf987xyj08nL7s+rdLM09K+x/snP/
uG+z3F55nozapuZl9ooh6xLUpZbbX9qd3j8jfrm9Zk16WdCBJfbhMc8z1xcs
tt+93yxo+blF9gfnNi5y515o79HOrZVTPcd+97IPm5YEzbB/eDD7a7LTZPtb
v5l0PMv77f2kX2xp9Ou2DzrBdX/m3Bb7nwqB0x/taLRvDvF8MnFSjX1NnAxv
zpNie/43keu8Ywrtjxr8EnlwOd9+D9i96XD68NZkzbM10fbij9paC7mi7LM6
Hc5qvPexPwxW72/PAdbvaM8ABQAs1JaC
       "] -> 4.17, CompressedData["
1:eJxTTMoPSmVkYGDQBOLFJf1THM/Ot5eZlLXMetoc+4cRsoaTPWbbx14JqGdW
n2N/MO1a0quuufav5DSbZ9kvsI9StMwys19kL8VXv15z5xL7/Y9eZd9Yu9Re
ubTAf7/gcvuDguJdk3cstz/ueYc7j22FvYnsgSt+v5fbv8jy/3Hx3HJ7viPt
aQJPEfKe51bs/au+3N42Tm6XR88ye51t50x2LloKN997hShzUsJi+xKu51f2
71xo36DyoVPp11z7xvMGG0+rz7Df6GzilcE+2Z5f0t0+fXuv/ewd96RDF7Xb
8+af6N0p1GSvwfR15QfDWqh4uT0PWLzI/qeFkcXf+hyoeLr93aWsMscSEu37
plT1Xp8aZ2+uFmmRZxcGVR9kfzA//xjnOW/7Uka/wgVlzvbr7jiturTOwJ4B
CgB7UJJC
       "] -> 4.41, CompressedData["
1:eJxTTMoPSmVkYGDQBOKO3b/UKuvn2jNrcLt/Oj3L/kTuAs3/l2ba5916xOW5
YZa9aWuk2RWBufZSpXPtNU0X2Cubz962w2mR/fTVBR/nmSyxbxbYeXPL0aX2
T1NL8n99XWb/yu2z1qE/y+1nf7zw9cmUFfYG9j8N+zassO/fbMrDc2uF/aOX
1/5s8Fhp7ztn3QF23ZX279SLnnUyr4SrSzRPu/Fx9nL70kuyH25zLbNffqpr
mv23JfbGYVujI1kW2x8qTXXJqZhnv6Gng/c883T7G7FiX1Q6JtgfXL1oU/7R
dvsUPyWmve8bof6psm/rCfP5V1Rsb+cevjZZLt9+h19bS5xgpn3/y6IqfvUk
exeBd9urcxLsj3Psf9BQGWZfo28l93ZfiL3kI+fFIiYe9uun+GrYrPRG41tD
aW17BigAAK8hlxY=
       "] -> 4.52, CompressedData["
1:eJxTTMoPSmVkYGDQBGKDqqUqn2Vm2xtKKvyfyjzT3qhZ5ln43On2n77arJQ/
Nd3eYL2yxJXMWfbrDmRfuN8/1/4bu7bOy1ML7Eub809v61pkfyWI+VgE+xJ7
E6XpB341L7Uvdq0SK9y7zF5o0Vtfb94V9kZgc1faXyydbFYQvMq+r267UNmz
1fbnFs7KeCO/1t43KPb3LJ119r2r9rl82rTO3q/99rvqyrX2eZfY8rwWr4br
+6y1ew6D+HL7sDJLRj29BfbbBPw53sdOsi9TerU0srDB/u1jP7Wwk3n2X8Hu
S7D/YmwUlzo92P5tvOWEh8lu9u/B4g72j8B8M/uzYFoNg2ZAAzD16DS6PgDB
lJGt
       "] -> 4.42, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAADkxae7gDWgP5EEHzEyVZw/YEOuGeV8mj+O
Ib8ZcTabP1hD6Lzk+p0/kbIIMKxfoD/ni2fqAnOiPyET+17SyaQ/BaSPMAws
pj947FkZKd2mP3IJl9Nnfac/H/b3R5Onpz/z+kZfyAyoP2lDdHbl/qY/NIKg
MJjlpj8dE5gw0oimP9+LoY0C8aU/yByZjTyUpT8/ZcakWYakP8RW2V66VqM/
2eKBR7+Uoj9HZYwBWgihP7E5So56MJ0/x/+Vdv1xmD81n6NH1weUP6ghETBy
vJA/ZgluSGe6jD/xF+dHB+6GP/Y0TY1GUYI/LGXXvFhBfT8/KyOl24J4P/r6
DLzIjnQ/IjD+dRHscT+9/88Z/e9rP71WdjC6FWU/1RzCGD1XYD9bfe7qYj9Y
P9HFGwKAMVc/BBMMd9GETT+NeCuNLt5APwAAAAAAAAAAgoiVvA==
       "] -> 4.58, CompressedData["
1:eJxTTMoPSmVkYGDQBGIpHxl5H5n59h7PrlQs2DvbvvRO55WA6Fn2r7ZK7/tt
NNt++b8HJrqz59qHKErMsShdYK/xdLuDk84i+/btEn874pbYbzM/EX3421L7
587ndnY+XWZ//sTn7o3Tlttvv5kfmzpvuX2UbMJik73L7TsdhRmEI4H02cz/
89YD1c362tU8Y5m99twNLr9Ultk/ja7esXDSUvvHurXbi6cssXfY01dQVr7Y
/ldV5BPZp4vsW3Tlfv1LXmif+HrlSib2efbnbeb2qDrMsHeKMyuSkJ9qPzvJ
V2Mi+0T7JWJ9xq4ePfbOu4xKSqTb7cPNM+f5HWuyr5jSdIMjpM4+9vqWxe8E
K+ydXvUULiktsZ+wkYWj2Svfnon5x6ulzZn2O1cXxpgvSIPqS7JfpWdtFPs1
yp4hec1TVosQ+9sZ9hMDH/nYSzToiTboudozQAEAB22VXw==
       "] -> 4.6, CompressedData["
1:eJxTTMoPSmVkYGDQBGJJljA+3U1z7R+0Rb6K/TvL/lHe+ULDo7Pszc4EvX91
fZa9wp7tS5ZzzrX/vdWMP6Vugb3t8aMi2WaL7C9FLvfJC11in9+TsGj/5KX2
ySzCf+euWWYfHfFtkWXhcvuVf8W7KnRW2DNpt4vdPLfcPnSK/4UVf5fbr37a
K+jzZbn9hq2VCp+bl8PVg7nfl9kf4N18ZfevpfalAexAtNS++cCpha7bFtu/
zHSavlF5kb1ASt2He5Pm2Qevuelx1XSGfWdLYck1zcn2O+VaXwfu6LMPA9vT
bv9kZlgH15Qm+4P7YjgXXK+137jS5Mmd9HJ7Q/uKfE//Yvs/Kz9e8k0qsJ+b
2brCQTPTvlJknfvDqhT7RVN49kv+SLDfBFYfbq/w/4TxWoFQ+99g9QH2a8Hi
7vadIbHNtTud7BmgAACphJ/T
       "] -> 4.61, CompressedData["
1:eJxTTMoPSmVkYGDQBOJDN6y1b1jMsWfksdG5GzjTnstSdtItlxn2ezY39R6+
OMM+dFv/OQ6dOfbJP+9FHbs/z/74m/ny88QW2t+ws1LeULDY/pZnoZlA4FJ7
yZYpzxpaltkvNmFX2dKy3F5lz5r4e+HL7YXT/n2/br7cfmXQXKHYi8vsE1/P
+PNu1TK4+hcTrqgdOrXUfha3ldLq8GX2/ZcVV/q2LLUPXuFZYPh9sX1dY/tS
a63F9mszBYJmMS+y//m0ttS7cp69VPf2qW/mzbJ/uypsY1ngdPtFuk9KPLIm
20ee+fvlxJt++6tG/75dkuuyZ1Neny3V0mJf4ts84ZJMg33X4YsSNTl19oW2
xgyMrJX2p9mUVgXNLbK30jj5dolFtv3vt0ttTViz7MVqC81Fs5Lsc/XfLtS8
kGAf/Wry40LLePt5HNrXjZkD7D8uNmbiNle2Z4ACANtUlao=
       "] -> 4.6, CompressedData["
1:eJxTTMoPSmVkYGDQBGLp894uYlFz7H12fe6U0Z1lr5aWN7dLcIb9/oydVzTD
Z9iX8FWWrfOYY1+ikT7/GcN8+/NHDAO8bBbaJ39dH6D4Y5F9l6ep7WbhpfZL
Lu2uS2BfZr8v2ukA7+9l9pOc0jee37jc/r/29ZsG61bYC51ctPtu/Ar702qO
2Z+UVthHZLPwnJyzwp5NYpKl4YeV9mlmzNvXHllpf/8wj+/8K8vt/wm+3PDj
61L766du3WgyW2p/Z85yfu8Di+13S72PbNRbYH8GbM4M+9o6s0nnXk+279/4
9sHkL/32+8Du7rDvULrwP+5/gz333efRd2XL7ReuDnPk+Vxozy9nfSjzVa79
oqMuWS6rU+yvgc1Ptee+UOB+8GCove1uid7jU4Lt2cF8V3uOOVO+BgQG2K/5
qbBni7SVffGyA5fOphvaM6ABAI/LmMg=
       "] -> 4.49, CompressedData["
1:eJxTTMoPSmVkYGDQBGKlU+sLX8rNsXe3++XL1zLLfsVxTfXKozPsG2M3mElX
zLQv7GKoFu+aY29leO9pregC+/dBUpK/kxbZn7x33uba38X2klP9o2wDl9pn
eZ8vX7JkmT3HmQKgjuX259fsWvi5bYX9ZJl9UhPNVtjvrkmT18hZYT9l+tUl
a1ch+N8mesvkeaywN1xuILlFZYX9Tm6Fxkv8y+2lBNKfRB5dav9xZ//pzuVL
7N+fNVwsfn2RfdL2gP3Cc+bbP77Dp7J/4Qx7rcdiC2I3T7LnFy2utKrosc+6
sP1tu0Gb/TzF5sLy2Q32xpP7HNW+VtqnAU0TTSix7xT/eXjVxXz77D2iYr8Y
MuwfgIyRSLH/k8meG/Qy2n7V3gjrTWsj7bfs8Fl28VeQfRLPvBLD/QH2Wgfu
tSqx+9rfEDYIaTptBaW17BmgAADYRZRC
       "] -> 4.53, CompressedData["
1:eJxTTMoPSmVkYGDQBOKXvgmeBxtm2ev/k5je/GyG/ZpQn4W7PGbYiwWv0BNi
m2nf9clscq/VHPtT1k/U1NbNt7c++E25+/1C+0O7YlifnVhs/35LNvProqX2
fqwxly7dXWb/I2zeLb5Xy+33BAd677m2wr4w6L9ghulKe5kljlJLHFfZZ3/T
se+SW22fCLRV6sxq+0L3Y1oyUWvg9LGvzUoPfFfb2/+RdWwtWWlvtbol9LPF
CvsariXblZOX2j95FtI/vW++fUNaWRdj1WR7BW7fK2eNW+2PMuzl1NGssC+e
ES+2bmquvVim1N+Ve5Lsp/8uUbm9ONL+wcH5DqYHAu3ZvLLmHpnjbX8HbI69
veLa+tUfV5nbvwbz5e0Z0MAZsLi+PS4+TB8ATDCNNA==
       "] -> 4.56, CompressedData["
1:eJxTTMoPSmVkYGDQBGL3Kw6REdlz7H2OPFU7zzjL/tzRgqz3bDPt3Yu+GqnL
zbE/HPV43Z9Z8+wVtqUIXWZZYB/dmHwtM3CRvdg1qfKn15fYi/7587Ji/1L7
oL4VjZs2LLMX+PksyWLrcvsLts4XtS4ttw8AK0TQfjY7ernOrrAX8Dh4fn7f
cvsJCiGSbxYutwcqFk+MW24vulapVvDZUvtrp+dUFEgvtb8e9mBGadQS+9tc
Mpv9uhfB3XOubNrfdt2Z9lGuv5TOvJ5kf9yro6bYsMf+UuWalhPm7fa3dzu6
Pd/YZH/i91p+noga+4u3v6/62VJuf+/iibaP+oX2Z5NVXfbtzLA//TrobtO7
TPsbYPtS7S/O7/seLR9hD1YuHmR/8jxIwN/+7H6XmLxPPva3+o2PXtrqCuXr
2DNAAQAwd6Td
       "] -> 4.67, CompressedData["
1:eJxTTMoPSmVkYGDQBGK+862yKybNt/f/X6IRwT3X/nHz6frOoln2zzrjtzbe
nmW/vTxk26r8+fbZofftvpQutL986svGU0sX23P3Vui9cVhqP3fld5124+X2
qrv8DhiGrLBnkKzMSv21wv5sfLDdjj/L7b9ztj/58Xm5vezqGKujvsvtvzB/
XsfQvdz+3fdTzgI7l9m/+cKgOaVlmX3Sk5VTXyYvtWdrkbpXvniJ/fkjCTWX
bBbbVwBNi3i6yH7Cty1TDpxfYD/HfQvnS/U59hKL/r0M2DDN3mP7ZeYlAZPs
N2TreO+a22dfwf3moxlfh/0yKd1rE12boeJ19qdjOpVtTpTbR9/2di09VmJv
Ob9Z9/CaAvtFwXdKbv7MsWeua1tRb5Viv1LhIHfXumT7PxsWCp5vjbVfCuYH
29t/E7vxONcHTotNu1aXcM/UngEKAAO6oKY=
       "] -> 4.83, CompressedData["
1:eJxTTMoPSmVkYGDQBOISxcj7D2bPt/faI3zMtmiBfZbwo6Ibuxbaz5m38Zs2
yxJ7ldfSNZ+dl9u7pwRp2/xbaX/vUGgr39k19nMyIuJuMK63V32rs+GL1AZ7
+ZQHrvnBG+xPbq50vSS6wV4mYd/dnKXr7KeqdETWyK2x/7Bou+YJ9pX2tvx+
qpxJy+zf2z75+rFjsf1LLo9POXEL7SeE7e88WzTfPvtMyM21/2fbuwXLaaW6
zrSvnt1UM6Fxuv0JdsmKi7en2Nts7+lif9dv/zLuuUqOSpv9w8udbU9ba+0j
jBvOyTWU2mcwrStkZCq0nw92WJb9xi9SFyaVpdnPz6k6dmt9gn1iecDlquQI
e2ZtkA4/e4aip2dWdbrY1wB1i66xtGcF81WgtAgaH0EzoAEAF4eUEg==
       "] -> 5.42, CompressedData["
1:eJxTTMoPSmVkYGDQBOK2k4sfS8otsG+aubLjocJCeyfpyslrpi2yDz2l9Ff2
yRL761tdnooHrrCf+H5OOp/3avube5oEXDTW2X8zFdt7y2qDveDOr0fzDm+w
3x2tyDPh3QZ7r+pcT9mJG+w/zla7+rZovb150rmg7xVr7BMkb2yQM19pb1LM
G5qusMy+0nLrpQK1xfbpXdyZ/28ssG+NXxeWGjzP3naV6+3TX2bZ3zh7UGjL
+en2y+7X62nYTrOf4hH8KShvsv1Tky+fAxZ22zdvVNtWO7/Bnld0V2NLa6F9
+46UhyvL0uxjtcQ3991Lst/7PyagSifB3r8wp+jmgRj7PyEXRRdPCLXfDRYP
sL94rPl5+w9H+69gcVN7RbA6GXsGNACTh/Ftwep04OphfACk4pPQ
       "] -> 5.67, CompressedData["
1:eJxTTMoPSmVkYGDQBOKuPWtC/hybaw+jv3+Lb3l4eJ79JO5UPvapC+z3a59f
Zvx7kb16Rm+jve1Se9OqsxU1W5fbe3J3SKl1r7Tn+mjXnPtllf3Z0IJpirtX
25drf9oU9HG1vXLDu8oPLavtt7lae3F3rIKrb1sWxl50ZIX9IUfVL3v/LrfP
B+qKnrjc3uKnu/JLoeX2VcITdy1cudT+mjXLZ0+9JfaLZZeyuvAuto98L3BG
fecCe5nXsk0/VabbC7w3vuG2vtP+xZl9Uz4zl9nPkt+wISsoxT59hk5a07UI
+zm+6d+WzvG3P3fllUOfhLe94eOPV+MEnOyPgvnW9lZgvhGUVoLTDFAA46Or
h/HRaQA/aZo8
       "] -> 5.4, CompressedData["
1:eJxTTMoPSmVkYGDQBGKtSZFqT1/MtWdJbxZMuT3X/vs3uYPsM+fbH57J+Sj8
2AL7101hFiwfFtn3tQhPKy9cap8lvuWQYsNy++Ab+o3Bb1fap//ZXGPSudpe
48qjJzvPrLbvU++auHXaanthfqmud3ar7VXFchb3bVhp7+I9029bwwp76SSf
H5zhy+wfCn16vnztEvtJsV2yE1oW2/9/kfxpZ/4i+y4ONWFFy4X2j3U/6U5d
sgDuLqll7MFGebPtH1/I0Lx8cpq96wql4IroSfb+cSWzAl70QMXb7Cf+O1dT
VdZkf3caS2pgaYN97Z0a2be8Ffarf5/8X6xaZO+/V9867VuuvbiW1IXbpun2
Qut0fFv/JtnfAatPsG8Ue/gwLynOXvDDVu6ohwH2LWC+n/3WjdLuPpt87EXA
4g72Ac2ny54sNLdngAIAZxCXnw==
       "] -> 5.47, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAADrNpk/Ao2dP2IBxbC7sZw/guoRAo6xnT/A
vKukMrGfP7jRrUPJdqE/Tg7jbvlXoz/MKVpLnpqlP4UqZ+Cfb6c/zDvTHOcT
qT/BIXZqRXuqP4Y84LHo6Ko/m/lWf9DWqT82iFpaW++oPwS9IVSg9ac/yE7P
Mp+mpj+Yg5Ys5KylP/LIvM1ugqQ/jVfAqPmaoz9/UF8MEJWiP8mzmfixcKE/
UmCxHlSPoD/22bJaSOKdPz8rdHWhRJk/FY2UN0B2lD+ji3oNPcyQP8ZywdUw
mY0/VV8u2uR1hj/v27jjJhWCP5oL0FAZUH0/Pj5wi1nXdj9ky1k84UVyP2jJ
U7MCE24/YBTBxnNEaj8xid2eyghjP7Qsjp+k7lw/AEdhAbTLUz+TDdbZ94JR
P0yolWR3dE4/WKiVZHd0Pj9oy1k84UUiPwAAAAAAAAAAKRCb+Q==
       "] -> 5.43, CompressedData["
1:eJxTTMoPSmVkYGDQBGLxF/IHT9vPtXddvruFyXSO/YM97c4feufYa5y+6qme
N8/+55HEi8KaC+311tvd7XJfbJ84U/olY9pS++MVk0SZIpbbHzW/vnjukRX2
z+3+qe3cstJeaO+9im6xVfZXpHp1fn5aaZ/zK6pvSu5K+5AFr82azq6wly0N
3rlMeoX9iuWZ7y3cltvHRSSUz720zL51gVOObNgy+2chFQF35Zbav5hqfMhx
02L79je7Pk2et8j+vFtjvePxBfY/FLesF3k8y37a+YLq92cm21+8eXHXlPhu
e+285my1LS32jzae0rt3o87e2+R9zV2BcvulJxbo5qcW2E82b8hjssmGmp9q
H/ct9ziTQrx954Fj871PRdsr8Locm7wmACrub385jXVzvrWb/Qen12+9mFzs
08Di9vYL11na7lyrZS8mf1FD7aSiPQMUAAD2gZrZ
       "] -> 5.33, CompressedData["
1:eJxTTMoPSmVkYGDQBOLKrqz5TQvn2dtd5bt4jXme/T4nvxV3JObZf7JTuX+o
Y7696gXFZ+3Si+yDLT5fm2O8xH7uC8O23vXL7LXZg2a//7bC/v7UF7/OB66y
v6WWyvb5/Cr7H3mXjpwzXm0vWXBUquDoKnsFTe9Npp9X2vvpHnNqjVthX1/t
XLa3dJn9q8jZamtDltpPaQx+Lam5xF5OfI7fobeL7JklDY3Pmy6y//TjDMO0
xgX2v2S0T9T0zLP3/CseW7l5jr1e2dX+MxUz7G/G7XDNKJtsX/vz7eR45T57
3cAQuxuLOuzPRxtw75rTYv/8wuGSzxcb7VldTULkbWqh7i+xLwVplyiwl57q
lpMyO8vesz7X/jprqn348rLTlVuT7RWKfUPl5kfax1hXC3rzBtuz9pt9Z3/h
Y68G9q+HveB9D35fdyv7oPP14TKpRvYMUAAADFSUaA==
       "] -> 5.39, CompressedData["
1:eJxTTMoPSmVkYGDQBOLli5f2/p492/6avuQrdvfZ9rIli3yfmsyxPz+v8lhf
+zz7OVv2u1UkL7S37tuStqpqsf2bHd33g88ute+e1PC/9cly+zOJm3pDLFba
/7rPeHh1wCp7uaZjJbOOr7JPjJfRklu3yr521lrdzbKr7D2Xsyn7Zq+0//NW
9VXC4xX28x4nRfyVX2E/kf3GlSl1y+1d/L7PXvFtmf3MruCLEauX2t8uPbt2
osoS+ymGLl5bzBbbx/scTGMWX2j/RPLEFNXqWfa8AqmGwUmToPrb7fnzVofE
3q63X5J2L+SgT5l9aIHZ41mlBfYf5ff3rr2SZv/+0feQ4tZE+9J9Squ8aiLt
r/PN+m8uG2y/DOx/b/vbYL6zfSVY3tJ+maa4TPtfAxy0ApxmgAIA43eZYA==

       "] -> 5.31, CompressedData["
1:eJxTTMoPSmVkYGDQBGImjcNvbtTMsxdYGi7dmTPf/ih7+M6f0xbYf4vlnnon
b5H9wZTZao+jl9pfKzm1mOfBcvvFBeFL11Wtsl8o+UP44+Y19msW9l9i/bbW
fo+wYmHg5HX2lV+qU1PD19kL/tm2xs14rf2MiQmhdwpX22+x9Li6/d4K+8ce
+5Krpi2z19qyv2C/2xL7TNPjc8/OXmS/Tzb25iHrhfbBR/6ola6Yb/9Kd1Z/
xdw59kLBYnYsv2bZd2dr73jpMcP+mlLnsfbcyfbzVX4vDmXrtXcU8H7vaN9i
v0tOhXHb0zqoO8vtJZz0LhWvLIaK59n7mjX0mGSk23Mfnbn48M4k+2atS25f
1aLtf7uzlgqfCrQvW2sr4WruZa+y/xCDykwX+zww38reYufr2JYKM3smsD4j
e00wXw1OM0ABAJNylkc=
       "] -> 5.44, CompressedData["
1:eJxTTMoPSmVkYGDQBOIr6Su+OXDPtU/snmnCJT3XXqD25HTuH3Ptb1ktrc/x
X2CvH1df3DR9kf332AzN8+eX2Ps0Osk+FV9ub7oiYMcujZX2PxgU9CJyVtkX
tHgY2AWuthd/L/1qZsNq+/IUkIGr7Y8XRZsZ666y5/x1TrNn0Qr7S0c+fNye
t9x+UX6o8q3PS+3nnrB+rPV/if2ba9wNmkpL7NXrbLh67i2yb/GZVFlevNCe
52Rm+cS+BXB3fZukL/7Beoa9zPf7Cc8MJtmn/H3dNmNxl31X4pwLfTNa7PuW
c99acLHe3gTsvkp7x6NybXL/iuz7Hpgwv5iaZ5+Vb3dTTSfDfrnUxXnrHZLs
jy5XUgmZGWuf83CC9tYtofYu/9zXpx4KtGcO3vryzlp3qLirfYik+6PqSfb2
v4NA4ub2LmC+vj0DFAAAfviYHw==
       "] -> 5.46, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAACL2sQbxIifP7ly7aagAKA/x9SxtjKNoD9x
2Lmt+O+hP0/avgJGeaQ/VDNyNagWpz9nqV8HvLqpP8SIHyQZAaw/FMGQwAM1
rT8H6eCRMrStP7o6hNYIjK0/BV/MsHGorD/C/gpDWPWqP/AZQI28cqg/BkCL
CZ5opj+bQ5FNjxukPxhSrcP9RqI/r9/H6K8FoT8LuH/j00WfP9Pq4zOrjZw/
nKdcZUPhmj/LwpGvp16YP/TJnTeKxJM/P+fd77najj+YkzOjwcmIP1tt5MA2
dIM/o4okeWaKfj9kH0sm+654Pyg+hrRQ33M/u7d3F4GGcD/SpVnDygdsP173
+KH3f2Q/VM+mHfRQYD8syJqVEetUPyKgSBEOvFA/+6xlS61tRz+NJleu3RRE
PyWgSBEOvEA/Aa1lS61tNz9vM3TofMYqPwAAAAAAAAAA/ceckw==
       "] -> 5.61, CompressedData["
1:eJxTTMoPSmVkYGDQBOL/tc06pzIX2BvGnLL337jAvuk1d8PW+QvtBWymn/Cb
tdh+itNN+U87ltmLrshXZZu20p5ta8eUlfJr7NeWbE9jtVtn77bB/JNy2Hp7
jue/Z0t+XG//5tqaA8e719tPTMno3nxjrf3LJZY7w3ettp9o9fyiVMIK+/U7
8753my61L47Pfr3AYZF9eqKRPOvf+fbeB6T7LrHPsVc1Edgl9XWG/TEFBeNy
hun2zywSYxbsm2rf8FjS6J7bZPscWRGPpr0T7a9dc2xUudFtb9Dm/fO5Zpv9
EttN/1Q7muyvc4AcWG9ffjjwV8PjSvsMXoM1l7lL7d20DpU3TS6wf7tGm11f
OAvqrzT7ErA7kuzPndx76e6sUPuLDi+yriQH2Hf1bL/o8tDRPmn3lxy26+b2
35TD5qveMbE/FzQZ6BMrqLyhPQMUAAA4v5s0
       "] -> 5.74, CompressedData["
1:eJxTTMoPSmVkYGDQBGJpzYd/YyQX2D9L4N+u82aB/U7tP3MXpS+yl7jcdlLw
wRL7RS3fi1MdVthvjbOV3CS+2v6URfO+f+/W2r+yZ519iW+DfaK4wYKb0zfY
79nAG+txfIP9heg55VYVG+xXlapsP2C63n7a7HuCJXFr7FeJb1vI/XKFvWn2
DrNVf5ba/5f0dpB/tgiqfoH9VmOBep7qufYn1z/nW8I6y959oumkb77T7T/U
ZE7RrZtqb8Csvnjlh0n26uFFVsJ1PfZbfNh2/XFptre57HlqFUel/SuRGwy6
RUX2ZTfqucyW5trbgsUz7bkSL20/KpJqfwlsT4K9ztozeXHbw+0nTdw9WWO+
v/0LsD4newGwOlMorQqlReF8BijAJQ4ArRWOfQ==
       "] -> 5.8, CompressedData["
1:eJxTTMoPSmVkYGDQBOKzHMv+VisusJ94KGlFY9RCexMxg6U7zy+yt84OsHlb
uNT+iPpm6VcsK+11f3S5VQivsS+dr+rw4u86+30Sf1Y+nb/Bnv/h7rRIrY32
Blw/p5f7bbQ/1+fIIvtog33E/oszdv9ab5/PG6zDumcN3Jw7pSbrjY8ttb88
q0IwPnmRfcSfZtHsWfPt/eKqvrhen21/eKG4qKfLDPvdnSt/HXGcar+ttuht
04HJUPMn2h9/xTDfKrXTXucgP1+bboO92ZzTq6MmFNv7PxH9/Wx6jr3LgYLL
CiIZ9rZ68/bbXkqF+ifJPvSDD4emZJy97QqmnXMEQ+2dweo87KPB4nb2nmC+
BpSWsGfAAWDqzCZMmSfBbwRXDwCgW4dm
       "] -> 5.83, CompressedData["
1:eJxTTMoPSmVkYGDQBOJImTiXV3rz7Qs1nedGZMy3X5JtlLVWYoH9x7Lwl8+T
FtozsOvvXnprsf16txdzZ3Itsy+f3Hbzd/EK+xDOKT/vVKyyF+tz80lYttpe
smjPAX+XNXD6ghfvNpYZq+2/7SjlEjZcZW9icnh7P/NK+/+mzRMPf1puL1hd
wxj8YZn98eCz39hdltnX6ci92TN9qf3SWW0Opw2W2Lcc3fqvdvcie//jpTc2
rlpof3bqa3Fjofn2XzoVTb5KTIPa32Xfohy3eufrKvsCsPvz7c1fPglN7Ey1
f7Eum4FTPcH+wC7TJ24KkfaFDXv63u0NtvfqaSvS2e5jbwZW52rvDObb2OuD
+ab2pmC+jr0kmJaxZ4ACGB+mDkbDxAFCD5P+
       "] -> 5.69, CompressedData["
1:eJxTTMoPSmVkYGDQBOLPXCc1rNUW2G83cFIzf7HQ3sPo46OLZkvs40xa73l5
Lbd/s/b0iZOuq+3jncxbkkrX2btrSwi4Ldxgv7hy97Prkzfa+4laiNm/32h/
JTLQbvXdjfYJPz2OZxhutC87Yxz0/fZ6e87Jy76vF1xjL71FaP/t58vsPXdF
bn3buch+yrvM6fet59hH9M08eF91qv1a/YoVVXET7C+e+DDzcWWX/Q3jBfNz
Wtvs28JbF743brVnCF+QJJjfYr+2qjVlimyz/YN5/ku/Tmiyn3H4n4rpySao
u1vg6r8teLwgb0mr/fUXkx4HHWu2n17xMUOaq8H+zSu1+6dvltmHnbx646Bd
tv2+5S2Xti+Ot98Ppv2htL29/tG1D8+Lq9rbxUy6vl+ex54BCiB8GQx5AKTk
ok0=
       "] -> 6.15, CompressedData["
1:eJxTTMoPSmVkYGDQBOINxYziS0Ln26c+NBOJaV5ov7arfHfBg8X2PBGRer94
ltu38dRrOEmttn92M2H2abd19u4la0W5GjbYP9pzqCo3c6P9m+4PKvf2b7TP
Sq/pfr90o33DlLRr739vsGfn6g1Nj15v79DHefzMvNX2gdfO9ed3LLOXTz64
6Rn7Ivs+CS7xzPjZ9sKWktcbC6bYc53VF9yY02+/TPDBHDvfTnub0gv1Lqda
7U9/Z9h16HGL/eHXpadnz2ux333/1Z2SyBaovhZ7k0zXibKtrfa5e4XE9TLb
7f12bFxkaNZpz1Y+s7VoZae9bEE+t8f0dvtXfxL19os1299LXavkb1htP7Pl
8x3L5AL7rukrXLt3JdmfOmNaoswUZM/NdHjRbk9He+5173daXNCxFwKHA7s9
AxTA+BBaHC4OAEm0jH4=
       "] -> 6.41, CompressedData["
1:eJxTTMoPSmVkYGDQBOKLX79Zze5bYO+9guvCdZNF9nmOx6PkUpfYX95gP+NA
xXL7v196bO6Wr7b/GLklLezIOvvsp5w/3jzfYG+5xUn/0eeN9hIKU9Y1JG6y
v7GgPaQwdpN9un37i9/bNtpzVs8/ol+0wT53rQ3j/L9r7L/MnluY92q5/aqc
T58XVy62P1x+IOSD4jz77YeE1QPEp9v7gO2fZN82z4zrkl+vvUb14deCczvs
J95qfpoytc3+l6XL/e29Lfa/b+14clih0T5sj9OP7DU19iXej/NeLKi0n2Vc
vOGyUpX9E+bJxqvUqu1lH7wS7X5Zbe+XHKz7V67S/krglrlnuEvsnU9UhZdl
59hr713zTfNwov0z1xq7Qz4h9k/AtAuUNrFfy/LXMMNWwZ4BCuaC+QL23O2/
vWRiNOy3gvkGcHUAzCKcgw==
       "] -> 6.4, CompressedData["
1:eJxTTMoPSmVkYGDQBOJq+6Av0u/m25c1nDmyoGWhvXPJZN2ruxfbt/z5viLh
zDL7jKA7AXcPrLK/uuiGWsu3tfbXlaeH67VtsFdt5KyvnrPR/uBeGZtouU32
9q3ld2Zrb4KLl2y8pPyrYIN9pM6yqfpBa+3/XrgpfXfeCntte/nCaIcl9vKT
3uo68SywZxaUq2GaMdOef2bC16T7U+w3znaOtYiaaL9nXtbJ5PRe+8W5wS9L
pnXZd9vYcLYdbbdvZghtfV3WbO9uXmZ5+3yd/e2dFx6kRlTaXweaLmFYbt+R
65Rxf2OZ/aGOnQzl7WX2BTbaHR8eFNvvXHfPql+wwN4v6PR59ztp9lmK1z42
X4m2fz559TLfc/72T8C0PZTWt5+fVHTE2ETUngENwMQhNCucBgDEiZRO
       "] -> 6.33, CompressedData["
1:eJxTTMoPSmVkYGDQBGKtmf4/U3bNt7+dfqrjiPJC+2fRJ0/kcy62D7fcViS0
Y6n9b98HK1cWrbRXUDjCcaJ1jf1FuSty6h3r7fmkqlOPP9hg37rKr+5j1kb7
7MBv/AU9G+0V6xKepEhvtG9VPXT2v/QG+2cVC2weqqy194x8+UWXb6X99hVL
bEz6ltrn8n27f4t1kb3g7qxbH3vm2S+K+Fgf2z/L/tREsZzD4tPt/1mue/7I
bIq93wGtptLmSfZ91016/Swn2O9dbtD7+3y7feCdXrd1D+rsI/XnCupLFdsH
XSp5esopx36Pzl7bt3KZ9h8iH2b+60m3j9iieUghM8W+H6w/wT58n5MyC3u4
fSvnpqL9fr72KsWXL3vsd4DSBvYyYFrBnhtMC9gzQAGMvwlsviZcHYwPANyO
l+Y=
       "] -> 5.98, CompressedData["
1:eJxTTMoPSmVkYGDQBOIj/epuQewL7PXcp09sOLfQ/sAse+0l+kvsL4Vuz50R
udy+ZKrFD77g1faTc1/d3NK8zl64ma8oZusG+3dbS0o51m60X+SzSGs/1yb7
mq+ffVZ922i/RWDVhx/eG+3tGrvKfjJvsNcs/CC7zGyNvauYxbRv/Mvt95xe
cJNp3iJ7kz6tveG2c+y/zrDp1A6bar9ze7l4Y9sE+/9ei9+9n9BlrzXd8vmm
mjb7vg3Z/fMUWqHuarFX3lJ4uf9yk/3uNrFMJYkm+/e//j19YdRkH5H75IBZ
SbO9WrOAqmFqi736iVlTBV+32O8V0PZ6rNxsnxt9LKfha529RtD6skvfSu1n
JF36khSdZX9xZ1Orj3yc/WUw7WefZlzyouaYlf1EtfB1d0VU7HPAfC57BiiA
8KXg4jAaALRXmIA=
       "] -> 6.5, CompressedData["
1:eJxTTMoPSmVkYGDQBOILhmcXfJsyzz7+y5aKevmF9kdC7q4+WbTYvt6v7V15
1TL7Q9rMzjMDV9mr/z/dqKez1v5R65UdE9esty94fyvXcuEG+733wj+eP7nB
vmsKy/sD6zbYh18XeJjGs8H+ondPZ0LbWvuvTNssY5+utH/W6X1hi9RSe1sJ
jfJS3oX2dQyeJlbLZtrbPlm5dKHWZPsDAWlTlrH02T9Zt07x0NkO+9iin29y
M9rsF2oJf2jsabOvNznOytfZbg90rNy6lR324kGP3TbVdUHd1Wvf9Ioh+bPS
BHttWaam3d0T7a9lHup8+3SiPVe0SaZ09gS4+i3FZfMrHzVBzS2z/9ovqicU
l2nPVlhjlfQu0v4R2H4P+3lgeTP7P4p3ehi5hOA0AxTA+HxKIFrJHgB3JJb0

       "] -> 6.78, CompressedData["
1:eJxTTMoPSmVkYGDQBGK1TUybi8ym20ese7Q422i2vVn6lJ8t++bbb8wof76w
b5F92qTfOW0NS+3597pvyylebj/p84JjfktW2M8Mn5ctc3qF/aoX0YdD0lfY
2977tfD2quX2lV8N/IKWLbO/P+m+HzvjUntFm9liO2Yuso/s5F/59ds8+3tL
PN2+lM20D9I/1r0raor9gnMsIsXbJ9jz3kjTDFDps18/lSGoaGuvvVPPPJup
HhPsT8UaPVkeOMmef8skqzKLqfaKCrXTLWbOsF8a360syDrHfvH044oCbAvs
d081n8XDssg+5EfHzPCVi+2zVRo7Dsguse9cfXABQ90ie9+u6znfv8+1n/8g
jztBd6r9XxP7W1pCXVDxWvteG48N807n2netOjQlRS/efvr0CTdLt3vbr76/
zD1Ox8z+iPrerW4LFeA0AxoAADvvlP0=
       "] -> 7.59, CompressedData["
1:eJxTTMoPSmVkYGDQBOLP22qkWlyn2jtKltzvcZppvyx4RlPNobn2NYIp667X
LLQ/yqYct81+iX2QsqfY/ZtL7c89mNzBtWWZPSenrDl3yzL79ksNOt+eLbXn
FjXbdYpnqb2wCAgssa+vm3OYcfsie0HLRmfO5QvsnasmF37/PNu++OH/hTcj
p9sfmPnKo4d1sn3FEu2Za50m2CsJPv6yfE6f/fTQO+debu63f/it0UnmykT7
EP2kmfOSptjLR+8NnnRouv0NaRXXkzdn26vWSXNdujbf/pB8Odcbz0X2hQ0P
+PNXLIG7y2W1pMoa/uX2HRG870K1l9qL67hJTVZdaH/6ShWrt/YM+5OyGRPN
TvfaC27+0rgyqdG+bIaQ2LudhfYbrPiZ+12T7AMP2mwsXeRvf7PG+bpxt529
dmQlu+pFVXvu7Lh8HT0pewY0AADUQogx
       "] -> 8.03, CompressedData["
1:eJxTTMoPSmVkYGDQBOK5nHyLjV7Ptk+/OcNSdcZ8+x3SO7ctZVtkL8LqdTPz
/xL7iaZNp9xjVtg/aj7Y+f7ZKvvZk6P/5V5cYz9DdmXkyu1r7XOO/m1ad3qt
fV9T+Lcez7X2zpHbv9oIr7H/vfTkzI3fVtrbFE5Iu719mT1/WOz+a0cW2ffw
LA08oT/PviSld8Enwen2f+R3/Zj7YqK9d13YlinpvfaLvxa92S3XZf8HrL/T
/lTizkrd6932Z2d9fvf7e589h+E+hvqCifY1NuHGrJWT7Xfec2hfzzvN/phG
PUv8thn2/HdyEl5dmmW/UkpotXDxbPve/edVm51m2qdI+Ss7Z06x32i/MTP7
eI+9SWfm9cqYRnuXy8tDNFlLoHQK1J1B9rdvCGm1tDjam4LFVewVwbQInM+A
BgBNbJap
       "] -> 7.71, CompressedData["
1:eJxTTMoPSmVkYGDQBGK3aIGWHd9n25+xm3NcaMt8exFZh2tXfiy0n2rE9erO
jCX25WePMT1/sNx+o8XlG+Vqq+xFe9p5z7xabX95fff/ZWvW2C99wNS5a/4a
+0U/FQsnCq6xt+v1C0m7vcr+g+67c8XXVtjPZjgjqb91Kdzcd10Hjhn+mmOv
Feo+VTZrmv3cxSCNE+29NC9t5hLptW8N0K7asrzLfivbVI5TTt32NfetnRTW
99pv3JCzc+WhCfaLCncHHl47yf7Yi+KKT8ZT7RNvFgW3Ks6w/32yUE+Cf7b9
oUUSGXnVc+0Dv09+HGMwz1634fYe3VVA/20zXeESMM0+9Gio8HqffvvdPh8k
/H432TeqTg9akl5qz7MmYJ4DQ6o9L5gOtW/+xaQ9Rd3Bfl7sPMG3NyTtGQgA
AKHJjws=
       "] -> 7.59, CompressedData["
1:eJxTTMoPSmVkYGDQBGIehdtHt1QvtJ/lvumBzrNF9o+4r/F927fEfgnn5OTE
kuX2Ex6fXlDhuto+4WrMjKLIdfbvzI0bpu/bYH9kf5FB0qWN9vUx+503O2yC
08JSruJ/Vm20N5sxW/RV+gZ7VVZeXov7a+zzZm2WdHRcYZ91yeZF8KPF9lZR
gR8ftMy3NzTMqrt5b4Z98ZlllrMFp9hPfeY4X2j+BPuokjdhEUI99ix7vrQy
3O60V73W/7o8o82eG+zeRvttcdfduaSq7E2TY+cZry+x/zWJV/inSbF98o1L
03g2I+j9h/a279tVaH9458Zb2RNyoOLJ9iuZ/25ZsTjc/qOe+mWXKd72RmD3
2NsrgWl9exYwLW/PAAUw/iKwPnO4OhgNANgnmdc=
       "] -> 6.4, CompressedData["
1:eJxTTMoPSmVkYGDQBOLE30Ediw7MtX+vzl62/+gC+wClkywSBovtVZiVjab5
LrPPPiXyz1Julf2kPeIb1f6ssZdu2vxgTu16+3XBztrzqzbY60zz6GzduMHe
yXLDb922DfbRYeXae0+st/8ZvXVOStxa+4RmKe+gsyvtfz+zTPvOudT+Qap4
/ZJHC+y7T77UX1w20z5v2YpPvt8m2Z8TfbZdeGuvfYX115OXr3TYv/qVHKZ1
sA1Oi4j7Al3WYb9lyuELB3o77T/bLWTSL+62f7z4luzjsD6ouRPsIyW29NSF
TLLv1up40Lxnkr1QxetLK70m2t9n3HP8wd9u+59TtazL7jZDzauw15+Rzymj
k2P/CWxeNNRcb/sO9dM3F8ia2/eBaXEozQ7nM6ABAMZalEI=
       "] -> 6.8, CompressedData["
1:eJxTTMoPSmVkYGDQBOIKWyPhhn9z7bd9myL87OEC+w1H+BeY2i62f5t9q/F/
0DJ7jZbk5cdlV9l/bBB8bcK01v6SRtunF83r7de+nXQur2aDfTqDY5375g32
Fvu2fkxr32B/cfHRzbYH1tv7smqwfItcax9+IX/jvwsr7dm1Fzt8/rfEPurt
3t2VxxbYb318vO1g8Ux7vuDlZr4yk+2rwO7otXfel60uwNZpL7XkyYTO721w
2vVSrtJekQ77J6rBwovmd9ofj+G8Hp7Tbb+ifu/8BK0+e9FWnVV/D0ywb53W
xsekMMn+x+5HuZt7J9kXcjof3icx0Z7H4dZKjXXd9jMkPe+8m99s///dHP83
l8rtb730UZpdnAM1L9r+BJj2tmcVX+jq9sHU3uOixRaTEgV7bjCfFUqL2jNA
AUwcAAI4l9o=
       "] -> 6.94, CompressedData["
1:eJxTTMoPSmVkYGDQBGLbWp9/n//Nt//9b91rmTML7cW5Y5ckiC2x3/u3pOOp
xHL7A4XW3735Vtu3VL1/YSC5zt67vvbIq4oN9n77wtXWBG20j2y9soBn3kb7
RzopWT01G+0nFhlFcV/dYG9pVzTHSHW9/VolmRSfwNX2315dcnziv8w+xLFZ
xPbpQvvF0fNfvmadbR9kPnW/gvoU+8NPGdM2Mffb/1uemK5xt8M+myVTbPH0
VnspL3M2pQ8t9os/Hju/8FyL/TaHZ0kLuxH8FfnVk1Wa2uwFvzf8Up/VYT9f
5mi7lk6Xfbp++jntr132Hf4fDVbs7rC/c0+lcwFriz3HklPvdF1q7D2sdSyk
DxTYbzhkOF/uRpL9X7D/A6HiDvY+YFrBngENQMQF7NH5AD5UjMM=
       "] -> 6.81, CompressedData["
1:eJxTTMoPSmVkYGDQBOInzpo3nt6aZt91+dTF1Pez7H8U3g4+MGe+vdypotay
pkX2S5L0VX81LbVP31pa6pS93H6TqeHsyikr7OVjtIKMNq2w//Cny8fbZ4V9
uRaDklXvcvvZF2w3725cZl+/KHBS3Lsl9izb1NKM+xfZh4pVxZacmGd/Nsx3
98nwmfYr5CJie4yn2DsmPxB9vWyC/fdw66Blf3rt82W/Va963WsftjD5d6Pn
BPtT24++ZYiYZJ+dcm7Nce+p9n1Nypyvz8+wn7gtmUdeYI79vo+TK/rEFthf
DWtP8NFcZB+/Osci6dZie1HXQBHXwCX2ItobhbQ3LrL3zHrxUlp9nv16xo/T
XUOm2h85Eu3ZHdZlb6aTytLaUgd1X5791X1nDxreiLePKdE+U9fpZX/79PX0
g5WW9g80O6+dtlK1Z8ABAMARkDs=
       "] -> 7.83, CompressedData["
1:eJxTTMoPSmVkYGDQBGKJtgvzRG7PspdaMHe/84J59gIPrtWKL1poL/Qlobmr
Y4m9KE/uhyrmFfbizPoTt2Wvspf8lneqxH6NveR6OasjYmvtpf5sfGogB6Qn
hV3tmbHGXkKlMja7brW9+KMnRxgjV9qLzOIVvBOyzF6grt4mz3WRvXQa77cr
i+fai2Y5nVp2epq9YNXfKx82TLSXSvFxmhbZay+xI2Zmx7oue8kQlyUL2Lvt
JU+kmNcx9NrzF1gEbbedYC8gsWyye8gke+G+9lvJ06fYi+YdMVRJmG4vIVPa
VxA6y15ap1Ynbfkce6lTqq/3eM21h/lPOMnu9+pFU+1lcgIEJzb12Qtu6Z0X
v7bJXjih1j03otReeIJH36KHKfZCB4SvXs8KsRdwyOVu2uJgz9fg8GFNv5G9
EoOJ77pNsvYMUADh89rDaAAPw4VN
       "] -> 7.75, CompressedData["
1:eJxTTMoPSmVkYGDQBGLnKn1/Q7Vp9vvmuljXS8+yz9i64qzGpHn2K+MmeC67
tdDe1Pa2btPyJfa3Q/YFVCcus98aN0mDPWS5vV7Dic23nZfb//bxyNqxfZn9
uvkLfJ+/Wmrvu52J0eDFEnunnfebPEoW23/uLteT91xofy4qckrbjzn2X/yW
RTcyzLB3+yGgJlA/2V6zLuPxxsYJ9plge/vsZ6z8Xtwi3G9fu7LITShlon18
kcXPvfsn289+khUaKTzdnq9L9rf451n2JUU22+s3zbPvTGMzyGxZaJ+0MXNO
66nF9n3LxUxWTVlqb/PnDMcigWX2PMffnd1qvcS+P2WF3QLrBfbTl1pumsgx
3b4/yzWRx6fHXrJpcdjksAaoOwrsM/NqxHT0Eu37wPI+9gJg+6zs2Tjqktz6
Ve0FwTSrPQMaAAA+F4vo
       "] -> 7.9, CompressedData["
1:eJxTTMoPSmVkYGDQBOIn+d+/dB+dYm/HxzdtwpYZ9u4hakkub+fYq0kkGpx/
tMB+07b319bnLrbf7VzRlfxqiX3Gtt3nnjYvtZc5YXn8ne5S++mNpW+n5C+x
t043qEvuWWzvyJZt9GrOInuvW8ln58YutC9dvHHTsSfz7FeGiOX+UZllL6r5
XyhDdpq9wdKXj5viJ9l//HLHZabWBPv4G5unsbr329/SvK9xo2eCfd+XN5YP
P02yZz5Re4ThwVT7/fIinXsPzbRfZLn2lYfCPPtitsfmxywW2h8RL1QVX73Y
nnHy/ruX9ZfZP9jH5WCkuMKepZH3LsOcFfb/Yhm/L6tfZv94W/qdbs5F9mv3
TbIKa51pr+K9+W6pXr993py0rJwbjVD5IvttCjlLOM8l2f/v2OCwfLOfPVMn
iLazT7TqZdjZr2HPgAMAACuplQ8=
       "] -> 8.13, CompressedData["
1:eJxTTMoPSmVkYGDQBGLpRZkLnmVOtmf2MMlyKJpuf2Pj5R9fr862T2Zmy10W
vMB+ubmw4+MDi+wn8Bz4/1Joif3q7xFB3Q1L7A33mT+Je7fY/sTHskVrxRfb
/7um61oos8h+Klcu8wHXhfbXenceviqzwP6UithVv19z7FUfWV25t2KGfYQ6
Z6wa31T7coM1q06em2hfXJA2U5F/gr2Wy57fOlf7ofon2h9m8p8TwTfFnvfZ
yfZJLtPtv3dPCXzjM9v+Q11SwNQP8+2PCl6ZedN8kf303briz28vsZ/W461k
NWm5vdJnoXOd81fac7yQadkjuMpezvjsnof3l8Pd6ae9PrRqxSz7vU2HKzn6
J9j36ch+FzVutoeEQ7H91NtdfMJ/ku3N9zx5bqIYaA+0XHzHT3v73cesloVk
aNvr6asf6XVlgtMMUAAA2J6Wdg==
       "] -> 8.5, CompressedData["
1:eJxTTMoPSmVkYGDQBOK5y2aIXamaZJ89LYXvReM0+/yejPTEO7PsXaKtrmXO
nG+vFbl0cpXIInurCBOnT/aL7Scu6haZWbPY/plfgsGtQ4vsL/P5Hbx8faF9
a3uDwc2bC+znvZmppca7wP4A344lM9jn2cesDH1nqDHbns2DwYrNfbq99wy3
jT+0ptiL3OBPeZo50V6kWiCPz3iC/fSsySs5+ibYq0soXX4dMsk+Iixo/sNp
U+15WliXXzSeaR+THHLr/tS59u7/Hf3C2BfaT33Md1XdZrH9hJguBvdXS+2V
Vsx+0L98hf2+bWZMrYtX2T+Tur/Kk2m1/QmZg75Rq1fY9yVyhHDtXWyf1BGd
qnZvtv2di9eZGsQm2tftr5ideaLZXidE3WG7Y4l93I0Ihf+iqfaQcAmy/yD4
qrCN0cl+0osejdd8hvZbtZdqZwbzQel/dgxQAAC4nI+a
       "] -> 8.77, CompressedData["
1:eJxTTMoPSmVkYGDQBOJ4sdc5d2sn2dfe+fP1Td40++t/u1Td5s2y3+y8cXrn
s3n2L1oSJ5zJXmifeHbXcw6fRfYHXqyZuSNukX36yp+XtrUstO93XXfy1MQF
9gWHjzbstZ1v/2f+7ZnMJ+baeyuW8jCIzLFfbCr79GraTHvbUxuulCdNsw8W
tRVce2uyvYom355XtyfarywSzQ+Pn2gPc4fn6TiDFaxT4fp2X9v/N+ntXPsz
L6O+vmBcaP/PWdOBae4i+4kFO7d/k1hibwM2d5k9e1kdO8eTFfZhSsoZBttX
2ZslrY059WiVPffst+Vdfivsy52DhLK8F9tPPnZ+sp/6bPuP4gXflhZNsI9Z
4V3e9rDJPsJqTaO+a7F9WPMdNpbyZPvCz9c3744MsP80T9fusoq9vWK9ygyn
Vxr2DDgAABQKlkE=
       "] -> 9.11, CompressedData["
1:eJxTTMoPSmVkYGDQBGIx/m0xsSsn2Yf58FdpzZ9mv7ehVGzfhln2JYu/brj3
c559VIH686vlC+3naPbf5wxbZH/p9Wl7Cf9FcPGdf0v5z7YssDcU68zvUJ5v
P4E3as+ENXPteWd3ndb4MNt+4+czi1a6z7QvfJRnsytymv3KbebBcvsn22dc
vLKY5+ZE+2NfFiz/lDnR/p34yrvTeifZ9/pcds/hmWofdIFh/uFtM+3n5rFX
HuedZ7/6xGHOEu2F9qJg9y6y3yb+lD9UYYk9S9zX6rnpy+wXT5J/VvRshX37
Pott67evsq/4zHE1/dYqezkf7zUvDFfY33/07bqtyWJ787Q5kwVZZtufOLH0
g0jSBPu0v+ejXj1ost/++mVEuUSxfeQJ2dCJ7cn20bzT3vnZ+9sHaHznqT9m
be8Yt9Pz/hUVewYcAADI5ZWX
       "] -> 9.19, CompressedData["
1:eJxTTMoPSmVkYGDQBOLLC5rrJRin2rcs27a4f8kM+zKdZctii+bYt1WaZTOF
LrAXib32UGf2IntRe24Fv8eL7VfFG0+d6LTEflPdh4unFy+2D7s76UDz0UX2
t35fsxe4tNC+PqpS78TnBfb1Hxnn/V49H27e/dT7ZdusZtj7LeA6lLVmiv2K
2Scl/DdNtDe5eeqKqMIEOK08OyB6YexEex6gbcJNU+y/L/HObls23b4vW2i2
7r3Z9i4/K3tWay2wf/TnxK7s6kX2Xx88fOcsttRe/OnKWxt3L7c3fFHvfWT7
SvtjHCsOsIuvgovvmruWj411sf3clT0iixbMsg+V1HRxNAXaO9ckMGJDk32+
zP8twYZF9n9ks97G6CfbN+jOUNwp7Ws/zzCBV/2gvf0KMK1vzwAF0ooOcfna
ovYwGgDbxZQw
       "] -> 8.73, CompressedData["
1:eJxTTMoPSmVkYGDQBOKHlx+4XsybZJ9QlS9QnzvNPl6Xv3/Gmln2//SPrLOw
mW9/XbnUY+/JhfaL035dLjq/yP7xG6Z1K94vsr+w1Fc6Qm2R/dttvBZHTBba
Vy3zvqdkvcA+9sE63k2v59mX79eKyv8xx563srjrpfMs+4mv2TSEj02zP37b
aaLNw8n2fWzKN71aJ9pbWabmHJk9wX6u9JTZb3wm2oc+WTS/KGOyvZG1zMmZ
YtPtNzxcNdlddLb9B6ngN9NK5ttvf1AQvWjnQvs0IbNTrzcstj9+cDGLqeMy
e4GjYc/nP11h38EeK/jhwSp7DpG8o9GKq+0t2poYFWausOd9UDTj+pLF9p8b
rl4N2Tbb/s/pul+pfybYq/Xoftg6oRnqrmJ7T8aytfWLUuwdWk4v8ZILsncE
0072lgrOLG+lDOxtwbQAlGawZ4ACAO81l0c=
       "] -> 9.01, CompressedData["
1:eJxTTMoPSmVkYGDQBGLO2U7F4byT7Y0r0966ME+3l5286Fqi2Wz7t1zTty85
Od/+6g5ZrW2qi+z5budtfuq32P68WLuSaM9i+95ku6ttVxbZi9ay7m57sdD+
fOcE3az3C+wPnOTO3a+1wN60UDRATG2e/fLZpyrk7WfbS1yXe5qVPN0+5Nxj
ByaPKfZvpCw/MbZMtO+/5v7gtvkE+9faN0xd+ifY292/2MztO8leg2vthqzu
qfZPGj9MKJGYaf957xmmjry59sJ9S/6d+LzAfsmWXZET1Bfb63rd/PDjzFL7
Ex/cz9xpXmG/6s3UP++7V9n7uFkpb3++yp73a/Rc644VcHdXvjDSOdU7214p
/gTTtsMT7LuEigO3tTfb/6gIfj3zQ7F9D+MV3pKaFPtEIcEAl+pA+yQw7Wiv
/UC2Z/t0Pft0MF8QSjPaM0ABAIe5kzk=
       "] -> 8.87, CompressedData["
1:eJxTTMoPSmVkYGDQBOI5T++9f7h9sn3cn86W4FnT7S8Hfvo9f+9s+zVOu5Ol
FBfYS63RaZpdvMi+boPIKaG1i+3v2TWmqvxbbG8dXhRyIW2x/fHft60uNS+y
FzPbeNW0e6H9fv6nD9k2L7D3VXj7QUtzvn1m9NMdqz/PttcvEOz9+3S6/dVr
D/Y6tk6xf7RLa4v1solQeybYsz6SvNruOMHeJqpTdeWxifadovMWyBybYi8v
mby7zGaGfQSL+XMVrzn2OxSub09qWmBvf4HlEt/6RfZzHx2X44xYai+pFTrx
EvcKezXWKBEn3lX2y05MuKqUucr+WCWLF6fMCvuguXoBvx0W2/vPXysgbTjb
/mtXNjPjjAn2wWDxZvtTheHPzXOK7ZVmKN9Oc0mxP/7vE/fqxwH2z9b4r99h
5mB/+VRL5T1Wbfun1llTvOexwmkGKAAAUlWWGw==
       "] -> 8.75, CompressedData["
1:eJxTTMoPSmVkYGDQBGLGrxuFi5ZPsT+50/f55Z0z7NuFNa4LuM61z8lKUVbS
WWj/O0Wteuf1xfaCy6crXstean8xf2ftGo1l9vxxBptjbi61nxZTMTlDf6n9
x58p06cELLFnvfA87l7cYvusG1Pd9NkX2b/u3/nnt/wCe5NSvhtmqrPtWVax
J+7bP83e5ml2b8zaSfaNDs9fZVtNsH8kw7yL/02fvWG4suU9own2LV9tLHYE
TbKXFopk/f1piv3tv4yXtBbPsDcILJQLvD3HflZs350vrQvs1/EaLpP7ugju
vvs3zGWnRy23Vwm3ev3/1nL7MNVZ7+3eLLXfzXUwzWzhQvswD8WEGfdn2HMs
ze7fu6/PfuGSTWwmhxvtv6dl7v+sU2Sf7nY80+ZREtT8APulJ/wPSPI62KeC
xZXss22X8h83k7OvAtP/7BigAAB2YJcs
       "] -> 8.29, CompressedData["
1:eJxTTMoPSmVkYGDQBOLplgFT/FSm27fMiGXa+H+WvffFr78s2ubbfynksf8c
vchevsszdq7ZUvuO6G3a/QLL7TlL/7HN0V5hr25odEMqeIV97ceSduPHy+2f
uxQV7pRdbl/CeeRfttgye8tLKlk7ypfYH79ux7pVYZH9b6AuCdt59vFfKlZk
cc+0vz+385s14xT7VTGXHRtWTrDfc1N4e054n/1fsLo+uLj/suWb8i9Nsmd3
ygto+jrV/nfonAmT0mfar7Fxivn+eY797DrLmwemLrC3P8HrtWHfIvuq/2vu
JccusRdLvHCse+cSe5nwncuaGRbbfwusjsxaNs/+9Em2dS3LptrnTvRifpDX
ZV+5ptvpYGGdfUPiGpF8jjz7ZrGzz2Tmx9ofnhR6wGm9h/2KfZfKu0O07Bmg
YCuYLwXnwwAAp6uQlQ==
       "] -> 8.1, CompressedData["
1:eJxTTMoPSmVkYGDQBOJ3Ns8WRrdMsf99m4XduXaG/dP5ExOOPJpjryo5zcv/
yQL7mG9arK/zF9ufSwyZ9vXDEnvfIysF/3Yutbcp6Z7gpL7UvmXfN/e9aUvs
f8w/9Xpl82L7K9lunm1LF9lnaaz5cSN0oX1ec8bmZ9/n2Tu58Pp0Wc6yn/Xb
j+GJzjT76S37b0emTrK/4rty906NCfYiodNvMdn2228qEt8QPHWC/UN1Wa1J
7yfZRzQ0fOK4MtX+x4L1fwPXz7R/lGITfllknv1v0dJ/3fIL7c9wJP03X7bY
3lhwudsX9WX2OxPMfqarrLBPi/qS8HDWCnvnxKPH13Uts+868eKXr/Qie60z
8V1FS2fa+664trwhpd/+06YJW2wVmuxPrM/PqIousi9bqXvh88Uk+4zzOxOl
uQPsWVimuC9YZ2F/as7K+c/2KcPpK2Ca2Z4BCgBjq6JI
       "] -> 8.29, CompressedData["
1:eJxTTMoPSmVkYGDQBOKJ8lZJn5om2jelR/Bqbptqf79Lq4X700z7BQ5OVj3n
5tqfvybfJ6WxwN7Q6OQief8F9itTnv0tWT3fvuz7youP78+1l3S8arNKdY69
/XrzvPL5s+xb13errV0z075D9kj1/fkz7G9c2ScayjHdfml608vDNlPtV1zd
ZfdNf4r9hB5zl9ksU+z/Oym6KzVNtf/yo9y9e8UMez0ZhUeXYufah8z/kJAc
vsj+jtP3rPbfS+2/p22Ys3f2cvuv3VWpj9SW2Z/bIBWUo73UPlLuwJKG40vt
p3Kzd+woWW5v2j15Vd+hFfYZIWan7k5aAddfeW1b+vTwhfarZd+FV6nNsH/T
yVJ/3rnXvrDX43bn+wb7IjBdAFWXaP8WLO9rv9lxknQys5X9ajAtBacZ0AAA
h+CXKg==
       "] -> 9.3, CompressedData["
1:eJxTTMoPSmVkYGDQBOKAtWdjhMon2Gu6Mew1VZ1qf/DCOaNT7TPtHzBbXGy5
M8feL3YV432jufaFhabf34XPtv/+wL7spvRM+9CWrU07DKbbm7h8Tt56Z6p9
keTxJRy/ptjvetPbc/vcFHtD7uRdleum2Nv523fXTp5if9wgK/b+5in2ndHT
ZHqmTbXfLXF067m/0+3NpW8DhebYV2/6VBEZstB+yWO/fZMTltrPmHU1xKJg
tf3eGX/Xvs3aYO+vc81+yo/19uat9l8f/ltlr6PUWm38aqn9gztzHV7uWGx/
piy4PfnhYvvgrZ0uzNlL7PcZlW+L/7PYvpL/X/L0vQvtozO+aSx/OdveK6p7
k6vXZHvZEhf7lXPa7Y933Fh/VLDaXln+q3WMerb91n9CW23/R0Pl3aHuNbXP
+LRbWf+PlP2CIwWiLw0E7BnQAABCuZnt
       "] -> 10.08, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAACG/TDNCbaQP1w6quYIgpU/sD1qN4DsmT98
lP4tYDKdP2Vw2sYbRJ0/G72oEEInmz8zo9AQC7+YP9TLevPss5Y/ioLytJFe
lT+hPG2kV4WUP9qWR6YCWZQ/vmlaJS1vlD+cM6SKxomUPx9tXVNO65Q/rCJS
x3YLlj8XduOPNdWYP8t8pg7Ou50/nPWnI0szoj+PqjmCYIWmPzK1H2eDpKw/
uplteWQqsD8EIqzUuSutP92kMLlG9Ko/edFA31wzpj8NM4RSXc2jPw0zhFJd
zaM/9sM0J9hCpD+i0sMs2b2jP+e1CDfqlaE/fMCrPmOjmz9Y8+Rl/C+TPyK0
ItRaPYc/jXFdFJjOej9IBfHeygNrPwgM9zoN/Fs/q2BOLvJhSD8XopCgOEY3
Px7YwIBLCB8/gePSEn8qFj876dvbmLvxPgAAAAAAAAAAf/mXVw==
       "] -> 10.94, CompressedData["
1:eJxTTMoPSmVkYGDQBOKf2m45PfoT7Rfyf56VMH2qfcVeU2G7QzPtX2/P1n6q
ONdeepVngrXJPPs9b68+vB03154/WWHFqfmz7TtXp197vXam/bL45sJfpjPs
a1Ps5Kolp9u/fDa7xLp7mr1Z71SXBarT7M/f7HiSGTXVXidvS3nNgyn2op0v
L33/N8We4Uya5IGcaXBzjvFsX/d/8Tz7ANajdbu3LbJ/Iu5dt/HJcnvNAmOL
ORfW2H85tKIpaf9a+7dmOt5XNVfaLwa7d6l9lcg694dVS+xzrBR+3TRbau9X
lPBShX2ZPf+yL2nHNyy1T2CfvZ3fa7G98OYNdSl28+y/rWn1maM+1X7BBKPq
gv5O+9snLTPMzWrtJZsYS989ybGPsDrZuHRyjP2+nGmMZ9I87Wd+EDxnE2Ri
Pw9Mi9i/eSFlGl0tZ88ABRBxFnsAisuauA==
       "] -> 10.22, CompressedData["
1:eJxTTMoPSmVkYGDQBOI1XXKWrs8n2ZuefPx+4t5p9l8mLX277Ows+0bdR6EZ
JvPtWbcFt0W1LrS/9ch1UXXOIvviwLSZTqmL4OInvzcmMkxfYC9dnFDpEzjf
3vHVt9Xbbs61T9t8sfWZ5Bz75zq/DZtTZtqn/shofZo2zb5xu0Bo2rnJ9vlf
3z0/e2WivfkeM4/TQRPtl+stb78QNslehf1Q08/DU+yf1Nnf9JCZaV8sWePI
1TzXfuaJP6fXvF1gzzf9yR61pkX2AR3d+4VUl9j/S+usWRO/zH79Z6dJDY9W
2O+/x3b59/ZV9ge2pvyXuLPKvvSxzrEEmxX2YgvFj1+NWmz/zSHR7aHobPuk
fhedVdkT7O+lx6tfvtFk76z0kPn97iL7yrV3vbZ/TbL/pcb+PdghwN77eQ3f
fHdL++WzXOuUn8jY/zXeMk9qtao9AxoAALOFnSo=
       "] -> 9.37, CompressedData["
1:eJxTTMoPSmVkYGDQBOJ5arW3NzhNsS/w0tiSd2q6fditL1KyvbPt57LrdouV
z7cvmrXpb/uGhfYSRpN/yCxbZF8g+W7X+/WL7HXlK08ufbjQvr19xjmBNwvs
ra4LTfNjWGA/v+Pj2XXl8+xZNJ7FaC2YY3/+KZdF54eZ9oJ6jW93L55mX+Fn
tf/8mcn2UpvDrbcum2g/0XalaCfnRKh5E+1vvV56QurLZPtLzyfv3flxuv19
/8UOnlpz7Jdp9T8TdF1gb361U0Du/0J7TdkPzqUPFtt/4vaXCPZeZi8/Q/Jb
9d0V9gmCp5borl5lv/OHSjrD1lX2dtYCfLVmK+wXLHeU83RebC8zbUKB951Z
UPMm2Kcl3y0un9Rk79A9K3yaTJF9TcBhF4ZzifaLObcJuFf42s8D07b2DFAg
tfHc1palyvYQWhhOAwAf+5VO
       "] -> 9.18, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAAAqAsTAmnmRP0CxGyQfspU/cRM3LP4Emj+n
IppBkRyeP8LfPu8QqqA/Ug8XgF0doT/L4vw65NSgP5IaaIn/1Z8/U1wHRs0I
nj8uUWqn9VWcP4rFn0DjJps/BJrgi9/WmT9xFe1M6fWXPyf+V3/El5U/yN/r
iYPrkz/J4EYa+eOSP+/sPklGj5M/5z1BG6fZlT9cDbuUV6+ZP3lnpOSku58/
VrqobCbxoj/oPpyrHNKkP5V4CbBYvqQ/nnvH+yvppD9NClCuEUOmP1u4n+at
Qag/FErm5GbGqT8k+us97rWpP2xpANCqKac/OrFuiaxwoj+XIIrrwKiZP0uu
ZKijS48/cW7HofYDgj+9hxKQBlNyP1a6qGwm8WI/8u9P+qZ4UD+xfClc+aU9
PyFTxpL7wyM/fRmzw6RaGj+KGbPDpFr6PgAAAAAAAAAAI7qf6Q==
       "] -> 9.49, CompressedData["
1:eJxTTMoPSmVkYGDQBOK8XULFbNmT7E+fWFBlUzrNPkpjIq/Wiln2flpu29t0
5tuXqKjvKpi/0H4Bd+m/vZMX2UvpZGayL1lk/7iV+bfPhYX22+dt3fb/9gJ7
sfzzT1LOz7efuOTKZtHMefaW1yy0qxvm2M9dJM+188lM++affLNX9U6z/9zC
uyT04mT7jSYL86cun2ifd175eu6XCVDzJtqHq1/adURpiv1flk8Le0Rm2LO3
Xpt/OHyO/fKuWSv7AxfYc0n4xUyXXGS/emv1kcMvF9sbL3i/5UHCMvvgzSLZ
kW9W2K9p3PD585VV9tKPe0wusK62N3/w0LimaYV9/yOP3mf1i+3F1zEJzs6e
bW9Td9B72+kJ9rETnzHqhzfb24TMb36+o9ieeabGxqPRKVD3BNpnVSl8yfJ0
sGcEi6vYp4H5CvZ5YJrBngEKAPbSmj8=
       "] -> 9.2, CompressedData["
1:eJxTTMoPSmVkYGDQBGLTJUkG29Qn2f/svpK60GaavZ3IlS3HrWfZu/s5393z
bq79p/J6pym6C+wF5h+/uiZ4gb1Os/jqFWfnw+UXrJDKrDCYY1+u6LmiafMs
e9frqn5aO2faT9GdwMu7coa9jrjw53zu6fasF2NSPyRNtb92PMSOz3aKvdRN
s38L2abYM09wNKrqm2ovdk5W3WPyDHuBppcyFd5z7YuN+bpiPRbZy5flTZJ5
sNS+ref1mp21y+3vpPRc6hBbZr8SZK3MUvuHzw5ZlO5fau/x1z5YKHa5/dap
ny/PXrzCfkbeaofm2hVw/YsURZs32i60j0s08z3BOsM+KGjDyqkOvfYcd0pt
vK412HPLTsw/sKrAnkFSZfHziET7qDBZoE4f+wN18UXPjpjaHwXTovYi4HBQ
gPJZ7RmgAAAWPJDl
       "] -> 9.54, CompressedData["
1:eJxTTMoPSmVkYGDQBOKIU/yX30+cYL/SN+URv+FU+118CWKrJs60z6/d1zqL
ba79Z8YCm2XNc+0vZ5x4mnVntv3XNenfny2Zac+apdobtmu6/VXPOUAt0+xf
8+/dOzV/qv3fafMsFylNtRdxurj+O8NUe523zGq+96fY15vZ1d6/MMXetdaD
v7Bnqr0Dh27e5LPT7QNPaizS1Ztjv7feVjKWdaG9Qb3O4o9fltjbVyg7tNxd
ZV+rmM55m2mD/aeQSKMLNuvsDeZFnPMtXGX/cI2OzaXnS+1dNqtoXnm32L61
tJYlSneJ/Qe/Py4CZ5bY98w8929RxBL7NXdzBeQVF9lXP/Bjj+ubY1+pe5v/
xLXJ9vsyerXC5DvsN5R+rmpeXm0/753g/7Iv2fYRl7r5XTVi7W3X/Y98bu9p
f/wZt6X3DTP7Odbz2B/aKNtPB9PC9gxoAADUjpGq
       "] -> 10.15, CompressedData["
1:eJxTTMoPSmVkYGDQBOL8ia99DjyYaC+1P/bVyR9T7ZtdtHP4VGbZnypVS/gQ
Mc/e33nFEumjC+xn/v1ZIOW00H5ayeIZf38usO++OZ9/ueIC+/azjUAd8+yn
gIzZOMf+RP70KqO62XBz9odHP7ESnmHvueXQM4dFU+1DL/UmfXs+2f7Rxj1A
mUlQ9ZPh8irXZzYcTJ5pbzfte1Z3zHz7expp9XZzFtnHAE0xqFhibzUho/Vs
4xJ7e0mQg5fYy3uANC6z/xqXC/TJCvtFQFeFXFppv8kSpHCl/TOQNp3l9n8+
PzRp8Vpk/1Dva8qfspn2ed0x6Uxs/fYQ/zfaVxvV7b4yudD+FshbIUn2N8R2
nmPh8bMHe7fAyv7uat2iuZwa9kv3gD1kz4AGAMDQmio=
       "] -> 9.56, CompressedData["
1:eJxTTMoPSmVkYGDQBOJFJzNVZfsn2KdOYlBJMJ1qv/Lbvn2O/TPtz69XLWxd
Msf+RpLSk0er5th72No517XPss8yKqztNp9h77sv46xW1DR7A2HBpz2iU+2f
p5T/sA6YYr/cqNuNWwtB75nRonPMbIp92kn/mLlzpthXHVx18e6tqfYvp3k+
fNM8w55v9aFXFclz7XmiVhl5MiyyX+n9Zddj52X2xUqzms/sWmNfdLHx9Jzw
jfZNlSpTjotstHc9P/8S887VUHOW2muyMkk/d1ls3+/aVf3XZLG93x2/if3L
F9u3TOrlWKC32D5ireGJwN8L7G27HC8oNM6yP2BbdLU2Z5K9C3dO1NngNqh/
K+0vH9rYtX1Fpv2l7qSgKsco+9vOd0RSql3t78pLfouQMIbSyvbXwbSwPQMa
AAClFpLZ
       "] -> 10.39, CompressedData["
1:eJxTTMoPSmVkYGDQBOKFkg/nJ9+eYH+E5a3/xOCp9ntm+9rq9cy095CWvR++
cY79r1etZScezbE/MSXw7CTO2fY/Ylbdzz42w/7i3w/3v16YZm8xacvFj7VT
7e05XrPfnzLFPuDbg6i4mCn2QlvsXf1Cp9jfzZC8+ddwiv2ZKuW2uqwpcPUM
lx+IRt6dbi97vFDmeOEc+z310/hLgxfa15++MOFgxlL7PUm7O2Jmrbb/4FnB
8XnlBvs/csqW13dusK9O2ZXCbL3avnimlU/3z6X2du3LpvCcWGw/qXgu99N3
i+259h6Z3Ve4xH6jSJ5Y7qfF9upij5+Lzlpo/+QXm+2Sxtn2fw8f4Nb6Msm+
6tq9s8vk2u2/pO+QCaypsmcNW5d/wTnL/kL3mbKgt1H2PozvpzsLudmLa5VV
W+cY2y+YpSpstkLRPuw7R2uYA499EZj+Y8cABQAgp51g
       "] -> 11.26, CompressedData["
1:eJxTTMoPSmVkYGDQBOKz9SV9zjoT7bPP/lVVz5lqr/ak0nT6kpn2rL+ak1N4
5trfe5HDK64wD84P4NK8wacx2/5T6bItcboz7a1KDn2U6JluP1t8v3l95jT7
BdYXl8U/nmovWqS6r7Fpqv3K5q8tCten2E+6J1JTEjHFPsxqWUj2qin2n4Gi
IgLT7N8ny9bmFcy0X+zy7ylv0Tz7RZf5n/YuWWR/xDbv1rc3y+1Vrv4Xenhw
jb2M2IKAGWvW2if8V3bUKFlpL+An7L+QY5n9A+YgW0/upfY3z26bVnFlqf27
BL4Mk2nL7Hd9snr+W26ZvUblyrju7sX233t9xQ7Pm2cfKDblaZfBVHtO6fa9
XGs67Yt/2VzZWlJr/0yOY8vzsFx76d7bJgrnYu2XJX3SqjL3sGf4GKayrdbE
Xs+CU/HKAiV7VrA8rz0DGgAAoCmO7w==
       "] -> 12.1, CompressedData["
1:eJxTTMoPSmVkYGDQBOLU7XF/Zh2aYK979Gm8i9xUexl/dVfh1Jn2TIlmU3s0
59pPFzvI1/Vznn1lwsYdCxvn2QdErp5x/f8c+/LCMPczZ2bZn619x2PDPtM+
QfaR54eV0+0PVRXcdHw3zf5PtMvzXPdp9hOu/I5YVzjVvl+p5P3UpCn29oHW
2/exTLE/tfV82q1TU+z/8p4JaAubbi+32UzCpXm2PceTh2ejNyyw3ywiK7BS
eqm9LNg9K+0P6Bo1vElcZT93g+1BE6EV9j4hO1/tkF1mn2XIyiPKt8x+9c29
TQL2y+0vsTPk+VmusN//Ia5Cf89y+z8r99SGWiy1l1ba3/du6QJ7HzbHkIs6
0+01tDPXzmTtsZ/28/DKvwoN9gqtU1R64wvsoyQ+zL54PMF+U8bBiY7BvvZJ
PLa7j8ZZ21899+SarKAWlJay77rR7Fp364sdAxQAAPzmlTE=
       "] -> 12.1, CompressedData["
1:eJxTTMoPSmVkYGDQBGKNbosn+wIn2l/i2LtmWdtUew6u2MP7p8y0l77iKHvF
ca69S8q5ul2+8+03nShQsJCdb//26OUnfHfn2vvvTLoYuWq2/ScmNfXYRzPt
k9QsTbziZtjfr7yQeLNjun3lmwfWMnun2W996czwuWaq/Ydny46ctJliXxbU
wLRq32T7mZ3W+9fJT7H/G76r8o/dNHt+pfmXBd7MtOdSu6MabDUfqm4x1Lzl
9k8vLWTbbbzSPuvv6/VcScvtJbKF5rHLLrN/HtB8d2bPMvuXc41/XeJeYW+p
8qZZV3Wl/fez26VKd62wz9hgPfnio6X2FSBjxBfam1+3Tv+ydLp9k8KidQy7
eux9G1N4jOMb7A/99djH2FZgr1j87XLurwT7iAmivlLrvOx5Tp7V03e0sGcH
0xr2s8Jjs1mlZe2Lrew+RaQz2zNAAQCwBpaV
       "] -> 12.57, CompressedData["
1:eJxTTMoPSmVkYGDQBOKjolv3/V810V7yBJf/+c1T7SfN2b/jwZKZ9i3XJ67b
7jfX3ovryM0Ax/lwes1stmbfi3PtjddO4rJYP9ve4HigpM2DmfY7qj7ProqY
YS+9ztvhdNN0+8yAL99/7ZhmXz234l1xxVT7IPN3cl3RU+yDpt5QNjs42X5h
9ZqLvDpT7HV/nzdzcZpmL2O2SEf6zUy4PRXbzf+Wr1xs/7n7TVrnrOX24e6z
v2vqrbQ/PYNpgmzqcvuPZWbF2yWW2W+fsmlVXecy+x0rM+YFcK+wz7nh9cRL
aaW9QbOa8pTVK+yDfZYIxdxdan+keP7h1QIL7R/8sqnKWDbdftox7QUtK3rs
/7XM6NsV1GB/ZfEy3+6OfPv/YH6Cvcu211ycVp72O27cXaC2z9y+OWnZjznn
FO33gfni9gxoAAAXnZpl
       "] -> 12.71, CompressedData["
1:eJxTTMoPSmVkYGDQBOLqsnaWM+cm2hf05i269WaqfaEYV5DptZn2C/Xm2kux
z7VvEIwSvtM11z7BZ9vkwzxz7J8fOOSy5+9M+5K8lf+irky39yvQLptTMM1+
4qqN5yQyp9qv6ZP6tOH/FHuzJ4n/NW9MsT+7OlbuffUU+ytPzNWnJk6xXxrq
8JJLaqr94r8LbJ5KT7ef45v0eKb8bPvpbA7/ylIW2D/vP+bYLrTE3vzg2huF
h1baL7z2d9IXjvX2b7VmBkw/t94+4Ocx1e+Rq+w3Si9VcXm21D6ccal2RsgS
+50M55n/nloCdcdS+wLLfRVvXy+xB4mKVC2yV/Xmcnn7c4599hpjtyjWKfav
JJI+Pvzdbi9t+PXeMZ1qqLlZ9ns6szaHb4mwzzj94+VNWSf7C9Fzyq0qDOzD
wPJSUJrLngENAAAHTJwj
       "] -> 12.22, CompressedData["
1:eJxTTMoPSmVkYGDQBOJT2VdLy19OsPcVWzQnKmyqvUZ7IS9j20x736M1Gy5+
n2Nfe86mv0lwnv2ssEebDbjm2m+RimNfZTTb/rXWygA2lZn2azSUovZ0Trev
kU+q5i6YZr9iwbntQS+n2kfrXvG+mTfV/ohGyR2GR1Pst+ivPZKeOMU+KnNV
1ZJ5U+y3b2dIv8g4zT7sVdGmpPSZ9gUz53vIJc6zn1T59TDDhEX2BfKWVi8P
L7fvipWeM71zjb3y5aP2tV5r7aUL7OOaclfaHztnJBYgtcz+Uy7XqxrtpfZ+
mY2WTZ+W2gforubafmiZPfOuDfNsPZbZT5Hf8tf/xGJ7U0bG2Ijz8+yvKlp/
mZk01X5DyfyzUb867edI8bSm3qqF0rn218uuOCbYxNnvO7589RInT/uAeV/t
jnwzs7fnFzdaXydhbwymOewZ0AAAMoqN7w==
       "] -> 12.32, CompressedData["
1:eJxTTMoPSmVkYGDQBOJ7Gy9dnXp7gr1Y7zHB8ISp9iXhuxVle2bav9UpOmj7
dY690gn9JMebc+2/WH7WV544x141x4Jbb9Ese9Yff7femjjD3oGv6Wo/z3T7
Og5Xy/cfptrHOLX1q9ZMtZ8tzH7SU2+q/RT9Ey3zj0yxP8rfyW1SOMV+g6DH
q33np9h/KWkWFm+fZq/Q8fNYs8Us+1Tt7O6ZE+bbz/qc/ftV7GL73xWxqgoH
V9gLpAb03pm31t5g53uRi/fW2rfumvWt8dhK+yN7Wbbv5VkGNW+J/c70ZQF2
eUvt+7NV+EK0l9nf2O16w2jdUvuzrj5LQuwX2398nnd7jc48e6Ydx6VkP06x
f/HGWq0hpNO+pWNjfpZRrf1HgY2sL+Jy7aV2r/scbRtn//D+ru2zdnjab6k6
sH77InN7B/Mj/0/ZqdlbgWkxe1cw/c2OAQoAsn2cZA==
       "] -> 12.14, CompressedData["
1:eJxTTMoPSmVkYGDQBGLXw8nv5kROtK/bsux8+qSp9rlql4USp8+0T5wVOMmH
Y669paiU0LXGefYHpjfcPXJirn3W3DNvzLXm2Dcseb2fXWWWfaVWebdr/gx7
9vX6k9WUpttHGR7sflw+zV7P2O7r4k9T7WW3+aV9k55qz2MZf93DdQqc3rp1
yYFJllPtN2iX1hSIzbCXkkkRKumaYx/MLJn8MnShfU7RfDlNrWX27x/9mHt0
2ir7PXKmx3+fXG1/dGWvpvjiFfYLiko+Rkkvs/9rPMkhe/tSe7sNui2BJ5fZ
872ddLph03L7XXofrkVbLLf/873BhXnyEvs17X+mzxBfYP/d0IGl0nuavcDC
Y/t3yHfbN0xmn7Tuf539+kmb3Z5b5ds7T9ieMvFNvL3Iovd3N171sj+5+n4q
J7+FfciM/6FRc2TtrTfVH3A2FbNPBvP/2jFAAQCBYZeI
       "] -> 12.4, CompressedData["
1:eJxTTMoPSmVkYGDQBOKbFcdrs7kn2p84ekskIXWqPaeXR1/q7Jn2KTvtLphx
zrV/6JXykYV/nv2dfhbddV/m2OusnnD/Hvts+9ziFd7/Ps6wn+e5687UxOn2
Vyv3HvtlM83e7dvEU0v2TIWbF/9QanLBlyn2xi/27repnGLfW8n5W+rgFPvY
xd8zmwOn2c8/9q38/42Z9qLzNsmyfZtnv3vRovunfy2ytzt76fRjhxX2u+YK
xutJr4XTHwJurNWsX2k/7eHD7AjBZfYq37Y/2fJviX3Lwy8VCZuW2t9UMyt+
WLTM/pWEjV/m26X228JmzMsrXmzvpa9S/KV+nv0q+U/ttsJT7XOuiG1vX9Bp
L37nqtvnGbX2jfHqsZHRufYvloR6XaqKs88ybVUS9Pey3xEgeNUxycI+sl3T
anGHiv1PL7vrX87w2ZuB+V/sGKAAAME7nz4=
       "] -> 12.18, CompressedData["
1:eJxTTMoPSmVkYGDQBGLPFTWJnF8m2D+Yu4yFNWOq/VsLv7Kta2fal7SrqdUe
m2Mf4+3Rbfpyjn1a+rqsX69n2a+VdPD9NH2GPWfjtUkNC6bZ/7jZMt/Hdaq9
1k0p3t6GKfb+xhmlFT5T7NfMYV/51AFB16h4F4e1TbHP/qFhFjBtqv2SplXb
/2vOsOdikFDNeTzHXvl46MGc5QvtvwWtTp99ZKn9gu8sa7O51tjnMp06+WX/
BvuvIXk+88s32EuqxGy+GLPaXvOyq8/pr0vthWQsfoeuXWwf4flzcvWRxVD7
ltjH3thQdXb3Ynt3xcWaEcUL7W+2BjH+s5ltv0JYtTn0yiT79r0vv6k/aLPv
87jKNd2iyp7xXdBNb64se2feRCZ+hWh7vdvKv7Nz3KDmmdhvmVbx8d87GftY
V92DM1TZ7RnQAAClkZH7
       "] -> 11.55, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAAC6lqueC/WQPwV2BNmHdJU/7uNLy7ytmT9c
dgGBpNicP2tgtWR045w/hpNFz6nRmj9GSp7j/36YP3dcvCNtfZY/ogTzkEAu
lT98sL64aluUPzcTFTjDKpQ/TvKiDfs6lD9k0TDjMkuUP9Ys9g5KnJQ/YPI7
L2e1lT8hgVwq+GOYPwp6ljv7VJ0/dM+AU2XVoT/3FkMUhiGmP/MPFkf1jKw/
nMJD12vfsD8Kc+NfZ0mwP0t2aF84Xqs/tHmZk97wpT9jRj7EZJOjP+81Ba+A
m6M/EkrTfrsPpD/YVnfZSIujPzPnSryKS6E/0iXJQbkHmz8mE3wWV7CSP6wP
ssBEo4Y/SGCDIZzueT9nNOvoOwRqP1jVKSQ6sVo/M78So8VMRj9d3FbxykU0
P7AW343VNyA/Mh7UZ8efBT8dHtRnx5/1PgAAAAAAAAAAYHuWUw==
       "] -> 11.36, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAAAfUyvQSS2RP9idrAEPapU/CDfao6mRmT8A
pxHqRDqdP8zoQjvtC58/4klKtq2snj88zmeiry+dP4jtPczH/po/4nCLZv88
mT9juic+4c+XP5B8NjRiEZc/5APEFcNilj9iTwCROX+VPwZf66XFZpQ/kw6f
kVvykz+ic+ZTRaaUP1VV4Hv3G5c/XymPMrIzmz9y2rixqn6gP3D+y1Nq6KQ/
DTU6ABUIqT+Zmzk9LiOqP+O6D2dG8qc/U6A0zggWpj8Yed4VniCmP+e4b8Ox
aKc/kjKyMxtcqD8pk9GFdtqnP1qdxNipR6U/IlGLLLWjoD+4QbUfQiGXP7oY
1MtbB4w/xWIW5dUUgD/ssDEcLOpvP0kWChiVs2A/sRwUE4UaTT+K650oM3U6
P2C6Jz7hzyc/zk2K/da/Dz8YibFTjyr1PgAAAAAAAAAAA7WSWw==
       "] -> 12.47, CompressedData["
1:eJxTTMoPSmVkYGDQBGL29VGcb8Mm2nfuPS7vUDTVnvuMidnk3pn20lccZa84
zrX/vjtPfNenefa9/h5/2ibNsxex4uD8ajXXvrt6nS3Lm1n2+49/yb7jMdPe
4Am7zdo70+2Lb6Y7PTGYbt80w2Q3Y+g0+6rOkO+NKVPtXe9J7TruNcX+Mbfe
5uKPk+0b1z2PPtA4xd6cc/aC1z+n2c9ar5h26Ocse+bc6efvZC6wv/Nslp/p
lSX2burRGq9vrbB/c+PLlO3Rq+ytveNu/X623N5sypcPXgLL7POnL+G44rzM
/mZF4eXlvcvtP+w+sv9p9wp7P593PZo/lttnhz48dzhsqX3UDV2LRzsW2Nsv
vrLlFMN0+9Yw6ZtHz3Xbyxmb6mz7V2//ICmja+/xfPsXF89yXAhMsNeQy3gW
UONtnyI1++QxHgv7G0KMEzbpKtqLgcW57RnQAACIZZqj
       "] -> 12.55, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAACs/HNzVhCRPxppvVlSUJU/irzsodaKmT9D
6t1TE02dP/msDxbNb58/DRdzYf9Onz/g1+zaF/GdPzXKbD73vZs/T37Cvz/t
mT86kIXmEmmYP76ocTJijpc/NSXG9o/Jlj/aQ60VM7iVP6g2W8s6ZZQ/Ff79
ac+wkz/dprnpwA2UP5VQ0Q0DK5Y/WDN05djcmT8uHW40UxifP52/vF4ko6M/
RINKxS6Gpz9mDR8mffSoP9zHhqMtXac/GyuqoM8ipj9XK8HJ45KmP3XOr8ip
Bqg/zsjiR34dqT+fZGOmi5eoP70kmKRn6aU/lasqxps2oT+MH/l1ZOCXP5OS
a4HcyYw/6yGEt3WogD/dhewvVL5wP8JNvSAR6mA/y22Jj+URTj+gLgMJ/rM8
PxhxcHVHmig/vvJjaHjeFT+e8mNoeN71PgAAAAAAAAAA1umelw==
       "] -> 12.62, CompressedData["
1:eJxTTMoPSmVkYGDQBOJV13drL4qYaP8o+f3jz/lT7dVfLyy1mTrTfgOvVPT2
3Ln2+stX3eH9Pt/e7tDE52k6C+ylsipSOq3m29/Z9PD3b5a59lcfHb3kIDrb
vqEmtSYmZaa9l9+28s+1M+y/6HU9W5o73T7Q6GnSjN9T7f+cbuHZ4jXFXltL
4kWi42T7L05zV/T/nmQvdKhp/8K0KfYp27wXbI6Ybl8zw2zi9mez7Q+c3Xmv
v2ShfcOECju3T0vs1602+zf10DJ7yUnzXsSELbOvlXt4oth4mf1LY27e9fHL
7eee6bD8ZbbS/sbsibyrSlbZNxye6fiZZZX9Zp8JZ+9ILrdvuuwbtURikb3x
/Dedc5hm2t9w8GrTdOuD2tMIpQvtxZdtXOX2JNGeX+Po0d/dfvYMYt/+bnpr
bW8fbD7vT76GfQXYPSL27GDx33YMUAAAAwKj0Q==
       "] -> 12.83, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAADXM7QEu3GRP8zo0+zhcpU/mncN/imemT98
wayhGVmdP9DN4xcW358/JHhYJ6ELoD9Y+/suWvCePxdaRf2UsJw/Osjolgy+
mj+ZHwAl4kKZP9OoPrUgTZg/0KAWKkk7lz9XdiFoRfGVP93zHs35S5Q/tMUQ
a0Nkkz/b6/ZBIjqTP7clRs9i0ZQ/g6xXVdPqlz96EZLviaKcPwAKtY0p/qE/
Q18aN2p9pT+9jaO+WVCnPx6V1f6+i6Y/psaB2+4lpj+C/DyjQzSnPzcQplml
9ag/w00Oh5gqqj+HZJqSOrOpP7yJD/ltx6Y/TwIIKIvXoT+/7dgieb2YP94o
FEaeAY4/w8gzwIMrgT9hEefNjjlxPxLFGiDRjWE/BU/6HH3XTT9RO5FmGxY8
P+YTv/lXkyg/dOzsjJQQFT9YO5FmGxb8PgAAAAAAAAAAYpSYOQ==
       "] -> 12.83, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAAB09xCAUiiRP0TFngVUW5U/NXFIc8OTmT/j
azk2d0SdP1DLb5mvc58/ZrisQK5Nnz9o2SmxDtedPx1YDzZErZs/pPx6bHzP
mT8JuEuVJmmYP29onZiwf5c/IsYFrYXMlj8Y6yS3VqeVP2W5uDgCZ5Q/OvU8
NUW5kz+SkzKH/xqUP1mc3WESL5Y/SlMG9aHqmT8YC5YvYxefP9Za6Xz7qKM/
RoxS/fqipz99Ni4cB/moP2J3vldBVKc/SK3PbVsspj9NoH/7goCmP/PVjRNI
Eqg/RWvVjJoZqT+fH8kplYGoP+kQq2hZ86U/PSy48OVIoT8gsAdiRcaXPwRV
1EMFzYw/dQKQpXKrgD8yRljVlqBwP1MZ9ZfkImE/XPPJlb8uTT/bplaLiCU7
P3uFeG+gtyU/IGSaU7hJED+AhXhvoLf1PgAAAAAAAAAAzWOTeg==
       "] -> 12.72, CompressedData["
1:eJxTTMoPSmVkYGDQBGLuiYYTGMom2sesc19/qWmqvVCFeNf1HTPt09LuXl4V
N9e+r0fAb/KM+XB66n/5c9OS59nn3nwTvE5zjn15sKI0p+cs+7o/S7cnnZ9h
32LpIC1wf7p9KOthoco/0+wP7j8WE3Vuqn2yYrj+Nd8p9sZB8yWm9E62T9Oo
KdNdNBlu78ZLTaJ/Hs+wP+n4POXOu7n2r2r2uUQ9XWSvwjDt/oOGZfb+kzZP
KjVcYZ9XsPHgUbbl9j0SVlf2Kyyzz+d+c77gyTJ7qddqXLebV9hXRbklJcxd
aX+S/c/yT0Yr7Ze+eFuS6LvMvvuen/i1lIX2L7z2n5iuNcP+zNqLcztSe+1v
q9lnC99ogNIF9jd2hRilJybazyrS95ul52vPNVP2onq5tf0xo2t3Ymeq2O8H
0yL2t2eAxH/bMUABADAJmeA=
       "] -> 12.73, CompressedData["
1:eJxTTMoPSmVkYGDQBGLR9lm/ez5Psj/AyiP9e/o0+8J9/xuv686yF2N+H3n9
wVx74QzWFCuLBfaMc/dmWmQvsI8RUZx8+N58e/P4P2y5nXPt3wh7tAnNmm0/
UYpXP/faTPtvGdtr5xycYR9We78ldvd0+6+eSs882abZTxVLdTcLnGLPelNY
1Ul+sr1W/mJJt52T7LcWFX05/XOy/baJ7D1yW6fZq096MOP8z1n2Dx027Fl0
aIH9rjVfrK1eL7Zn/bFiz5RbS+25jbRZmM8stf8CNneZfcH8rFctRcvtt22Y
o1xYsNLebvqqW/Y7VtlnpO8R2+S8yr61vZjDzmK5fXhMWWW+7SL7i5fUO2eo
z7T/lBOfetmtz35nb/yS5/qN9kcZU4yPCBXa33yZE1h7I8F+Q5nUHaZ6T3tm
sL2m9slfu38XKMtCaV57BjQAAKV+kvQ=
       "] -> 12.9, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAADuGE1eDS2RP5OlME20mpU/0OkKxm/PmT90
DMBmfSCdP9uJ4IO1550/jikrnWugnD/aS1WZ6ZGaPyZuf5Vng5g/E6rq7nP+
lj9xW5LqmOaVPwHmVUiAeZU/32agPhg3lT+klWhXdeaUPyP73ANPn5Q/8Ivv
7yURlT+cPJLHeuuWP4RdsntYwZo/WfO1yE8coD8356JQAL6jPyCnCPrDPqk/
jZNZ6wS9rT/I+mKEDvGsPz4qMME7rqk/Ug2Cym0Fpj+aaDUrSLKkP6fGDUGy
R6U/zXZoNFfrpT/aahL8J2SlP0jX2lrBCaM/OKW2zXPsnT/fMYmXy6iUP08a
aMv8+Yg/hTEPGIv6fD8NxLbwkedsP5XAjBcy8V0/UISWGZYWSj9h1Ygucbc3
P4B3bVgn+SI/RzOkBLt1DD+Fd21YJ/nyPgAAAAAAAAAAKbSbOQ==
       "] -> 12.16, CompressedData["
1:eJxTTMoPSmVkYGDQBOLncTOmH7Lcap/rGi89nXmz/d8DH9//E1lqv2CR04fH
DAvtN7BKTdtmvRDOj1ynNel99VL7rbOTTR48WmqvGui+d1HdcvvKkpt3p3xc
ah8r/O/Su9Jl9pqtSxaUn15i/zZWykvn1hL72EftpUdOLLJfyi5m+PjXQvsf
WisCr+YusHcU4W+eGzLPPuL+gveSmjPtM5wqpr5JnmnfaNcQP/npdHuO/V9D
LoVOsV94eYcv37op9jvOHxDfqj/Z/sPEcl1G9Un2G8Hum2jfwMvFlGkxxf7j
obdd2lda7RMrLgq/y2+HirfYzwe7v9H+gd6Cdr03jfaNdyYvsetusF+UJp3W
u7XevjH/2569k6rt/6seNfjHV2a/L+OjdWdZov3PMOs+jT2R9hVg94Tbc3Rs
fB2UaWvPAAWtYHMC7AGI+ZyF
       "] -> 2.91, CompressedData["
1:eJxTTMoPSmVkYGDQBGKmS1xT3C6utV8jvOGL7+SV9pu2H5W5bbrUnnnLkzqb
rAX2G+11T2yaOd9e4+S7pyel59s3ffA7n+q0yP43//mw9ceX2K+s/dglPWGZ
/QJn2Z/Rr5bbMx8u7zwou9x+3azbwb8fLbWfMaHkmOeUpfYsXotf5OUutr8q
8ZpFp3axvVzhFzsG/sX2pz0iOK2uLLTnbymv0hNeZP+rUuBtzZGF9k6XJNUD
wxbaAy0Dshba308MWlhwbYZ9+o0JzZEhM+2TIQ6211h94sL+LRPtrzTpzP5Z
OcHeuOvdNTPBLnuwrGSHvcQ+b553Oxrs/21ROJ1WV2e/m0F3p3x/lT0j2J3l
UPkCe02wOYX2ljNcp07cUGRvCqaToOqz7N8eX8w2tSnW/shbkI+97RnQAACp
VJex
       "] -> 2.91, CompressedData["
1:eJxTTMoPSmVkYGDQBGLh3fsEYp+ttd/6pymP5dxKexamjkiLxuX2ddXZO9xd
l9kL+O9mK9BaaF8wY/PuI9cQtDGj8gN+taX2O9vtGxmSlsHVW1vcTfdfvtQ+
sZQx5LXZMnvlyesuTFBeYv9h75R+8Y4l9tEnme8v91xkz7z96MZJcovsJ/+P
eLsvf4H9spsX2LT15tkf4Nyz4anrHPvfohMq5yXNsVcM3pJq9WmO/bXelU9j
CqbZP/BXaJjROhlq/jR7n+j+8xruE+3Lfr7rSEqcYL+wYqpl7+J++6+Zk1ii
Szvsza4vnLVRph3Oh+hvttdJeLtcOqve/o3gdKkrswrsV1vxXDmxI8d+/76f
HA6Py+wZyk+72bzNsvfb3LVzvWKkfQyY9rS3mylh+tawxP5nGUg+yp4BCgCZ
e5dc
       "] -> 2.97, CompressedData["
1:eJxTTMoPSmVkYGDQBGJ26f5n/Gab7Kct2O1l6Ljevr9VJ0WRe6X9jtUiwiXh
C+0fXfxz8NjihfZ1Gz5m/EtYbF/nzzedcf4Se18QJbPMPiI93mXruWX2qzfr
L4pKX26ffXtb7u1tS+0nH049oN6+2F5pVek315DF9sJA0zTVFtgfYbkb2sW5
yP4pv5ncWfkl9rdAynMX2y+ZAXLAQqi+2fZ5VZdn3/syzT52KUhiov2rN90r
rt2cbj8f5MzyqfZTkpreaR2dYt/7DGRQv/1RsLld9smK3JEnnNrsY9hqinbw
dNjfAYruWt1i/xakXbzRXixwLdClVfbZNrPsb1S02JvtfembX9UMFy/cwfPj
SUGlPR/QFLFNCfYMUBAJMkYk2L4N7H8f+3KwOk0oLWkPABcdlXU=
       "] -> 3.07, CompressedData["
1:eJxTTMoPSmVkYGDQBOLtn4q4T7JvtF9mP/uxotYa+7KvM97t3Dbf3uy4c4hF
9wL7fRdXpdZdWWC/OWumvKnJIvtbvl3ngtkX2LvdESw/IrvQnuHIm68nM5fb
r1g48R7b/eX2TQrTtc4eWGrP1xSzyoR5ub2T8l7efflL7HdJhP0pV1tiX3ZE
ttD9zkJ79ivzz34UWGqfwbZuzx2nRfZdh3dX+XyfYy/lnfI6KWKh/SSHvzdl
+BfaxxnxvX9lONf+4u0Hv91WT7O/dMEjv/n9bPvtIZlAnXOg7plgbym36FBk
y0R7WRAV2GQvB3LG1Hb77Fge7X/WzfbqnCALG+z3MKk9/rCuzv6eedTWM/1V
9llg+WL7B2B+lv1OsDtL7NXA6gvsT2eaa1r559qfANOx9tvB8iH2DFAQ0v9y
XvbvUHsAJp2Zqg==
       "] -> 3.17, CompressedData["
1:eJxTTMoPSmVkYGDQBGJr63dydz+ssvecK1ven7fCXl7rgE7P+yX2aYk16l8y
F9s3LHuu8K1pqX3BxHYuA+7F9j9mbxcVdl9ivzHlt9TqM0vh9MzXQVI/Zi+3
v/vh1fyXlivsT61ME1n7dLn9l8zJC+ZkLbM3KnTZccJ5qf2xI4IPlfiX2jNu
Ntgn/GuJ/dMQ465rnxbbf96W9KijYKH97odX7S8XL7B3tLzas2jrHHuQbS3d
c+y/mYYBrZgF1T/V/tPcC8t9mybZT8yr+Hr+S4/9d7B8l/1sFpCJbfYP8++F
+cg02msunxW4ZVq9fRjYgdX2oglix8qd6u3VNEASZfY/wPqy7KP+Gtuybwy3
Pwg2P9SeF0iKJoTB+QZgc+ztGaDgNFjcFC4OADnHm2o=
       "] -> 3.64, CompressedData["
1:eJxTTMoPSmVkYGDQBGJbtn+dK9IW2vc76zt9/LjAnvt769Vp6vPtKz/LnP7e
Pc++sOhdn//BBfYwdWwdRvwVWxbaNzMdt51du9heUoJ73+GCJfY6Kx7n8Osu
t3/7uW2CU8ky+63JD+Z3ZC2zn5j3kuFK11L7DfZaW0p3L7WfEMPX7WW81F5K
65mx74kl9odP/Ov/2LvE/n57ylnO9CX2Wv0sKtteL7I//XTDCpPghfb2Ejf/
G+5baG/9RUlEnn+hvYXu04qF1XPta5+KqEbsmGa/d1KuXmj7ZHuRLyGXNhyc
bG8DdudE+2fXrpT/X9dpH/tScvPld432jiDrRZvsJ6c/1WVZ2Gj/Vs7RX5W3
2r7pw+vjgmrF9owpNcqprIVwOm/1hs8XdXPt8xKEJY9lJtirZftZLLZJsl+3
M0TWb44/VD7WngEKAJuPlac=
       "] -> 4.26, CompressedData["
1:eJxTTMoPSmVkYGDQBOKqR1sS0mwW2hvvkvVhnLTIPumsnNUBngX26QxMRz7M
nWf/zqTikLjbIvsv9S8Wq5xebH/aWe5wgv9C+5+5XgJr1y22L1mXf+/Z7CX2
XjqHnmsnL7V/uPVQXLfCEvuLr+dIfipdYv9I6OJl/kNL7cULnRbfPrjEPnbm
ze0OOYvtlX3Zat50LLHX0zwV8td/if2drKDautmL7LlvJz44uH2hfWACe9Zq
5kX24X6Z14yfL7RnnfDx3xajBfaZbk9vPo+abX8x/tpb5j+z7Hcai2ZceD7F
/qJhg/5Lo4n2ax3UDIxsJthflPx8nce+z36xXL2j1o5m+7+dTNYB0bVQ+5vt
o7IUGa9PrrYvrN+uXnu4Bi4voR3f+4Slwl7vzO77FeuK7PXbbpxs/Jhqf2np
TubfO9LtX7iJhfUnJdlH2Jx22nMq0J4BCgCAZZnC
       "] -> 4.2, CompressedData["
1:eJxTTMoPSmVkYGDQBOI5a7Tv/TdeZH9Rc9u/qsKF9t8/V1f4Zi+w362gu8i8
ZoF9nduiCevWLLS/XmFXuchpsb3ElJt9OUrL7G/v9Kt9HLTcXrx3bvBPx+X2
ScIbL2wvWW5fqVyWkee13L6xoSyy5s4yOP+XboCj9Oyl9gofb9ZXbVlqX/oo
NUXXarG9VkzQ8zz2xfY9n7T+POZfbM/z7cRM2YZF9psP62zUfLXAni/m55ZL
cvPt7bt+R6l1z7F3mr+ep0Fnpn1QwhtNfsPp9n+tT2xnjJlsH/WIx2hiYL/9
zFP8uxgedduf/u87+7heh31T37vzSXNb7O/fqVqqvLXRXkmliPcqc42926Hb
Jgf6iu3Pg/1daL9IIIOrcVmBvSPYnhyoO5LsRcD+C7fXA7vT2X7pl3LZLSqu
9o1hfEAVtvYMUAAAROWXSw==
       "] -> 4.47, CompressedData["
1:eJxTTMoPSmVkYGDQBGLx3PT6213z7KcJHTn39eZcex2VtpmPF8+2j9k4/WPo
75n2+W1ylxXj5tqfk/D5ufr/AvvV34wP5Lkvtr9iriDLp7rU/m3EmZ9rGJfa
9+l/TX2mu9TeTMxOaEHUMvsIdy79/ebL7QsztnHHiSy3r5XLPHk8cJn9l81L
byQuWGKv/u3vxPmRS+DiTZVOK2o+LLV/8feT1I+kpfbMAq+Ft0otst8VVPn7
4MEF9ko9Bec5pi20X1K7961W5Tz7I6/6js45P8v+zeLWGQ/nT7Z34vjWFSM4
0V6qJqC/Y+oE+6Pzr6plGPZA3ddqP/M4l8FB63qovip7vZtnfq1jrYX6s9Je
D+zvbPv3YPWp9pq7flzzeZBh32e30vNEUIb9YVOPlIu5mfYtWX1HZp1OsmeA
guDi9ysnblC0BwDmhKIi
       "] -> 4.63, CompressedData["
1:eJxTTMoPSmVkYGDQBGJWd+9tc9bOtV+5WUl3RcM8+2/H/dZ9+jLHPvzvtkIl
8Xn28Vnrt7tNX2B/6/eFgH7ThfYi6osvz5RdbP9nNudsuTlL7J2WzHg93X2p
/Zkt23q65i2z/57Qw/767HL7863XNDVmLrfXfSUXsOvAcvutmrIh/LIr7Hv8
0st8Xiy3P3T95z7p28vtV1Q7vGSKX2Ffez4rb5H+cvubSZO/T4tZZs8jzbb4
RMhS+yauF4zX/i62nzm10SqwfpH9pb4bXNlb59nnBOSl/SibZs90vU0vKGui
vcudKn3bzG77bYei1rJ/a7JPvFVsP/FWjb3hbru34bsr7E/XXPF4WlNg3we2
P91+McdDQa38VPv8l6v3f/BPtH/3sP+/g2i4fZy+kYrwyWD72ilvb+Uletnz
gsPHFypuDBW3gtJS9gxQAAAdLJte
       "] -> 4.7, CompressedData["
1:eJxTTMoPSmVkYGDQBOJn2x58l/i/wP6z+ozGVUHz7Feb/kk4kzrHvn2yiNj5
TXPsrf4Kcu+4PN/+Ga/73i6nRfYpExJSt6ovsT8YXKAt9G6pvUO9Mt/p/mX2
7G48Ph9uLbeXNlnUYa+wwl7HPiom/uIK+31y8b7HHgBpRtttX0tW2M96fYZv
m9By+5Ro//ZMqeX25Vdj0ss2LIWbu247b8p9xcX23fv2A21YZJ/+f2vhIp5F
9ufuiP2RezzfXvL/hFWfhWbbd0hFZppbTrd3VO76wdw00X7Vypa9fKJ99vZz
XJfO/t1mn1psd+7J7mb7VpX9nI/O1tl/CS/jXzi13D4NLF4MNbfIfhXYvzn2
q31fL3dnz4TKJ9uvTr317tCKVHu7JMbyX8ph9r1gc+zso8HudrfPAtPm9gxQ
AAAYipcD
       "] -> 4.51, CompressedData["
1:eJxTTMoPSmVkYGDQBGIpppO/dcwX2Lcsyft8evdc+3cx+Y/MbGfZP+550Zo4
e5Z95hzZHrPl8+xfTS39IXx9of2m1suaL9cutq9PjTsflbrUPk1Qf7+V5TJ7
i8i/QtMPLrc3XXp7t+LN5fbWvPJZPKuW2zuUJkl8r1puH2d49RpjxTI4XXrx
Uf+a3UvtGxZmvmmMXWo/Y2fv/aqJS+y3Wn5tiJu22P5Q4yTxJo3F9k8zbdMD
/i20F/dbvmS73wL7vVsEDn17Mhtq7nT7u743Ej+4TLK/Gbv6bXDKJPslc96c
+7uhx17XN3vmLPUO+y1/Xyabz2u2/3nWnvmKZ6P9vD2Tnh15X2O/GSxebP/j
rlC/eWah/Xebk6fy/2Xai+41yAlmzrT33/t/nRRvur203RWJEP0EOH3+z9oI
qXJr++g//Je7k+XtGaAAAIDgnu4=
       "] -> 4.56, CompressedData["
1:eJxTTMoPSmVkYGDQBOJNi9ju/d8xz17W+5fQyrDZ9jsEPj2QFJ1pH7Cn1+RK
5Sz7Zwtjplm3z7Xf9GOf5Lnt8+2V/8mue9C9yF7JIhCoYol9h8zCTX7lS+3f
7OyPbX+yzD5oV0pjZu1y+52yCnJfHZfbB197ua7r8jJ7+RM2bJx3ltm/4feY
GfoYKA9SJr7cvq0o8p1M2TL7tifTwnlOL7MP4fvCebZ+qX0oGCy133PUTn+P
22L7j9zfjBpeLbSXWHyb8VHgfPvtX3I2/9g30z48qXmSQdNk+81g9/XbN92c
eHb2rG57pWTdW182t9hHXprusfVWg73/twNOjUo19u/rY/xvWZfaq8w2NzVP
KLYPaFvT8+dknn3Hzl2WS73T7Ls0z7/XXJJsryT8YXvaqhj7TrB50fYTZj5e
uu5PgH2U278Ufp0Q+/C0qz9Yqy3tGaAAAEI7nrk=
       "] -> 4.6, CompressedData["
1:eJxTTMoPSmVkYGDQBOK+cMXck3Hz7FVTpkmL+c+xjz52+O6/szPsF2v3PJiQ
NMt+/4w7t2Sr5toHzCw9d1tmgf2RLrmkC6cX2uvUrdzcfHuxvdDZSUH8c5ba
7/aw2rmcZbn9W9m49ZF7l9sfnFgr933RcnsmqVnGd34vs5eNl5Rdd2MZXJ2+
1WOfOZtX2Lfus37G7L3cftv/b8ERacvg9Pd24Uzb/UvtK2f4TGYvXGL/Qez/
J6NnC+1lfj1INPKdZ79mquOskpQZ9opvlF4+mTfJvmGJht+0ff32rOuY9ljO
7LBfnVvQuVOz1f5y8TIuntB6e3Ww/2rsJZpy9RnnltjzC0bu/Ha4wP79zeke
RVNz7HcrZK54czIZTtt2LN4QfCLO/t73vJjYxyH20bUNFev1PewLi2IduKcr
2vOeLxE498fVngEKACKemRk=
       "] -> 4.64, CompressedData["
1:eJxTTMoPSmVkYGDQBOKmGY/OcntOsXeYdNPfJHCGfeRC5vcGh+bYX3c385e8
tcD+Sn2FU3D+Yvs+i/U/PZ8tsZ91o1q1o3mpvdmuUwZ75JbaJ2fnzDCJXWJ/
ruxXVnTxYnvLpg7bps5F9iaxmTlvnRbas1/jK2l7Ns8+s3rvqmcqs+x3TD50
fa3INPuu7+/0JEIn2X97dpt9kcIE+zp+q/eW9v32bq+EytomTrDv77Ntjvs2
yV7DbP4/qTNT7e3WVXlenD3TPvX8gul7WebZ+zYmnjpjtNC+7IfoorOrF9vn
qd/ay++6zD5+v38rt+0K+7nLeXI5dq2wP2Lcz/xm4zL7vfb3X10zWWTPk9bV
K7Rnpv05ocJYuQ39UPEme/tuNtGq1iL7hxNLPjqlJ9vrHpOSWL4wAOo+B/tP
YFrBvvzWSe7PBhJwmgEKADMOmDk=
       "] -> 7.9, CompressedData["
1:eJxTTMoPSmVkYGDQBGLGXEO91CXz7JNnTvl5jHGOvd+lXIYpJbPtl8/3n17D
M9f+55p13e22C+z7Sm/PkfJeZF+18cDl5fuW2L9wPZl8+PEy+3uPrf93yq6w
dxRe/Wt19Qr7/bvaF8qeWmFvEv5FpaV5hX0Zc1ugd8wKe7/ziRcuF6+wX/Ti
Q8v95cvtPaT5333jX2a/4kNIhZbNUnsVO451ayOW2GfNftAzccpi+ycvJh8S
2bjIXrTedcXR+IX2IRfXJs9jW2B/QWtipJLabHu9xQudlstPs1/w6IZK/LKJ
9ts2Ka+7ZNptf6bMrtz1UIe9/oKpQs/lmu2t+ILNFV/U2tvtbOzc61luP73B
+4DqgyL7C4q5Jx8qF9nf6dd6J/02x75Xbl/0G8kUqL5keyOw+yPs/ycw5qUs
TLLP9H1+e3FqnP3O2CCG/Okh9kvB9jraM0ABABy7mfU=
       "] -> 5.35, CompressedData["
1:eJxTTMoPSmVkYGDQBGI+9omzluXMtU89Ubbr2K+59iqOU7lfnZ5vr6/rbBLk
u8D+mdaOP8xHFtrvK/q13fv8YvsFps9+s5gus3dd8WLnJ+mV9kayZev1elbZ
syiyc4u9XWXfeS/6vJ/UavvfS2OblkxaZf+c18hxIsdK+5t+1yP2My+3N3Hf
uvCDI1D/JfU1Wy4usQ/dfbDNo2eR/Ywn1amhExbaz9vrs2+a6EL72dIlfWkO
C+xNtfSf1bbNtf/J3BpUsnem/b1JHTvk182wP+J9WqA3ZLK9o/I0V1OmifaT
IlkjDpR023s37hQyWdhhP3Vts43Lgyb7l4kbVEVLGuwjHER+sy6rsldUV57n
fb3Sfp5EgsOkylx7pp7ngqZCufZrr+/SSKnLtzcC2iZ7J9u+ZbuBdqJ2kv0r
sP8D7SPB+qPsrQ/FaSXNCbM/319T8Pafiz0DFAAAhqmRqQ==
       "] -> 5.42, CompressedData["
1:eJxTTMoPSmVkYGDQBOIrgT1NLEfm2jdsjRMpbJtrf1lN9Oy+mnn2ZSY/P8/f
MN/eznxhTl/aIvtAgSjWN3uW2h//acFV4bzC/szBEKM/EqvsRUQZI6xWr7Kf
XO9aO519tf0PHYEYlmNr7NPatgt0LFxtf2ix1/w3W1baiy2+PMsxZbn951Al
Fk/ppfYLn2R7/1ZZYh85cb/q3kmL7beuC9qiuGyhfUV8wcqn3+fZr2ouPW21
dK59bqXXu8B9c+yjbM1OGH2bbZ9pz8h5deF0+yj5SRlHvCfY+4UL8M7f02mf
v+Tg4umsPfYVqupHMm532nPsXXt/rVarvdNqY/OO+TX26+ZLBXqKl9tzgcVL
7eMib/s6ZpTaS+yvUAi4VmDPLzzHy3Jnsr211jmx7Sfj7H2urXpz9lm0fe/s
lvMsB+Lh/LCm9kNPmD3tncDq5OwZoAAAW32UfQ==
       "] -> 5.56, CompressedData["
1:eJxTTMoPSmVkYGDQBGKdxuimJYvm20uE/ee3rF5gf2JuysH+jYvsK56eLHr2
fIl9W81pQWaxFfb8GY+lW9NX2xus7ebj4Vhnf9uswfYB0wb7tTPLjbqmb7DX
eNc79/2uDfZzGF8uuRy+wb42ZWae9IF19uV8wcYNEmvsp4tEzd8ZusK+yWbu
HOmFS+ztj1/vU29caH/R/XrUpLtz7Xv3tpW2zJlhLxjy1Ig1Ypq9jt4eoev6
U+yPFB1UPhQ70d6iTUZ72a8J9iraou6cv3vsLTcY3bpp02rvG3dT12V9i/1R
sLpG+5LH66duOlJl77+JtWe1ca39q+/Tuw2Ky6HuLLD//zPLlikr396std+G
52WyvTXYnFD7SS+3Mb5hDLe/qZBRrnMhwH7lVOcKpUAdqLi7fRyHz3G32/b2
DFAA49uD9avaAwBfK5Kh
       "] -> 6.06, CompressedData["
1:eJxTTMoPSmVkYGDQBOJv+1v4uzfMte92PrCTXWKefTMDf43JywX2kRpvHR7/
X2Rf7lN6369iqX33xJnP/ixdbu8qcfDYogur7D0+z7SfwL/Wft5abo8TbOvs
w1jv8R3zXmfPVudjx+a2zl5VnlmZ32itvcm6UotHD1fZs51Rzf59ebm9BLvM
A+G7S+yZD32/kbp+kb3K7q01P30X2M+L7F/OmzDXXtFFa5Xi51n2qYL1WWb5
M+wDFK4zO7+YBnXHVHv7+7bSqccm2fuqVZVzMPbZv994Ok61oct+h8uUWdbn
2u27k1zOhhxosU/nvvOtIKzR/m7Z1Zc85bX2MW3Ti41PV9g/U3D8EnO42H6r
lzkf4/M8+4Df62sM1DPtf5gJPEriTra3YUldVN6eYJ8Otj/CngnsziD7RDDf
w/7q1Mi/kfIu9srvpm4ptHe0Z4ACACxrjxY=
       "] -> 5.98, CompressedData["
1:eJxTTMoPSmVkYGDQBOKDbYHCwj9n2V9dtnPGVbfZ9qnHQ285ts21X7tcZNG+
tfPsJb+w1jrGL7AP/yIfLRax0J5h6TexmX8W289kDQOKLLP/Ytoza8aJ5fa+
xx58alZbae8WxvdPn3+lvZybr8+T7BX2e0tNI+69W2b/vPUbp9ak5fZrVPdV
PlqxzH7p0193j3cusy862vpy1v6l9uyiJ7nfCi+xXwm2dpH9pJCI17GOi+yT
WK7M/V630F7myDdljvQF9szqvvaljHPsg49WVBk4T7V/tOTlcr2Gyfa32o/9
uhDRb7+J7fTtu7u6oPa12/O4FLy5pNFgr+1SG227tMG+htWzdeu9Unu+1tkM
jtol9nzsnzRkDXLsL7Dd8PIwz7a/yVpw6UtwOlQ8xl6FZdd+pbYEeylWJYuy
zBB7Bih4zMIRtbDA2P4Su8Ph2VL69gAuYJKe
       "] -> 5.34, CompressedData["
1:eJxTTMoPSmVkYGDQBGKnSds51pyaby/5z3PXvIsL7NNC/6Zr3Fhov+rhvNO/
Ti2231kxO2DH62X25W3N3woXr7Tv2GYwJad0jb3Pt8rsBf3r7N/mfxLI3rDe
/hTvs8/XJTfA+WedLn23y1hnzzPH0tLj/2r7gL7AyX3uK+0FTAQTzbYvs794
84LePbUl9jvuCbrrOC6yP3q75VDs9gX2y70WTInmmWef1SlQ7aA7275S3oR/
fchM+ymSUmxCjtPsi4MKHkf6TbD3jhYvPPq6xf7m0t2ZT4wr7F9fc/yh+z/f
vkNmedeDU+n2oftvXt65Idne44iElZpuvL2W/gWPF3Mi7PlntYev4gmyf8xZ
d+bGDzf70yWmt2dlONhXhCgd/e6gBacZcACYfBTYfGOoeil7AIAIk7w=
       "] -> 5.6, CompressedData["
1:eJxTTMoPSmVkYGDQBGImVvVPG29MsT+ZLdEnf3+GffMV/ltPI+baG3s9UdCS
X2gvv/rwmt7Ti+1jYvzfPPJfal8Tv/9SAccy+6DNKzWZNiy1n8Ea0+vze4m9
WHhRebHEEvvkFYrNglqL7XcuKguccHuh/Y37qbYvvs63/3ky9APbq1n2Vtu3
dm6eNs0+f5n05R3bJtk/np348qb7BHuF9hy9n7r99u5z9Je9jptgXxxw5K3r
hEn2k9jin/4wmWqfeHDhtoZ3M+wVrjjKXnGca79sLsPulesX2Buu2LWkQ26x
/btNt3M+zFhq/y6VrU60dbn9w3Qevbwfy+0l4j+Kxn9can/w2/G2VX0L4f5k
aPnjnl3aZ7/n+6l7YSca7aX9PjTcZi2ytwpMSM/cl2Rf1ukwO3mHv/2PmgZG
nWs29j/A7tey/5jMcG6PoDicZoACABdXnX0=
       "] -> 7.72, CompressedData["
1:eJxTTMoPSmVkYGDQBOLEzXLcbLnz7fdd9n9zTGyBfbr0mcdrDy2wX+igV3S/
eJG95g6NP3t8ltrHaomy7Hi+3F5TN1bTZN4qezWWS/wvF66xn2l1MKj0wlr7
bzv7d8/OW2f/0v78lXC+dfZBqp1er2+ssa82yl4tdmeV/e/vF0SijVfYi3V/
6nO6ttQ+6ChX7Av/xfbm7vOVSksX2s94/2PJM/4F9qvTv+9/7zbXnsWT7VHw
9Fn279l/z2J6O8N+kXYF0KRp9oZTNOfYxU+yLzxTP2/l+h77BWDxNnv59M96
R1402S/J3NmtVdBgf9tapVFjSo29UFJ66feb5faLT0ncP9VbbC/6uqDGNT7f
/pnDBquvi9Lt1fTs+i8apdjvXMHE7vgxDmpfhP3eWKvITQaB9j+mToiWbfS2
v16Zeut5hJv9azDf2r6lYA3LtQUq9gxQAABflpgr
       "] -> 6.11, CompressedData["
1:eJxTTMoPSmVkYGDQBOLTV8u97kjOtZfe7KjncWGW/b/wx3Xr82bZv41Xkj/3
ZLZ96JVbNf4P59mvnh+9bZL4QvvAnzIz5jkstjfaw+bnErjUPjDlZ3tJ3zL7
R/dssm7MWm7fn+5VaKu7wv6p9sUv+WUr7MP+Kc5d7LrCvnXeVbOtPCvsnXIs
NCazrLAP3tgrxJO13L4p0HGNrOFy+9Rvj/60nF9mP1uo3K399lL7tzZXt3Tl
LrGf90XvoUfmYnv1jq3Kzx4ttP9zaH9e6565UPXT7J+GSogeuTXRvi3MbaOS
WY/9ITMvgxWxbfZq1ooz/dgb7YuOxNgIfa22X7ckYfd0mTL7xI93v9efKrSf
9UJfzbg8x95s8eG3XE/S7TdYtpw+eC7J3ntBZ9DHomh7pWV/O1RCQ+xbRDc+
XOATZK8F5rtAaRP79y0pVrIuCvYMUAAAGaSaoA==
       "] -> 5.21, CompressedData["
1:eJxTTMoPSmVkYGDQBOKlHxc982qea/88ZurHg6Zz7NP6mh7aVM62b+9T/XLC
aq59vNrylxsnLrA/fb7g1F/vRfY65rKpZ7KX2Kf91Ds+e8Uy+8321VtTpVbY
hwtJRa9+s8Je+0xBfa7NSjh9POF2YtaJFfZ/XyxsVhVeYR9S+sVqYfFy+0vL
HmrJbF9mH3TjnNT0X0vtP/N6LLgUvNR+xpPzJ3yqlthvXqU++4jnYvtvolLL
rP8stG/SMq4vWr7Ano/JQOugxBz7lSmKl4Sip9pfKMn4UJA7wb4x5NbmLR5d
UPNa7ad5T9YuD220d9dmfb/LoNr+TY7l38ltpfY81slXS/4V2BflHnU/0pNj
nwr2R5q957zmW00cyfa7atdXrEuItL/ufTOg/0aI/Z4PuillFoH2qhcimRZN
cLc/cCMq9TiDrX2uEkvP1AOq9gxQAAAx/pwl
       "] -> 5.11, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAACYIlrjP2qfP48ZxD87cJ4/liCOorAynz9Y
HXV2ewKhP62zUieVbKM/QMcX30mKpT+VXI/vm9inP2fvB+964ak/9Pxo5IFY
qz+4gU0edtyrPzeBGk6Szqs/sXqDuwAaqz+obyHXbOipPxRcXB+4yqc/hUwv
6SEcpj81u09a7jykP6mvuqV2/aI/oKYkAnIDoj8VmimtMqigP5MdXMFZ354/
hQ/I+25anT9u9tFR8KOaP0XNe6H3MJY/naPyIBuwkT8ACTFp3aWMP9Pa3Jb+
p4c/srfqqLPbgz+XnCi+pe2AP/gCzaYv/3s/zNKsk8HJdj+mrIjEH6pyPwQN
yer7FG0/1Nyo143fZz+0uFBJe/djPxghwXKUQF8/wMiwT/WzVT+gqPBCATtS
P/8AAWagx0s/n6DAP8RcQT+foMA/xFwxPwAAAAAAAAAA31WgIQ==
       "] -> 5.38, CompressedData["
1:eJxTTMoPSmVkYGDQBGLrjQkCkivm2x/k4rnbeGy+vfPp+wqvViywZw+f3Gpj
ssj+67qF/lc3LbE/0KzfMF9quf23h3a1V4+ttOdT91o3bc9q+4DD54Rvda6x
P/F/WaU491p7W5v6+yE9a+3TNGvcapnX2h9T8Kz+2bfa/lLcvsdsG1bab0yL
kSypXW5/+165/40bS+yvbLNvdWpYZJ/05PGbuPiF9inzYssd5efbd635c99b
aq79W163R4pss+1b+R8/+bh0hn190cmX0w2n2Ee+ZruX/6jPfvPHqhfrE1vt
29JT2nTLGu1/zv9VKbi/xl7mw92n9w+W22vfEpbn9i6y99hj4a22NcPepDdr
x532JHuxnf9c20pj7R1aI1efyYizPxWuIR18O9TeBcz3sxcA03L2t5WbG2ae
U7PXBfP14HwYzQAFAIEzm+E=
       "] -> 5.57, CompressedData["
1:eJxTTMoPSmVkYGDQBOJpV1s2/quZb2/+SJHx5fQF9vbOJhUi6xfZv32jsEly
9xJ7J+FKsVmiK+yDFvLM9X+1yn79gZCVO1astU/9+9Ou/Oh6+8OFlzZMi9pg
P2mmux3/4g325lNtlzc4brBXPp2z9vakdfb7JXJcdx5eDTenib9rb0PfEvsn
4bWXfbwW2gsVZvUdF59r/2Nr6I/21pn2a/bULZ74Ypr9mQV2QJdMsX/b8u/R
NfZJ9u4ck3dE75xgH80kL1LN2Gu/9HDf7xUt7fbiRp9PPE9ssX/azWf9bnGT
/USwOxrsX2rPKP9ZUGu/VmVh0ZXZlfYaKpcldmoW2y+dfHmm3usce4PWp/1P
HFLtb1nuUNdYGWcvsFD1g+PGcPsvte+69mcH2ruB7XOwX/TZM1ZZzsleNtnr
3oz71vZpPXemcIpZ2u/amudd5cNmzwAFAOtlmKM=
       "] -> 5.91, CompressedData["
1:eJxTTMoPSmVkYGDQBOInMb7LlHgW2EstYHCfcWWhvZbDsdf9DkvsPzHIr7oZ
ttxeuVMoclr0antn2fdNHyavs++5v+DUnZ0b7OtD6tg0Dmy0X8nVadwpv8n+
TVM7x0vBTfbKR7b8/Je10T4uJ+BPkvoG+1hjE+6o9jX26zsUrlamLLcva1v4
uPvnIvs9Dc47Z/PPtU9oruxh5Zxm7+D8zknMcKL9hO3S0eFru+3ZY5Y4dLW1
238KKehy2d5qf7TbQ4chtMV+byrfKUv/Jvu/p97nbrNrtJ9b+2B/ybYGOP+U
G4fcTokm+w0tImW7WpvsJ8x5lv31TYP9ykp+5jCHavtCeeNLttOK7Xt9Fr7y
zE63Xw4Wj7bna7q3KKDH0764a62T9w1ze5fZ3k0OBSpwmgEKNoDVS6Pxue0B
S4OLGQ==
       "] -> 6.4, CompressedData["
1:eJxTTMoPSmVkYGDQBOIjlZNiZNUW2C+t3XKvpmqh/ZcZwcet2hfbb/jmnrgl
Y5n9zWkT17yUW2UfEPpGz9Rhrf3SzMaEKukN9md4bH+xG2y0n385pcR880b7
+HtSx/12bbT3Vlo538xuo71K/VvWlZob7CXuSy40+bTG/oDM3DmdNSvs70q/
zWhqW2K/U/Vz+6TpC+w5dh5Jjb83y/771IcVjzSm2XsAbZ22c5J9S4vHehPd
CVB7e+0nKF24L1HdZc+yfwWTwOxW+6KNhrsPfm6wjw++ncs6rcZ+nWfbCjHn
SvtL7zdP+LO13P6Oc3Bqu0u5vcETX657O4rthWINjL+8yLe/MZP5t2Ntun3q
X60bXrEx9glgdwfam/XNLVFucLZPBvMN7QXtFJR+uKraZ4PV6dgzQAGqOA9c
HAAp5JD3
       "] -> 6.27, CompressedData["
1:eJxTTMoPSmVkYGDQBOKLscdnmq6eb3/5gcX17UsW2k9cb5pcy7jEvvvl2o37
jZbbW3nEKFz3WG2/debrJctK1tk/KrPZ57xpg30f34uZJ7dvtNf/HJyuJL7J
vmhamcU3vk32y8K1+5uyN9pfSF1w/aHiBvsbyv7enyvX2H9/tj5uXd5y+5du
Oz4Lflxkv1EueOmFj3Psv2SLx994PdW+OXpF9xzBifZK/yW05aZ222c78T25
OKXd/t+PhYvVT7faZ1RzBzq0tNh/vuxkkXihyT4mbM3Tys5G+8KCg3kSHo32
RkpNl214muzv7dRdf0iw2f7C35J/EbbN9qE//Hld5zfan5l2hG3JrBr7mqkK
t+45ldhbbWj/Ga+bYc/Wvvyk15toe/vyrp6Ptt728hZiM3paLOwPV+3cFRuh
YM/8E2Q/qz0DFED4omh8VnsAM4SYmQ==
       "] -> 6.49, CompressedData["
1:eJxTTMoPSmVkYGDQBOLsCRMXJHsvsP9YUXcs79dCe+MeG8N5akvsr8/a169n
v9z+7hKWR/Iuq+1PvhM4G9W7zn5N4K1TjGc22DvpeW1Vvb3RPjnjaN0Lt032
9y/6zsxz3mRfGuPhzLh8o/38Qtvpankb7BfN7jn5UGatvRT/VqUtYivse3Z7
NiVuX2z/9/yew7Ib5tnvqfRhULox3T6kxGnX+WeT7A8cVGRKb+uzF37+gsFS
qMs+ZPsXoTmT2u2FlpityElrtb8rt8Cg/U2j/TubIvXo37X2qf5JEdc9q+yF
wOqr7BM6zsVt+lBlv/mD+7YAjWr78iWyrm6hFfa+a9cdWNVbbL9Wc8se7fPZ
9vt/cP1gbE6wX3Fnt2CeXDCUdrbfApbXhtLc9gxoACIuDZeH0QCCr5NA
       "] -> 6.43, CompressedData["
1:eJxTTMoPSmVkYGDQBGIpMRfVWX9n2Cd9/XbO4dgc+/BXIXuK3RfYr5neFZI5
Z5H9+iYZA8akpfbR8pfFBa2X2896Jhac7LnCvqsnRvdV/Ar7W34Mr9zfL7fP
rey17VJZbq/WmpNfrbjM3uNWmxhDzxL7LzqBdVzmi+wdFtxR3xM9zx5m38KT
7GlSAlPs2TQ2/hfdMcG+cB33THWJPjhtbvagoLFkgv3irLUH1yyfZF9f8nbf
1KVT7X8lnr+5XGumffPKbCnjmXPs/feWa24PWmB/peKOkUTKIvuV3578uMay
xD6j73fip7gl9kvA+hfZN3Ic27eAcZ79gwneC3PkptrfWBvVtzW80/7iqczq
fxNq7YNm26w8fifH/irPViPlA1H2N94vdb3V5mZ/v9hmi/JTA/vtYL6Y/Vkw
rWbPgAYADuGVKA==
       "] -> 7.6, CompressedData["
1:eJxTTMoPSmVkYGDQBOJ7kmn7TbfPt++Y+fJnwc4F9nOmSWju91hkb9jd/27O
lCX2eVJ3LtRfWW7/ai3LC6ltq+zzT9Q0nF201v7ruhDnmhvr7WUCEy6trNxg
X9nt9d1x8Qb7Hf1qOr9cNthfuK72nOnVOvvnoq6TlVTW2L/ouvL0e+sKe3WL
B06dDkvt83KsFY3YFtnHKslpLvs1z/7lwyV75XJn22+5uTwm2GKG/U3VVO5F
HVPtz61vjc1mmWKf9vT1fKnfE+2fej7NULvdY19l+XpZf2GbvYHJfrGytY32
BWB31doXc+b8nedbad/p3rVyX3uZvZroBoc0gWL73ie7WrXP59o7fvh34tPE
dPvWo6vXSxvF2+9J+H43yznCnit086zFDX5QeXd7ATDfzj6Qn28+k76ZfS3Y
fwZQWsGeAQ0AAGFImTs=
       "] -> 6.16, CompressedData["
1:eJxTTMoPSmVkYGDQBOKrNfrr38+ab39Jx/C1je1C+0VTfaYfUlxs/6CwZ9ZP
nmX2Gg6C0kIyq+xbZM3T3r9fYz+zKll+8cn19rsNrj1rer3B3m9V9sljhRvt
F66YFHt2ykZ7Pv2/VZ18G+2PVF9984Zlg73tXNsrR7+usVcLDn8o07/Cvor5
c5vJ3CX2dptnc/zctsC+YO2RZwaLZ9unPOT+lpI63V6As/BdscYUe1XtiHrn
hIn2i+rfJfUn9NvfWu5W/1G8x1748ZPEOKd2+2WKpjL71Jrs3fqbApdL1tmr
HM+LUeyqtP/68J/kjshye+FvWhqZW0vtp4vLT336o8heuqWtSYM53z732TTL
wD9p9kFr7s3r2hVtn2G0PqjmRID9TLA6J/ttrPvFGvNM7Ctn1SmoGejC6RrN
emGvZkX732DzxaE0uz0DFAAAnniU3g==
       "] -> 6.14, CompressedData["
1:eJxTTMoPSmVkYGDQBOIjW3tufaucbz/peM2jkNcL7Fd5Bcun715kX5JyNzwp
fKl9TKjFrb5/K+zVXF17fv1ZbW/mtcQ07ss6+9g9a+oqZm2wd5d9oz5VeaO9
yYoV4Y5eG+3NL6neu/B8g/2Rbv6Q9Dvr7a+77Toi/WsN3JwHS34tXTVtqf06
Tv7MfeqL7M3uP/qheniefdkNPvGF52bZp//V+XKmZLq9weLW3M6ZU+w/n0oL
nv50kv2dQt65Ipsn2As2as20n9lp/10uMWGbQpO96FWVZXFXKuxXKFybcV22
2F5dZl74laoC+6QO1ccqj3LtE+q3JsjNybCPLXO9Jx6WbP+w+e1CRfto+80n
Tm0SnRJoz61ygFNKwtWeHUyb2vOBaVX7vbdWbVdS4IHSMjj5DFAAAAnBlfs=

       "] -> 5.99, CompressedData["
1:eJxTTMoPSmVkYGDQBGKbzINePHwL7DWi8lp5Vy60X1loaHj4+mL71K2m9am3
ltlv43828cXdVfZBS7V4wqXW2XtpMG16MWWD/VveyK7K9RvtQ/dbvtqss8n+
jhr/l27LTfbcWx63O6/ZaG8dGT7PonqD/avfdU1taWvtE0p7z4r1r7Bn8jFa
/rhwiX0Uu3hRjuMC+2t3K/cdPjnTfpvAPPsfFlPtpboPF8b2T7R3vlb/YxlD
n/1Sg4sXUwy77W/LKhUIiXbYs9UUrInTaraf/0FDQexZjf1bnVJTwaoy+6P/
Zdb4V5TYr0w83vLeBUFD/FVon7ql9mJofY79MbC6FPs7YPMi7Lf8r34q4u1t
f5zv/CrhDZb2Ut7SB/hclO0ZoOAsWFzSHkJz4qQBWF+P4g==
       "] -> 6.13, CompressedData["
1:eJxTTMoPSmVkYGDQBGLG7fpWH+fNsX+bt7Flm/sC+xX8phsY1yyyn2w3Pfrz
lqX2BWcvhymUr7S/cMC9b6bGGvuiTZd8H2Sss+f8O7l2xtz19nIuzXtfv19v
f9FsZuW95vX2JVJ3KidarbO/ohG4y+vXavvEfQyzH8xcYW/96c1mDv4l9pf3
75DYpLwAKj7D3kLarObOskn2l/S/zhTZ32u/fPK5qFsTOu0FPHm1lWI67O2u
v151gqHTnnlDd5T6rS773S9Yow7m9NrXP9pd4yQywV59SeSU198n2tuCzZ9i
X6I+9bDt/qn24kI1i3dZTbM3U7oVvSx7ir39kyVfSlon2J8pts/WSG237wGa
JnWixn5Nwaw/L3YU2E/TXL1nalqC/Z1/FTX9sYH2eubHfjHvsrRfsGLXT/P7
evbTwLSc/eajF3+fnyJifxxMs9gzQAEAPXWguQ==
       "] -> 6.88, CompressedData["
1:eJxTTMoPSmVkYGDQBOLl0XXd+ptn2rvke/nYz5prf/WMgKm5xkL7KJ2SWhvm
JfY7za5VMgQtt98n09NwcdZK+9m7nm7/YbTanr24laX77mr7pCXXykT3r7bP
5t6gv0lhtb3yCkH9RKZV9oJ6GRc/iKyw7znH0vnacql9oOSSGxnlC+2dat6f
uFY6x95ZheljhuI0+zs/tS5bZk+0119nEz53U689k1t2WsesbnvJX5fvTVrW
Y39nTgJbnUW/vdr0jncqKybal0nNEXioO8X+yNz1RnM3T7OvvZm08PXjmfYW
omICViJz7QuvS9uGbJpvX7kixd5FaYG95Fu9pN+n5tpbb2jebfJkuv3uey8W
Tvo7wf7hJevY4hst9r9zou746VbYV39eM0tqdrq95qMLnr8VIu3PyF1+knHG
2f7iK7tPXHEW9ooG60073JTg9HWwOIc9AxQAAMIilAA=
       "] -> 7.11, CompressedData["
1:eJxTTMoPSmVkYGDQBOK79mZn2hSm229atrbgsONse+M7/+74cS2wP3dhwcet
qxbZ35Raf+P14qX2H2p6i1nblttLbOKOiVm4wv7DM5ezbptW2NscYgqUcFhh
7zd10bzQyuX2f6fEqr/MW2bvzpYSWHlhib2L0de538oX2VufWG/+dsU8+/DS
n9pebjPtlXq2MtWwTrHXvSDGfHfqBPv3TVZRt9712ttJnihnPdtr36EbM+Wy
xQR7/59rBA/ZTLJ/t0LuQJPuVPtHKXv3K86dYZ/dtr/Nm2WO/b++DQ4ibAvs
r97pOK0uv8heNzi3zP3UYnuJo3+BMkvg/niyu+kZn9Y8e+61urfPhE+194rV
rEiL7bJ/a6gkdehUnf2/vMqDDgb59s5xba+K5RPsV97/+ud7jbf9lioZFbdZ
tvYzXc5fXRmvab8QTEva59wwsSx8xWDPAAUAlvScFg==
       "] -> 7.7, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAADw2sEUKKuTP7CsekMNqZc/apPf9iINnD9r
68W0WXCgP9pUtyhs46I/rrIooSY7pD8bVwub67OkPzsj8iuSKKQ/jrH+5+ZS
oz+0aDn0XGGiP02vqnVngqE/PhT0BHtUoD+DqbU0k1udP8nCUIF995g/1y5y
J+pDlT/frz9Sh/aRPysetWpzE5A/Fm9ZiwDKjz/rhedIJiqRP5BByjmb2ZM/
XukqXx8Llz9jc0hTuv+aP3YIUWaNm58/mPfajNH/oT+EayJD/KWkP02DtxbM
UKc/LewTrr5PqT+97KiK3sOpP8qNDVnkg6c/uPgERhHooj9qXpzOiZmaP4XM
WMowS5A//rBpC8fegj+xDbHKQU5zP2Vq+Im8vWM/ZQByOYrWUD/+eybjLWtB
P8gs19Gv3is/0SzX0a/eGz82c482dZQCPwAAAAAAAAAA+MSdlg==
       "] -> 8.16, CompressedData["
1:eJxTTMoPSmVkYGDQBGKrpQZx7NaT7W8qn/GYbjbd/k7f6par9bPtS/RVdnyU
XGDveI1t8uWKRfYX2sVu9KxfbH/wY9PnD2xL7HNmX2q7l7jYnk1UumJd7SL7
2/7+LYunLLRncj9gr7lrgb24IrPcdt359hKvuGJrBOfYJxTI3WtgmmEv4mGc
wLxmiv3uzi1/X66ZaG+dZzH3jNwE+4fPNv5+az3B/koL66TQAxPtdZ1bvuTt
n2I/Ke0AW4TmDPvk238l93vPsZ8XVfOuKmeB/dGOp1nW6xbZ69/9vvFD6FJ7
1fVGh6PZV9if0NqbvkV4lf2l/irxlrpVUP0r7JfF7FvIHLvYnlVhwt871rOh
7pxg/1Pid8CU7Gb7WFb7RU47i+1V7x1zmR+SYn9r6+1jiv8C7G+CaQf74qUV
lXGKuva1YFrWngENAABw8pMX
       "] -> 8.53, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAABqlg4+TcKTP7JIIJpjy5c/9CwocE4wnD9Y
wXt5qIugP3TldV7yGaM/Yfr6MfZ5pD+aWNdj4f+kPyHnD7fJfaQ/bOO6Kf+y
oz86oJRp8cGiPwYQwr0x4KE/FxQ4JxiuoD/dJvfRdPudPxxQyrT4YJk/UpDd
n3ONlT8DKb36Gw6SP548yVFkDZA/RXtN2LuBjz8S4IZ4UOuQP+7wleJtfZM/
xjObxl9rlj8N5qwidnSaP9BWMhdW8J4/iNDwiu65oT9jlFMJWlukP3+4Te6j
6aY/o5FWHC/uqD/cPN85zGSpPzrXWO1LSac/uxMXS/yqoj+ODIMYz2yaPxsv
7pj1QpA/9/JQF2Hkgj/yJEeRNUBzP+kijFxC2WM/CPfGgEeyUT8PXyne1jdB
P1P+ZaconC4/TP5lpyicHj9b/mWnKJz+PgAAAAAAAAAAABedNA==
       "] -> 8.47, CompressedData["
1:eJxTTMoPSmVkYGDQBOIPV5iWaStPsc9OMf5SJj/D3vL/7w9+OXPsS8K2xW6e
v8D+wvp5i1SlF9uffOS1ZV7rEnvOr2yvUtiX2mc9NvOR6FpiL3F81/QdBxbb
71t6T7nn8iL75a237ge9X2hvHWX3tmfXAns5yzOdjBzz7O2mOPNNKJ5pz8/t
vZ5lyVR7k95X/1hVJ9mXu14Kf6A2wf5g4ZFPB2b122cmWS3Z+WWCPfveXxLy
lZPtT2pbd2/vmWZvtY1byix1lv2NyD2pWz7MszerYftptGah/ZVrx3JnGCyx
v2X6mzPwyjJ7i7r/Hh+urbCf2vd9m6f3Snsv+/MfCsSX2/vN4bLNmbDIfsnK
2dbbuGfZf3JS+vFTZIL9xLmPcuJnNtmvWsO0+ihLsf25A00rfkxOtncqaNqk
Ex5on9LCtCH+maP9+nSWEvVgfftMMF8RSjPaM0ABAC1PmWY=
       "] -> 8.42, CompressedData["
1:eJxTTMoPSmVkYGDQBGL/byIbEuKn2Nvu41Kv5pph7+fbuUX++mz7ihpRv28i
C+wFWjrc97stsj+kIMx+NXmxvUNt07q2eYvtf5tOMuJ/tsj+/+ErUzx+L7Rf
tccgLer7AvvLgn/uyeotsE/bmB06y3mePSfbTIsVcrPt1y18fiaoZbq9tn7P
zGu2U+xjF9y5xjN/on27zUmG3IQJ9hdO3dJtXDzBXhBs3yR7lSiNNoZ5U+0b
9t38GGox076fzfxcbNVcuD1VkxhvHVBYbF/3nk9cY/tSezGgL0LiVthfPVqr
4GKzyl42pN83on6VPeuHNWvuCq2wT+/WKVvrtRjunjXMQeLfGyfYh52uOGz2
v8n+dem9+hmziqD+TLZfudFKobTQ3/7LxGQX7qMO9l+ipj6boK5p/wPMV7Bn
QAMAaDOODg==
       "] -> 8.69, CompressedData["
1:eJxTTMoPSmVkYGDQBGKbssA1R5Kn28/ZruhxrHK2fRRD4tSVrAvsRbU/3nDd
uMjeLLrSJHbzUnvJqp3+XQuX27/q/fhn0b0V9vsn/Fz+nnul/eWui8IWa1fY
/6lrfH3i/XJ7p7xMdekny+zrgle+vWi+1P6l7s/mSfcW2Ud+cWxb7jrfPniO
4SSHozPtX7gXMjfWTbG35BXcNvHyBPvLDxv51WT77NfeWWh68lSvfRaTYtts
tQn2JxQMVXt4JtnP8HsYOPnlFHullsSjqk4z4O4t+J6YL1Q+315dpvF49qGF
9ommG3v+hy62n2oTGO53crH9DaWPonW6i+yfXBL85603177LRzFx4Ykp9pum
N5ooVHfaT7vZ6BM3s9Z+811GPafbufa67xi3XHwUZ++1hnHO5CNe9qHdjBNK
tlrYF3gyVphNV7GPBfMl7CezMyb8qGCwZ4ACAJ8LlaY=
       "] -> 7.95, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAAAiCwESlQGVP03TgP5MApk/J84Od+B0nT9J
m/8JjUKhP2AKzHB09qM/SBzCy5OApT9E5sVa4TymP/hO0Fdv8qU/8QK7BaZH
pT8PPdr8T2ikPzn5Crd1d6M/rsGkA4Idoj8PvBc7SSqgP7QPP9lYRJs/x9EW
vAvslj+oi6iSz9mSP3RXMMSyUZA/+NvhSwgijz+A2UGHLkCQP/8ZI+gxX5I/
FonvThkTlT+RHmGv9aGYP5dgrFI615w/W1MNPrt0oD8s7GyDbtWiP3Njf/ZE
Q6U/m4pZkVoppz/CmxpLWainPy8Yn0Wco6U/MJfcg5VloT+kYftTr4eYP5l2
xTNRPo4/m/N97jyEgT9p6zfiTcpxPwbbq8lvVmI/YhSWH/lrUD/aq4wD43Y8
P35wHSpM5SU/b+28ZVtGGj+f833uPIQBPwAAAAAAAAAAz+yU6g==
       "] -> 8.1, CompressedData["
1:eJxTTMoPSmVkYGDQBGLP/GiPS7en2WvbZyecOj/Lns27Nupg0Hz7PHPPlNu+
i+zDl4asDdVcau91PFrm0sdl9k7P43ku/Fxu7/g3njHg/3J7V+a4fxcaltv7
XI2aGrR1mX3w6bBZVzYttY+fHbDputoS+8LV7lp3Xi20F5xfbnDk+Vx7q/Dk
kHNXZ9gnTfY3u/Fksn31badJ97ZNsOeNr7pwaHqfPe/2qiWH1vbZVz525rv3
Y4J9xnKfNTc1J9v7xUcGXA6fZm94Pl3izOeZ9iL2ZQ+O9M+1r/J0jo67tMA+
86E3f9SPRfbRq4NWXVu1xD7CN+RmqPBS+3RR39JI18X2XJOrzQ49mWcfVB3u
dOXeVHvt51k9p3Z22XPur1Y49L7Onv9/RcNh+zx7ATAdZ29Yn3HgtLyXfdp/
n4ab9sb2Yf/DGa78Z7VnwAEAAymS+w==
       "] -> 8.93, CompressedData["
1:eJxTTMoPSmVkYGDQBOKCwPTeXPNp9s5Gok5c+rPsT4Rvj9y7fZ69s5/9ctfv
C+2NN3nmch5eYt/91u7yuZZl9rL69x6WVC+3n2WtvPNE4XL7nFcv6+JeLbNf
8WGyur38MvsQ0+ksh5WX2l/WSFx+Z8Fi+5kfDkxtr1xo7+7d+OeayVz7RYsm
+mZ5z7Cfsmjf7k1LJ9vzTpt+w3LaBHu3lD8Gguv67NOee544xddvf3pF+T0G
v4lwdbop7pNN3k+zL2z2qynZNste5eG6meG+8+wnc3q76KcthKpbbJ/+6seP
07FL7c/eijvLfnapfcGOz6Kvvi+2n33dNdGXYYG9wrToD80nptl7GbGdmLO7
2z7ZQvJ4tUSD/Ty2/KVP9+TbT+wMYnw2P8HeX7JG8us5b3uv54uXRB82ta9n
e14aGCEMpZnhNAMUAAC6OpnI
       "] -> 8.21, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAAA7HXEWKBmSP8oAd3j2MJY/SOZW3MqBmj86
TZrBY/2eP2UY0BGZiqE/YWBz2dF1oj+9QMz5goCiP10ZvRIcp6E/I5HeisK0
oD+V0cRFsX2fP8SEgHnpA54/SHWwark7nD8GX2VV9KuZP/dCjDodcZY/OqzK
pBbTkz9UGqoTn8ORPwKVko7OJpE/tp3nlmknkj/CcgrripOUP1JWEE1Zq5g/
xzzdsbAYnT8E8cAqMrGgP4f/ozjfXKI/5G5W534hpD81g8f6PXimPxm5ue9R
/ag/0wjFvqLMqj8n6grg1vOqP4H0U6vjdag/U6kDoo19oz/gqrwgOQmbP2HR
GUvju5A/6SazH0Y2gz9TqQOijX1zPxmwfqgiRWQ/0JoglODRUT8Rk7iMyO1A
P8W5wLFAYiU/vrnAsUBiFT+69wDtAIP8PgAAAAAAAAAArjudTQ==
       "] -> 8.97, CompressedData["
1:eJxTTMoPSmVkYGDQBOLU9csnTvCeZL/Ay7rVP2ia/X27dVl+/bPsy0MWTFok
Mt9+puKiYwoNC+2fRU/v2pC2yP6P7/57ptmL7F03PUz3XrLQfvvCkuXaGxbY
BynxnxOvmG+fPt35ZhLrPPvvbCt/+jrOsQ/Uc1ylN3um/Xeh21dTUqbZX3iW
VJ96c7K9seRMVrZrE+0brs1qiHadaA9zh7Fww/SqI1Ps3ZUXX8n7McPeeEVo
9IzIufZ+Dj1fLpxfALf/lWHWUS2RJfYPFTY33o9fZm9kWN3w8vMK+0fTe2P6
jq6y79c4+3fHy1X2WX9Clu+MW2HfFaczPzR+sf2kxjXvf8jPtldgjo1qmzDB
Xtq7laNaqNm+OIfF+0JUsX213GG9gOPJ9n8unJ76+3OA/QSwemv72LAT8wNE
lezTwDQTnGaAAgAUB5jw
       "] -> 8.98, CompressedData["
1:eJxTTMoPSmVkYGDQBOK023uWJFtNtH80fSuXYO1Ue0lP6fKp12fay8lYXZjy
aq69c6eY2ufABfYbur9Ma5+wwN6UMd/CS36B/fHHUR+OJ86zv7/TpezSnDn2
c7ctPtXAO9t+f/4EV0veWfbfvpX8UHk/w/6xQT7fydTp9qEPHh/Vz55qDxKN
0JxiP+dzBq/Bmsn2ayQOL/3zeYp9949+vT93pttzhZk8s0icY59kJrEm48xC
+6WXiqKLXJbaiwuvP7Hz5jJ7zn6GpprLS+2/HmH8uEV2qf00t0vHYp8utf+0
Q+xP4YzlUHtX2IsDdRceWmG/KUxx0XqvZfZSXTcTNixaaM+pcvDeif4Z9ukn
KqR9Rfrs670S9NTiGu1D1hXs2z+z0P5v6cR7nwSS7B/nmgRWsATYG78y5Dhx
xtb+o3LYfNU7KvYRu7/ksF0Xt08G09/tGKAAANV8nkc=
       "] -> 9.43, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAABnl9Y/SJuQP0cOKAX5Y5U/SCP5XUfImT9e
as+tX/CcP1cBvIspuZw//33mFNZZmj/PAaRTVs2XP28YIjVq15U/bxJUQC+W
lD/fvvk+dNeTP5gWgHtlyJM/bw/txZH1kz/YWE2X20CUP19DlHZgyJQ/N0LP
tcc2lj+oAN+SvTuZPz/SHQ/9lZ4/870o4vHPoj8jQ6ASSj6nP9JSgG/J3q0/
o6bNB3JIsT/NQrGv/w+wP4qh0Tzi7as/d4E1V6AOpj/TH6lOVDSjP9dSf6Kg
/6I/k+BCrXtcoz8XkuVDedeiP+tL4FDjtqA/KIV5yqksmj/P5gQGzSeSP15J
YmubCYY/Hxn/LdZUeT8/uuU7EZFpP37/GdIkqlo//m7jsMI2Rz8AbHw2JZY2
P/9f4EyvEyQ/+l/gTK8TFD8EYOBMrxP0PgAAAAAAAAAAKnGZsg==
       "] -> 10.33, CompressedData["
1:eJxTTMoPSmVkYGDQBOLFOc2Htx+bYC/0sSzfK2mq/c1P3bOEV8y0Zzlz9hHv
9Tn2zV+9rP3Z59rLzLP9t1pktv3T284rHh2bYa+1Rcq67eQ0+4krF5gnFE21
L1zltfZS9xR7j8CXLV5pU+xPzdi/xyQMQR+rSrvbPW2K/S4mpoQX06faH943
xW6Nwgz724/3e228OMee+fqshSpTF9pXTHfg4dyw1P7ZmfKIhg+r7Z+lfWzL
7ttg/3bRYte9vBvsP6g1f6vSX21/ypM5VvL3UnsbDcf0Q4cW2wtsbIufeHex
PWfplQX2cUvsf++pF358a7G98+b1rfpzF9o7eM28vm3WbPtberWSjSKT7VXY
Rd9waLXbL5wk2Sq8pMr+6+UO1x/nsuyfRaucCLkQbX8I7D4PqD/N7OOmrDEQ
OaJkr1a/Q/OEqID9NLC/v9oxQAEALIqcQg==
       "] -> 11., CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAABP4Gcn1sWQP1buB4VGkZU/KEINmewRmj8W
aoYFnV6dPyutp4ZpZ50/ILG6wa5Omz/k+jKzKeuYP48mGTFu6JY/azEpBhOa
lT9v5wrr5saUPxrbhea0o5Q/RWHI6E21lD8OzLysGdSUP20Mmvh8MJU/J7Lj
ndlSlj930Bs7wSiZP1yM0d3JG54/po/ym/teoj/qJ7vLor6mPziX4bJuzaw/
uctD7g8CsD8YRff3BvWsP6kTEFHmzKo/zYuy9Q4Tpj+g/p/EvZujP8ZqNiO+
kKM/2dLmsSADpD+b5PMgJX+jPwdHdhsEYqE/lg8qgUhKmz+EYpfuKfCSPwOF
iPAH5IY/xUtOaLWIej9tZFhxGc9qPxOi8YcTf1s/J3p4G2MySD/ctCfTQv81
PwLKavTDyx4/RyqGQgKZET9PKoZCApnxPgAAAAAAAAAA4kOYnw==
       "] -> 10.68, CompressedData["
1:eJxTTMoPSmVkYGDQBOLpe650GSyYYN/YXW93LnqqPdcLgzyLXTPtl8n8ePrt
4Rz7rXfnKyRzz7Wv/5DnPIt1tr1vpXOF2qYZ9gdTdts7Hptm7xNTm3W/aqr9
o3kP905ZNsV+49Mnv3+VT7H/erWPK6xpir3FMQvJjT1T7IUi7tXrXZ1iL7y9
tGX286n2CRs+HHneO8M+p/zD/01+c+39t+7Je/t1of30O8ck1JWX2T+sYQpN
9Vtj73E5aGL87g32ZQ0HDZe8Wm//aaaoSL/danvj9ae4T75Zam+RvlDEpWqx
vedj7xu3ahbbJ6+acaTjG4JvvrKIOyt0oX32zoPfbmjOtp9RxTyF6+gk+5oS
QcNnu9vs93LXWBt7V9kHry2fHNqZZb/SOO3zvcZo+8w5v19M/ORu797+IFh2
m4n9i1MX/moLyts7gfki9j5g+osdAxQAAHYUoaw=
       "] -> 10.5, CompressedData["
1:eJxTTMoPSmVkYGDQBOKtc4/dSqqcaD/1yumASWem2le6H+lLPT/T/tDr3pCJ
q+fAaYmgZ+c2LJ1lH1J6f7V/4gz7npinB7xyp9l7ca+rEBCcar+aocfiqNUU
+xK7W6YKfFPsw/e3X/gtj+A/PGRrnZU+xT5eSMrv7fyp9oVfDAVL/GfY71s/
q+ft7zn2b+Ir7rIvW2hfEVr5OvfeUvvj6o0yptFr7Js8QBZstG9YJXhqmcVG
+0u2iRP8Jq2Gq6vdduBoeu5i+21iOWvuFS62L79zWfLT08X2PN8yf1SmLLb3
kEy+KqGw0P5usCNLxslZ9vdWz2uVmT7JXnpO3+eYlDb7La6ZketWV9rPt/vb
fFEm0/6Uz1W9bqsoewFeznXHTVztn/8zYOYTN7Gf8ahh7azbgmg0oz0DFAAA
S4CbnQ==
       "] -> 11.06, CompressedData["
1:eJxTTMoPSmVkYGDQBOLDohFnd9dNtL/kwNqRdniq/YPsTU6CHLPstR/x9mwW
m2d/Wvhp26SyBfYPUj+tmH9qgb1JU8m2/pQF9lLWVY7Xvsyzb64N+9anM9de
+rGwj2/HbPvMq6GqSiWz7NO07vh+cpxpr8RVsnn99On25b+c3KKrp9pfFgni
VeKdYn/mleBNtvjJ9ouKVvEb5k6xV+20EpgtPN1+nhJI5Wz7JVIuUisYFtrb
z2C8rhO0xD7Jrj+xgGmZ/ael+/+Gpy21ZzjX89qTZ6m9jNctxyK+ZfZ9vcq1
u+4stw97++7oJ5eV9rGNV/e8Fl9pP1d+um7X8mX2Vk58GmffLrTf7RYX/ej2
DPtrR7vrDtf02a92afE7vK7R/kZ66vsTlwrt+768LLqflGS//eD1lFalAPvJ
AXN3b2Cxs983bWLBBSYl+x1gWsieAQ0AACOzkl4=
       "] -> 9.89, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAACV9vkD68SRP6ifmaL+95U/U6v2HBtamj8H
Hyc5D6ieP3i1D2F0NKE/Mg2hsN/poT+W9vkD68ShP0I8q9h24KA/5GuM/Nzj
nz9FX8JHzAaeP256MCbWtpw/B5u0yq4jmz/d+9N9RO+YP0hqKiDfEpY/d5jl
s7zXkz8XIT36bDCSP2iGBTndPZI/fwC5VZTDkz9cj1dQksGWPyqQiD4Rqps/
yHk7hMxgoD9VAnUkQnCiP6FU8K3eaKM/4oquxLd/pD8nFvPHlG2mP0hNAHMn
tqg/TUMje0Nuqj+gXNWKn3GqP5kRLJZ/4qc/Hyqtt1z9oj9E20/Za4KaPy8X
fqjDMZA/M649zPfKgj9zQ1/HuABzP9bNVDbcvGM/zM7BcNA3UT+KnvAbleo/
P4X040KNPC4/b6DKkH3gGj98oMqQfeD6PgAAAAAAAAAAsV2egg==
       "] -> 9.4, CompressedData["
1:eJxTTMoPSmVkYGDQBOKT6XcTumom2UPoafZpOfsXhx+bZW+87f5F7eT59g4x
Kyw5jyy0v6Sd/Ft27yL7n2ukfSaeX2TvqaB3ZQ7LIvsHF0ESC+1nKM0vbdZc
ANU/zz7Lj6lw4bM5UPFZUP3T7BnAYIr9OpAxuybaZ4PVTbBvmzUZaNVEe1e7
12zBTybbd9Vc4112Yrr9d+uq1Jz9s+3vJYBEFtj3x0nefv9iob38XiOgCxfb
Bz/ZnGfgusxeEeScRyvsN/S8Lf9yapU9UNHUjX9X2ZuqN+4IKF5h/wrI64tb
bD8NREnOtrfiPNI6a/IE+30gY7Sb7feA6WL7lZYgiWT7Tm6wTvutoGD4bWv/
v2DhMxUBdXsNsHlCUH8gAAB3F5f5
       "] -> 9.16, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAADxYnA7dD6SP5GKaLrVXZY/0uFUuXismj+z
aDU4XSqfPynIllvfpKE/UrJcuzaNoj86vlkbB5miP+nnjltgxKE/2fHLmzjQ
oD+T9xG4IbifP6Fycng1Np4/UZ7muIZlnD9hG4Z5kueZPzG6XDoXjZY/kQ8G
u8Hnkz/h6417UMiRPzFFtzvrIpE/UTN8uzIPkj+BluT6pW2UP0Gu4PlGfZg/
se3SOEm0nD9xpt47ZoWgP/lecRuEOqI/Wiv/mlIDpD+KjmfaxWGmP2IdxXmK
66g/mv1NmQnIqj9KJUTZau+qP4KO6PnFXag/mowmm81loz8CSTv52xKbP0C+
2PsGnZA/QTk7+xoTgz/BeCv7HFJzP4EXBPuh72M/AN7Q+4e8UD8CwB/4/4A/
PwHIG/nfkCs/+M8X+r+gFz8KwB/4/4D/PgAAAAAAAAAAHJafvw==
       "] -> 9.13, CompressedData["
1:eJxTTMoPSmVkYGDQBOI8jX2/zjZOsN9y5cwtSd+p9l51cVws52ban6954ygt
M9c+ZH3i9WuJc+3N74oWHM6ebS+WYavEpDTT3t+M8aOV6XR7oVvHrO8+nGrP
eslfawfTVHsmgU9P352agkHD5F+8entI+udU+x1JzgftemfYL+sVPhlpPNde
R+RhnOXxhfb7pJ4tL/2y1H7aYbvibJk19iWVn2d56m+wjzKWTci8uNZ+rdrT
wNJtq+DqjP6t2PFz12L7z2o+Rk/PL7Zf9lpNXSBoib3n8egMw5uL7UW99dYz
rlxov/fDzuXJZ2fbH/wY+ea4/WT7FTPysgPK2u1v7/Da+ORTlX3bz0zZWtZs
+8mMD/UWPYm2T3zI8pI3w8P+xWmZVAZRM/vtqx3kc2Yo2W8G00L2e8D0JzsG
KAAA2amZ5g==
       "] -> 9.89, CompressedData["
1:eJxTTMoPSmVkYGDQBOKp6q/a3tVNsBeUK2aJs5tqr6S41Jlx5Uz7o+XXDkgd
m2PPsGFzif6SOfabnn3v+OQzy958xvn9Even28t09cZN/jfV/n7Sz8plx6fY
d15tfnGScYp9VIA4t+7ryXD+0/sxi5n1p9i7KzhzR+yZYr/5jPPZh5zT7N2s
vh/L+D/DXrjjhcYslXn2zd5uiU8qFtlrTtTjv/ZumX1pybxtyp1r7S0LHZfV
V2203/Hzaa/wuQ32s6+4bTv7bLU9z0L+2wzXl9oHPPmz4bvWYvsvN5W/7f27
yH7+gnt2axIW21cZxzysfLjIvrOkckPZ9gX2+2ZmxGeJzLJXWfbMf670JPs2
9+vvXT632l88aRNv71xpfwFMZ9q/eHG8/82pSPu3LIqN35672k/t+LLP8aSx
/YlHyYLLvirYHwLTAvYMaAAAJd2eXQ==
       "] -> 10.3, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAADzkLNLg9yQP4Tc0POKxZU/a/dMTE5Imj85
WvErfIudPz95x9ycXJ0/lgyn10X7mj/1vlyDD2uYPynum5KuWpY/ETbEGRkb
lT8WjChT01KUP0j35heFPZQ/QdgQZ2RslD9lBSPK1LSUP65fR5C1RZU/qdJU
zmGnlj9+VM9esLuZPy2uKLkHHJ8/6a1cUHUGoz99JCwVWounP9GPUA7VgK0/
P3jK07cLsD9jP6htHQ6sP4v5rJLh9Ko/txABMKNJpj/UUNo9E5OjP4nLA1tV
ZqM/KumqZTXGoz/toYDkuDujP7DzJJFMGqE/OlUA/wL3mj8oV8d2aJOSP774
SFgqtIY/4/O9X3oqej84jI6HnF1qP47t0CYlKls/MmjHqQL4Rz+EpUJr8V42
PyogOe7OLCM/53HdmmILET/wcd2aYgvxPgAAAAAAAAAAKXiXJA==
       "] -> 10.7, CompressedData["
1:eJxTTMoPSmVkYGDQBOLwySdyeh9NsD/UZvhMOW2qfWLnFIfAFTPtu9wVenxf
zbHfY7DSKttnrv3Guf/alpTPti9WPK1ywGGmfecMGfY4h+n2Gm+q78y+MdVe
c6nqisDHU+wnGjy84LRpin3+TtkrUj1T7I/a3954swDBh9mzqmZ5lueO6faP
PvvNadWeY5/B2ifXLLfQ3lr8daS7/FL7+i2lN9pEV9svesD2ep38BvuXy+8F
ys5cb5/ntEFt4s1V9gcSDmxexbnM/vp1wWkenEvsu7jMJ7Y4LbGf9fLwStsL
S+wZOXZkZ/susb86oSlkJ8Mie/VSPn0htTn2iQxM725FTbZ3aVG5PWV6u33M
qkonJcdqe6sFtWv25mTb9+RO3HfMLca+zcdqUXa7h/2cuVJBE7TM7W9N2J34
T1jZ/p9RzUH3KAH7be9+MW49+9WOAQoAdnyWGQ==
       "] -> 11.19, CompressedData["
1:eJxTTMoPSmVkYGDQBOJFy4rYDrBNtI+Nmr3IKmmqfRPj1L/lc2fa//Rd9HLq
hzn2dlv3zvz0Y679M2cx/9PX5tj/bwupNfk8y77z0Mrtrn9m2Ceq6cc05ky3
b930JOu58zT7VU2neVJPTrW/Gf7j9/HoqfaVqjbfL92aYq/846j94bQp9q9k
g5mrj0+x59raLhjlNc1eWZirZ9apmfYV4pP/ZH6ZZ8+Xdr3u5IdF9g2VRtc9
HFfYz44Xr9ghu9ZeYdnrjU6X1tr//fcxjHX6SvsZUjesl7Ets+fQVX2t9W6J
/fH3LNqcM5fa37Y9FPE6YZk9A9/KXxnPltprizsZtOYttu+++5ZZNmGevaBR
toXA7yn2L7+k7rGq7bS/WrvbXSK71v4ymM61zzsnLZNrGWevCHaXp/2HQs/H
H3Qt7CP72F9+Dle2FwCLc9ozoAEADcuVCA==
       "] -> 11.64, CompressedData["
1:eJxTTMoPSmVkYGDQBOLZR3P2/mCcaM893d5xfetU+wbfrO5TF2baB0zsUgjS
nmuvU9s9TW7LXHvX6N+nb7HNsc9klu5LeDHT/iHniR1H7ky3/8T0QF0mY5p9
X2f2ksTMqfZrdghlGEhOtZ8VLG2o/WOKfZz93aPbzk6xP/V8p/b/E1PsfSZc
Leoon2pf7eYs+XDFdPuYpV4nXd7Ptt/Mv2dX0qsF9kGzTI833lxiP8N3ZQ53
yyr7LsEVwSWv19lfjlv3Nb9krb29/pnTMS6r7Pde/tnEw7rM/u3vHVuNHJbY
syoyqHL0LbHP3l9jFq6+1F5Ze36U0+Il9gvFlnhzxy+ydxF8vX7jxTn2Jw1P
uWv8m2wvarku9op9B9T+avuwAyCf5Ng/fbF2F6dBrP2P/d9q70R52n8E+8/M
Pjg4rjfjnpL9xxreK3N8eewjwPxPdgxQAAAuuJhS
       "] -> 11.49, CompressedData["
1:eJxTTMoPSmVkYGDQBOKGDolfjW8m2L86dPmWfPtU+9IdV1607p9pz+lygUni
+Rz7z4U+/ZM05tor8XWdk9GdbS92ymy/09MZ9q5pJf/OvJxmb136Yg7npKn2
XVdMN95ZM8XehfvxCtPGKfan/h9mvV4wxX7hsp0qSdlT7PlPivHVzZlin3Lu
U23d9Kn2kQ6HJC8rzLB/c7n99tMDc+yTZLaqTWhaCJVfal9QurCr4MBq+6xN
6432FG6wT7eT1ZD5tt6+bmWCl6f4avu2Xtn/bR+X2uclcJhlnVpsf87rIHfu
i8X2ppftpsrkLYHzw4w/5/guXmh/46flgfuds+3dmCUZt3JMtl8xn19vmXW7
/dVlRUInZ1bZSxcclSo4mmVfFZfssnl+tH2BkFtvxH13e9XFKZotl03tD/BZ
LBGWVLYPreKWXxwnYK8FFv9qxwAFAEhGlvc=
       "] -> 11.31, CompressedData["
1:eJxTTMoPSmVkYGDQBOL/y65NWsswyd75gkUPv9Y0e8N+o43zuGfZ255gKrv8
dI690CX2zqSZc+1by3kbkpjm2Pt6OJ3bc3umvZPf6jaGm9PtH2g8ff4ydZr9
30W72/vjptq/V5tudYRrqj33g2Xhj25Nse924JJUy59i7xJ0bKJc9RR7yZjT
S9bqTbWfUXnrbpTndHuliQ1xR9Jm2z/JD6me17jA3lbE5LVF4BL74yt90ibL
rrKPrwnY6JC23t5215mlr9k22P+QES5Pyl5lbxoiYu9yban9QpC1okug5i+x
X24RvHmP2FL7baV2zfyTl9g/enustN9gkf1ejTRz8ao59tvNWNmm754MdX+7
/YZcjtzLftX2KkHuD737s+yjj6RJd+hH2dcwy3te/uQCpU3sdxYqV3z8wA6n
GdAAAAKWjVI=
       "] -> 11.49, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAABiLFkqAcyQP5isG+DPkZU/v3D/2rLqmT+v
yor/+B2dPxbYpwEuLJ0/GYphBwwVmz94jVlUM5+YP65namCwspY/RdW6g3Ri
lT+QahoQ0paUP4HxzF/vcJQ/K139DZ2IlD/3dzcSB6WUP7/VAiF6CJU/+D9b
9xYulj/a3QdhcfSYP/0nDnFm250/SmBRjME/oj+f7hywzYymP+Zsv/CFuqw/
3iyhxwZysD/eGQUDKVSuP8T1kbW5LKs/eZ4ScpIKpj8CbPLn4oijP74N3ztq
f6M/7XjHTBLxoz82UbjjeGyjP0QeULzDRKE/Xeh0s4Qemz+TX2UgucaSP5sx
rrrW04Y/RXC3Pa1Eej/MLN6VnldqPykDr7fuOls/dsU1byMWRz+6GJQrg081
P8SHvCZY8SI/mssaOgRqDD/Ih7wmWPHyPgAAAAAAAAAAbpiX+w==
       "] -> 10.75, CompressedData["
1:eJxTTMoPSmVkYGDQBOLFId+N15cstlecJJ3dWr/IPrfS8fa5EwvsP4eVRiRX
L7DfrLX9kdP0hfbr+eP1btxcZH/bi9Xx190l9ov2hQnOWLjM3vLOSqmVi5fb
h143WOgXscI+y2jFQ9PUFfYCartn3upcbr9N8lxg/bplcH38e6L3fIxZYh/0
QtJIyHGx/SSRG8uNVBfZs0yf8uT+qYX20/QNYuY+WmBfabLy6nfdBfblB89N
M1CZZ293+kDn011z7E9Evr37++90e8U/VR55a6baO634tXTqx4n2aTcNpwoo
TrD/M49J5Oi1Xvu981ofX5rRYb95itgB7SMt9gf863aFaLbYP9Iwli/mqbc3
sJl15dXvMntmxi8HT3wvgdN9yfcvbJhSZr+ma/mclvcF9u+sZZf82JtoPwUs
7mbfAabD7LPA9gXYM0ABAPO4ojE=
       "] -> 3.13, CompressedData["
1:eJxTTMoPSmVkYGDQBOIzJtcOq8xdaK935snkkEkL7EWLlvVo/Z9vn199/37B
lPlwcbkNlrMaLy20D9m10VrXYon99qcTljdOWGa//OTTtesuLLeXuXHr4qkZ
K+xnlSwtunBghf3HbcXsSstW2LeYhSS8t11uv784TSX7w1L7Cl/nzjenltib
vutakxS62D5fe27BPfZF9isWupSlci20vy/+pvoNzwL7WwsO63S9nGs/zZE7
gKFkjj2LXlQ0X+Us+3PKj3YmCc+wfznl7Dvhx1Pt/T+71Vp0TLHnm9K3YJ3Q
ZHtVO37xbKOJ9nfS9V7Xzey1P3xuYV0Lc6f9J6XF2X+dWu2P5WazGrxttDeY
7B/k6dRgL7BH/8b3G5X2fjp39jnfKLGvbbi7eo94of31TrH/TGsL7HnA8pn2
NXFfp1uwxNnfBosH2LPZ+6VeYDKxZ4ACAFw+m1I=
       "] -> 3.17, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAABld8Mch1WeP1n2Ht5aX5s/X31mdO5OmT8o
4tBJ+yCZP+u/84h0A5s/kg7jXJoQnj+tNBr4LzuhPxHiwsESbqM/ZYm6q6X0
pD+1LnegyEGmP1oAOCCiy6Y/vzLtiqi0pj/nx9HVSzamPz301WACc6U/YId/
tjW7pD8b5jis8uCjP3ESPTepHaM/KnH2LGZDoj8XaQpYpl2hPzr8s63ZpaA/
xsNNY4MQoD9vezkHZ8ieP0drYV3n/Jw//8ffXTTpmz8YVxPJh76aP8OvG9/0
N5k/iJdXYLWGlj8M4IfMojSTP/5e4412PpA/vijUSGFIiz9aADggosuGP5yp
XHe82II/WewFnBPzfz9zhVJJrjR6P0b4S0vi5XU/rDQa+C87cT/nu32elJBq
PyToc6FiGmQ/Ck8n9MfYWT+Xm81KlflGPwAAAAAAAAAAMKqbvw==
       "] -> 3.24, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAABozYdGW9GbP1AFrLPN0Zk/QP3AKKSpmD9F
UTrs3weZP2OFjcOVgJs/j2HTIcO1nj/iCoSEoG6hPwCVGno4uKM/EVNBJ/Yc
pT8kHecUKo+mPzFvln2/eqc/NmFN4qL6pz84hcqjBSOoPzZVzqEs7ac/M5MT
PyKjpz8srdsatTCnPya7JLbRsKY/Hzev8Lwcpj8T2YBHsSOlPwGtGPsk06M/
9U7qURnaoj/ikMOkW3WhP4oB2x0RSp4/S72xMAiBmT8WIXvKdnSVP+5cM+01
WpI/kZHPI5zrjj9GaThtzCKJPwcZkD9NTIQ/19DSnPedgD9dARj+gOx6PxuB
c84o4HU/7CC4quYWcj954fER+wZtPzEBVd7wjmc/8YCwrpiCYj90gfkNSZtc
PwQBkr5gMVQ/ZAEY/oDsSj83AVXe8I43PwAAAAAAAAAAwWGUVg==
       "] -> 4.04, CompressedData["
1:eJxTTMoPSmVkYGDQBOK1n0qCGH7Mtj9bwOdi7TDLnvOMidnk3plw/hvzF4tn
Ssy1/87qaNgXv8A+f4L6lQMLFtn/8Gucv/H9Evuls0IUYsuX2dtIVKdkv1pu
L/Dx+KyLq1bYJ/U7VqZ/W2Gvtr/ket7+FfbTA/TCH9issBcTi/7Pf2K5feLS
L5JqysvtDzNZF96ctMz+x2F1/6CbS+1vPZvlZ3plib3Neatv7lGL7Z2+nI1q
K19kP9fJ5N3ObwvsJ/432ahybI594c10pycG0+3n6jT6/j45yX7RpNkvjkzo
txcv9eP71NJlf1r93FXxDa32QZtnXV48u9H+3HnGYNm/NfYvKxnbrs4rt/+R
YuJQIFNsn3bonNuZyHx7jzmMN7qPZNrPFzu3xmZuin1iUbrPwf0J9t5g8Uj7
c8Em4lM5g6B8T/sMqdknj/FY2DNAAQB435pX
       "] -> 4.78, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAABNOLm66zucP9x/6E3F5Zo/b1mSTH2emj8i
8+pRnbubPzvA9GH9Ep8/73BEh5eDoT+0s7HFWtqjP1L6DdE+OKY/qM1n2ErA
pz+fkQWs0yupP7DxXK8H3qk/DwEZ44r6qT9Dywauv5apP/1XBKrnwKg/Zezf
P1H5pz9vcf+hNxWnPwEC7GqARqY/44r6mYdppT8v8aGUZ0ykP2ApFfS92aI/
hZOru77DoT9WvGLnkTSgP4uHxucG9Jo/71jXMd0MlT8U29pOmG2QP0imPk8N
LYs/fD/cOY24hj9s9/GLE32CP6ZU0PdmS34/ZjWddcCAeD9Y7bLHRkV0PwXE
QIHTQnA/UitesfNIaj8JhwvNZmJlP7ZdmYbzX2E/4XKNRM3yWD8TDCsvTX5U
P59U0PdmS04/AocLzWZiRT8cm4lVANIxPwAAAAAAAAAAR3SeHw==
       "] -> 5.03, CompressedData["
1:eJxTTMoPSmVkYGDQBGITi0W3OVbNsz+74Vd6ecB8e3vmC7+Ypiywv2hvof3U
Y5G9n9m/4ph/S+zXCLfHq09cbm/Ar/au13eVfdSRZ6vurVhjP3O/p/8s5nX2
3j5sn48eXWdvaVut+GPDOnufZlnO5A1r7adqzDd9enG1vYpNd4WP1kp7kdl6
l3e8Wma/51Cd7t24Jfb/ktRFCioX2W+KFXpyVWChfUPJOUWHv/Ps5+hWVF+5
Mdv+1fVLb10ZZ9nnPORZes57uv2HiNKOidmT7F8u2H19hVi3/XvFuKIvDc32
Uip2R7z76ux3PFO8mrGlwj7M+vpOb9ZS+33pR/K3yBXat0iKpIjvzbZ/t1nf
bdfqVPvNc6YF7DKJh5ofZd998awIg1CwvXR06K0XFb72CsL8QCEX+2/9PfP0
whztd4HV29tHTJtYXuJqYa8OllexZ4ACAEP+lpA=
       "] -> 5.4, CompressedData["
1:eJxTTMoPSmVkYGDQBGLzWs2E1TIL7DcJVYo+27bQvnbNAbm35xfbf5FvPh22
aZl9YMLLP84LV9lfFv6g0P95rX3q/OOuTFM22D9/+t9K7NBGe4/bKm5zXTbZ
b2w0mvg3apO99M62BLezG+3LJnz5s2f6Bvtyu9yLP1astc9T6fmz4sMK+xsf
/ryctW+JvePe3Os9PQvsj11vdM5rnmXfx7WH5f73qfaqP09dV7edZO+S+Tvu
hWy//Srh+86cJj1Q/R32VpXBx17JNNsrrWWZzHKuyl45oyXY/mGRvejs8x9N
RQvsL3xMkthnnW//V5jxn8jmfPspTAIXY39k2y/qcvm88HqafeuHW/r99on2
abM/rnacEmxfkrGM1zvBDUqb2ft3d6TvvCprzwAFMD46zYAGANZklmw=
       "] -> 5.91, CompressedData["
1:eJxTTMoPSmVkYGDQBOLVmcEcnhoL7I/0yu2LqVlo73876E9r2WL741z7XBX9
ltkvu6Ir2221yn7mnrSXTZ5r7R9a+aw1NNhgH/Bg3/WjERvtFabZFio+32j/
45YC6xG2TfYW1nVLPs/faJ/yr/1McPUG++0v5KJnzlhr/zMoZKPHtxX2GvMP
CGUZLrVflpjm46a70H5b5pQb4X9n24sxNC2QXTXdXm7ixakPWabYLwfLT7RX
4Zqtvsa53/7Ajx+X5vV1209x3BRj7dhqz/9uj+7sVzX2u2td3MLbiu29j26f
zKmSb3+wvDn0gWaufVzKN9aw1Tn27id7O5m3Z9hfkJqxV80lxT4eLB5j/3jn
Nf3i04H2eezceXOOOttngWlj+203XB5PXiQPpflx8PntGdAAAHEjkzk=
       "] -> 6.06, CompressedData["
1:eJxTTMoPSmVkYGDQBOLEc07aarfn2xtk3fSbz7TQvm7v3Lf7li6yrz1SesJA
Z6n9XYOlXlMOrLBnSlztkPlqtX3p/dzT816us598ekKI9vwN9rLh9+4WW2+0
53R5nONRstH+HPuuBzs5N9o/knjaYCSxwf64Zte+mb5r7e2mTunUKVppHzL/
uZ/xr6X2Ey/MiHuVs8j+f9bukOet8+212xcqHaiYbb/os3DYmp/T7T9bTlju
+GaK/aRLGfpzVSfbP5LaGvj0wgR77UbDDcv9Ou2X3/+su+FQg/2Of+eaee6V
QO3JtQ9erj7p350M+4/2DFJRYun24dOXc2eIJ9uX3Z3767VBnP2EGzcWbvUP
td/C58+1eLGXvVhZWZN7lo09P5jWsZcF0zz2DFAA4cvYo9MMaAAA2pWP4g==

       "] -> 6.02, CompressedData["
1:eJxTTMoPSmVkYGDQBOKK4+dNb7kvsNfYGL29o2eh/SoJsz1/kxbbb5t//uIe
qWX2GtMf7Gu/vdJ+enFOiY7gWvu/G1quXxfaYM8Zx8ay1XKjfbFWQaL2iY32
9RLxd3xebrR/rWrWwV600f7Ze23J3dEb7P1F7zJuSFhrn3Pr1c+7DCvttRsE
DhZZLrXP53+tyWq70H5KxHMbtrY59q5fZwQGC82wly2fw6fdO8X+eNk7v5Mz
J9rLCQa+ePu3354xbd+LA3w99nMOf7xdeaPVvkp0y8OEW3X2GdxmHz4Hl9rf
ljl0df/RAnvuS5eORVrn2StULPMNSM+1b9924r2Cc6b9j+MhV99sSbHX8BaY
6P03xt581/nMCxZB9o8VG/2+dbja77p604HT0NxeOE8j5vEDZfs8225V/UYu
KC2FQTOgAQAiZZAo
       "] -> 6.07, CompressedData["
1:eJxTTMoPSmVkYGDQBOKl4Y4hoUYL7L/csWzZ1LTQfqnmg3S/vMX2V7XyJrzQ
WGY/sW1y6oqfK+097z6eslFjrX3snU/5qaob7JkD3/zc5r3R3uOf+YWT1zba
m2xfu8zw1Ub7gPlCk6xqNtorsod8nhO/wX6jaw5XYuZae8uEA8W3mFfaL520
/qMXz1L7nPbyWme+hfZgYck59i9vHXeu3Tzd3lI16NoTzSn2L826ZLqtJ9on
ThJ69yek337S+6T3S6Z32yfKmG0WXNhqz3g6xWrfzjr7Bs4Cl4tXSu0fTF0f
JTWt0J5BSirprnaBvfPSGzG2ivn2h+SCWNzEsu0bwepS7RnB8gn2jG92lF5L
D7Zn2BfeeX6xG5Q2s//5GiSubM8+4ducE/c5obQkBs2ABgAaHZNi
       "] -> 6.12, CompressedData["
1:eJxTTMoPSmVkYGDQBOK0xrCc6Xfm2Wu0qOjvsVpg35XteHjxpoX2RzszXE6/
XGx/foO2wzvT5fYHImcc0f630n721NdSRrfW2BcfYNTokltvn7LFssFea4P9
jG0P4uryN9jf+qvzUtlkg/0bBZ1TE/6us9dK1n+dv3SNfd6hZNOn8Svtv1cq
Bq8rW2a/hlvo7NPUxfYWV3hMYkUW2rfI3OMRLp5nX/lVSvCD2mz7hwwirv38
M+xfW5VN320yzT77yFEnh4WT7U+VpD9IO99nLy668rMmb5s9U5/rj+Mv6+x3
OwsJbfcst69RWKR+8muR/dEJwrvfuBfYh1hI3hNPzLJn3NK89NbsFHtFzbMz
nBvi7I/WlqQ8zgu1v376V7Qmu4/97rCNGQeUnOw9BcMefRExt48G69PCQUtB
aS57BigAAD+rjjE=
       "] -> 5.98, CompressedData["
1:eJxTTMoPSmVkYGDQBOIJj1U3hpovsP+4rpqFc8FC+80L3EtiDyy2X29fVSO7
c5m93JRZdYs2rrL3duMQNWZbZy+4beqZe/0b7PcWc2n83bbRXq3/jLi61Sb7
KZeOhPZ4bbKX+bqAt2fvRri6R1puqpzNa+2/aL8JNdu/wp7zUuHe0jVL7Nvf
3bx7JnuBfXE1a9Q061n2TE2siv8nTrVP2d95fPe7ifZbE0+xxHb22Ruf+Djp
xqpu+6MSG4+nJnfYb/ydbuvN32yveXnpfv/71fYJcXvOVz8vsT9zy3v708Ii
+/tHHsd+50DQpeu22c7/kW/fmjqXYcWlTPuzYHVJ9qxnjvQpfwmD2u9lzwLm
m9nPlmk5vGGNsn0lWJzLngENoIvD+AARBJJK
       "] -> 6.27, CompressedData["
1:eJxTTMoPSmVkYGDQBOKN3X89dOwX2HPpPvOd9Wyh/fdABmUPlSX2DntSNoQ6
L7d3D92fKBK/2n5VT5rizN3r7C+VBmxS/7LBXoY7I38K/yZ7/6VvLzd1Iehk
9Ysr8t5utL9jdmjO3KUb7IuXN8bLp621D33qqn/bbYW96kI1rdVHFtubH7WY
4ls+zz6xIuOz59Tp9ttrowICd02yTxeJn71BvM+eW7XaiV+/016OITE38WOb
vdFttxmbN7fY//t09P7E7w320xNers4OrLZn7N/T/qOy3L7uJc/NTTzl9s0m
OWZ2z8vtj68p3qPWXWFvU8gafCqjzF75l0aDoEqRfe8prY8hczLt11w/Wqcy
Ld4+CezeQPuYO4Xej4UcobShfTPYfGk4zQAFmRzvDwjUqmDIAwCHfJQq
       "] -> 6.43, CompressedData["
1:eJxTTMoPSmVkYGDQBOJsk1jthboL7LUSo3j9Hy20953KtlVCd4l9Y4glK0/k
cnv9Dqbcc8Wr7T1+vDnYcn6d/b7b/Jx7/m6wl2GMU/WT2WS/yfQtj/x0BO1s
/8n4+LeN9oyZb4SKVmywX2Bx3bCreK29+xX3VA7HFfYsOe9FS1cvtpdYm+sZ
mTTP3n8G5w5pg+n2fAsTbX3DJtm/dfav2p7Ta++WPH2Cc2uHfafE73B5jzb7
WQvq/rqqtdhLubdYvtrTYP/39CX5e17V9k/PzJj/ZlU5nL7Lcd3n5u4Ke9v5
V20NplXab22UVD9oW26fZ56gt8Sg2H6e6RW99oIseznNp4+KTRLs74c+OqL4
MtC+fv/jy6f4HO2bwLShPcsZkPnc9gxQAOFL26PS3HAaAIn/j54=
       "] -> 6.69, CompressedData["
1:eJxTTMoPSmVkYGDQBOJnb7IETqjNt7c8kr9lduFCe3t/uQN7Xy22n+j8x223
5HJ76xmbVzsqrLbv6ZloZO+/zv7ujOX9YZM32O/SfH79Z8lG+4R7dVOfn99o
H7LpcOW3LRvt+yp/ZZhybrTntuleFV633j73Xu2Kupmr7b0LVkVGFC6zL85m
a+P9v9BebyGn55R/s+xtW/QrGZ9Mtp+5w8fPIKvPXnDfE9YJ/h32a2zq+3I+
ttgH31m64bFki73HhldTPv1rtjeMKIkVONlsH8eReOaKSYv9Ywl1SaWKVvvD
ncecf0xqt59xblXQ3Umd9jev8f5sNumyl301X7ExqwNqT7P90eIMe++sGntV
8xeHS50K7Y3A5iXbs65of+cdG2y/1n2dwOFWJ/u/bb9DNl4zsE8G26NizwAF
+tw6u6U/StlDaC44DQDqAJVX
       "] -> 7.19, CompressedData["
1:eJxTTMoPSmVkYGDQBGKPX9EhlgWz7DcK7q1eGjrPPvKlyca0joX2/945Tgpv
WGI/Sdz6x9cvy+1DROTMNMtW2T8P7FjCH77GvlN0mutuo7X2U/Qj1FdbrLWv
WpIsbbdkjb1+1Df7lvzV9mZGOx/qRa60950gv22e7TL7KYfykxbrLbK/cfpJ
oVfMXPvNVZ+W8hZPs/8nobL4ecRE+9Z9qn91V/XYW3dqau152Gn/XtPbbZdD
l/2Srb8jC4x77FunOL+Ze7HfPiMq/fZjsUn2u4K2uu+ImWIvs8f0HqfhdPvr
X4813TKZZT/708oDvNvm2HteqHReOX2uffqdAyuMe2fbP3j0S+ds1zT7Lee2
HddVmWD/vpY/49bHZvuyHrc3HQnl9nzezFt6FqXZH36tcqGLMdx+65Ir2+Z6
O9u3qkerTztuYm+om8HRvp8dSovbM6ABAAuVlQE=
       "] -> 7.81, CompressedData["
1:eJxTTMoPSmVkYGDQBOIZT35Yfnoxxf7rg5SVESdn2E/VP3qcX2euvbLxCr/Z
igvtLydu5LDYs9jev150i03iUvuEdIfsNaLL7MuSon42nF9qrxs2O0ZEYam9
xJal2zvsltg/WcSw8oPHYvuHjlFLZL8stJ/9UfDi1qvz7SuL4gymnphl75mj
dvd69DT7TROjZ0UET7K/EH37xLTF/fZFa9Xa5wn12Zfyne0uTO+3l0p71yn1
fqJ9DNustJsHptif+yufIhI9w94oT3H9pqlz7Pdst/RQiltgn65TIbL49CL7
9sUrZ1rGLLW/IsBvXZmw3F5W9tz1p/wr7Jsm7Dp0JWyZ/drrE9bYqC2y/+7I
vU5bbpa98+/qhR94J9gv4br+fPfnJnvZ41P63joX2x+9pQP0UYp92eY/x+y1
g6DmO9n7yOWvz+QxsQ8E0ypQmsWeAQoAwZCVcg==
       "] -> 8.45, CompressedData["
1:eJxTTMoPSmVkYGDQBOJEoX8OwU2T7Zk1t77NzJ1uf2HXQZGfa2bbJ83yYXxm
tcC+JE6DX239IntF77of7IxL7E/X8Ek+y19iH/bmxc2Xrxfb73iQq1AqvNje
LD93I7fYInvDLctfsBsvtE/Xvb5Fim2BfftZnVSXqXPsQ3qu6ql5z7AXnnTv
bub8KfYnCi+pusROtK/93qtRqddvv2nGD85oyX77a1pFDo/2TbD/fl6jrn/N
ZHvHDyZmW99Ns688IqbAwTLbvvhixUH+GfPtm8VPaB4RWGQ/0UOy5fzOJfbb
GqJKNxYttw9QbJtwYPpKe57j1VMcvFfZLzIxWH7PdYW9S0XzN/fli+2PTVmz
tl9sjv3kC+kuSUUT7TeVyjXxJ7TYr/TnlF52ssRe+yBnF//xVPuLz2O3eysH
26vf41hjc8bZ/sqpuKlycqb2N8G0KpRmtWeAAgAUdpFC
       "] -> 8.7, CompressedData["
1:eJxTTMoPSmVkYGDQBOKHm1gqs80m22srRS6aKT/dno3bX9E5Ybb9vsClO5bw
L7DfuYRfgKVkkb31y7LKJTsX2wt8j43dIr/E/qPc2Xy9lsX2B28Vdz+dtch+
0jSp5XM2LrRXuan7Sf/sAvtTgRJ6Hjrz7ZdcZdsg8Gm2/QWl0jUeN6bbz7Sa
be4XMMX+5zORa/bGE+29XOzP9yv1w+n8xdd/L2WaaN957pJDN9MU+50NHlZL
kqfb8zlunqPSjnCX+XSzjd5Zi+wZDikX3uRdas8/h6M25/Jy+/0qJ0+FMq2y
V1sTyPJw/yp7uweJiVv3rLA/6Z4muP7vYnvX3QV//KbPsZ91pk6p7sZEe50t
Nr0nl7fYe/WcrfJ3LrWvvqAWP0Mnzf4ds/SmvQXB9m/BtDOUNrZ/1arRLaMp
a8+ABgC9043y
       "] -> 8.72, CompressedData["
1:eJxTTMoPSmVkYGDQBGKf3Uf3P78wxT7WfPrKw1tm2Iee+z4t4e0c+x5fkMQC
+0THQwf1mxfbn5a1KNLhXmr/1ezETLf9S+3jtRjaLFOX2psKFsTJb1xi/7ri
/pKIs4vtFzzwez3x5SL7P/PT16xsW2i/sOvh+uV28+2Vv9dVRbjPsn+ixnTu
tfI0+yurDJ7wO0yyn+d/TMRwc78925NONt2EPvtTiwuvH/zUb2/Yt4hlhdck
e+NrIYdXqE61v3gkTlvl/gx765dtsxSd5trzvfYQrl67wF5LIufcLuPF9kFS
VrvunVxqLzyf7cOfC8vt+4/Fsp+uX2E/Z9Op4qVrl9n3FYqoOoQusv+cvkMm
sGaW/Zk37u8V/SbYFwZ29HbJNdvPXWocIB1XbH+4ecWdfW0p9pPW6B/Y9iDQ
PvaR73GLLif7/p3HHjsYmNp3gWlV+6lgmtWeAQoAAhCdXw==
       "] -> 8.46, CompressedData["
1:eJxTTMoPSmVkYGDQBGL92wpLCjmn2Bs9z3s2/890ezmrOvHd3nPsl6U+rPk6
bYG98JoFcddFF9tvP75Usrt1ib3opuP1efxL7XuPOnGFTl5i/9RS2Wbj2cX2
1xIkA+uuLrKf17omTPT1Qvs8Xg7hiJUL7JetnCa74Mhc+23JNz1OKs20n756
XuAZi6n2bn0WU95unmivL7leudW2317NOPgO74w+e7+83F1n4yfYl7Ddvb7q
6yR7316Tqus/p9ovmetxu/DiTPsz1vclnyXMs//1xkpHt2KhvbC+yftFQkvs
BY86/PXctsx+sdRWr2VXVtiXrjDXaOhZae+1YO33TQuW228KTHnKbLbY/suW
9vKdMbPtI0JOMrqyTrRf0H25fM2TZnsJpUeT4lJL7OfO8/na3p0KtT/IfruL
UOf+Dmd74xPL1aYlGdlbgGklKM1kzwAFAC9BmEg=
       "] -> 8.5, CompressedData["
1:eJxTTMoPSmVkYGDQBGLuh3bs365Otlfh2Lsq49Z0e8MV/bs/i86xn8CWCUQL
7BnuTzc793qR/adLzx+quSyxvzY93GzrkSX2JZksqj+sltinWqmc001ebH/n
3EyH6/mL7Cc0ppxz61poP8V4kdjKsAX2hXmSs+cYzbUvDP0k83P/DHvv5See
zfs0Bapuov2vkPlpxu799iLJ37qZbvbZO5vox2xbMsF+1abXXy18Jtt//Sr+
xLNkmv2EzZtO9ebPsufibKnf+3eevdN6rVnfji601znCXO6VssS+X7S9S0tu
uX2IVFJhu8NKe/3W+J0Xnq60j/15w77n13L75a2b8qfFLbb3eyyfnjp1tv1K
kDdlJtpXTbNdPUujxT5lqzxPXkuJvY79/y1dran2+yZzTk39EGT/4PelY5Wx
TlDayP56pc0qsx5pewY0AAAmp5jK
       "] -> 8.38, CompressedData["
1:eJxTTMoPSmVkYGDQBGK+j7euudRPtV/i6W+yrmimvY6AUZnW5bn276Pmnvtd
s9A+Pa02idF2iX25YoNAxd2l9rp2+QtWbFpmP6FVeAFn2zL7y/Ojm5KeL7U/
xDKxwZ1jqf2ptYpJSQJL7FuyMt7WL1xk3+T4Perb5AX2ralzQrvPz7av1tr5
banmdHuO+xlcL59NsjcNXcvyU2aCfdWf6jPqXn32Ylf5K5Us+u17hX+em7Vy
or3l8n5NHosp9g3Cuwwqtky3P5vxtHDb7tn2yQcjz8uvn2+fYstzoVx/kX2J
hLuW18Ql9knHVNNFGpfZH9ZlEr4outx+/vcc/tnhS+2/K6fFFLkttK/I0vSP
XTPDfuGnBeXLWvvsXQU2bMrf2wi1rxDqriSouwLsjcG0g33H091LZE5p2NcI
V08K3S8LpxmgAACm45HF
       "] -> 7.75, CompressedData["
1:eJxTTMoPSmVkYGDQBOKZD9SvfT862X5h39ndzFun21utuDRVnG2OvUHAuqOn
qhfYG/GeYRP9sMj+THNGoFTAEvs7K6Iigy8usd/tcnD6Uu8l9uXvN1uvqVts
X6csN1+5dZH9g0lnFj1auND+qkiWanPqAvv5iZWb90XMtZ95tqP+3ZsZ9koS
sukdilPtrc4JOGvtmGjvXqCrG1/Rb+/V9ejerN999rItOsY7tk6wf/qtMo8t
erL9an+hHxK10+y3/N1+VyVnln0+h2FQC8t8e1/eHX/m7Vlor7F/zcfEtCX2
9z8FFVuzL7dfVR+acFR/pb2qvPGhXadX2vNz7hQ9cH65fZrt86ir1ovt7f2T
FD56zbZP+fzO4S3rRPtZYP832/ueumr70qDE3n1a9q1CrVT7ZR5/5jy7FGiv
XL9zkrChPZTWt18MFle0Z8yteh25R8qeAQoAWjuZQw==
       "] -> 8.41, CompressedData["
1:eJxTTMoPSmVkYGDQBGK5xRbXDbsm2ys1bpcXqphuL1TxW7Fx+2z7d+0s9+o8
FthfCebWtt26yL725oKT03mX2D96C5JYYs8GlH3wdrH9vr8TDtzmX2z/e5Pj
ZH3pRfbrk0WeW7kthKpfYH++tOdRzPE59k9Ps/nuy5kB5U+xXxAV8XJl60R7
RbCF/fb6a75cOeTVb3/Ey193zZcJ9gKce4AmT7Z3Appq8nOavTOYnmUvdXRn
X+Cc+XD7AnRBGpfYLwV5o3i5/SzeWTU3F6y0/5LarBZvtsq+HGSdxgr7RUDX
zKpZbC8J1j/bfqc8yOKJ9iz59iofvjXbv7ByK1yXXGK/6RLIw6n24GCQD7Kv
BNNO9sY/QRZq29uAaWn7WrC4kD0DFAAAo0SZZw==
       "] -> 8.55, CompressedData["
1:eJxTTMoPSmVkYGDQBOISjuCe5T+m2PcKy66c/H6GfWT3GbYo17n2bnnKxVk6
C+2tfIOZpz5dbB96oTDWIn+pvfZ7kT+rDJfZL72b4d3+aqm9TL8fs7/ZUnvr
roOzVgYtsZ+df3kfd8xi+1uL1FuvMi6y9517qCyebYH9qssrZ3k/m2X//4In
M2f7NHutDXLFKrWT7J1ahM4G3u23375bOuyDX599S97GyMhT/fY7dW/sC+Se
ZC8V9CDb6uQU+7jq0sYTWTPs+4OEjaSWzLFXqv9euzd6gb08+2IHtpOL7LPi
r0d2uiy1v/r+zcJqz+X2CzSWle1+tdz+3+Tb2V8kl9nL9B4TvPtuof2/qcmx
aYkz7bmc3xdlLOm37+HnPbY+ocn+38TgqqZLRfbRhxadlLiTbL9t8+9+DcNA
+4WJLNpvTjjaG89ZILi2RMfeBkzLwGkGKAAAsN6U0w==
       "] -> 8.41, CompressedData["
1:eJxTTMoPSmVkYGDQBGLOmcsz9LQm22u9PzL7ufh0+60bOV5dTp1tr/RwYmC5
9AL7uT/c2NqLFtmXymcvl9622N7FfH2LAecS+6LXBgnL4xbbsxga33KtXmQ/
9WWaE3vTQnv1PebnmrYssF/gcqR2Gu98ezk5fVb2Y7PtDcIttS4cm26/Roy9
ry14iv3PqucP9Dwn2nNvfDXjZG6/fTFzyQSnRf1wcbd7UruOe02x17OdwyY2
e7p98PHPDc4PZtt3LfMxF7ZaYG/hq+mytH6RvdRFFpEXZkvtU3vPbH/5bbn9
va4nHvZKq+w3eE6Jfr1tlX32Vwe3S0tX2Av0veL48m6x/ftDjl9+6M2x/z2l
heVlyUR7Ef/Pia4xLfZ1V7ctMHpRYr+Tofec4N1Ue97ndZdj1gbbW9z6Hto0
1cmeD8w3to89W3Bjea2iPbvJyiPVNlL2DFAAAOQflgA=
       "] -> 8.67, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAABN6YBZaoKSP6pnCjwVcJY/qIlfIzummj8Y
IeaRGUmfP3OK0H2+0aE/EDDMz4vhoj9Vdsuy2A6jP1l0m2WGR6I/33EfhV9O
oT/Z4zwFSF6gP7zDGXDrLZ8/9uy7LGAXnT82FC6cgjmaP3o5cL5SlJY/0Xev
bFakkz+bKyCiEiGRP/6FJFBFEZA/tUFVukqrkD8cu+bbp6aSP2UhC1nIQpY/
2rZhelQemj+Rk0+l1oqePxksbDXnUqE/GL0WKfptoz/9N4wE1f6lP+4+tBJ1
uKg/YUT4Zpfcqj+B6A//5larP3fLstgOE6k//Kd5N2tHpD/46yMGt7OcPznQ
g802zZE/y3p34FHPhD888KhnCjx1P8J+13r2XWY/Fr6uT6PRUz/UdhdGrUBD
P1kFRlmZYjQ/XyKjf3GmJj9T6OgywR4iPwAAAAAAAAAAdMSWAA==
       "] -> 8.88, CompressedData["
1:eJxTTMoPSmVkYGDQBGI9Wan1Sv8n27dVFe+t/TjdPrv7oZWQyxx7vbPxx2Xn
LrCPOSqvWKi92J73/tSbz+cusZ+oobmG13ip/fI/2k9NTi6xZ36oyhz8a7G9
d0ya5GS+xfayPc3GToaL7FeL79arfLDAXnFJf1wwxzz7/R7HKpOLZtrzFrcI
Z5ZNtQcaJnJq70T7++rtm++69tvzXOhR1Snqs18g6R3xxGaCfclMpagZByfZ
d+29X3Vk51T7h1KWnfJrZtr3thruu6A3zz6d/Yhnk+tC+4/lOb9L7i62v5rw
l4W9fpm9tO6B6Y2LV9hzRXw9qRK/0t7pWu881rrl9pUzoo4mCS+21wly9X3s
Odt+T0OJWfjfCfaHrSv8l95otmd/EJsn61Ni/5fzNHd3ZKq9yLYPF9bbBdsL
g2ln+4D5l67dvGZgLw7mK9srC2buZL8nY88ABQAtTpMW
       "] -> 8.61, CompressedData["
1:eJxTTMoPSmVkYGDQBGJnLeXyEJtJ9hIdovef2E+z/56Z8Wp//ix72cumTSHv
59nLxARa+y9caD/xs2+o8aJF9v9KFVuO7Vlk/2fRilez3iy0f+d9fq3KhwX2
9d+anqayLrCf6bGQR6dmnv2DGYlyHYVz7LUjIl/cXTPT3pP9vAqn+TT7w64N
Js2Zk+0n9/OUMEpMtNesKfib7jzB/mtv/X9Pton2Lx1uXosxmWwvN9fulKna
dHvlqlflrxRm21cnFYYunj7fXmkeY2/J9oX2uadzfVqXL4aau8z+oMveQpcb
K+w3bk37bvhhlf1lx46HgqWr7fn5Xvgr2620z4oxm9KduMSeSbWZI+PbHPvT
yu+XlH2daN/7Irwu+1mL/c4fN7mnTS+1V+Ipa9LPSbN/dnGhXPK7YHuWHRev
vr7kZL/ryqFv3Iz69mpg+wXhNAMUAACHBJWL
       "] -> 8.98, CompressedData["
1:eJxTTMoPSmVkYGDQBGKp0/2z28om2VtfiD80I2Ka/Z7ZzGEBNbPsBeI2rjz/
d579iSmr5h2esNC+5/fRdysmLbJ3rDxxT2rVIvt7Nxp+33q50D64i+Eq27cF
9rPXGF5Y/HG+/Z0Fl2uS4ubZO2dafZNqmGO/pHZn07wlM+19rQ6tEDWeZi9f
X96xu3iy/d5W1q2vVCbazzHqyvsVP8He4nVOtbfeRLj8npfrSvXip9vvlNp1
3q1nNtz87BVeK3acXWh/aJL4pA0bFttPaO9zTdVbZn+0nOvm31sr7Ll+lNyp
eLzKfmJOY8+miNX26d2rHn0SX2nfLL8/+7fxEvs1KfbX/q2bY//B6fHD8CMT
7ZniZ634trvF/krokox9kqX2mTdDmS7+SrVf6+doOjM82P7bt1Pneg46QWkj
+4oiA7NgJRn7X2C+kD0DFAAACtqoMw==
       "] -> 9.16, CompressedData["
1:eJxTTMoPSmVkYGDQBOJzLZ83/Zo+3X7l2i2dV7Nm25ukPeLqejLfXmP522uv
Fi+yz/TY/fLu3KX2ykLParrmLre/J3bLVu7BCnvJOcGKe8RX2nuscX03f/MK
e5/nfDLt35bbV95aWML4bJn9zIi12w5aLrU/d/BSFtf6RfYegX9qhNjm20/7
l9flUTbTXsEwulpGboq9aYRnwoKcCfaF6gaJyp699hufFxWtONxjX6qmKsMf
32/v6xTRK7Jkov0Hhcx1Fk1T7EPszfddfzrdfmcs67kyz9n2Gh+jvpz3mG/v
A1a30P7iPcP7xdGL7e8E7/yq+32x/d1C5fWrexfZf1q2yk4yZJ49O3fF7TU7
p9r3ddzRq/rQBdVfD6Xz7V8r1VskhiXYa3xKtXxi5GtfPffQno/nrO3Pepme
UrdXs5f6sfx67HoFOM0ABQCQi5va
       "] -> 8.34, CompressedData["
1:eJxTTMoPSmVkYGDQBOJ97HnlEQsm2e/gOf5i68xp9o9ehp9XPzHL/ufEjuXx
tvPtU6cJ1Kk8WmjPfsZR/fv7RfadIFGFxfaNli+e/ItdZO/52ULcK22hvezi
62m3qhfYb275oCzoP99+q5pa6C7FufYqDluArFn2Rf/1UtNXT7MPcQ9kfrZg
sv167fpj4tIT7UHuYGCYYH9jqv3j7t4J9h5K8+q+1kyyf1jWzqrFM80+DWz/
TPuUoKXSl2zm2V/mzZR77rTQnru5Ntg9cLF9zsTtQJcvtXdsPbhv5eIV9o/B
7l9lH9uW/OWWz2p7XlWQi1baTz0jdKjfZYm9OtBVZx/PsReZrHV3wrOJ9vtS
LdzWn22xv8khsLbTs9S+3aS/eGFKmr290Mcvq58H2zuAaWcobWz/Yten9JqN
ivYxEm9mW3VJ2TNAAQBoGZYr
       "] -> 8.76, CompressedData["
1:eJxTTMoPSmVkYGDQBOKzO/TbF16aZP9/lvUL2+PT7BOVJy+z+jDL/vBGr1Tb
yvn2T2qebjn0Z6H90z7WbVdkFtuLmAYKmwYutnc8sya/beoieyGphYJSCxfa
bz5SGRawYoH9mics5sL759un+BqvTJkw177iw40rKatm2YvnPRTLezjN/m+W
9VPe45Pt5/5K1tCUm2h/ZPuqVOeb/fYOK3Jyk0In2D+uF916VGeS/YutpTt+
90y171v9j7HWZSbcPM2HbfZ2vxfYF1REnH2judi+ZNGP82KnltrvcYqKO9ex
wr4SbN8q+7f8YvtCdVfbx7NuXiIjsNI+avul+ef0l9gnOxaviLgwx34em4qm
6b2J9gvNVHRS77XYF8+ZcV4gq9S+uzHuf9CSNKj6EPvOwLg/Skuc7R139eSV
lBrau4JpRTjNAAUALouaXQ==
       "] -> 8.98, CompressedData["
1:eJxTTMoPSmVkYGDQBGJZNzX39Pwp9rl+E0tnRc+wD0rzWjlx1xx7Za6Z7vz3
FtjveCyZ9q1wsb13BOMP769L7Jn1ha+unLPUnl0pqJrNdqm9AMeF4/trl9i/
fGG813zGYvsSj4sx8isX2a+6PeGsdvxC+ybT6ZLfGOfb7+s52bVKbZb9kprt
kaKM0+zbKtOalK0n2a8OMVape95vH2RQe2jL7T77uRYLD36KmWCfxlV9t3z7
JHuB3MyQwL6p9noFu7SdQ2baf+c+nvD6/Fx7jr43Hgd+LbBnSX2wu616sf10
u8RbufzL7LldYo+L86+wL5+5wu/pmhX2s6dZ8sYcWGavs8tz7Wv7RfY3OMo6
f3LOsm9fb5zJIDXBfnO3ozHHwSb7B3NlnrxxK7a/vn3edGO2FHuVfKMrC94F
2iuDaUf7B3bOBddeqNtvnsHUu1pBGUoL2zNAAQB6fpFP
       "] -> 8.45, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAACm2j3rz3OTPwkCRuRocJc/xnP0v8nNmz/l
58bGK1OgP+aVk61yv6I/c89FofoapD8Rn/plwZGkP4kvAZKVAKQ/6fpvvaAk
oz9eJprZRi6iP2+8nKqFSaE/EKg9qGEeoD/XUudnIfCcP8yrzDH0iZg/KGSS
ZorclD/gZv596I+RPwcmB0DMjI8/lnulbGlGjz9jp2IiivGQP8lPM2RmsZM/
deLul2/slj8mP2Pr1PGaPwYmB0DMjJ8/1xt9FUkCoj9KdKvP8rSkPxSyo1w2
Y6c//prYQrSEqT8uJQhERhqqP+CmqxJhCqg/ZFUvCdFdoz/yM2uh/5ibP4Uc
WJsgL5E/7cQo3fzugz/NGeyDwnt0P+hDYJS5K2U/0pq0zAU/Uz/xRfElQLJC
P1CRuno8yy4/Mpxq2LSYIT8ynGrYtJgBPwAAAAAAAAAAaEidOw==
       "] -> 8.58, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAABWUEf5sWOTPzXOzb6TWpc/FHGtZizAmz8P
BEEQBEGgPwBoXdUrq6I/bu+aZIoApD9vFPRGQW+kP8ON0sOi26M/9k8589EC
oz99sNeBGQWiPxyLcJmCNaE/3pmShaP3nz+A05ET1KacP+F5SCTpXJg/xNeE
iBC5lD+oWhrP7oORP3JcB7uyf48/x/o+Gstajz/RBF0cxAKRP1d1oNto0pM/
tDuhTTgjlz9o6ovjjSybP/LuMywOt58/9AWHLmQloj+aCOlYhMukP+Avll97
f6c/r9w613CkqT+Rb3VOrDyqPwEMZ49kM6g/OL4ojjaNoz9/id9OZsmbP3xm
Jb2rJ5E/2AfNTMQJhD/YLCYve3h0P9x22PPoVWU/LFxS524HUz/X4nNqDZtD
PzxASZa4rSs/hNUwZNBzIj+E1TBk0HMCPwAAAAAAAAAAHdaWGQ==
       "] -> 8.79, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAADDBTMH57+RP6CK9Vqz2ZU/OPAyxlYqmj8L
TJmv+EueP3gSih0fyaA/TEQ92DhSoT+bjB4rjBOhPz1HvWxvLKA/0FVwMfp6
nj/i/eCg7NOcP3SQo6m3kps/VWtHBdYSmj/nKGbb7wWYPxZ3R1ewe5U/YxXh
RKGlkz/YLI8O7XuSP0TFKNNw8ZI/sgcK/Vb+lD8i9DKMn6KYP+SnKAZPa54/
v9tWa6opoj/GhB6f+iKkPxnMf8A7RqQ/Mh24Y36YpD/NLebSShymP60yPV3x
NKg/kGFwg9TjqT9pvf/ZKgOqP+Ip5gwCpKc/5lRrRwXWoj/CA+HJWYiaP3w8
ZrlbX5A/O5zMaEb5gj+eCwrDn3ZzP9nW1nNPE2Q/TRnhCuodUj/rqaOwkKBB
P+upo7CQoDE/dGeZGfaVIz/F2FuPVlb/PgAAAAAAAAAAxsyaAA==
       "] -> 9.25, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAAB+g4+mPvSQPwUP3WPne5U/FKpSwp6kmT8G
yZMrtEWdP7/QIfLR1Z4/0w6/sdc5nj9Q4E8dSrecP1LBCCrL1Zo//0xrSuU+
mT9bosT7gBSYPwMuJFdmXZc/qbmDskumlj/dc1gsKLKVP9tUDnR0sJQ/zhZ0
eaNslD/30EJpFjiVPyXJpcnwBpg/1u93vlhYnD/CmkjTn0WhPyiqXtZxJaY/
/+szoH6wqj89A+oHq+GrP3D/q3M6eqg/U8VkcEt/pT+VvdPk+M6kP/xvDoTk
yaU/5rHvYcTVpj9EJpPLE62mP2mDg5Jrc6Q/oX9Iwy8soD8VbMEWbMGWPyQm
gS3X64s/v3v+GuxDgD86bNZ53aJwP1XoCm9/KmE/e7loxXCETj+8ko2BatI8
P3we/LVXvCc/A2yyPWQgGz8DbLI9ZCALPwAAAAAAAAAA/yeb8g==
       "] -> 9.68, CompressedData["
1:eJxTTMoPSmVkYGDQBOKTS/7bymZOsL89/ckrS82p9mcCP0+61jrTPiGhXufz
9jn2na+NhXSezLFXXD39wNzns+wnc2z7abR4hn1/5IUj2mum2Wdt8X/7M2qq
fYK82arXHVPs2R7E5sn6TLHn5jx7r9Jgiv3tkJUdT+Sn2GcXinQvCZxib8Wg
Mz3Fa6q98qOnM+eenm5/3llEy7htjv2J51YLiooW2jvHf/gwc+lS+8VNXNGK
j1fbB8/4fb5h2wb7FGFPxWnJG+yfbKxmOrNgtf1fNoGbk5iX2R/P3Zgi27oY
Tpcd/pQdK7XE/srXJ3rrjyy2f+vZIOq/a6H9NuO1U/nZ59h3p6/XPb96sv3a
qw+1GSU77BvCpM7LCtXYO6ivVC8OybGf0uAbarUt1v7NWZZfqz952TsvNEo+
4Whl/869z5TxgYa911TXW0UyYlD6mx0DFAAA2WOYdA==
       "] -> 10.43, CompressedData["
1:eJxTTMoPSmVkYGDQBOIQK0H/q8sm2H830p2cYzjV/vf1VZ6zy2bamweZC8cv
mGPforf+pPqyOfYC94Xfnps+y35TfNIZF7sZ9ss+tS42jJtmf0vn2dT3HFPt
UyqlG1R0p9iv3fVEVOznZPujqrWfdj9H0BtDJ5u9NZpif+/4lG3HnKbaVwRf
uej1drr9JS71hg+r59gzxO+2OzxzoT0Li+XXj/eW2lf/COyoNFpjv8Xk9pLN
vzbYiz20EffeusE+OjwmS/XCavuazNnqZYrL7MNX8MvNr19sz3Vmevq1ysX2
7sVXmpazLLFXu3QvJXjRYvvNTc4dvyYvtC8+9MXt9L7Z9m+PBmRFBk62/8Ja
6xh/od2e64Hp5NYJ1VD7cuy/AlVJe8Ta6zyNeuV9wMu+LTpe2pTdyt6br3lx
nZ2KvVaTb/iE1zL270wK799UYrdngAIAT3+ZXw==
       "] -> 10.72, CompressedData["
1:eJxTTMoPSmVkYGDQBGLx4m065Vcn2LvN6FRcrjXV/ubmF/qV0TPtK1+qGXKs
mWMvXGTz70/uXPuDYu8+NIjMsdebMDUsTnyWvcDG7HwZvhn2d+Y7XDXqmmbv
u2H1w4mtU+2Nnz9rzxCaaq99/sjx2u1T7GfGXdxVHDDFfsn3wCnHeafY9x0N
eCg/eYr9NtvfC7dGTrP/PeW8Z6/mLPv73LWptzfPt2e4tvttXd9i+0VrBA8b
Oay0f8ZrNWNtxTr7Rz2361zE1tsLBzU7O+avsmdrfqIoKbvMfv8BkMOW2Dv1
VBw0/LvE/o5IX5/a/qX2kiuvlHhnLbXfLGjY3qK72L7qf/c+Bad59hc+ROUd
M5tqrwP2R5e9OCfD0rq0OvsjTju4Nznk27/44WfJ75Vgf8HNqDDslI/9JTBt
Y88aEcvt4Kdnzw2m5exthDcummnHYc8ABQDzh5ID
       "] -> 11.08, CompressedData["
1:eJxTTMoPSmVkYGDQBGJfa/7tS25PsC8PX99wxXaqvWVH8Dzngpn2r+V5Et5v
nmN/5/rfnYLRc+1zy2Vb/7yYbR90/aTZ2ocz7S3Ny17E3ppu3xQnXpwQNs1+
5imdN2uip9q//WGaaf1hiv0XGVubVXOm2Cu6uT7RsJ1ivyPK0yKDd4r9OXGb
9FkrptjXnpnMqdkwzf6PmG3A87JZ9qvCHu7ey77Aft/WvrDd5xbbL7UR/C/f
vdJew/iupPjNdfaybiKTehzX28t37dq9f8oqe8li6ePz1ZbZy205WPUxbYn9
6dYdf5MuLbHPN16xNnXiUvuDM96X3rBaar+mS37iAc7F9u+Zcut5FObZ8+Vs
viLMN9V+7sPTD86c7LS34s3X1OGos+d9kta4Nj3P/m2wl+mnrfH22iXNZzMk
fe1ts7fsTbhjBaW17Ndu+fo39IE4lGa3Z4ACAJ1hmik=
       "] -> 11.06, CompressedData["
1:eJxTTMoPSmVkYGDQBGKT21HdDA8m2E9IneFT4jbV/rXjot9LK2bab5hUdjh6
9Rz7Ny2rJJb9mWO/9AKPS6/tbPtS7rzkYK6Z9p5fmKZGc0+3tzOaKdo7d6r9
w1fJhZK7p9gv/aEvcz5zir2Y6snaaOsp9j+09YO3CU2x99s9dZ2iyhT7VUyn
g6ayTbX3WmS2fK79dPvlOiUZgstm299T4rPc9mKBfcgcr3cct5fYL/Ler6H1
fpX9gitF+5/rbbBPT+9pZdDZYP+zI3LadZPV9k6pUs5GCsvsW6s8rh37tNi+
XaPmBYf6EvseI3H584eX2JvIJa9gSFlibz/3CNd530X2MRudq4zOzYG7Iyxl
gVrO2g6oP2vs43lXz9tmlmvvc63q8/3qOPuguby8y6Z42weDaWv7qwzXJTkV
texPW7owOHPI2t8/nml83pLdngEKAG/ujbE=
       "] -> 11.19, CompressedData["
1:eJxTTMoPSmVkYGDQBGLpC9t/dfydYB9/6EVvdMpU+6uTdpab9M60F77DuUdt
3xx7zquifC+i59ovefb9QMvF2fbfbxYruu+aab/PkkXHdP90e8W7IZ1iDtPs
FY+kWr62mWr/683OCcp3p9inAHlPJ0+xZ/2y1i7Jfor9GhApO8V+7zszm81b
p9h/7VtmeHTDNPvb1rOOiRyeZX9WMWHlT9sF9jLSra+42JfY+x53W7jr0Ep7
2bSgWz0C6+3PcBRGnrNaby/waNOc0nmr7K3PLNkiqbjMftO5YDvPgCX23l6z
BR9tWmJ/Ma1lh076UnsZkxIrM66l9od8QBKL7A+cn8dteWmu/X3Tj0+PPppi
35gbXy49r9O++aL09hOrau1nCIIMzrNvZv4VJr8x3j53YujuL/d97F+U5Iis
0rax3wH0VUinmv0jMF/Gfh+Yz2bPAAUAxiOaAw==
       "] -> 11.28, CompressedData["
1:eJxTTMoPSmVkYGDQBOKslk8LS7Qm2ocfF2jaXTXVvn3u4Zi4xTPt5y9et/zq
pTn2ioXl0zIS5to7+iRYMh+ebb/lt+LSLXNn2jte4V6+bcp0e9+qfdO9JafZ
W6z6xq6gMNW+1HOmnOGuKfZzN7M225RNsT8mW/Tc3WiKfd201xwLpafYu7+2
unZr/xT7+LApzjpXptnv7lqapvp9lv1801VJoukL7GfsF57/0XyJvcyCQ3+/
8a2yr8pP/Sfqu97en5tB42nhevvoW98+6h5ZZb/KrFrjB+8y+8YJT6qOWS2x
335HV7J30hL7oMty8wpsltp7PTX2YLi/xP7yYZUbd7Ytgvtj8fLvae1bptjf
Se3jPBDZaX/z5YftBz1r7eNWr+6aL5pn/9tG7+2KW/H2hyU1NaYF+NgfAdM2
UFrHfj+YlrG/X/r0idpfAXsGKAAAKnaXqg==
       "] -> 11.29, CompressedData["
1:eJxTTMoPSmVkYGDQBOIvSVxGyQsm2Lsd+2poGDbVPrPFUM5u/Uz7l2ITvzjf
mGP/8WX1NK71c+yPnpvgeiBjln2SNbf9u3fT7VWqvFaJ/Z5qvzRWTXDW7in2
3CccJ538Ptl+k8P7+O2XJ8P5zF/DPjApTrH3vnb5Xvv0KfZZM3Yt1r4z1b4s
/VdO9PEZ9pcT7jInvJxr/2e1geDmhEX2sxnK18ScW2a/S6e+3r1grf0U90XL
l2RttL8SfZC7JWCD/YbbLz19+NfYO2wTb70lssze5Pn13as0F9vry8QU9H9e
ZG+5KZj9WDyCf13uHMOXpwvsr5sX1+1dPct+Uh3HbOH+SfYNR1ZenLGlzf7s
wurnbfZV9ps1djMa786ybzKzMuveFG2vtnnSHf4qD/tM75evXQzM7V+Dg0HF
/hmYFrH/AKa/2DFAAQDnPZwz
       "] -> 10.8, CompressedData["
1:eJxTTMoPSmVkYGDQBOJLTxq+vzs/wb64xS/ZIH6q/X8vKe+9G2bal3rd3W9w
d479zgN3H8x9M8dejrXSPuPVLPuUrjTx6MYZ9j4n1pjldU6zT5u3KIHXbKr9
45VuRh8jptgHn3qf16o6xV7U3fX8Sq0p9jMcPvR/Mpliryc898r7min29Vm/
UoM7ptp77+MTEtWfYd9k0HkomG2u/S9ejnKu/QvtU2cGn3vAscy+6HKkR13m
Gnv5ngNysUc22K+oFficLLDBXkiqbpXElNX2OT0r/Ytkl9k/Xjf1iGzbYnsl
I4eUnw2L7d2fOOck/VlsfyIte+uPSYvt1XZsmGRYs9C+T+Hyy/Ods+05017E
bdabbD9NZ4ubQ0O7vaSQ8r5rV6vswybUnW5dnG2/4Evr7fBZMfYT9A8sCBX0
tP+TtrFho7K5vQnb59DGiSr2+mBaxN4STH+xY4ACAEYZlpE=
       "] -> 11., CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAABRaJjVAOSQP3X22o+0U5U/uHiw7xmKmT+k
PG7kpMucP+KVw+xqKZ0/LZadb2Npmz87wBiR6CGZPwmFZA5dI5c/Un9RQ7C2
lT/4wDnY1cGUP5r2R9Gwc5Q/GjjDJNpelD9bGvwhmD+UP5t5PngDSpQ/NhqP
4JsflT+mrphr7XuXPwmcHXwM9ps/gU0RWRMLoT+G85oJYA2lP8/Lq2g+G6s/
VnRycUs9sD8yuTB5XZWvP7/U2Dw4Dqs/8KiFoEAPpj9eIOlvPeyjP/3ME3Qg
G6Q/6clmrM+0pD8LQfD401GkP2rBgJzKIaI/RO+FNi2nnD8cPrByfwuUP58Z
29qqn4g/yDbu1/s+fD9DbI+P2tBsPzzX0f6X9F0/UhMUCg2zSj9dN6Ld7L44
P2hPVhWCcSc/c3++hKzWFD99f76ErNYEPwAAAAAAAAAAnDyY8g==
       "] -> 11.12, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAACbox67aqCQP0ooxgiMVZU/ELIJiF6umT/J
L9JRwd2cP3kUgwc+yZw//zIrMWWfmj8ZqyoEoCiYP75ULDowN5Y/5dimwtrp
lD/tAPwImReUP0zKXXSS7pM/yR4Z7PT9kz/Bx4/buRyUP6vC86kIeZQ/YFyW
BLqslT8u3/r/zX+YP3dDt9G6fJ0/UwAgA3geoj8ZimOCSnemP65n1zK076w/
LSyqLvsGsT8EDp/IDiSwPxdZjuRr9Ks/QQBxws0npj+etnj0mE+jPzwquJtD
LqM/Hs6SWVepoz9gDJu450ejP0q3AztkP6E/rUYQsV4+mz9dSTzLi/2SP04M
7Hc9UYc/bdnTh1Hsej/vs0zaa5BrP3KOxSyGNFw/5UlpkAIAST9euv6YsxM3
P1NQG09KgyQ/TlAbT0qDFD9YUBtPSoP0PgAAAAAAAAAA1xeRvA==
       "] -> 10.8, CompressedData["
1:eJxTTMoPSmVkYGDQBOLr2xepVJ2dYK908473meip9ofyX5S0TJlpn7pm/+HE
PXPs+WpdH71jnGsv/P3amXiB2fZ5zyx3mp2cYS/Xz5ry5cw0+zMH979WTZxq
r7J2kYBE9RT7yjsyn7pMp9ircIdvuq4F5GecNioUBdLTjl6c7jrFXim1u2eT
9VR7md3281esnW6/O/3F011hc+wbtyk90nVeaK84uVX7ZvZSe6Esj6gDHavt
mxemfuup2mB/c2dSxxuZDfbCM5W0FySstj9VuSL9gOIy+6pj9VcMji62V83k
Dpl+a7H9udt3LqQULLG/oCSiLMixxF7ToXAd38eF9rvX2rOtc5tjf2G6q8iT
85PtpVz1amTsOuyF7u58rsBYY5/KVZKqmJNjn7zqf/z7nFh70dDuPPkDXvY5
WhdLt2da2pevWtRdn6ZqXwSmRe1rwDSrPQMUAADEqpZS
       "] -> 10.98, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAACfqEiBX++QP3clDYBLKJU/jVcIBedsmT9T
9k8BbbCcP1U6aRveWZ0/vIJAC2bSmz/epqJzi8SZP/7KBNywtpc/pcgSUug6
lj/zj3qMqj+VP8YwjtR+1pQ/tJYq7ImKlD8EoqtAvTiUP0uCB66uFZQ/MAGY
+OihlD/SJ/8JFKSWPxN1zSxqqJo/I/rBWo8uoD/gD/H8i/WjP++e+c7Hu6k/
RGxRgTwKrz/jaHnRzGSvP7PP6O9Brqo/2rAXZJ0gpj9dHGuWo2GkP4l7V07P
yqQ/x3Sn7u9/pT/YyvG8cyKlP6F0lM+y66I/m17eokDgnT9li6mXVtyUP8Lh
GaRUp4k/isR6ukuUfT9vQwsFhiBuPzMWB7O4Z18/vcZZJdd7TD/ecu7B3sA7
PybLF/vtSio/qntqbQxfFz+1e2ptDF8HPwAAAAAAAAAAKpGfIA==
       "] -> 11.26, CompressedData["
1:eJxTTMoPSmVkYGDQBOIPoQbepxgn2jc0Lk5T0Z9qL7hWrKkuZqb9Uqf2F5FP
5tgXO9k5doTOs+899Ejk45y59r9ZFMMqP822N8lP9zhze6Z9KF8Hz3etGfZr
WxfIhz+bZp/i0/C2ymqa/Y7I2VsjZ0+1f/r+meCq81PshduM8n4xT7G/+WN3
ZcuryfZ5CtXNte+n2IcfZttkfmO6fVODmRJP6hx7G5fzSs+jFtqvSPFaBkT2
OgGvw7murLLXYXdpqxZdY99lyLjt9csV9pVJ6mVJ6svsDz15V3l24lL7/3dt
nL7OXGY/f4K/QNLU5fY/i+2/F9svt28GGXtnif3DlW28KfkL7F8IiYuc/T/N
/vKNSy6rJHrs5d5UL5cya7A/M/l+S01Tgb3W42X2DtKJ9pZbj/sI2fjZT30Y
x7p5iY29t1Vv2ZdSTXtXMC1pHwimf9oxQAEAZd2WFA==
       "] -> 11.71, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAADs7PeMGhWRP5uvHKsZM5U/kA7Oi7xkmT9V
ixpYQfmcP7jJQL6Dw54/WbyB8VBhnj8nIxKBKeycP5U/NSXMzJo/MgEPv4kC
mT9cOLD8kaeXP6EdMmMs45Y/5AK0ycYelj9VE5DodR+VP4CH30SBDJQ/I3og
eE6qkz9SXIWMbEeUPxTlGN7ku5Y/xKc9/OPZmj8ZnvUHKUqgPxpUF/0Ux6Q/
m+vhYv8fqT/Cao/d4JGqPzBKBGOAKqg/zc4v3joYpj+HMqMblwSmP/MQLzoZ
Qqc/9gTotCViqD/SefO0UBCoP/q823dMlaU/1bhzoY4OoT/pcMmB2c6XPydg
wJ8sNI0/YbTeB9PtgD+njRnpeUlxPzVAj6vHAGI/XzqCysxdUD/lbveznhg/
PxJp6tKjdS0/Xl3QEK4vGj9rXdAQri8KPwAAAAAAAAAAXH+WQw==
       "] -> 12.01, CompressedData["
1:eJxTTMoPSmVkYGDQBOI1NVySzvYT7Q2P80u89plqL59e5ToneKa9TOwtp5Ui
c+1vr4n3e6Yz376a6Ss7t+B8+2Mb9otf2zLXPn/bfKtFU2fbF+x+v1t660z7
L5mvwphcZth/FJuqrJE63X5vHpdvQsU0uLlrT/GfXvxvsj1zuda3srjJ9l8U
TNWkl0y2b5Ju7ctaN9Xef8/6F52JM+0119VP7F4/z35DWdLSs7WL7a+I/Y2d
lb/c/vae5Uf8dFfaBx78n8ncuNye5aj+iuuyy+y5jlzfert6mb2/6Nr+m4wr
7NWFSnVPGay0fyU0d8qq5yvsBfMvzeWMXGa/sXqTmvvchfalwlML8jfPsHeP
yjJ0Vumzn6sm6vm8pdE+tvrV1bl7Cu3tz/83feaeZJ+z5r/5+jB/+1wwbW+f
kLAqy+22tn0UmJa2TwfTv+0YoAAADeaVBw==
       "] -> 12.28, CompressedData["
1:eJxTTMoPSmVkYGDQBOLzhYfZTrNOtJeL9o13dJxq/zcrqeZQ1kz7YzYqlgcP
zbFXSzyabbNgrr2GSvoVxvA59mczKl4ZRc2y1zxurZcdOMN+grihUMSxafZs
URHTfu6YCjdnmen25LrbU+wfa16eeihziv2tuxuvfhGdYj/35dTFG9qn2Av7
dJmtM5tmbxCwu7X43Uz7uYd3/rP0n2+/4L99TWbwYvvoNVPMZa6usNdf+0yb
68tae5kgJueVU9fZm3leueqru8r+uJDJl4Oiy+xfKr15OmfFEvuf6WrfXKyX
2odb7t9xhnmZPQt7gBrbkqX2r5/2+iXFL7bfKDfv+ay18+yd/UpO2LpPtT9x
KJ3Lx6DL/vOOUz+PptbZbwDL59mv2vp63rsz8fZ7PzBVfs7zsS9Ud9O/+d7K
/uqUM7OXfFS3n5l/s8T6q6D9bTD/ux0DFAAAt6ab7w==
       "] -> 11.8, CompressedData["
1:eJxTTMoPSmVkYGDQBOJfVc8f6HlOtG9R7uNOzJ5qv2HRjHTN9pn2Cke1fp74
OseeT6XnxMHMefYBx4X/zdgz1/62W27Hbuk59j1b9PcyM86yZ96x5fYLnxn2
s6tmbLrCOt3+nqzCi9UR0+xrXjm/ebNxqv3kqUpenvem2PuJp960Zplif7fw
y7wprybDxU/XNG5fcma6Pau9WIKZ0xx7n7SZP3+6LrR3amC71imxzH7On8gF
31etsv/xu1s498Vq+yvdidUqe1fA5YM+zRIp6l5qX7Xb8tfZGcvsrWSDohWn
LbfvZE65e9Bpub15Tlv1/etL7IXUjtl1ly6w/7HYpNGOZzrUHz32lzZ6/L5k
3WA/w537af6iAntHjfXO0TaJ9sfLjqROLfOz3yC/a5/iHRsorWNfWbi0wGq5
pH0rmOa0Z4ACAMXlmfk=
       "] -> 11.86, CompressedData["
1:eJxTTMoPSmVkYGDQBOLjOsqF79wm2k9jPsyjnjHVPuVW0or4zpn2IX+vB2nd
nmO/Iutc81nbefZOXHkVRU1z7fn8/TY0n59t/82VNdDzzEz7V781GrgVZti/
KNhpe+rUNPvLn+4rXJSZZm924sLLV01T7Vd+03l+78AUexnVzieX/k22/7LZ
9a3ij8n21knn+08wT7VXPHZ99bR/0+1tnv7vD14zx55zm512Wc1C+9S4ppO7
4pfZR/CkbzvGttr+oTOP8Ff3NfZrvWpuGzOstM9Y3ThHU2EZ1J6l9rNuGypd
r11mn2n28V5W6XL7uPKWgDy55faRIst+1GxeYr/lt4d6SuQCuDv/fn1UvfJ7
tz279vkXJuoN9jOnFU6Uyyqw//ft4pxK1UT7eya16yNk/Owvv1pwT6rAxn4N
D09OYra6fU9F8KmnQiL2ZxYc4b17+JcdAxQAAOiroEM=
       "] -> 11.84, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAAD3tNJpYs2QP/tug8+ab5U/Z8l3zazBmT+4
Ogv21N2cPz0wkbRtuJw/J7MRMFl3mj9PloegLQaYP9F4xIM/FZY/bvrS5KXU
lD+uEDmC+R6UP9hQhyXq/pM/H+YX75kJlD/2pclLqSmUPwkQAPU2n5Q/x0Mp
r3jalT+yyunnMcGYP8nu0Pb32J0/q/3vpnJToj9TXaFFOLimP8EUbnZmW60/
wi5A9Qp7sT/UlyYvpaawP0FBOrEN8Ks/TN52Gdz3pT9Wx+K3JhmjP/DcD8i3
46I/aoxRtelLoz9NkkfjX96iP6aPbne2yqA/rKiX7vFRmj/ykoBwIl6SP334
Jz1eVYY/r14Il1zMeT96M652OjdqPxDd+TX2DFs/eYxG7IhgRz8COD1TjLU2
P0vr31iuByA/C48qIZNfFT8Wjyohk1/1PgAAAAAAAAAAGTWeyA==
       "] -> 11.12, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAABqNOWq2duQP6E8lL8AVJU/LWgXbvCWmT9L
p8N0HdWcP42s/N9LGp0/eE12n6tAmz/ul5zp7gGZP+oh8/C7/ZY/waTRgYGe
lT/HQww2CK+UPx1n4M/QeZQ/6xXGxeJZlD+XJ7ASRz+UP8l4yhw1X5Q/KrGC
Y7c+lT/EGnt6tKKXP5RLN5TSKpw/1zCp71UuoT8yCxKUV1GlPzxtDn7wXas/
7YMCBR1ksD+jJDppTgywPwHCZENiK6s/FF4pTvAIpj/WPNYaL9KjP3e/clDG
9KM/2SzpfXWEpD+Hc5GxBhqkPwUYRyzq7aE/LHREmck6nD8SHT486rSTP/Q2
1511Eog/qWnSwmywez/oOU1HbkVsP3vDH5jeRF0/MJ3VVB1HST8vndVUHUc5
PwgIWo8woCI/4HaLEVxJFT/rdosRXEn1PgAAAAAAAAAA4KuSBQ==
       "] -> 11.18, CompressedData["
1:eJxTTMoPSmVkYGDQBOJbHqsm2b+YYH/kx/pj7+2n2ic9lyrlbZxpn3a94ojV
kTn2So2N61pz59of+HVZV+3FbHsHG/lXm67OtE+/Z/6y49x0+5U7wlcXhUyz
T8ra+FYtZqq9ZYjQ53cfptiHCDglma+dYn8ye0mfWdwUe8OXec2ChlPsF1y8
8/zk4Sn2avWx7v5Hp9m3dR1d/u/sLHv37yE/jzkusM+Q38XNIbTEfvKb1u7w
2yvtvxhufGkuu94+Jje9oyJivf16lV6/7IxV9lN1OdZdk1tm75vcNWd/6BL7
8krN6d8PLLGPqX56USR3qf363ISTwVxL7aVUYjpcDi2y590iG+2/YK791nkO
1gwTp9jLiPpw90Z22t9dt8mF1a0WKp9rf/HEyS3lnPH2L6bMvjKpydu+Few+
K/sjpZJ+11I07c18Ds5qnSRm7wimv9kxQAEA6BqaYw==
       "] -> 11.3, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAACDy+OpS2ORP88NWzF/aJU/zIe/xrmamT+e
oCCWtSWdP7GHoL0lCJ8/ShjGoReunj8R3arAATmdP9mBs2A+Fps/N9e9YxpH
mT89lwVmv+uXPy697UroHZc/TyT9dqJJlj+8Ux+VVUiVP0YKLV5wIJQ/bl7I
Fxazkz9ZxGj6mUCUP+XU/tlBnZY/vtrrNimPmj9kJyIzdB6gPxbZc9a1faQ/
5BGxJF+2qD8gTcwFdSuqP5wZVPTh3qc/Y87KU/USpj/UClV+QSamP8Rt762H
cac/mTkwc4+MqD+bKcKzuDWoP4siZg2bpaU/fN5XHGD8oD94pdy7jp6XP7sn
DEEd/4w/dfHLjnSVgD864/Q4peJwP0LQgMaQSWE/KoRy6hbATT8ZqlrPP/I8
P2ZxPIoqTCM/2UH7YuO6GT+zQfti47r5PgAAAAAAAAAAHfeZdQ==
       "] -> 12.34, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAAC1O3hKFz2RP1rpHZGaT5U/LbzdKYNomT/x
9X07ETudP3y+enTlbZ8/S5lgIoBnnz+GCxF16xqePypoLo587ps/Qqif0jIV
mj85XBZM3nuYPzW20Qg0r5c/EDHw2Cm8lj8LOAl0KomVP1PwNiybHJQ/4LlA
3yBjkz8xvvcd5o+TP6vt1M9ffJU/K2k7CC4CmT9FoHm9gDSePy9rVfyQKaM/
WpLoZOz4pj+6hefcCK+oPzsG7pnhOKc/xXxVKxIZpj+4iXrnYZ+mP2CLz8nr
K6g//pbD1x1iqT+Ns2+s+A6pPzdgqVY3bKY/SP5oYpy2oT+apkrwqIiYP/Wb
wn67B44/dtDgkqxWgT9XRObHoZZxP1mXiOn2/GE/m0p1P/AtTz+VpDD8RWE+
P24oglufYiY/ecCUaEiVGT9swJRoSJUJPwAAAAAAAAAA+ECX3g==
       "] -> 12.52, CompressedData["
1:eJxTTMoPSmVkYGDQBOKizfuE2fUm2t+cEiNlYz3V3oV798alMTPtvePDzX4a
z7UXtMzsnTV/vv3B/5l+3bvm23e5KF4u655nf0EzUK84Zo796f9MOScLZtnr
9Zr7Zj2eYR8W/yHY/NV0+0v/M7Q8Xk2zf1Mr/85pwVT7xTeF56vzTLFXW8I7
faHJZPuqorNpT3Un28vzSy1f+3iKfaKcEdtVtRn2s2eElXJIzrW/Evq8bG/k
IvuwU0lKh4SWQc1dbq9+TuNX9+Nl9ut0HzdZKSyD2rPM/nRWqVXIzBX2G9/s
K4t8vNJ+8Yw9xu2TVtr/eeYh9OrZMvujjE+NX3Mssn/44se8fqGZ9lOYk1tF
TvTZP9Vsznx/otF+8odmrQePC+03zujY0NKaZF/x4bXB07/+9rWt9xVu+tnZ
r2CeemCCiYr9IjAtYh+//hjDwQ+/7BigAABDS5ta
       "] -> 12.65, CompressedData["
1:eJxTTMoPSmVkYGDQBOLY6931zSET7ZcmPSvaHDfV/t1bh7THGTPt1873TJVx
m2ufqXnRXubwfPtSbzsDgf/z7W0WytT5XJ5nfynPjWvn9jn2n0QPdcmcnGUf
37yj8pPsTPv3Yd8sl6jNsLdtU6u5rj7dfrtoV/TCHVPtU9X7TnwVmWJvNv8m
m5rqZPvNYfu4NMUm2ztGTFSOXDzFXnK75nWrbdPt2T8+m+7cPMdewqxjtvr9
hfZnjiqvymlYap9VNWt1V/py+xZ1rQTjucvste2dGM/KLrO3/Pq++S7ncvtL
Ega9jJdX2Bup9ZfVKayyX7Kbrav36kr73bbcDbcklturRHztlpZeZL98x5/3
Wc4z7atdtf6cutVnXyKdlpB9ptG+wfZyQDxHkf2ixVJK1nuS7HXFfu2cftPf
XuzpPv2dVlb2C8DiSvanWCea/fgpa38DTP+1Y4ACAFnqkqo=
       "] -> 12.67, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAACiWK66pFaRP4/HW3IaU5U/R01QgxtsmT/P
MFqOS1qdP6Tv08zQCqA/PB1if+dDoD+dp/IExn+fPxtrCLgoU50/ytAIcVxR
mz/eet41MqWZP1Eiu2UGlpg/97JQPE9qlz87/xAH9uiVPx0H/MX6EZQ/xJeR
nEPmkj9hU7yQoZCSP9MTHD3B0ZM/TsJpSBeNlj8bUoU73QKbP5saaerl4KA/
T6nmy8s8pD94Jg9+KUKmP22h+wzHE6Y/IGdN4+kapj9F7f5lLGOnP1YZMpUh
U6k/H5lT3IC7qj9I/fgRk3CqP0KmMMWIqqc/x95fPeeeoj9Av7NB1PqZP5hg
JGQix48/yyUu3opXgj/7xxjkW4JyPykjNUmJ9GI/rC0ZnY+AUD990vw3Yg5A
P6YYUfWCaCU/g8sWR1mLHD+RyxZHWYv8PgAAAAAAAAAAAnCVQg==
       "] -> 12.8, CompressedData["
1:eJxTTMoPSmVkYGDQBGLGOQcO70yfaN+3OUWNOXCq/fvLEbdWVc20r339x+ZL
8lz7O/kGuo9UF9jLThPPTs9dYB+h1lZb82C+vZZ+dfqCTXPt1689w5ywcLb9
3lWnFku+nWm/S1BvDcv5GfZTn84V1e2dbn+4tD9k5Z+p9lntV/q1+afYZyuI
KbDtn2RvoMObVeA6yT6qq7rDPHSyfVjEj/Smr1Ptt1e8kdaSn2WvfOLrpzDr
BfZGa3bN7a1ZbC/hzfDuy5Sl9rFd194XHl5qr1tlXntDZpl9vsKZd1Wzl9vX
tDxOnbJ0pf3suqklNZKr7ZecTDqQfG6V/VrdIxkcf5bbp70znyH2cZH9j3mX
I9enzYL6a4K9T69So/PsJvsbtmt5dI8V2S8Xkb822yLZfv6jp88K/wTYn+Kz
bcpNtbNf6xZx9GiJqv0yMC1qn7y5NGbT7D92DFAAAIE1mlk=
       "] -> 12.9, CompressedData["
1:eJxTTMoPSmVkYGDQBGIxps0LfyZPtD/03VSLq3KqfRlrdLd2w0z7oO5V6gsd
59q/DdQRXr1lvv3Zj4s3pL+Zb1/DNMnv1s559jsPP1Wv6Zljf01l47xb02bZ
77y4Z88uzpn2nk1KP17yzbC/76XFo8U23X7Z4n/G51dOte+Nid63XXSKvThj
Qe89xcn20rwHfz6TmmxvmbD1NtuKKfaZj1ZF6V6fbr9xtbN/9qw59nuKJ8vs
YVgE1b/UftobPwu+9uX2/Le/yfdvWmafdH0Ok4PCMqg9y+3vH953sOv4Cntl
zq0rqoRW2QcKR7ZFH1pp/+6La/vxt8vsV5r/+zdReZF9n6+jaFzYTPv0Y38M
Ntzps7/t+9mj+kyj/aarJ3jVhYrsi0V3eCxoTLJXeOc5WSLK317mfc9y4zm2
9hKfQp+0JGnY8365zbP7mYj92/fnd/vd+23HAAUA78KbPQ==
       "] -> 12.79, CompressedData["
1:eJxTTMoPSmVkYGDQBOIfVmduZ1RPtC8VW37yXOlU+4dnsk7x1820l1kl9u2b
+1z7OE/vHzK35tuznMjW3sS/wP4Nu1FwJPN8+53fn3k7n55jr6unsbjkxix7
i7Z72ScsZtr/2czVV2wxw/6hdmpXhsx0++Xv983T2DLV/khOT8hCtin2Arou
b+P+T7Lfw/nPdvedSfbfXJdo/naZYj9nOse1K8HT7S94RMpOejvbXmrXY5sV
kxfa3/9iGLFGaam9hdShTWLcy+03v6harly2zH5J5MQ1wjLL7LttOZJ26S63
P/y4Ifrp3xX206+fXBUTuMq+XPnkIXXWVVBzl9tHhp+bzJ6wCO6/IpYJ18NS
+u0tF59dfUm4yV4scv7FDv0ie5c5nVvOXk2yv6Bse9eXNcB+24w33a907O3P
p3rEzjmhYs9/d+tF1W3S9s/ugOjfdgxQAAAP9Zx+
       "] -> 12.79, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAAB2eTnXLIyRP08kHIhYhJU/tOY2W4iKmT9j
MzmDo0qdP5ViMZhfyJ8/Q+YWGbkDoD8f3pNjG+GePy887Bt4t5w/pOwITOO+
mj8hNpJaaSGZP12OoPIeJZg/R8NaV84Tlz/wasTuZK6VP6ioMezoCZQ/qAxc
laAUkz9X6Qdimv+SPzpZ1uwHc5Q/KpdTi/ORlz/XfysKV0ecP4Tdp2i+x6E/
r91zIUxapT/LD5HGW0GnP4Lp0xookqY/ZSH39wQbpj8Nz3Zo0BqnP2zAea9U
26g/cvW75Lcrqj/1c4cood6pP3vsPJNVLKc/oaWEi+E+oj8ToI70e2CZP0s8
dOwrGY8/CCre10v1gT8ziL5gXC1yP4tEf3J9nWI/qTjbkMc0UD9CBzK3yMg9
P2tQI1QzBiU/ZFAjVDMGFT+3FS9wRAj8PgAAAAAAAAAAKbiSFg==
       "] -> 12.75, CompressedData["
1:eJxTTMoPSmVkYGDQBGLVPqMvEk0T7TOmiuRdnT3Vvizo6ueDy2faZ32/t2tb
+lz7on6hByYT5tvbu358ndI03z5k9UG+f/rz7NN2zHuczjfHPn6yYPNPrVn2
n/f3HebaNsO+61JEr/Xp6fZsDkKxLTen2c++b5q0dOVU+9rfTybkeU6xf2hm
on1/6mT7atEZ7P77J9uf0wwPK90+1f7r0ts+Wg4z7dn1zZ6GJsyzf3PHqXG3
4WL7KxnTdY8ILLf/AjZ/hf1x/0dCN/SX2zM/l+MP5VpmH381aKFE1zL7btf/
gd4CK+wzgi/7b7NZac/o82oR250V9t/PZn7J0FxmvyzkvuDE+IX2H286Wr3W
ngH1X689F/PVAsGPDfaF08UjN/IU2t8UXH6qYFOifW7AJY5nZn72p9OmOL2Y
bw3Vp2Ev4Pve8N12Efs5YPHfdgxQAACJpJtE
       "] -> 12.64, CompressedData["
1:eJxTTMoPSmVkYGDQBOK72jMlLPMm2ltLfLzrnT3Vvs3zifmJaTPtf3xYkFGY
OteeRU5lms6u+fY/Mxfyb7oy37761sHYgmnz7CNdLZUPlM2xV/3qXVvZOsv+
Qsc158OPZ9irab4pn84/w36yIfvOBLbp9hL+J1bUHpxqv+t2Qddq4yn2QjVt
++rjJ9uLaqon3IuYbB9jUlm4W3qqPcNmpYVZOTPs/3o9Wq0XMdf+w5m1bQeq
FtlnVvvMaTVdZr+hbd7apB/L7ZfYn26acW+ZfWWnQNpe3mX2a9zWpm85tcy+
dv3GdTFlK+xrpiZu9N240n4Rt3ZHVchKe7vVjk2z5y+zN94U5//vykL7uy9/
Zs85NMN+8V/ta7+N+uwf3LDcNT290f6qynZj2aZC+wULNCfvYEuyL7l8vyJk
lZ99xRYF0Yu6NlB/atk//P5DVvqJsD0DGgAAm6SXsA==
       "] -> 12.7, CompressedData["
1:eJxTTMoPSmVkYGDQBGKdR9MP+eRNtD/tZ2nZmzfVfr9ryASvlpn2jlK3lqYH
zbVvdiorTt41314vPNMk9ul8ez7n2b7xG+fZR5o5N25ommO//ER4WMWUWfYL
+M70bhCcac8v5rTiv9gM+xli6U2/eafb2xaeq9LdNtX+qLGUkI3OFPtfHkZr
Df0mw+nwXvOwsmdT7FMW7O6o0Zlhf+67S8pxrrn2rZ7h7bqui+zbzqn58H9e
ar/jTbQaz8Hl9qpfLjpEH1tmzy53d46X8DL7t4wlBxkfL7MXDJF+/Wb6Cvvz
G/weXbq70v4A2B8r7aeX/3rQcnaZPXO0ydTqJwvtv/28cWbbsxn2LtN6tJ1C
+uybcgQXn2xutP/at+xJ5ulCe+8dPWmxikn2HkL2G2XC/O2nHOdd1LDMBkrr
2C8L7ap8UCNqnwzm/7FjgAIAEOaU7w==
       "] -> 12.68, CompressedData["
1:eJxTTMoPSmVkYGDQBOL10TEXV6RMtA+xF/3gljrVfp7NXEntSTPt3zVd9Zjg
MNeeiX3eTHvF+fZTpkZ8W3N7nv3EOUuCr+XMtedbPi1+itts+6NVLssN62fa
f9OUyuH7Pt2+efqiL/6W0+3NnC9xzciYZp8vfGvxgoip9i+++tZxak6x/2D3
r7lr1WR7AZOv3AJiU+DqhM6LTHzpP8t+Qu6tI+GX5ttfDasybzNaYm/4+ery
t6Er7P85MzwWuLfSPrFK17r0yHL7V7ecOkyFl9nPjvuSo2G5zH5fQpyB/ozl
9intC8q+bV9hr9r5+axDzAr7qbaHZvw5sNTepMEkJFN1ob3rsox26YvT7cMu
vxD/zttrz64Y/cnsQIN985+m/LL/BfYbwOGRaO/h2MHzlcvP/pH73r+JD63s
028cjCj6qQSlhewZ0AAAN4+UjA==
       "] -> 12.59, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAACfU8beAmCRPyGg7Q3jWJU/erN7Hj+GmT+4
w8LgUV6dP8kVlHEg1J8/UG59KU4EoD9O5esC1NqeP8gL20ugppw/qoO36pa6
mj8WdFRjKBCZPyvOMmmKKpg/QzrXCQAXlz/0VI5US7uVP/PPsUGLJJQ/Ung2
T84xkz8wYylmcQqTP+eZX3FQrpQ/6aMYl9Dblz/sMq7PEKCcP2ztPb1NB6I/
rxiu532apT8X73dQaHmnPylA84jAqqY/7DACHyQXpj/Y1iMZwvymP2jdI9Mm
vqg/uMvPVeUCqj8JNZ/F47CpP0ZDOtcJAKc//HfEMfwaoj+C1wdUZiqZP5Yz
kgq1zY4/ly86qdu7gT8Ck+2ZGdZxP7Egu1wRP2I/6yqhWn37Tz8iopm+z+E7
PwP+9pwy9iY/lZCKhnSuEz9xa2Oz8D36PgAAAAAAAAAAgG2X7A==
       "] -> 12.85, CompressedData["
1:eJxTTMoPSmVkYGDQBGL+D4/NFgdOtNeJVzjQETvVfrnXUlW78pn23AcDvjWn
z7X31mCbuYlpgX3/bWYZLuMF9o/+xzJdD5xvzy96aFeP9Fz7ddIeTxplZttf
7TgprFY30/4Ev8uZCwUz7A3vBO467DfdPm/fmrrrN6far/tSwf5FYoq9y/9V
j8/9nWRfOtFh2v4dk+y//n7uF/J3sv3K0rAtIu+m2dd0bjKcmDjbPux7UB2z
2UJ7k43Wq+fNX2Lv71s/x3fKMntel13Vv2yX2fO9+3T3n/gye8m99of9vZfb
37hjdUPPaKX9I0b/6OruVfbnzdZpCNisso8tsHVbXr3cfp/TC3uV8kX2S74Z
J5oenmnfpL8k8V9/v32NpbL8RYUm+2owXQR1X5I917T56Ws/+NvbXxBfvF7Y
3t4GTOvbn+valXNqu4j9+x0/JuyY/9uOAQoAO9CZiQ==
       "] -> 12.93, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAACluhJx8FSRP1Q2thXoVZU/A1b5x4JrmT+0
uYdjuF6dP7800xRPB6A/vAidNHY3oD+MMZSzw1ufP7hZMz+wJ50/4G2x84Ux
mz8AEq7e542ZPxW+ki2ggZg/LDpNatRZlz9JshN1XeaVP22aW0laIJQ/gy4r
j1AGkz+KEiJU46ySP2/2uzu3C5Q/NAYvJqXylj/bzQUYjmibP6eK6F5sOaE/
YkTpIX6mpD876iXrN5mmP0IUYjI7Q6Y/RswiF/UZpj8t3PLeoUinPwgk1Rwp
Kqk/7AdvBP2Iqj/zMatLADOqPyve7Hd3bqc/jrLNL9t1oj8C4oPMY3KZP42N
9KUgR48/lMbuBvI3gj+S3gMQtEVyP4X+AH3M6mI/uX4MyWpWUD+S/XVvlPQ+
P4/9dW+U9C4/W/6jnw2jFD+q/S8qEoT7PgAAAAAAAAAAH2yT6A==
       "] -> 12.94, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAACB/jRYeG6RPwb8KEjiXZU/TkWh/ptymT+l
Vc/FuJ2dPy7slupJaaA/0BELma/goD/jcGWgNnigP19xCp/AwJ4/+QBK/ROR
nD9/MS9U4MmaP7dOPmp1kJk/0d3hXkQqmD/+y99amluWPz0ZOF53JJQ/h5Wh
e5OCkj+djKB5PpuRP6i7sZN9MJI/Wqejfz1RlD+miMAsG+eXP3kArpOPWp0/
Q0q5HsiToT+L4LujHNajP74YnPTy7aQ/ptVK+7UUpj9K+obWEh+oPxl05OOY
bKo/wjDFtRn4qz88mbwoeq2rPzZP2tP5xqg/fmVYjkuAoz9t0tRMWTKbP6W8
6WaGnZA/7Aaa8Egfgz+8GdTH+1pzP14/SHZh0mM/ZHDJNrJBUT/6/tlWArc/
P3ZoCZ1r2S0/Tw7HtRBjFj9DaAmda9n9PgAAAAAAAAAAou6elw==
       "] -> 13.13, CompressedData["
1:eJxTTMoPSmVkYGDQBGK2xeeWLumYaP/vpUXervyp9ivtPooxV8+0D5u8cr93
21z7zkgOYRv7BfbfPC9/jpy7wD5y20Wnp6oL7FVPPXQQF59n72Oad2ca2xx7
w4hlM3a6zrK39VMzeyoz0/7NpfRg6evT7a+fOqf/TXuafdilLO3NSlPsAz3j
MrbtmGSvtvB52leuSfZcOrczFn6aZL/cV5OvNmOq/TeDxWYXwmbaPzbNZvm/
a769TkDrjfOnFtlz7VKP5fi4xF5rh4NcZPFS++XqM+LnCy2zf/HXwjj54HL7
WTMvs/99vNJesff7rasRq+37FgdnXeRZbd860erJdYsV9pOyFWeaCi+2d7xu
9PNh2yx7tvcfmBJMJtgvFrBfYb2qyf5/Y62G4fEi+yL3ck1262T7+k5JlXd7
A+wDiiKcbhyxs/8LdpemfTbrVT2FHaL2DGgAAHmXkM0=
       "] -> 12.97, CompressedData["
1:eJxTTMoPSmVkYGDQBOIZk16rTi6daL9KKOdZUsZUezbVRzNLWmbaJ5hLH3R0
mGs/sUHJa8Gx+fYMeZ6zHZkW2F8VSpwhcn6efdz2/e9urZ9jb/BO2OLxzln2
vuY1u/xlZ9rfuj1x62O5Gfa/l4RybReabt/uqVfJtmWq/ZJJ034XiU+xXyD0
b85xtcn2YQ0cq1r/TrJv8iy/YjF5iv2Ek7U19Uen28eZL1yxo36OfWBDIOuO
Owvt7bZbtB3pWmqf7XBVcnXGcvsNQUbrHBcus3cwnxKhLb3MXkHv4AM3/uX2
u4QmXjl9aoX9gUlp+3dLr7IP+P5s/fGjK+2vS78yVhdbbq+3XXhGtMYi+z2T
3iwzip5p//M2yKF99rMmaWy6frXRvtTzzL+Ij4X2XHnbn9xxTrLP3K5rUfbR
z36V56fcREtb+9e3ty32adS2/6pysurnAhF7BjQAAIsHmDg=
       "] -> 12.83, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAACjZOVeT5uRP0Z9Sy7vfJU/BvADdsKJmT+r
CGpFYmudP08CcaHmJKA/AiABtIBwoD+vh8zU/+SfP9iP5XkvrJ0/G/JQl5Ke
mz+bCGGlXOeZP92+SReOzpg/W3+YT7+Rlz+ei0KXif6VP6fjR+7sFJQ/cNsl
qbfJkj8XzS5AHUiSP9cWRs7rYJM/6cLRGSPwlT/Ij9zZKSiaP+XFrjtNRaA/
bdqDaFKBoz9VqnTqiJKlP81of6HvxKU/NU+AMfAepj/jFa0tjJynP3CB5XCP
pqk/l7H9jl4Zqz+KL7U9kcaqP3guCl0m+qc/fwhPZVHfoj98WE1XkDaaP0DV
R+VMD5A/zZWfvYNWgj8HSkSu6qxyP6uPypkeIGM/BMvhHk0zUD/qaJHh+sw8
P9M7X4VbMyk/tQ4tKbyZFT8AAAAAAAAAAAAAAAAAAAAAq+KXBQ==
       "] -> 12.97, CompressedData["
1:eJxTTMoPSmVkYGDQBGKjDabB0usm2qeluwZ/6J1qX5r35f7a6TPt2Z2nnGgr
mGs/3dJH+pf8AvuNSp9/hiQtsJ/fvGuC1aH59p9fPearbp1rL+j1J35G+2z7
mc3Fs/vOz7R/Ifnjo9aOGfZLVfe+utYy3Z5z/eVNW79NtY+plq7cLz3F/uJB
BufiW5Ps9aqKHq8tnGRvzVhXKto02b6002hun800e++OC380WmfZO6/dFO5a
t8Ded59P+atzi+1VjWM83a8vtc/7YV1h/3SpvYMMs8YiyWVQe5bbdx5bMnNn
00r7ufeWBRS8WmU/zXeDtuLkVfZ3Jr2JP7x8ub2DuePTpn2L7H2VN22JV55l
r89X9U7rXr/9sy2TtmxNbrI/wGLkOK+3yJ5D32BH/N8k+2a3XSu3TwuwP2fV
PDt5va39pold+2M/aNt7v13u7/ZFxH4nmP/bjgEKAHjXnl8=
       "] -> 12.9, CompressedData["
1:eJxTTMoPSmVkYGDQBOI3qXmr9f0W2PN8iA/qap5vf9dwyr73LXPtNUz/Mmdk
z7Uvf9l7fOa2+faxh+dfcohaaF/N1nmu32ixvb8bZ2uaylJ7aaW2TmvbZfaC
3MsXf3yPoNukt/zzKlhmr2qZmt/atdR+821jj5K6JfZF71e+cH262H6psO6T
gjOL7H/qlvIbMyyytzl7a9FK3oX25pnXPyw3WWD/+ucspc9m8+0zFduTp7HM
s3/mUbzE8tIc+59lhgVnc2bbP5rurdaQO8tedM85xdUhM+2L3n412n51un1l
8NpZ7vumQN070T6ea0Wtz/Y++8mPdyX5KXXYV4HlW+w7Lji/UPzSYM9ub3Hl
glyt/c2GHAczhWr7r1Uzb7/qLrb3erKz43NUgX0Ty1UJRuV0+4u5X49yfkq2
N/e583Ljjhj7M3vOugf0BtozQAEADgmbsw==
       "] -> 3.08, CompressedData["
1:eJxTTMoPSmVkYGDQBGLVr9/nVekttP/M/oex/sB8+/iIY+brRObZF7vfESw/
Mtc+Wvau5aSIBfaF8gdrWb4vtE97cZVBQ3qJ/X3mmX/fGC6z73N3nHqyaLl9
7JEdb7/orrAPk4/5tdFjhX3D3/Z1ziuW258WaVZWaVpmL3PxVre741L7Ox9O
TXZ2XmKvu1bpTxrTYvuKI7KF7ncW2ls+4a10vrfA/tleJ+mfXxHu2Bd3vS18
3hx7ZS7Xk868s+2Lj80xTD8z0/5WIVdJsPUMe9VO1pfGotPtJ948L5ecOdVe
PjlT9KH5ZPvrp/QOfEidYP+pbY9i/olue6sK6cN/jrTZs57/5n51UbP9q50u
s3aKNthLpoI8VG3vfOjKyqb+Mvvwbr8NPxKLoPbn2deAFabavwWHT7y9H1g+
yP74bYln6tsc7BmgAADYJ5pB
       "] -> 3.21, CompressedData["
1:eJxTTMoPSmVkYGDQBOLmuQuPS5XPsf9gd2HGhumz7CPufZCetHGmfd/CvcnN
LbPsHa/teHxg2lx7nZDkM6JxC+wVAtwN1gYsshf10Z7i4rzEfu/0+TvPHFpq
f6pR1/rOjWX2jK6/ms6uXm7/Ojy8Zz33CnsrznMfJZhW2IsYTguaeGK5/fzl
z30XzFhu/zEy9Vay0HL7B3kXDH9VLLM3UvTbt/fTUvv2K5cKb79fYr9tvXxb
4ebF9jkM2/P2HF5k3/4+fXNf1kJ7myurpvJMmGfv9NFXtURwFlTfVHtPzbZv
fbyT7CH+6bG/2GzdOeF+q33Xh7xbL9422CceLy9zd6m2j/jZGuuqU2YfK6b5
ds3aQntu4Tezzx/Osa84v36dRHy6PWvSXCFT3WT7tzaHvP5MiLbPeiLFtv5o
mP2xrZ4FfccD7Nt2uYQ3/XC3/5kIUmdszwAFAMgKnPQ=
       "] -> 4.54, CompressedData["
1:eJxTTMoPSmVkYGDQBOJ6/syzE8wX2stPWbwzhG+BPb/J5rzXv+fZt3A3mm38
Nd9eeb7738yHC+3DDGUD/u5ZbP/39PzDry2X2btH7Je4t3SF/fLLLTpS51fa
r3B4rhj1fJX9pCf3ci8Irra/9uN7Z+6kVfZ7E3IsLd1X2usdMD6xMmq5fRT3
I6vat0vtN/MtFE3RXmJvk7FpmfH5RfbTOTeff398of2t+q6523sX2GcvuWIn
FDTP3mqDg1WI4Vz7A3PeX328Z5a9q6/01ROXptmf+Ot2Ze2LSfYCl77sObCt
317h+dUJXc499syPnnuJPei0F/1+Qu5BTpt9oFolz4uXjfZ80woVxBzr7F9L
1C70+VRhP6dxJ4fr5hL7wFdf821LCuwP/lvbzseUZd/x5eJvVetU+5Pvdv3c
cSPevgfMD7VvCv+esHGmt71tLF+y3B8HKG1gzwAFAM3poEI=
       "] -> 5.18, CompressedData["
1:eJxTTMoPSmVkYGDQBOL5r6zeZgcvsF8T+SfkeuZ8+5kdeS1tVfPtg5Yxr9aY
tsD+4EPdHzlnF9kb++37qVy41N5g8dTkZp4V9g4nf801nr7K/sez/iNXN622
v1x66/oyhzX2bYYgBWvso3R3d985vdr+VmCm0i7BVfbnYrLm1Hxebl8WMgto
wzL7xZdcSpRNltg/C3r8ZLb9IvuT75S+f+JaCLf/iSjTl5bDs+3fgIQZZ9mH
u25kUX093d4mevOPlesm27+Lv/FYsXaCfQTI2fHd9tujysR3Tm+3jwc7vM0+
/2B6tph9K9T8Jvs7YHdU2W90ZLvT51Vsf6okQfSoUIm9VMqBtytMCu2L9dcL
LFDPsc8H0zH2m6bddX33NNS+rpXB9uEHN/tny3f5/b4VAhf3BxvgZM8ABQAO
zZ/y
       "] -> 5.47, CompressedData["
1:eJxTTMoPSmVkYGDQBGJ7Zu7vfh4L7COq/sf3rFlgH/tfxDsoZaF99ISApEV/
F9lfeW8zO/7KUvvbXYs7rO+usH8z76dJ8J7V9j7tH1ku662zD50ocztu3nr7
fwtda2KlNtifCF2k5pCz3n6/d3nAlj9r7TftMetPurraftKq2xaeGSvse/hL
vXPjl9qvSvnUyjVxkf2cqxuP7MhcYN/0ZN7+v7Fz7X+2rb1j93Om/Q7OFs8i
zun2DdNaeww7p9ozOe+v/zd5sv2kmEOstZMn2CtlZ9/QDeq0F9zQIbSho8m+
4unZOfb6Dfad705O7TxbZ9/lbluj/LjKvsL4+Xlulgp7BrD+Yqh8nr1IuKiO
WHGavdu8widagcn24dzW5Xdck+xd3nSJf1eNtj8Xcm1t8+kge0aL1DMGwf72
7Qs2JO394WafdkzWNorf054BChZUOXcoPDKxBwAiNpjO
       "] -> 5.63, CompressedData["
1:eJxTTMoPSmVkYGDQBOKJl47clQhZYN8+P57B7MQC+0DOn3XZNxfa21vN/sT4
dbH90Z43u9zil9ubPGKblVm3yv5o+l77iSVr7c24Q8q+719v/0S5V6k5fIP9
ZW77/Qw5G+wLTz47ZCq8wZ6lqrI0/Nta+6qbq0PPx6+2r/jpFxClusL+mPOf
x7oRS+0PJ8+/t0N2kb13oZzh3uvz7E/vOir+/+hM+z9KwTaCftPsE7PMd7Kd
mWy/08CK8drESfa1Ob+AMhPt39Y49Ziu7rXfyc3dprC8w35HpdaNdzNa7HeA
1TXZTwL7p8G+xHbzMg/2WnvOtyoeAbzl9mvWR5xZf7PYXjWWnSU7v8DeXjSn
3Icry75U8pPX01cp9n/cm7Yfs0iwb5l1uZ57cbD9hme3ubL32CFoR8uqh8/N
7TXfP984p9YELs4ABQDi7Jdr
       "] -> 5.86, CompressedData["
1:eJxTTMoPSmVkYGDQBOLqyyV/DjotsO/QenHPZuVC+3M/Gh/93r7Ynv3ubHXT
Rcvs/wis7DuwcpW9wCn/kuIna+1deV/cmdmywX6Lxol1n6ZttG8yXfH/p9gm
+zDzE/oumpvsl/SuexfQsdH+he3uM/+yNtjn7fb/rBi01n7Z8q+n4ntW2E+0
3fp4QvoS+568vj3JgQvsJ50w1Z1+daZ98Q7p1EyTqfYZX7bE/eyeaO8we86W
CIE+e4uO8+tZgrrt+ezPa+WWddjfnzx70dxjzfbxF8+bzNGts/f+NVvzxrFy
e1YdJjXJHaX2zs/PqbRwlNozVWeo/D1bYm95hVHBwKvIPgGsPs/edUaG2oJP
qfZhvJl6Oq1R9ilNmWY7xP3tLcDqnKC0kb0tWJ0qnPZQMDNucJaF0wxoAABA
6I+a
       "] -> 6.1, CompressedData["
1:eJxTTMoPSmVkYGDQBOKj39251IoX2DNst5v98e9C+1PLXkm4eC2x/8RlLLLI
Y7n9I46j07JTV9sf/P942s+Z6+w13ulZLL+9wf5ZxKbHxt822k/PtLN4V7rJ
/rRq+PLM1k32yU1ffOvPb7S3mW9/5PfUDfZF/Xcqb4astZcrMPKbbbHCPrrR
lv/J3cX2J9bEH0p6Ps/+f4pWdsnj6fbJN8Jc0v5Osv+TUWF471ufvbZCz+wQ
xi77fvvaRJHydvsj/hcfH9Rqtbc+VWD/XqfRvgFkzORq+71+UkvVLMvt3Ws+
5sfWl8H5iQYPZJm2ltvrnmA6tMOz1P7BarMdp1YU2n/Y9p2hYEmm/balb+zV
/8fa8+2+/PtOViCUdrRnyQTZrwel+aC0HBrNZ88ABTA+AEs+mwU=
       "] -> 6.23, CompressedData["
1:eJxTTMoPSmVkYGDQBOKo44xSidPn2l9qrI3t3LrA/qTF/JajvIvtf0/ZsXYa
9zL7+JK2nSJvV9pX6J4ul7y7xt6whmHVlfD19stjxZffiN5g3zzjv4xKzwZ7
KZ61hZ9CNtjvPZt1f1fcevtJF+Y/evpqjX2kqEWvRPJK+5X8D40VJyyxn2d9
pf3DzAX27X8mmW39MsM+61z/j+oZk+xvTL/FnBzUaz/LQbK0taLD/kWAUf6x
9jb7NmW9DxNutdmn/cqf/yamw17iVdjS1b5d9hlrLHVMJ/bYxy5IS2jd2G9/
bI6r99bdE+1v7TS4sDJysv1Difo/Sx9Ptpd+KrhDLH+SvbDtJdYf33vtb02a
KnauuNV+XSzLr0qxKnv/RyfZe+fm2VefVNmoqR9nf+vB6c5W+0D7PhO3lVdn
WNvfBfMN7aeC+dJQmtueAQ0AAB6+mik=
       "] -> 6.51, CompressedData["
1:eJxTTMoPSmVkYGDQBOJvDTLq0lMW2LMs9gqMW7rQ3kezJeZhxGJ7vV0bHzx4
uNReIZe3X7lmpX2cy0u18h1r7CPC6yMXXVpvf2f9hM4V3Bvtozn+C7JO2Gg/
94xLue6mjfbX64vdt3hvtHdYOkdAx2yDPdN6cZU7vGvtl7ns8di9fYV98Vkp
04DfS+x1n6pzRJsttO9oO3a32HOOvbZMNlPw5+n2Vpn8IQKRU+zNvtnN/bNv
ItScCfY8/EErjvT22Ff2891e1dNmn9hu7+zg3mB/oW3m/+0eFfbT/j0IW81c
Yl9/evb0Y5lF9hW7WphUHxbaLzulZPQrO88+yTD4i/e8THumEPUk8XVJ9q5v
v80/Wh1u/1rh0SIjkUD7t2Da0X7uTu65EY9t7T+C+Yr2kWB9mnAaIi5oz4AG
ANHQiw0=
       "] -> 6.31, CompressedData["
1:eJxTTMoPSmVkYGDQBOL2TQf8VhbPtd8cc2Hts9YF9oUFV4L8bi+yd9N9ukV3
81L7/PkfuVpLVtrXHu70cwpeY89UwCZ0ZuE6+9mbD3/IY95gL9tWLt1gvMF+
kuFHG5dP6+Hy13o/r1xht8b+pfq1rsAnK+zNZrrFLzFaYh/y9t+fWKsF9ofk
e3Yvmz/D3izlqbRfySR7O/cprGVevfYG72bVJa3tsP/zTXJ9gEe7vQ/7Ot9l
F9vtPxUuNZ22pNP++RuDPbcZeuz9bxtF/z/VZ+97Y8LUfIuJ9mtrQA6cbP9E
Ys26Jvap9ou++wlMmTfVfsuxSSaTmabY/1aauvC73wS4ue/NGNIVDtbY507j
3nV1T4F9DphOsD8K9FUBW5D9jDtzgF6ztn/M2XRps5ahfTnI+pkq9vPA4tz2
DGgAAISkl0k=
       "] -> 6.46, CompressedData["
1:eJxTTMoPSmVkYGDQBOLowosrFp+eaj+7dtOMhMsz7R/GarS/MJ1nL5P6Ycez
wwvt3Sdz6UXXLrFPtmRebmi/zL7oZNpiX7Xl9vnRv5U1GZfbg3jTc5bZR3Cv
0Pw7dam9Z/tyXblpS+wN7acZF0gtthewv25twLXQ/pjhv97ihjn2NaUbFyy6
PN3eZOG8TeERk+3ZOK321RZOsH+laNm6fWOf/Y+d9xoDO/rtxRuv75Tvmmhv
H8i1IfvvZPvinY8WBbpPt1//cNVkd9HZ9u9+vmt2ZJlvL/2cwfLY/oX2Dp4n
1r/lXWIf83q+BuuNpfapmvXLTBOW2Xtw7lj7d+ISe46fW/c2TlpgX7oyblFo
xnT7Cy9Xd7OK9trzXczew/20wV5k4f1d4h6F9gqOx7fr8yXZMzQJNNz/7W/P
zvhj7/9GByhtYM8NphWgNIM9AxQAAGgKlOA=
       "] -> 7.65, CompressedData["
1:eJxTTMoPSmVkYGDQBOIXQZoPHnovsF8jKi6TNnOhvRIXZ+bMCYvtZ263m7Cp
fJm9nU3GfWXbVfZxa22zI9zX2svG6lzzFtlgr2P5Va9YcaP971QV/uA5G+2f
hvm8kFy60f7ei+fWbXIb7Y1yWP62cG+wl/+3+JPA1jX2e1Q+Cq/XWGF/2Zq3
ysNqiX32WsuTFuIL7LcUf/a0fD3T3q1895upjlPt+6Te+JiemGhfvabb6WBh
n71HskDa3M3d9j/ksnZ5qHTan7c3aGqY3GrfmXq6qt2wyf5L6LzERf/r7d0U
yj12/6m1lwPbV2P/4/aFOWm51faPexv6ixsq7Jn5783M2F9sz8BcqfzgcY59
6ZWH/pt6E+0ned56LPcx1H7ZdK2Pgvc87PfxKLfWOdpCaV04Pa2gKWtGurp9
N5gWt2dAAwDlZo3+
       "] -> 6.91, CompressedData["
1:eJxTTMoPSmVkYGDQBOJTF6sE29Wn2ieqqYatezbD/qO5nHL8vzn2E6cvenn+
ygL7i9ZT55SlLrbfpX9h75zjS+yjRf8t0Ileam/e973x4ecl9iypbvxrdJbY
h9zNvWFoudh+p9XHHAnfRfbKt1UrSzkW2m9MXLj2cOA8+z8nFh48fmmm/T5v
CaVZN6baLwmdunC76yT7ebKsN/coT7D/rPO3+HFFv72oZbVq94oJ9g4/BHkv
Gk62Ty35XrNAeJq9f6zge68PM+1vake6tCbMs/9ydk+WbdBCe+Oi9bJPHi22
jzN0Y9XKWWY/tcz+TozLCvvHx/9OzNy1wp41SjXBYPkyqH2L4O6A2VfdfZfr
m1kTlC6y3xtmeVE0Ltl+wYxet4Rof/vXeYf7Ts50sC8InpKv2ywLpxnQAABj
85cu
       "] -> 7.67, CompressedData["
1:eJxTTMoPSmVkYGDQBGKJMuW7H1dMtq+SLjy0efV0+8kLAp6VPZ1tf/q5PvOX
iAX2c/5IMB86vMi+3dQ96ovYEvup73W3K/YtsY89IeN979tie1mXGQYsKovt
k6+yT6/TWWR/5fJCHv7QhfZHu/aExMousH/DuSRe/dkce+mlRn+TSmfYH995
uuTcyyn27PPsT+3eMNFeKixUZ8eZfnvVRlu9xOZ++wf/Ovl2cE+0D81eOcd9
92T7bY0/1Fr/TrO/ZXjA5+PbWfaMhW1nH86bb9/+dN/3vwKL7OPDpZclbV9i
3+YWeSQmabn9RmYes8yOlfZrTac/CuNdZb8/N8tgwc/l9tP1lqxf77HYnudP
LNc8z9n2mvI/zm+7MsF+R8GzPTKbmu2TVSf8LDEqsT8Bdl+KvcRzlabcF0H2
urZfW/eHOkFpI3sjMK0EpZnsGaAAAD+nm2U=
       "] -> 8.25, CompressedData["
1:eJxTTMoPSmVkYGDQBOKJZW9/brow2b7y7uu477um2wvPZJy9W3SOPduLV4y7
qhbY657d5735/SJ7p9MsF40cl9h/kZdZsWnjEvs35obLfpgtse98bW8RkLrY
/nwgg/z+rEX2uaz8G8VmLrRnBqre4rPAvmqbqpeEyVz7jrUHk7I3zLBfUmJc
b6Q01b5A5nihzPGJ9ot/mF3J2NFv727+WV05qN9++/0jMx7dnmD/8HbA4od1
k+33PssDmjjNfgU7yEGz7N3A6ubbyzjnHZ9we6H9h9Vqy0NLltgXzjgs88xg
uf0zjYb+eNOV9h+AquTvrbQ/J9zkeWvrcvtbax8oXlNabM9yUnu6u8Js+0Sf
j7krLk6w72X68SN0crP9i8PWS2f/LLZf4Hb4r9qxFPtL3NXzczuD7A2AvhDQ
dbYvvOb46dRTQ/v3wFBpWCdn/xVsL4s9AxQAAOR/msc=
       "] -> 8.46, CompressedData["
1:eJxTTMoPSmVkYGDQBGLLw8e7t3ycbH+KJ2798jfT7ad5sb0L15xjf6bbkXtb
/QL7Na4RP7d8XWQ/cWOSSUDIEnv2WW1Zp64vsXe47bfwVOQS+wdXdB5L9C+2
37xqqhbfvEX2U/4e2lG0d6F9zVbdCoPWBfZ7+RNKOYvm2od3nXVc/mKGPaOp
p2Wh/lT7xVXt/x+enWgv8j9g69HV/fbzxHTrvTX67X8y9d9n3jjBnsXk88KA
iMn2J5adeqabO81+p7PlE9HiWfZzwOrm2z+5fM37x/aFcHf58GxOFmdcbl/S
Ena+lXOl/Uph7Z0vF620f/AuXr1g6XJ77pkGl1cyLLbPUsg39bWYbb99pf3k
t8cm2Dc2hnCqtDTbf8+ssJ/HXmKf/jbOZf+jFKj7Au27nk20qtVxtm8H08b2
h/hqj7jlK9iH71u2YfNLVnsGKAAAE/6ZIw==
       "] -> 8.51, CompressedData["
1:eJxTTMoPSmVkYGDQBOKbB7LLT4VOt/dRE7PmDpltzy2kI5p3fL79ZG+xCQZz
F9lXmFxU7Ju21H723ukNW1uX28tK7dhzbf8Ke8FfL46JfF1h38cwcYvd1BX2
4Vp3+uwvLLefdup5NOexZfa/TiVwScostY++oTmlZtMie7tJGW9KP82z3+8W
d/9OyUz7P+kzHpx1nGK/wtRGd++MCfbdQc7rGTf32t9hPTfN0rjX/vI8e8ld
d/rtVZhK82rfTrTnqxb/bX1mir1zleo8GYUZ9g5s7q6enbPtt2R/5Ohqn2//
fV14RvfZhfaT1t3bWV2+2J6jI/1aP88S+78L2XvNexfZr2iduN+QY579nV+3
lE0WTrVf8zNfgnV+F9RddfaxR7f9Weqeb8/9x1U/eXGC/dJJD2e1evjaz9UO
lmX7ZG9/6HiPMIuPqv1iMF8eyme1Z4ACAIWjlH4=
       "] -> 8.2, CompressedData["
1:eJxTTMoPSmVkYGDQBGKDjS8KIsKn2f+b4yJn7TDL3j/ukIfk4Xn2L/Q/+VV+
XWgv0TYtNfnhEvuZaTsirs1bZm/5J//9udnL7fsNDY/5LVxun2UosiRIdrk9
xJxl9t3Vb0MfeC61P/pUYu7rE4vtZVlvtde0L7TX/fzCRFVnrj3H8dNW3lIz
7BmiXaLysifbZ78XftDqMcF+F8ekXfLPe+214paqydr32TtEbV7feH2CvX3B
5tkFcpPtm9zSDkf4TLN3/2SVYSMyy557Hj+vwp259r+XMLz6L7zQfsHT31Xv
XRbb185WOpkosdQ+bBmr7N3tS+3vsWYbZUovsS/oD09hjVxgr3BHNirQc7q9
6uZEHTXuXvvvLHtTG5gb7dOiLlysjS6074l6+7nyfqK9NtgdfvaXWBY4t9Q7
2O/YxHXMsF7b/lj0VZbo/6L2DGgAAMcpjLs=
       "] -> 8.08, CompressedData["
1:eJxTTMoPSmVkYGDQBOJ5Zuenl5VNtpf8+zk8t3y6fUWxXlHAkdn2V3cc4ex2
XGD/yiNMW2v9IvusVrHfQgxL7J3/BBnuTF5iX/P9hNP8C4vtr/Q8y5N+sche
73jS1Ru/FtrXn2CVCFBdaP966Q0Ppxvz7XUSl9+b0z3H/uSC9f7mHjPstb6p
Mmgsm2IfZe/k961joj2vQ0PyjaZ+e+mMUrNHMf32HYz3rafxTrSvDMriiLs6
2d5q+uwiZqXp9ltjDxj9Uppt/61ZYPnJ3fPtxdKm3OuwWGQv0VK8Y/bVJfY8
VbH7l8xYbu+4ZNrvmxtW2rPsYrE2CFplf9FEy9LGdIX9DPfNLza1LLavZ18Z
Hbpxtn2t8vK7fFoT7RN9bK+fEW+xt8m44b6lrMT+lLr+htRlqfbnfmQDfRxk
fxZMO0FpI/tLYFoJSjPZM0ABAE0xl+E=
       "] -> 8.43, CompressedData["
1:eJxTTMoPSmVkYGDQBGK+gKCDDKpT7Zu0/sVYsc+0f3E8Xe1N+Fz7A/9Oypka
LbTXa0mykru/2D5mBe/9czlL7fsdLujM1lhmb5QaJxj8bKn9k2N6JyaZLrX/
tvdPnkbcEntvl2guhezF9qd4M4sn/1tov1qNYWEW0wJ7fi1pWePrs+xX9mwM
bmybZr/w1M6l4hWT7I+kbtFfeqPffqojZ/cXrz779C4nkdhp/fYb2P+Uz+ec
ZM/Urj5jysEp9o8r2xXnlc+w3wpULT9njv2DCr/DLqEL7K/KcJz4eGqR/R5b
7vMqbkvtzy3cu/iy+3L7IJ/jj6sfLbdf5War0S+7zJ5Ryjmr+sVCe6XbJTOu
TZtpP3eaDLdrQ7/9tWuT5/xPbLI/NjPwVPmFIvsV8mdVM9Ym23tdL7vDNinA
3gdMO9j7gWkDKK1gz4AGAGFikLw=
       "] -> 8.31, CompressedData["
1:eJxTTMoPSmVkYGDQBOLdhraJnexT7DcnKwusfz3dPkBZd+p25Tn2qb1VHW7l
C+w3Gbeey36zyP6CiNX6jd5L7N0y8z+0nlxiv9J3zp33AUvsmQ7K2NblL7av
/21VcK5jkf1f08jFcosW2neHSERzFC2wP8SSd/ds8Fx7M03Wu3GXZtgf0f/6
eZnSVHvHIJe20D0T7a8w3GPi7Oq3j1uz4qAJT7/9m6MBfltWT7Dft8Qwyj10
sn1QWrOPUdE0e7n46jTPhln2QnK5MhvF5tunST6KEN++0D5uf4J5TvQSe57r
iwtsuZbbq7qmRByVXmm/492zlXw7V9pzpKwvr9+z3F5o6d6D4mqL7c/Gep9g
t51tf+fh+pNSXyfYm/5Mmy19udl+Fdg/JfbTvrHFz/BJtZcW52tJYQy2f5/x
uGPrDxf7t2DaBEqr2J8D0yz2DFAAAG8OlUo=
       "] -> 8.44, CompressedData["
1:eJxTTMoPSmVkYGDQBOK6z+w3t6VMsr+q3NRRUDDNXjfkj7lWzSz79B1Weaee
z7P/XjZ9am/dQvtasLpF9nf//v78pHyRfePkbfE+mxfaz+YJYvy6c4G9FVui
xZLy+fYbzQJkuX7MtV9umz9tu/Yc+2eHFu9bkj/T/tP7vYxdAtPsv3Teir9c
NdnePGl9vGHERPvF/xfE/144wT6isXvD7okT7VkPS3wJeDLZXu+dxLTiZ9Pt
3Yyrqzsl5thrnJQP8rRdYH/6yN74dL5F9rkHonNb7y+2L5Hsy3WKXWZv075i
cTTjSnuGRUpMLDyr7TddyKkOTlptv6TltcyEPyvs/50/OdXrz2L7jKDwM8JB
c+x/gP010f6WgP0+rZIW+90uzK6CV0rsma5F75v2INW+OIHri5ResH0lm/fi
Pwku9kVgvrF9GZhWhtLM9gxQAACHSpZr
       "] -> 8.84, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAAAIsvwVnp2RP+67Lydss5U/yqUNky0Fmj9S
ev54nEmePyay386//aA/Wsfpm/CqoT+4/CvHT3yhP+Z8gFyCjKA/10TZlBsY
nz8wRYK/gDidP8YabiUf3ps/uyWcthxVmj8gRpqGjjmYP6Nmew8ifpU/W5xm
ZeZvkz/10W4CiQGSP/FxUsuEFZI/o5H+RSy5kz8R8avgh8SWPyHwkxl6w5s/
QFKmUN1xoD+G7CzfFoqiP/s2lh6FqKM/w5bs40XUpD8NkY+pg9imP0gLwZKw
LKk/9spQ1lPkqj9KEMx3qOeqP8VwdJIzVKg/YCwRuOxRoz88kFqblzebP+Ic
ZCV+oJA/X/yCnOpbgz/2puvLfsZzPyP8vCqnm2Q/51H9JXhRUj+Mp1poJ6dA
P6ylKtoLpSo/iadaaCenID+zpSraC6UKPwAAAAAAAAAA1YydRQ==
       "] -> 9.32, CompressedData["
1:eJxTTMoPSmVkYGDQBOI3Z/1rfohNsp91W9/9sPY0ewnFBJlbybPsp4iUWM94
Oc++1j93h0PbQvtL06NPu5Ytsu8ReWSa0rLIvkYtPlZk7UL7vMRX9z+sW2C/
1+L1kVmJ8+3zp5jKuV+ba3+UOfKHzbfZ9griW+2eVM20t537RnCLyjT7kxU/
fPnbJtvXV1QL58ZPhOqfYM+pG9RxfcJE+4bFSUxXH062d9+noay2b7q9otMc
XZ+/s+13xPe1hesssPfimbyRXW6Rffq0mjV+UkvsMw4mz942Z5l9w3IRLR+T
lfZ5k2K6uHVX2z9MimaRKVht/+2T7daHTCvtj/49a9P1a7H9FOuVTJ2Sc+wz
9m4stveaaB94exOPImuL/Q3b3NNGLSX2UX/eyU6el2ofVv+64lJmsP2uzc0X
Xrc72Su8kNZgXWZoLwumFe0niu0+OV9X1J4BCgDcRpMk
       "] -> 9.17, CompressedData["
1:eJxTTMoPSmVkYGDQBGJW0b86E0Qm2acU1q9+LDjN/o/0OcVPKrPsHQKzVDLE
59lvPV/xa9vcBfYXwsouxnIttHea/D2V68oC+z63Kha1/fPtN/W+3iHycK49
v7Jm6j6JOfY/b/+53vJiln2vvNz1TdNn2sd8vCPOOXO6fcsNs0K9yKn2Unsc
RCcvm2x/oi3+dfqhSfYFF2/rJqVOttc9PDsiftZU+8cmO983hs20X8PrqWqV
Md/+5LXLts0TF9kf2ObBWlS1xH6x/TuzygVL7L+n6ER8+7jE3m3Vhq7zGcvs
16ntczSpXWFvuosv5wTnKvsVy6TXRbKssq/KMH/GWLzcXn7OL2bzxkVw/4X+
WMuTvbLf/pmvHk9NdpO9HFi+yN7ssdrEgo3J9kmrrG5a+gTYv+79H/pyuaN9
u4Xfme+7VNFoUXsGKAAAkTGYJA==
       "] -> 9.46, CompressedData["
1:eJxTTMoPSmVkYGDQBGLdz05iF9sm2j95tVhRb+lUe3mbBUcW3ppp35IvbJrM
Mc/eImzFd5sZC+znGVspJAgvtNecoezgfGqB/aQbHQJr1s+3/5nkmCd/eK79
TNN7362059hL9xQKJX+fZf/y8+4ZP1tn2mvM+ashv3C6vbanSly+5VT7wiVz
ZA81TbavYWf6rztlkv2L6afC6mwn23NIPdnvlz/V/m6vn9V8zZn2qxZGBxTJ
zrefWLH3aciERfavZl26nNOxxD73S2528/wl9ottgqZrf1livz/ZRysvc5n9
+oAd0w6XrLC/pPUywlhilf2U69uW7FNeZS+i7eT0Y8ly+6ZdFnrRhxbZ358Q
tr23ZJb9DW3ff27eE+xvG8b+UH7YBHVHsf3moHfLjxin2G/7L3JX5Eygvezd
ZawW7k72gUrNWz4GGNpXRZarnDohB6X57BmgAABRDpcf
       "] -> 9.52, CompressedData["
1:eJxTTMoPSmVkYGDQBOK/+/auE5s3wd77iOLKa2pT7UOfbblwNHemfXGx7fmU
/XPsdRIPnXR7OcfeQ4uHbaLMbPtF6rc4DG/MsD/z98i2CW+n2fNPmPuoYd5U
e9Xfk3YarJxi7yx6dU507hR7DS3bN7W2U+xnm3wU7ldF8IX2u4ueM5pq7779
6CuZ/un2S0+eCvv0c7b9oS7LFwdEF9pf8fqU+FB8qX2y6JJteT6r7RuuCXnY
Zmywz4r6ts05foN9+cQD7hmhq+0V7/I76govsz8ZfSXj/OnF9g2ekckbvy62
N+Ew0XbrXmK/YQPv0g69JfbTF6s3iDMtsr89/9f2tZFz7FPjDm66fHSyfXzx
5oy1Wh32sdv9A68o19jLN5/uqpudYy94XOmAp1ecvY59SejmN17Q8LC01wXz
teybe79633gnbq+k9cNC6bOgPQMUAABF3JhF
       "] -> 10.24, CompressedData["
1:eJxTTMoPSmVkYGDQBOK1fMzLD6VNst+hv/tyTvI0+wO9Yfk/Z82yf7tp6UML
8fn2qc47uqoWLbTPrNGtejNpkf2lq9tqS1cvsu/myknUfb7QPtZdjev1mwX2
HZMmnlV8P9/+QqG27sGYefYn/jv43a2eY6+yLqtZ4PBM+xRpKZYz/tPsD510
tvw/bbK9Qw3LluOxE+1/btg5vX7mBPsstqvSM9In2jtkbC0o2DLZ/nvJmbOV
c6fbN5p8M5y6fbb9jLuZ2wy5F8DtnVIT5iB4YrG9mk9ihrDjMnuf/0d/591Z
Yb/3lOW921dX2ZeWuiu8sFkNF7deOuN+0PvF9hXr9vBH6c6B29f9TUbumm2L
fVPB49+zNpfYS/VuCks7lmrvu5Fb5SRzsP2bYJGF5xc427/NiOxk7tSw/wDm
K0NpYXsGKAAAxPGcmQ==
       "] -> 9.5, CompressedData["
1:eJxTTMoPSmVkYGDQBGLTXK9Wl78T7e3Ka664s0+znxe0Y9q5sFn2q8QqhcRP
zrN3/rzkp0nqQvt+u5Afx50W2S+53aKv4L7IPk+XLeNp7kL7xcbGco5lC+z1
lJ589hKfb/8ppj9zxcK59i2LvVwEds+2t+adeOqAw0y4+SeWJb5xb5lsv55l
Bu+7qon2mnOeTp3+Y4J990OepKV8k+y133TsCJ01xT6xN5lH5+EM+5ndrd9U
Yubap4sZLK29uMA+LdFKwSpvkb0/v0jKPLYl9m/3eKjoxC2z386o9rLn0wr7
1El/Nus+W2X/cm761EST1faK2y6mKV9ZYZ/k/5flyrXF9p2xNwtClefYM8sI
h+hETLT/832GbIJmiz0zf/6D40dL7EVspdOm/0u1//zgUNSPnmD7CLVXamyL
XewvTPMOacrUs9+fLfhZeKeqvU/jOmVvQSl7BigAAGWzkFM=
       "] -> 9.35, CompressedData["
1:eJxTTMoPSmVkYGDQBGKvs2EPz/ZNtK8LbbyitHiq/V3G13tsH860t1kXsjRC
fp699e/jGw/tXGC/J711ooj5QvvN536yzfyzwP54u5zTDbEF9q7uD/SvRM6z
99Irs+aYP8f+I0/txBsBs+19bCa2z3g50/73rRUrHG5Pt1fnZX41zX+qvX+9
T4Joy2T7CXssytgyJtkLan4LjXg6yf7SkZb/XH+m2H+RmnE3Y/YM+2s8VqmV
gfPsJV6yKRqoLrKXnf1nfrnUEvvYwNv9CpFL7Bk8fW7tObrEPon5Il+G3zL7
k98iXiwqXGG/vlb5Ubf4KvtFLfxFKrar7EOb11fsOLfcftpXa+lpTIvtrzne
+pi6cJZ9D5fz931FE+x/mp0r7TRoti/kYjgdX1xsPy1P76tvbIr9E22bhe8O
BNo/BdOO9iy+6z/FC2jac9wr8Zm6VQFKC9gzQAEA4BuXFw==
       "] -> 9.47, CompressedData["
1:eJxTTMoPSmVkYGDQBOK/v1trm95PsM8rbH32wXmqffkCvvjoiTPt1d5zxSTr
z7UPD3v11X7HPPuLTF7RT8Xm2XM+erCRZ+oc+427kjZzHJtlv+rYNAsV/Zn2
c+XDmPPfTLe/8SNoOofZdHuhS/7ai+qn2V9kaZdRmT/Vvu56XvSk2VPsZ7wy
OlGWNQVun6ul/tE6jhn2iSfYP/ypmGNvLFMyZW/EQnv/Ff/vftFbZr8JbM8q
+zdXtrFv+7XavpXTdatz8wr7jH0COgozltovns57YOfDJfbh0SUzjt5aai96
HuTQZfYprEzrD25fZs9kuHJHVeES+5nZFzWm6S2w/7mve9/eDdPsG/scxDd9
7rZP8ZhmIKLdYG+gxBfu3VtgL825Qf1mZ6L9G/4SVpuNfvb6d21Edk20t1cu
/jb3ZK+GvcEKyZsH+WXsVewuJ13kFrVngAIAkfCUzA==
       "] -> 9.87, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAADjO/RUpMCQP4var7bVTZU/hCW4ZtKRmT9w
hXmW4qqcP4KgOdXj55w/P2SymPMFmz9N1HeqztqYPwmY8G3e+JY/iMrcISSd
lT8sM0lTbLuUP8t7D1tReJQ/89E1ArdTlD9qxNViNjWUP1aZQo+DR5Q/7qG8
Q6JBlT9A6TAq4q+XP5rrctL5Npw/HJ0HplkooT/uobxDokGlP7O+FZpoXqs/
g4S6XIl9sD+qUnc5loCwPykpTDCPZ6s/ml0zlswBpj+9gPVFs5yjP0eOVeUz
u6M/fmf/a5BKpD8x21hHKPWjP7W1VO8p06E/rhYGpqwknD+pVWJyAK+TP2Uf
safkKYg/YHqM7JIefD8Ozj+ex2dsPyzEc8gDH14/8dcLdIuwSj/HYT+jwnM7
PycToykJWiU/fTpx5uVmGD/e69RsLE0SPwAAAAAAAAAAOf2alw==
       "] -> 10.43, CompressedData["
1:eJxTTMoPSmVkYGDQBOIXJpU7c7dPsH90vWZ9iP1U+01/2O78rJ1pb7Hisirz
hjn2nWzNclqf59jfvCh6JFN/tv2Bepueh8wz7c+vviM7W3G6feuU2wsWHZ1q
X71L4FLP9Sn2ATbTObz7ptgnxQoE9ydPsfeZF5z3zm6K/b+7z/lVvKfYc+7Y
dM/Scqp9W+eWSN3a6fZZub+zih/Mtn97aU/wKbaF9vonjx0o4F5qb9kks0tN
YbV94H7ORPfwDfYK6WzPXsRtsC9T5D+3xm61vdrmb98n/1lqv+div8jkrYvt
9y/YmOh4d7H9mz15R++XLrEX/J8QlaGwxH7anwYdZZZF9s89VXTv5Myx/2W/
pPT478n2E5PrNZyzO+wVvC8vY7WpsS9xP2bZeS7Hvsxm/ifhtjj7pyHeJYFb
veyZA/p7V1dYQ2lt+2lgfRL2G7vi44oChOwZoAAAJJyXTg==
       "] -> 10.4, CompressedData["
1:eJxTTMoPSmVkYGDQBOK4ua8/Ll0/wf5g5Kkj1SFT7X/4LdI40jLTnpNlddC5
dXPsVQ125cy8Psf+x20t4RefZ9k7bNU//mPTDPtXiyv7ik9Os7/XevOeW+1U
+5bvpxl0pkyxP3pNMUswZIr9L5UEvndmU+wb3r4uKFKdYl8Sc2V1pscUe/lU
fQ8d26n2+zJ/c3IdmW6vqHbrzv2MOfa9mY80JkQvtO/h7lGYX7jUnq+R6Ufy
utX2/3umLZvRv8GeJVhraV7SBvtdjEcL47NX2691rD6lzLnMfhqXtrH6isX2
Ak7zLyzauRhqzxL7UO2rJx1fLLafVHxoh+ephfb7BaaeLBWcY99Rorzs4OTJ
9kvdz9T/4Oywnx6c92ohd419Gr/AtbrpOfZXnL7OELWOs39sFqyXY+ll/wRM
W9m/qTQvmVutaD990ZdZNf7i9h/BfEF7BigAAGDQmHE=
       "] -> 10.46, CompressedData["
1:eJxTTMoPSmVkYGDQBOLZq+aXil+bYC8vZNDh5jXVvrOS+a1WzEz72W8/am29
OsdeWJF59ZsXc+3TqlZwnL4wxz40oeuF5vtZ9ik/01/sOjHD3lDHb8Vz7en2
npesLDy/TbXvtTCqWJsz1f6uHAe/uchU+y+Bqjec502xt/3RfdhKd4q9jOuE
xRxFU+xbWj+zHhOeZn8qRzvNatJM+1tWrw6uXTzPfmNK6WvGI4vsM3LM1/Nz
rrDvzxW+0r9kjf1k3tOaNzessVe/fD/4ZdZK+5hJHVaMDsvsd50OmbnbZ6l9
gNCqx7f5ltk3CqnYF15eZv+3W+Y7RzSQZknx0v6+2H5xyMUbeXHz7a9kn5zj
v3uq/Ty2j5cV6rrsufKOWLBOqLOfduVTo6duvv2qub6TJ7on2Jfnhqm5OvnY
Ry34OXkPu7X9totnVDtXKNvvBtPC9gxoAADygZJu
       "] -> 10.87, CompressedData["
1:eJxTTMoPSmVkYGDQBGJbruuLC/ZOsDcxBoGp9mlgMNPeDiw+x/6bRkz/odK5
9txAri3XHPsikIYPM+3TQcqeTbd/WCWyzj1xmr0HmDEVKj7Ffp07SGCK/SOw
/BSIebZT7IN3yLW+vjjFPghMT7M/ewYEZkHtXwChPy+2B9r6VWPOSoi57evs
214H7pBzXQc1ZxXEXabLIO5dtgRir9pSqLlLoe5aag92tvhiqLvmQu2bYl8t
AnJhJ8Tc1lr7NyDqdS7E3ph4qLi3/WOQOQ+toOpV7BvAtAiUZrFngAIAVTSU
0g==
       "] -> 10.68, CompressedData["
1:eJxTTMoPSmVkYGDQBOLwHtFm3tKJ9uJh1/VWz5lqb6L9q37R1Jn2G+LU74fc
nWNf5J1e3v9vrn2aksPBZUxz7c+pzV2g4jPb/r+AWRCj/kx7p/L5Shrd0+23
fz+j8MF3mv1ZyQ8Cfw9OtV99bmkWe9BUe27dDRWHFkyxV/S/nHFeZIp9zzUW
3eL4Kfa7vMo6A09PtVdZr5kYITPT/nzYCZmX5+faq3ClT/YLWGSvkbW3+3r4
cvv/b7enppiusfc8tOXgl8C19ktYr65ZHrvSntFki908jWX2++fKf9rksdR+
3qtXnfOlltk/bKi/1vULKG5qajC1a5n9+SvN1jV/F9sfjT3z6Ej4fPsV1X8Y
l12Zah+sPHuvWUeX/Rlm+S3tQXX2iTVv3z9mz7OvVnx6RKw23p6/l63Qe4Wn
/abAKn/dYHP7H7cSeT6uEILTDGgAAPnzlKU=
       "] -> 11.22, CompressedData["
1:eJxTTMoPSmVkYGDQBOL5Ra4Sr/dOsNfOWPJAJnKqPe+Hi5unls+0f7oy1/Dr
jjn2p5x2G69RmWv/zanvpkrBbPt/vLI61l4z7Sc2FaeEuk23vwoGU+3dz4fd
S307xT5r+WP5mBlT7CU1LdzDUqfYc7k37/9tjqBPs7s07PkxxZ7Xq+3QP6vp
9nvFi86oNc62h7hjgX0g2MIl9pVyRzL5t66y35fMuT7k13r7kjALqT9319uf
mpPvJPpilf3pWy9/sIsvs3/Urnu5Qm6J/c9be+Y1JC2x93cwVBJmWWp/bmKo
5N0FS+zPvubUcEtZZP8HDObYt/FNk12qM8XeR1/w85VtHfZzwKDGfvN7UAjk
2MvKgUCcPbdl2uQDb73sJ2nsD33TZGk/j73wlvNaNfvFYFrMngENAAD465Yz

       "] -> 10.97, CompressedData["
1:eJxTTMoPSmVkYGDQBOLHJ4T1+T9MsF++vOXxH5up9lt9DDm0smfa88tH7n6z
e4796W8OCnsb5toz1Fz6VKY3x75ARTL3l/4s+xivdW9P2c6wX3yTdXnArmn2
x0MuTrKbOdU+9zVfVKfWVHtfu0Or3M9Nsc8P8qu4nz3F/rRSwPlX0lPs4zw6
JgrPnWLfpLPzO1/cNPsvy06lrVWeZT+Fq0B/7cT59mxurOVb8hfbn4uOehSt
uNLeT2jzb0njdfZC7/8GB9xfZ3/h8Jp1vMar7MsjjkguVF5mL9O+XsRq8RKo
vUvtTykn17q9WWr/xvy9173OpfbiAadjG+wW23MH3qpzsJxnb6I/84KoxFR7
sd1hJq4HO+0X3A2M3/+71r7u5NGJ6nF59l8rpkafeB5vr6HXNFWuyMc+N2yW
gd9aa/s5lntKO4uV7Ju//5rDM0sCSv+wY4ACABTxlWc=
       "] -> 11.15, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAAA4bcVMTP6QP+4OplqaSZU/AZfJffxlmT9t
ZBX/krKcPzhz0Jd6lp0/iaKRJm9bnD+w3FQHaGuaP3alIeusdJg/o/VLm+Xv
lj906uYdqs+VP67xklQCV5U/yi8PfN7/lD9DVM64znmUP/8gVOP2G5Q/ZKix
r+qNlD+5HWHzgS2WP2geJ0rw15k/zAWT4akonz/ToKJNWzGjP3kw1dJMqqg/
6jb/fXTPrT8FDT8YArCuP3pTTC2eF6o/SQL5+r8cpj9XifObfLmkP/64F1ao
U6U/mcl9/GUZpj+kXYgoNLilP4dk0TNVaqM/JNZuJ36Onj+Nna9d5kKVP4ly
CkEM7Ik/fzH+VPIpfj+DR2UkMpVuP83PALEYIWA/Ya2TeHOmSz8+KSmc9CI5
PynRjF71dSc/BCFU4/YbFD9bgcXZ88/6PgAAAAAAAAAABxebHQ==
       "] -> 11.23, CompressedData["
1:eJxTTMoPSmVkYGDQBOKSN5/ra39PsH+12+ZFptNUe37xY0yT82faH1hzuEno
6hz709t5FvXIzrNnrTu4U95mrn3f81l7ttXPtlf5YnqNuWym/asvccFvz0y3
l21MXXd0+jR77yUR6xcxT7OvOO69oT5/qn1oWX3yzINT7A1VN4ttFp5i3zSz
KKVMd4q9jcEfU92Yqfa8btoLLlfNsJeKNuyd4DTX/sbHtKWTny20LxKqiUq7
vcz+/GzHqc/2rLZfez54/cJza+yjAq9Pnm260t7qib0Vv/oyqDlL7Rmz3OVm
2S6zv93AdKtcdbn9FbcQ2b0Xl9n72lxcdi93if0fTsH2b5wL7IPvseXEhk+z
X3SEa4J6W7e95JTgH8Jn6+3Xb1oxXUCqwH5qjmrWki0J9odr455ePOlrrzUt
e3ZTvLW9RGDJft/DmvanbKb7VwUJ28uB+T/tGKAAAJDRlfo=
       "] -> 11.41, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAABsPZQ+MAiRP8G6ZaBNRZU//e/oSrBumT9A
VF3Mx9KcP83VQUFzDp4/RwcnFx8bnT9p+o0x7FubP0IVCiaJYZk/270uiqS8
lz/wztqCZXqWP+VoR+226ZU/2QK0VwhZlT+1VNIKn7SUP5Gm8L01EJQ/wzaN
LKs3lD+uJeEz6nmVP2GMSbT4r5g/wm+uq8R9nT8ZeKR7HBmiP9x7QlDTNac/
mcwW2jIKrD8C4gU8RiitP9iD8zcYUak/gIr6SZ0hpj9jTfYNuj6lP8WvGyV2
FKY/4+wfYVn3pj8iX3fx2qGmPyGk/L4+PqQ/kZqMb+u5nz9h0c6BXEyWP9n8
gTDjLYs/A52AbuKLfz8qlJrvtAdwP+/UDKqKpWA/OCVs9RKYTT/TzZBZLvM7
PwFqkRbucCA/yRhITre6Ez9ydrW9SU76PgAAAAAAAAAAwZKY6w==
       "] -> 11.48, CompressedData["
1:eJxTTMoPSmVkYGDQBOL0CWyZE9gm2r8+4vfmiN9U+1Pba05vr5lp/yR639Po
fXPsH4PpufbXOufe6Jw7x973DUjhLHt53ksKvJdm2Ls1m3g0m0y3v6gAEphm
P+cGSOFU+0WOUkscpabas2aCLJhifwEsP8W+H2Rd5hT7KJCxT6faq5UlqZcl
zbRnAaubZ98EMu7EIqj+FfYOIEplLdT8dfafdO8D0Up7HpD1Cssg5r1cYn8d
7L6l9jog6aJl9nk/p+X/FFtmL2y9EYgW21uCKOH59itXgQDMXV32YOdMqLOf
mg/SkGfvAfZPgn0k2H3eUHEzKK1mLw42T9ieAQ0AANrGj+o=
       "] -> 11.43, CompressedData["
1:eJxTTMoPSmVkYGDQBOJF6zcXGGhMtPebznKzKW6qfVBla2BH1Ux7Vb02b7Uj
c+z5M2Y93XVxrv0unUn8k/fOsZ999O+3aXdn2a+Ibkwr+TDDfiVT6VKLoOn2
EocnSIdrTbPPW9pj4Lxgqj1DT8rPF5pT7d/k5FxynDnF3sk/47ku/xR7s4Qb
20Tiptjv3qAjcPfKVPs5OR9No+1n2ge0rJpiHTrPfiLjH9aepYvs16s5yz3+
udzexNSrnO3pGvvp2TW/tR6ttedqk8zdunWl/a8DixyrFJbZb2k4Iun/dYm9
04qSFZlrl9qXXf2idrF+GdQ9y+yVHB/0555dbN+yUUt4sfp8+8D1Flc8z021
r95eOv/a7C77xpnfxO9sr7PnPbhs2bf8fPsTNclMNdYJ9u8Z2M7u++ht/wFM
W9s/sWG5s3mnsv0rMC1s37eM9cJ7n192DFAAAB3Hmb8=
       "] -> 11.41, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAAA8YrZXvTSRP3fTSBVnXJU/xw50NX1wmT8B
HcqlSLqcP6lXo2h15p0/v77/fQP1nD+8+IbjRjmbPwN/C+dIPJk/4wDHc6aa
lz9LolOdbGGWP/gE5ztWy5U/jZ3hd9NIlT9J3NoCsKWUP/U+bqGZD5Q/wLwJ
Zkc9lD9DUeTZFIqVP4o7oDbTxpg/7bVtkLqrnT8clg0R+S+iPzY794feUqc/
ppEqzrgqrD9w++gkiDmtP8EgQb8Dd6k/i4kECvUppj+deUdkxjulP6246Z2X
DKY/q6QMMLntpj8XIO9hGo+mP9z9u4NwJqQ/jWVQKky8nz+AJLjYvjOWP9iw
UrwsH4s/7nvmKndnfz+dFRALCgJwP8sMfh3BuGA/NZ8u4ZqMTD8mYIynybs7
P4LpNWedkyM/DOJHNCcaGj8M4kc0Jxr6PgAAAAAAAAAA822UrA==
       "] -> 11.46, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAAAw9Y+TYzKRP75cHan0ZpU/pvzhVHt7mT9M
YGMKW8mcPy9lcsK46Z0/SLa6783vnD/OPDGr0yibP1nCpA4tKJk/g7uPpnaU
lz9QfUYAd1qWP2Al6WqrwJU/wgbGw4FAlT/TrmgutqaUPzflmRRTE5Q/iMl/
dS5AlD8PQQMK0JOVP7akhL+v4Zg/h52pWK7JnT8UT/PYhz+iP9zzxjxsdKc/
3d1bLiw5rD+V8Pc1HEOtPygnjJvecak/qgrSIzMnpj9EMXAK5TalPwNDCboo
B6Y/bHG/YD3kpj92GmUjHoSmP+EBtwskIKQ/VFBti0qqnz9Y0Zc1kQ2WPyZ1
aEHJCIs/Y6O7aLgjfz+lNFPsJddvP5QrwXkAn2A/9XyAASzWTD/M59wdDTw7
P00o8nKwbSY//v2qq3I5Ez+oUjk67qH5PgAAAAAAAAAAEKGTqg==
       "] -> 11.47, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAADL1+4MKACRP6IYhqeCMZU/35f/BoFNmT+o
3hwwW/mcP3ckWJ1S754/bo6ovzifnj9H0h+1aimdP6RHi5Ze85o/2TM1cxoY
mT+xd6xoTKKXP2jIETdg15Y/vdqUQNAhlj8KiU222TaVP1HTO5h8FpQ/eCoY
UwGhkz/vxj4djEaUP/zzf5SinJY/AfC9feiNmj8ZhqeCMRWgP/JfMcLlU6Q/
YJcOqY9yqD+DiL/EUMCpPx1MPgsK3ac/JhY0PjRPpj/GCTfDQ3+mP+qT2oNe
2qc/0s9q37PiqD/FbuMSjWqoP7JE5WK20aU/AcI33oYdoT+323b8steXP9wv
c1xgCY0/LOTrhxjQgD8ySLYbfwVxP0jY32oZ22E/4zRRViwFUD8JUMb6lLQ+
P9ICMuVJsyo/1ZvBHTtcFT/fm8EdO1z1PgAAAAAAAAAAIDiXTQ==
       "] -> 11.69, CompressedData["
1:eJxTTMoPSmVkYGDQBOKZAr6bcpgm2q/+z/t1avRUezWDKcd/h8+0zwo7f7qQ
d659LP/XP05359kfC9jVU98wz/7zlmRHzU9z7GeK/y6ouzDL/oB3oIYS20z7
lMC0dJHJ0+3f89Se1Ts5zf5j5v+9E6Wm2UsXqjXdsJpqH25aZtinMsW+Yv1x
9pztk+33Se68kF42xb5+dorDm5fT7B0nx53Z8G2W/Wn348U74xbYq/77ne94
Yom9VMb005/+rrBvl19dnm+1yv7vcq9rt3hX2N8W0b0ib7wMTr9Z/+vO6fLl
9l+kSl8UNqyw75rX4TVVYIX9tzjttd87l9ofDZrdEvx+gb1Jed40rY7p9klq
NeeyL/bY7wIrbLDPNAt92PS9wP5Y76FJn3cn2s/xnHzCIsHffhaYtrdfyDxj
5T8mPfst8VveL7wsar8fTLPaM0ABAEU1n60=
       "] -> 11.72, CompressedData["
1:eJxTTMoPSmVkYGDQBGKBR39Y02essz9ZUPiyiWWl/dXgRaFrdi+w/6IzZ8La
mgX2zbs38a5MXmgv7HWya4nXIjj9ueC8/+LORfZ/Xxub9/ctszdYrekyUXWZ
/ZXbHFemX11ir7ZD+/YEq2X2C2WEj0+1W2pfESCtPGXSUntD5cNHl3Ivsp+x
cN39lZYL7WV/TjZZr7HAvsdM/OuUjKUI8xvm+FTtnWVfJrM1oXTnbPvuLvGN
iSvn20e0v3uSyTrPfrqmaNzU4KlQcybar2lftXEV/0T7Cp4XyfNaJ9tvO7fi
Wrl1t/3LixcX5d+vsZ9h+Sgqp73WPi9Wdtfk5a32LWB/Ndqf0rHT6v1eZm9m
POFQjX2Wfe0Uv0ed88Ph9NwC4eak+nz7o195mKb/D4GLQ/gq9gxQAACxEZwn

       "] -> 4.28, CompressedData["
1:eJxTTMoPSmVkYGDQBOK6MOc3hr9W2luf/2xz/vMae8VvEn/XtK2wrxQ1fvHh
5VL72KM8VjVVS+2npkZOS41cZh/rd/C0ZsVK+yv/BDOVo1fbf2Wb0ql9d7U9
s/7yB09F1tjDzNuWexuIltlf2suY+shruT1Qcs+cpuX2K1xPxG9evMx+15ym
6cEfFtnrLQfL2M9+XjnveWWf/UOwunb7c6zLPvlZtNvvSXPXdfrXZf8s3fSI
3OJ++5yU7P8dWybaS5T8+KKVNsH+p/uS3py3/fZfwO7oti981s3OfbXTfreq
uSbjuzb7JSw7oosmN9mfc9v2rd+j2v4U2NxyqPpq+yVg95TZi7QlSrQlVtib
sII8UmL/qqW4ceWeYvsVYP1J9n/B6qOhtDecZoACAFN0oFU=
       "] -> 3.74, CompressedData["
1:eJxTTMoPSmVkYGDQBOIas53VB+eus6//Yi8lF7La3odtaed/3oX2ot3bvXrX
TrX38JB7vSh8in3/Pm/T7LzZ9hs89LKOxS62j52R4/JCeZk9U87chwG16+1n
J0YkvjNcYW/04/zE2O5F9rviXjz/yjbf/knKjUiu5AX2p8OYkzIeLLRffei1
9rnVC+2rU07cehaz0P7KrDN2ez0W2C9ZqmjnPGua/fWkjnsRLlPt53eEB+zo
6LZv3nRsRxXXDPuEBI0nzfKz7ZmYVSc+vjPD/u6Gtj1vPs6256o3OjfHc5L9
nFMXNkZfqoO781Eeb7Tnig77FkEujpWpbfazftwXaJw40b5L78pX4/KJ9p7L
E60ubppkv1N3y/c3WZPh9kH832jPAAXP+U9xS/ta2bcV+IZfP9Bif3ar28Zp
1g32HGB7m+xXgv3TaA8A9OCbrA==
       "] -> 3.44, CompressedData["
1:eJxTTMoPSmVkYGDQBOIFb/2KpZfMsU+2mXPDtmW2fZvgnuytvLPhfOc7O/Y+
vzTPXpXlbXQgx0J7pUMuQTerFtvXs+WXbZu2zD5KoPpek9sKe4PkRUe2Tlhp
z9vXZGjHvsp+874prU2HV9qfVH0tcrxxhb3xUq9zunLL7TmtpPbd+LrU3mbe
9Uh7waX2a65IT7UXXmLfrXCBrSVgsf3vMBGnlqBF9oL7si6eEFhoP83KcHog
1wJ7ZU9HkxfX5tjf2NIhu014hv1c17qegMYp9rMuOIror5xov1qyIPfaw377
J6HP+idp9tmvenb7n870LvuC8ou5x1na7V3LJjyYYttin90bUdsS0mivBDav
xl6vpexkYXiF/dP3ezfZTym252Zv89dfXWD/+98TDf/SLHt33dIkvcUp9mvN
ZywuTk+wZz4TsGupVqj9Bbf9ks0e7vYMUAAArsyS4g==
       "] -> 4.8, CompressedData["
1:eJxTTMoPSmVkYGDQBGKJKNZj8z4tsD+yZHXr/s759k5dv6PUuufYL1HcEdye
NceeOdm/smPnAvvpCVKSxu2L7fs5bTud5y2z/61jnn4seaV9oKGrp6bMavuQ
yOofRh9W21fJb3wU2rfa3vdr8SGpeyvtv945xbF593J7LS+vhzdeLbU/0hVu
mWe+1L5t4qxqNaUl9s2ZKWdk/BbbT7F4kqm5eZH9ks8n9A3XLbRnKDOa8vfU
fHv95Q+eiuyZAzVvpv313KJ19WxT7e9v2JKW1TrRPv7pjrsh1/rsZ2+zfzNJ
vN9+lw5nxSLeXvuGsr4i1/IOe+OthzzO2jbb10U3AW2qsV/wJvxfSG6Z/b0b
r0RLIovs3Q8I5754UAyn300+f7s6pBCqP8NeWsTovNjUOPsOsD43ewYoeOa3
ZWGzv4P98iTFrpRkF3sAI26Z4Q==
       "] -> 5.13, CompressedData["
1:eJxTTMoPSmVkYGDQBOIQCXbWDdYL7Q+XpdbP91lo/3vpFBvx0IX2R7Ysqkvk
X2SvaaEyj+vTYvtZQn/F6jqW2k8yV9hjHrXc/lp53IX9cSvt390/0jCLb7X9
nw+Xr6/iWmtf/uTYKrVJa+1BuoVU1trX71/MmntgtT3v8t5e8/SV9gVf7mwQ
q1luf8lR58rXCUvtm1ZNS1t8YzHcvlhDxfgdOgvsP0Tb18tNmWOfHm4bOklg
lv3lvcsuVYpNt3/6/Wln09uJ9lu/3T16Z2+HfXCYC0vRv0b7cNl/czst6+2z
/Y2CZknX2rP0FRvrl1XZX7VUvPh3doX9p5b8+2L5pfZnPc2vv20tss8Fq8u1
V7550NHDM93+mIFs7dMpyfZPnFRVxRbH2htzf/saoR1qz1AaeVOt1dveGsx3
tfe31VqVyetsLwL2j6U9AxQAAL67k8E=
       "] -> 5.59, CompressedData["
1:eJxTTMoPSmVkYGDQBGKXf5GpczgX2m+aXpM/qWs+nN5gdK7F4+VC+4bJIX9s
rJfaM/jL+J1sWG7/bMe5l98ur7ZfNm2T0N5va+z9Xk5U/Viz1j69ZJp1s+Q6
+6SCp+EXH62zFz6tZpR5ba19ScPKZzP2rrY/qMNQ3r94hX11/2KJbpZl9obv
pl67orfE/rT96h5jxUX2jjWNxc55C+1fbjSrz/g13/7YcgeQy+yTqvWWCX6e
af/m+Anpl1LT7BN7+eMf3Jlg//ywuIX5kzZ77eJQf67cBvuM+vudhzUr7RfP
9ar1vlABtafMnvmObV+STpH97d1bCy6XZdifMkmy+yyQbq/96sknpR8p9gvV
dt80ck2xT5l4wGmScAJUfZL9u5BX0U3HEuyTweZ62r8E8x3shZJBCp3tXQst
VJnj1OwZoAAAI4CZwA==
       "] -> 5.44, CompressedData["
1:eJxTTMoPSmVkYGDQBOIq2TPqszoX2G+pry2UeLvQXtR0yTOJV4vtr5V1H0u7
uMzeRkE6fMLtVfZGPzfkP9NeZ599c5KUyK4N9kkJMXIsTzfaWzz9Vxmctcn+
nrKjQk3VJrh4vtbDuV/XbrCPPxozvWLWWnvbc35OWttW2D/P+LGvrXqJvd2T
hhfnLBbY/5I+y+Y/Yaa9NMPy731Ppth/6k9aZqA90f77tP+qGSd67BsuzZmU
zdhlXyJsmHbmZxvUnY32jWDxKnvr+M3sLwqK7eVaS26UrimE0xB1hfYzlto5
LdMosBc7u1SbzynLvjx/hg3D+iR7Lj6r/3lW4VBxL/uTC99+VnK3sY/6EZv8
00bDvhasT8C+B0wrwGmYOIxmgAIA1tORlA==
       "] -> 5.92, CompressedData["
1:eJxTTMoPSmVkYGDQBGLGkCXJ13cvsJ/2hOFklvwi+/+Z4m8SpZfYL753ZPW7
38vs88rsp55mWW3/Kigy/2zOOvs/Dz6yHTuzwV6FZb+B2NeN9r+ztb27azbZ
b5+61NWuc5P9MluJ+/PebLR31dLKVFm/wX598qFL5h1r7TceEmV7UbHC/te3
lP4AnSX2DY+3Xkm4MN9+ssDzm/X3ZtgzZIHsnWIvz3a53z5sgv3dx+cu8Dl0
28/95j150Z4O+6Krk05Uf221v+IRp2gd0mivJ/Jttophlf3rub6VMvEl9tbn
SlyMAorhtLDZw7jl14vtF5xKber9W2jv5++1VkMq1/7qxWa264tS7DMrgr98
SY20V9u+7fjchb5Q2tY+ASyuaX/1V4/v4ncC9k/BtAKchokzoAEAaWqcBA==

       "] -> 6.16, CompressedData["
1:eJxTTMoPSmVkYGDQBOKkyZ+4/wrOs9+2pUX2/eEF9qtnWYWeernIfqr551UT
zy21jz3F4KjXudLePX3ntK+5a+ydOt19Lj1fZ39UOm8fs/4G+6yfpzqWJ2yw
z7h97+Qysw32jG52m3t11tv7LJ4o8v3gGvuIPo3DOqYr7TPbnlwtmbrE/vv3
3m3G9QvsNS586fzLN9P+msw0gR+7J9nPnaWs7lDZa193ZTVD5OYO+6Wvq1Wm
nWqzv/20/fYxl3Z7nst5ek8vdtgz7lRJO/C9y15wTsLPzVG99g27KtL2eU6w
X6jUFXnccZJ9HJ/JrcK3k+1vtyuueFE2xf6jpEyOwM9J9ufbuari2PrtH35a
Y3/TsM2eAWxOlb1VjdKL/b/y7dmaxAz7G+LtLayn+1dYBdg/3T2Pa8UuK/ta
ifsz54gb22u+sgtSeqlmn9r775BuD589AxoAADq5mHw=
       "] -> 6.75, CompressedData["
1:eJxTTMoPSmVkYGDQBOLwp26rxXvm2d9SvvyO02ihPYe76+mG+YvtH9We2nj4
4jL7n03PK6S3rLJXlZgjwb14rf1l1gM7gtU32JvvmRBe/Q1IfzXcaW6+0Z7l
cpZ3gsBGe5VrhqaVqRvsp56PZLW2XGdfctL/w63+VfYJD9YumrhqqX383axy
r7CF9vytB0V0nGbZc4Ltm2yv95f3LUtun/3+C6cERRk77R3vPttREdpmr/u9
fVrZkVb7hKAPqVw6bfZHOA6yGP1us399pc7TTLbDviycVzeJr8v+m9fH1n87
e+ydHufws//rszcLOdRSvqPffgZYYa+9h8nsgNcL2u0TsjW2XLzSYL81KuKq
T0qJPZdXx7fjn9PtOcF0uH1faZJT40wP+/IC12rN7Sb2uzReWOwTkrevAfNZ
7BmgAJ0PAOAqj+A=
       "] -> 7.11, CompressedData["
1:eJxTTMoPSmVkYGDQBOLpl/ZdfxI53752y1J1n6aF9jsKeW7pf1hsf+P9zHNZ
2svtT1lm6jpqrLb39pCPexS4zj5K5ELswYkb7DP3H/CfULbR3nbDH51Fpzfa
d3o7TPRZt9E+/P3VV17/NtivPr54/YLU9fbfY5pv/O1ebb+rQ4RBtX2Z/Z/V
wUY/RBbZZ6x0+HjLcrZ9Ab9k4anIKfYzwO7ot3/W+ezqRNNO+6vH3+49u7PV
XniHg8HK7S32M38+UnAqbLGXs24VvK3VYu+u6n8wyKnF/oGX0fz/Oq32gtN+
REUytdtLff+SZn2gw94irsq0MaXTfoudgpRFQrs9d7iLyvGfTfYTJ3MtDAqs
tt+95MdM9YYCe2NHvit2gsn2JmA62N4MTDvby2xO2TM7VNf+scark+vLxaE0
uz0DDgAA1ASQvg==
       "] -> 6.81, CompressedData["
1:eJxTTMoPSmVkYGDQBOJzghdWfrObY79Qv3CZ0pf59o6OAZLGNovsObWS29yV
ltr/+Ky39lTnCnvzQ1VBwRyr7f3X89rlsq61375AYUWP5Dr7yHShWfnG6+yX
vuN4Gr9yrX0re/Ik6aw19ltVbPfdcVxlXxfA0lDHutw+S4nz8sK9i+xnf/la
a5o+zz55yc1Q9eDp9u77bvp43J1oL3fFUfaKY6/98/8c90tZu+wTnjqKv5rb
ab9i7QLluXHdUHv67Hm0OS+seT3BfkaD9wHVB5PsV34IqdCymWovLvuYy/zu
dKj+WfYnroU0cm6aBXX/DPvLwjK2By9Ott/2SG/zFt0ee/8dbzYXyTfa/y+M
03L9Umz/D0wn2296lX4/pC7EvkJMf+E3R0f79QuPffz4SNM+H8xXtGfAAQDG
SI3p
       "] -> 7.06, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAABY538GIVmWP5uTXOrpPZo/psMeGhC0nj9u
rnLuXO2hP15B7mkvxKQ/S0h5WXh9pj9cc3CSqnanPzt8u3pIbKc/AXSwOhzg
pj91JY1gchCmP0MD4Q/eDKU/iku5orCMoz81pmeuMGGhP0k4bjb4/5w/tXIw
6jgNmD8Hb+VDKGOTP1MRLDoJTpA/u0iEtlAYjj8C8JWjJYCOP6Bx5eTuCJE/
53cwLMZYkz8csr2UbZeWPx5wMElyZ5o//Tbu5RQtnj/TwEhnCkKhP2lUBItO
gqM/KMXTtYxVpT+BxJMNG+ylP0UwmEFlQqQ/RXIljWByoD+qAOFuF2eXP6dk
5b8NzIw/XoN7tSr0gD8hTrlDdzJxPzN5sHypK2I/EiPCCkU5UD/kmacxwY08
P7zRaUQ79Sk/FWLlHkcmHz9jQe5pL8QEPwAAAAAAAAAAiGmMcQ==
       "] -> 7.78, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAACZ3yigOiyVP8pCY8fmHJk/PLhiMFVxnT9m
fO54jjuhPxt5BuU95aM/zW6igVx/pT+c5qRvyzumP9Qzhhl1D6Y/ruW/YHtN
pT/U6nESbICkPzQ9BW4Gh6M/otBL8sgeoj8Jn67eciagPwuePBCyD5s/53u1
ES6wlj/uZVyUK5OSP/WYFx4yBZA/hY8LCjBljj/3cuJkjJuPP+egePwSA5I/
9XNUM02ylD9KHtlDYlWYP0M0MsFkcpw/0VHNNMlSoD+qlS+K4a6iP41c3T+a
G6U/f2Q+HnsZpz+RrG0WNLqnP78t71g07qU/u5RKe5HAoT/1TpFIaF+ZPzDA
ww42b48/SvqHJz4Zgj90Braov1tyP66cq1lyvmM/ytX9o7lRUT/q6Bo1W3s+
P328L9P1tSs/sQqDS2CgID+XY1kPKysGPwAAAAAAAAAAw0KStg==
       "] -> 8.07, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAADUUdy5Z86UP+BuGuoNpZg/+uwDfrMBnT8R
Zsw6LPKgP558U96TiqM/pDPgHNILpT+rO0io5rilPyWLcvbmdaU/suVmzae9
pD/a+/reKNOjP05DvaEU46I/Yp9id6uZoT/f5j+DW0afP0xqB+6LWJo/4WGs
0JAolj/VRG6g6lGSP1rljoSF148/kK2pRtyejj/wSjKbQg2QPxgdWXlqc5I/
CnhA4hE+lT8/WjfXYv6YP+06fc3dT50/rCFsdey/oD+sLtqOaTyjPxfZ60UR
xKU/dCJSmbnFpz/FW+jVOG2oP2G5PqqlkqY/s9j4sypBoj8JkhwVDDeaP8iF
edaXI5A/ueBgPz/ugj/hpRkE6tdyP7k+qqWSlmQ/afilT5ZyUT9p6PCBMbU+
P3uNCRmK6is/sCFsdey/ID+W1zpHO1UGPwAAAAAAAAAAE7WfWg==
       "] -> 8.21, CompressedData["
1:eJxTTMoPSmVkYGDQBOKy8Ekt3A9n2Qt7mRR0N8yz13u6RT2md6G9Qe0RzmlZ
S+zT5+psNL+33D7gY/8G24JV9pG5dbYKRWvs2X8LGp7NWWufumdBzb3WtfZ9
X68xdXCstVd5qlqx4/Zq+z3LV8w/cmClfahtfOWa7cvsX06Zx7N47SL7sONi
NzP85tnrsGh+ZjKdbh9gxcMc+3qifeQsr26XhF77yXlFktJ2XXD6iutbWccX
3fbfjUJuVyv325t+i1fQXDDR3nfKknlLj0+2t/65aVpFzjT7pw/uqeY5z7RP
T+J4OHXlbHuOc66PV9TNsfcDu3uWvc2ZZx4hdVPt77xb/sP9Rp+9BI/PTVvD
Zvs75ire6cFl9nfBdJq9h8fVq2YN4fbNMn+TeeNc7BezCa7+ccYISivBaf24
g33egpz2DFAAAHMXkaQ=
       "] -> 7.57, CompressedData["
1:eJxTTMoPSmVkYGDQBOKLgsuzWewm22suz8t4xzXdPtLJ77ZF+mz7IxpLuHZ8
m28fE/jWuiJokf2UD39TP/UvtjdcPV9e7s1i+1zzRyfnhS+2vxRUHBlQtsh+
psfJrvTqhfb/kqOkJGctsK/omS/9jmG+/bkbViGLzs6235giE3tq3XT7etnr
4UdjptgLbH3hsy5mor1GHlNgz6x+e+uph8/8u95v/2KCMc+btIlwddY//sxq
PjvdfvmWVuEH12fb/zv3eV97+AL76GfB0zmnLrL/fHdCe6DHUvukjRLm11lX
2PMKPp5wV2+V/d5PrseqT6yyF5xcnVM6f4X95NaUg82XFtvLeBf1eNrNsS9S
EfFa2jrRnmPj9ql11S32+v8te5O/ldjf5cqqVBFNs2/8zLlw0fVg+5e7GA7z
vXG0fw6mDe15wepVoLSIPQMUAAAGbJr8
       "] -> 8.49, CompressedData["
1:eJxTTMoPSmVkYGDQBOLJt46vbjw02d7vc47y1v7p9r++Fmja3Z1t7/PxZVxf
6AL794+vOjy8uMje9XlUxxmjJfbmF3eKKW1eYh/d5pmnarHEnpNHaPaLmMX2
1tedUqYlLrJfXW9/369sof3PEv3jWg4L7JsPLS7dwDHXPoqVA6hyhv2nDFkd
p8dT7DWsQBom2guKLSxcVd9vf1Rlu5CMVr/9a6CtDQcm2B8BaeudbP/8pluW
/PppUHfMst838xlQZL59sfbBhZ9eL7RfVm58dnPvEnsJkDH2y+1dgK6YFL3S
fm7mvNwl31ba3zioZOL3dbn9aT23l3d9FtvHAH3hUzTbnhfkbO6J9uIKBh45
i5rtGev3zX2TVGL/OKhm1/TkVPuOEzqHVbYH2evY3T29kcvBvg3MN7J/CZZn
tWdAAwAUuZYX
       "] -> 8.58, CompressedData["
1:eJxTTMoPSmVkYGDQBOJDS8PU59tOti9sPdjF/mOa/ZI9psuVFWbb2x32s35y
er7900NR0/0cF9mX8momF9Yvtpc19PxnfWax/W3d3Rnr1Bfb/9BI47hlsMhe
o0tGcqLmQnsrR1GJrbYL7N+e+T3pedg8+xkVzWwy2rPtVd9OPnbTcrr9K4WG
atkfk+3FVARXsFpNtI/03lzzeWu/fU7gvVmXBSfYL9l/hvHgnIn2v4Rd+3pO
TLF/6a4tKu0zw/7Lpg5/halz7E/cuVBYsGCBvd4Lx7/xDxbZS+eKCrV3LIWq
W2FfKr+5STF7lf2pDp9Oq/+r7GOjm3SPH1kBtXexvQk7S7Fb3By4PTkVnSYX
U1vsLTIObNw0scR+8bPy2fs+pNqff8lxYplRsP1FMO1sH/Qg1Oldjrb9CrA8
K5xmgAIAe/2W+A==
       "] -> 8.67, CompressedData["
1:eJxTTMoPSmVkYGDQBOInps2VGmZT7RdlWeRlv5thX3wgr38rz1z7LWr7LrW+
WmC/o5a1ZEvjYnu9cxMuVf5dYr988+kXtzcttf/ofdNRt2qp/RLbAJuyU0vs
z85rW7D7+WJ718VfD4a8W2Svy/PzxfP5C+2n3RCs7Eqdb+8yqfTu7fxZ9ofv
l1c+tZpm/3/+dIUFCZPsOTcrar/60W9fstCqpW53n72JWUSEovAEuDy6+4CO
EOGzmmsflqvvq7t3gb36o5mV63QWw91lbcB8Y9W25fYsO8tWJ4SusL/49azj
q7pl9iX84V1zdBfZN4jo5ml8ngm3p7Bq+aX/n5ugdJH9oX+rW2R6UuxD/X47
fssOsr9bIH/pto69fVJzq6gRo6G9/PqY405rxOw5wDSbPQMUAACT4Z2c
       "] -> 8.34, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAADo7d3zyT2TP5b5EVDw/5Y/5OQS98AVmz/h
E4efxnSfP2I9V21b9KE/EUwkcy8Zoz/J8z0r71ejP4k0pJWasKI/njGX/hDA
oT/K9tbUnLqgP3OPrTPm0p8/zBkt4P3HnT9QaexiobeaP6JduAZ79ZY/QHXE
9jPQkz9AeF2g4TKRP2krB31b3Y8/SBGqUs1MkD843xDu9RiSP4P/t5AnU5U/
StM4WmMAmT90kkbdkzWdP5pmPfpx5KA//7UqYd8ooz/iuPHuVuClP7yJZSEJ
nag/TDeZB9y8qj+kvn8KRk+rP0Sh5f6dBak/5YbknKMepD9AN1P+yYOcP7wr
N8frpZE/WwhraOiWhD/LV57YZxR1P9uGnpOR5WU/PKpq8pT0Uj/76tBcQE1C
PwDiBWA3JSo/AOg3s5LqBD8AAAAAAAAAAAAAAAAAAAAAbxWeZQ==
       "] -> 8.64, CompressedData["
1:eJxTTMoPSmVkYGDQBOIfFpXVGpyT7Ce8KPupLTzNfuNk64KFYbPsK6qnJuoc
nWd/QdX2AkPKQvtGE4eSWU6L7AVC1U1zrBfZv0vjDloSutDe0Mvw4ovYBfav
otYtiDozz17QMj9wpsdce4XfjR5TJs2238LNd/2O4kx7Wy8dm4V/p9q/n93m
01s32f4UgyzHwiUT7Xdw9ovtNZxof/lSl6FqxCR7Foek+VOfTrF31vk6fZ3U
THuHwtNHFNbOtV/09kFM5f8F9ufWZmUenbHI/q6O2pdchyX2wvtltex6l9l3
78moEBdfaZ95PO7OrC+r7AVYvoRtkF9tH9PCwzph0wr7uxn9y7mXLbZn2rX5
2IcFs+1Ts10ijWQm2r8sS2vR3d9sb/phQmWEaIn9kvDrgd6BqVDxYCjtbP8K
TBvbr5qlt2/uZ0V75yO1yX928NgzQAEArjGTDg==
       "] -> 8.95, CompressedData["
1:eJxTTMoPSmVkYGDQBOK5xxwuhGRMti8Vv1u+NGO6vTRrieP+k7Ptf1u8Lb/p
ucDezOTUlS/7FtmzKS9+0vV3sb3VoqKTKWlL7LOTrT/JnlxsnykYyxL4epH9
WVNtbse3C+2nFz3anc290D7K4ulqhUvz7ZuZhbmLZ8+xF9r7q7M7aIb9lbNM
XaqHp9jPUGr5smvNRHv1v32GTo/6oer77ZMXb+F/6DzRPse6p++o5BT70tVb
VgY6TLdvWHx+5pWI2fYJzoXznBgX2Kcn7j7N6LXI3kaGQbrr8xL7sp2SuspL
l9s/Ev+TXrpzpf2T6NJLBUar7AWfrnz7mHGFfZb8oXalgMX2DebLTzcYzLbX
V3mqxX57gv28eRNz/uxotrdkMBN5rllib5NQ2dqak2qfuXnmznPqwfZZYNrZ
flba37htqkb2dmB1Kvb/zhxZ2aooYM8ABQBMNZTj
       "] -> 8.79, CompressedData["
1:eJxTTMoPSmVkYGDQBOJ8xR6WjRmT7Zmr+erMtKfbzxOdmHoqdLb9gQvCLalb
5tt/cPUObOBcZL/zy2sJdcXF9nGya2QNkhbb5y7O5hedv8ieg5d7Y/G6hfaF
WVzz/FctgOub1C0EVDrX/uPqC582rZll/7DIb4OJ3HT7O1Vnbh/5Ptne6U7X
vYyEifaZmlwGjk4T7CcXncoO3D7B/leb9/6+wkn2z7fzmnB/nmpvySgg1Dt7
pv23xUHHlS7Ptd+7u2t5os5Cex5On9mrHRfbX9+s69v1Zqn9obTzZ7KWrLA/
v1hAdeP8Vfbb7wQc3ftrlX1DmL9hetcKe1U/nQ9WGxbbLw+bePnG3tn2EpNP
LYp4PcHeLIjn+u5tzVC62P6qKW/EO6VU+/nruY9M3xRkv9mQZ8GWJmf7DWDa
2N7DSaBhNrOWPQMaAADOSpCc
       "] -> 8.96, CompressedData["
1:eJxTTMoPSmVkYGDQBGJBpR/asRWT7L+lc2qJFUyzX/Awv2nutln2qq9yz24J
mW//t0dndfy1hfaLp5hKX3y6yP4Xg33NdY7F9pVL1JmErBfZdzUc6WtxXGgv
qO/gP815gX2ZYDT3Cr759k6x3Yfbfsyxz392To/dZpZ9Zdf03fOXTLO39OnX
jdgz2V6bU+PzMr+J9pu2L968I2CCvbW8X0bouwn2zrIz6z9/mmTvd0WoW2by
NPu7a6U0zqfPst90l3Xjzf3z7JX/Tdlxvm6h/ZkWZ5MJExbbX94jbpKlt8ze
MPHrFK/3K+xVWP4Jq79eZd95YNslcffV9tJsm/90PFthv1z4tprCi8X25U8k
3ZY6zLEP379GWSthov3/+iftatwt9u3P+2wOryixf3P3wuP3c1Ptj9mrC9aq
B9urfPSZOm2zs/067W0tBs2G9pvAtCKUZrRngAIATdKVaA==
       "] -> 9.07, CompressedData["
1:eJxTTMoPSmVkYGDQBOJdbU8yeXkn28uZV3ns+D7N/kfWmYu7nWfbW/x5K3bl
13z7i/XZIjFei+yF9x0zu9e42H6VwpVtD04ttl+T8L3qpNhi+18fjR6q6y6y
92zOc29zXmjfHO12vC5jgb11jcn8pZPm2S9ps7VQqZtt7/dnisfezun2nK91
qi9bTbHXNZ+S+S9son1S3tbH8+/227/5YeFeIz/BftGuAJHwHRPtLTa4V984
M8XenJlvXp7PDHuP8yKPGwvn2Ee+rPu1qXWBPduNP9zN1xfZG9xdu/9s61J7
7z2FLVdsV9i7/WG3kIpaZd/8nF89+dEq+wP2evq681fYL+mN3b/v/GL799ON
xDb+mW0v9Hpnd1nWRHs1c/bIaPUW+yQlfo8l60vsRSdefug6M9Ve6clmVaWK
YHtFMO0MpY3tLa71WhibyNozoAEAZOeTTg==
       "] -> 9.13, CompressedData["
1:eJxTTMoPSmVkYGDQBOIqmwka/t0T7EXWOxk9kp5q/8dn+sHzJTPtA7jMsvlO
zbE/UjCL9ULWXPvTzzS0r32fbe9mW2Sy/NtM+x7FX5YTpWbYm623NTm2dpp9
3HzZpTvnTrW3Uz0TecZqqj3Lp5k92a+m2J/al76fa9YUe4lXnK6pSVPsX1ns
5PrxZ4q9W86zmzb3p9l/vsYx5+TzWfYOnHHR76wW2M9qzz23jHWJffV6Y4u+
iyvtxZ5azZ3zc539CqY56hdS19sfWPjJJr10lf2MS/5FUu+W2k/tDExYob7E
Plw6ouHIhCX2wQ8m5Dp6LbUvn7ry9MbPS+zzuq0+HN2+yN7nfF5Ed/Nc+5xr
MlMsF0yxf9P/TjrSudP+56Nozu2utfYbKrR8r33KtZdfcvyKiG+8/f+IV3p7
L3nbM0aCaGsorW3P1hF3JWi3BJT+YccABQAlAJvB
       "] -> 9.99, CompressedData["
1:eJxTTMoPSmVkYGDQBOLcZIeU9BMT7ePnLv9oeHOqvbxnjEQ88yz7tZX3r9sW
zrNnvHplZtDfBfYLP346xbJ+oX3bdAmJ9IkL7b2mx295v2aBvaz0mYUL0+bb
39zd6zB/3Vz7WU2B96y859h//KyzYd3sWfYuOq3Nprkz7L+571fl6p1q/zjA
UIc9fbK99dXevycfTrRfyFJyKvjmRPtaRe/42vzJ9qkvV7/PbZpmf+zIf7c5
HbPtE3dsy1jgvcDegU/wz7aERfbTM5YInUlabJ/j82MFR9USe0lG+WtGdcvs
109557fm8Qp71akJYrPXrLLnS+xImv14lb3WU+0LzypX2D9N3qQdNnEx3FyI
vybYN7r7xkkfabZ/vX6b5iSrEvv9DZ0H6tVT7d2iRH994gy2b8r1j90p4WLv
DuYb2+8Fy6vaXzReaJz2RsCeAQoAnC+apQ==
       "] -> 9.39, CompressedData["
1:eJxTTMoPSmVkYGDQBGKvNi390LxJ9gwzgzdxZ02zj3/s0NmxeZZ99RKVb/nB
8+25wq6czLm90P6uBPP7Ra8X2VuH/LO8IbbYnqErUe2I9yL7tJaTx6tCF9o7
xkt43I9aYO/0vFe/2XK+/dxEg6diknPtM9dv1jF0nmU/feLTw7rrp9mzLck9
ILRusv3i5ZIPrM0n2kexsNwJ155gP9skytFh3wT7R3V7HMo3T7J/G6lYkJ44
zf7Z1+DYzWyz7Gv/Xv8lkzXPnumxiHZh0kL7qZoOxpZVi+3POZbZfhZfZh8Q
Vhpgd2OF/cXYPLGk56vsbYseBaYHr7ZXKwqvUvy/wv7VjBO3joousf/79Z7J
z6g59m1zSn69mzfR/v6ZUHPZthb7gwc3BF54W2KfseDggpcqafYbbhuK3Pwd
DJV3sW96xftxSqGx/VnVupQWD0UozWjPAAUAKEuV/A==
       "] -> 9.34, CompressedData["
1:eJxTTMoPSmVkYGDQBOI2hbNR6Zcn2F85lr44xWOq/bzOKNb49pn2zw/eyO99
Psc+08c3PfLYXPuA77H/3Zvm2Jv9XtiWO3WWfd6XFJUre2bY2+9YZNTgOd0+
PPDOLAP1afa5Ex8Jr1o71d71sA2Dqv9Ue06+I0mxB6fYP7KX87+RNMU+mtm5
ct7VKfZ8ymsDv9ZNs6/TvHh+he0s+8X+8Wqbl8631zne0O6VtNje9Wy3ogT7
SntG8RPX52mvsw/cLPx/xYt19oZHJouzca+yX1DP/ST7/FJ7u1AFpTCrJfaX
+iNN/u5dYs+k6i/a0bHUXsdHQ8LFbqn91D+s4qx/F9lvUPQ8GCs+z/7+s1fx
C7mn2qvkMr1J3Ntpv8fxTO2sW7X2bb/y9y1MzLMP675eeYcjwT7xnkFn10Yf
+2QwbWMPcq2Yo4q9xaGPwcWM0vauYPq3HQMUAAAse5KD
       "] -> 10.36, CompressedData["
1:eJxTTMoPSmVkYGDQBOKWwGORi89NsGdbVr9ySeJU+2XC/6+HzJxpvzB0X9Om
nXPsp06zT/a5P8fe6mn5nLhns+y/b1wrYrtohv0CoYO8E+dNsxe8I/Ay03Gq
fcz9b635UVPss9STW8v0p9gXekuy/pJE0AkfL7pu9J9iz+Po4dkeONXeNFd9
k/Wz6fbr52o17eybY3/uK/eZ6+UL7T9bxmpJLVpq/zGr/v7P46vtFz6cF7Gx
YoP9IR6H7wuFNthzvqyRO1az2v6ov23OYd1l9j1BLCrpJxfbs312ETG5s9g+
8qz0Md3UJfa/92y+kvdnsf3mdwprs04stL9Zmt9wjneO/WzlOGb+mZPttQ80
B4kzdti/cjsZX3a32v7Mtg8JGcY59rFlfakG3bH2dt+DYhbc9rJfb741/Eaz
pf29ygUOH84o2TP/vO3ZUCMKpb/aMUABABDFmiU=
       "] -> 10.68, CompressedData["
1:eJxTTMoPSmVkYGDQBOKJc55lf30zwf5gfyDnj7ip9nl1s84er55pf1h0rsHl
njn21ud8jzusnmNfN0HJaPKFWfYlLF/ftk2ZYa9izLm2ceE0e8/rC4q6HKba
Z1twrzAOnmJfdXxlVYTYFHtG/p+PX32fbB+8QEN55dPJ9vFvZqbmyUyxvyj3
4baM0lR7xkvzym/0Tbc/GnHqgJHkHPsmXo+ZFzQXQs1bav+FdZnFwqTV9i8P
3+8+UrIBTou1v3v3tny1Pc9sNY3vxsvsLY5K8O1/vdh+6qKd/U4CS+ynsx5d
4Dp/iX1D7iPp3YZL7Kcl/e39zbXIfttJ7Xe8YXPsbz0v77E+Ptn+w/9LIiH2
HfZ/+V69YuOtsb/7YY3r3rYce3GtbYwWPHH24ZkLbz2e7wV1h7V98+TJB1aH
a9h3gmkJKP3DjgEKAEU6nt4=
       "] -> 10.33, CompressedData["
1:eJxTTMoPSmVkYGDQBOLnIiIlqy5PsL9WdoWHuWSqvYn7QXnX3TPt3Rn+qoaf
nWPvmGp4hf/uHPsnv603dhybZT/jX8lVucIZ9gbxL/g4q6bZv609tzRddap9
y5Hwdd1+U+ztTgaLqEhNsX+WqGg8X2WKfe+vd4FS+lPsSz9/2bG1doq9Au+S
HxtnTLX3z1j6Mt9nhv2lbyxRamZz7SWml6wTvL7Q/sK5yYtuCC+zFylUv8wT
tcZ+k6HcG68NG+z3lmit2MOwwd5/66YVKXNX23+bWS1hoLbMXrRANDWjfbH9
DNvfvD31i+2LUufVB/5dbL+X43Hz44mL7U0trWburVho//OFt6T6jNn2N1et
yOs3nmx/u2K6H+vUdvuL/bxZ2azV9i33g32/MeTYX5t4YXWuWqz97kV/Gc8a
e9nvAdNWUFrLntHfcLbtNxEo/cWOAQoAjxCV/A==
       "] -> 9.6}, DistanceFunction -> $CellContext`emd]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.899888098093453*^9},
 CellLabel->
  "Out[618]=",ExpressionUUID->"56ab5c0d-f102-4803-905c-abbca172714a"]
}, Open  ]],

Cell["This takes about 10 minutes on the old laptop...", "Text",
 CellChangeTimes->{{3.899888655135714*^9, 
  3.8998886623026876`*^9}},ExpressionUUID->"80ed21d5-ad72-4e9c-97de-\
775e7026163d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pred", "=", 
   RowBox[{"ParallelMap", "[", 
    RowBox[{"ot", ",", 
     RowBox[{"testData", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.899888109284885*^9, 3.899888118921826*^9}, {
  3.899888171515312*^9, 3.899888171954126*^9}, {3.899888207267848*^9, 
  3.89988821097955*^9}, {3.8998882760503693`*^9, 3.89988833628459*^9}},
 CellLabel->
  "In[625]:=",ExpressionUUID->"912eb1c9-abff-4725-a19d-940aa94978c5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"obs", "=", 
    RowBox[{"testData", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"mad", " ", "=", " ", 
  RowBox[{"Around", "@", 
   RowBox[{"Abs", "[", 
    RowBox[{"obs", "-", 
     RowBox[{"Flatten", "[", "pred", "]"}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Correlation", "[", 
    RowBox[{"obs", ",", 
     RowBox[{"Flatten", "[", "pred", "]"}]}], "]"}], "^", "2"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Flatten", "[", "pred", "]"}], ",", "obs"}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"AspectRatio", "->", "1"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.899888361172328*^9, 3.899888402234507*^9}, {
  3.8998885091337433`*^9, 3.899888530858067*^9}, {3.899888941049053*^9, 
  3.899888959054881*^9}, {3.8998890493409367`*^9, 
  3.8998890651629744`*^9}},ExpressionUUID->"1e085ae8-889e-457a-92fb-\
9653de14757f"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[{"0.7", "0.6"},
   "Around"],
  Around[0.6975428571428571, 0.568152093469371]]], "Output",
 CellChangeTimes->{{3.899888931279151*^9, 3.899888959385603*^9}, 
   3.8998890539077177`*^9},
 CellLabel->
  "Out[639]=",ExpressionUUID->"abac8f41-4a0a-477c-8523-7bf6bcbc4bf3"],

Cell[BoxData["0.4002813788795966`"], "Output",
 CellChangeTimes->{{3.899888931279151*^9, 3.899888959385603*^9}, 
   3.8998890539178953`*^9},
 CellLabel->
  "Out[640]=",ExpressionUUID->"36db9efd-a9a8-4355-b228-79f71b3b9786"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJx1ViFwFEEQ/MJQlaq4fG5v9+5+PypoDCZV60BgEoN5A1VgEAQLOjoaBAZ0
EJgYTLCgozEYsCBQ/G1P99RdiqtK7nd3dqa7Z3b21k9enDy9tVgsPm7/xvfJ
5XD28ziXvYv731/tHZTtv+2vXFbb2cvhoPw6Hg26cmdzfvX7cF2Odq7fnx4N
pW67ty7V7Gy//DkcDYL5aW2cyofTcQfnu7KoT7R5HyNOKnfrE8rruiGZn2Wp
YXd8HfiS4QnlQQXu4xruIpaXdaIpb9+MT1S8iv+ScZtS3V/HMrLcnHfly/i6
4vpugU7RdGg1Bq+mPKtPNBy3DX+0dzZ/K8OxMp1XpkNruFbC9+3r+AyKh/nO
7MkzCS/1IX/yJf8pn8ZwUodWY+aL/GhPPowH3q4H4rpeXEe+9hWH/rhOfPTP
dfCJluddy+fScC1tfs/s19IZPFiXGfN/rW4/Mw8ZuD5xnMSXdV1pbaLFTWY3
WJ575Q96sE4Hy1uH98Os9UrnUVadAe9K9Yz8DhqDV295DKZfr/qAbr3ZR/Pb
zerHx8DtY+BtlS/o3c105Hsw/64X9MnSB/GyziXG5Odj1g/4OF/U3SB8wEGd
g727Gd80q7/OeDWKS//kT3viZDzyoD3w/X/M80g8wJd0PomP64ifVH/sp9Qb
+NfSF/6z6mDaP4L6MuPBj/Ob90vUS9L5An8/b8DvY5wHP6/Qp72xPu3nrfCB
f9A64rk98LWqB/ojH/BoNEb8cGM/7MivlZ7A4fVccT/P0g3xBo15/ogf/SnJ
P+yTrbfWX4L6GnCyzy7V11i/qP+g+uR9ST3hr9V9ynuU+WO/ZH8nX8bhfq5D
1yB/wBmEE3x9fapjM7NPNh/UH4Gb5zerP/L7AHr15j/p/icffh+wLrC/U15h
18ue+SQe9qvpefZ15ov3Gc8D7Zlf1hPvR+qAfPmY9xP1g75R/ZzfE9ST+9lf
eb+yvrjOc8L4tU38yNZfe/B6x37h/RY658Lvt+r+cRYf1F2vc4l9/ex+d32p
/7Qfu36MS//gkWb9x/sd+820Ht0fdImzfHq/or5T/1H+oXOc4XF71Jd/z7Df
/wNgSDIL
     "]]}, {{}, {}}},
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{4.141041666666678, 4.806111111111122},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{4.141041666666678, 8.99}, {4.806111111111122, 9.06}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.899888931279151*^9, 3.899888959385603*^9}, 
   3.8998890539943132`*^9},
 CellLabel->
  "Out[641]=",ExpressionUUID->"713cfbaa-2e5d-43f9-ad7f-ae45c532030a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Hypothesis: Domain Shift can be resolved by building a new model on these data\
\>", "Section",
 CellChangeTimes->{{3.899889580989316*^9, 3.899889584391368*^9}, {
  3.899889891023116*^9, 
  3.899889910759639*^9}},ExpressionUUID->"1090f013-d2df-4339-bd6f-\
b1130abf8668"],

Cell["\<\
Test:  Perform 5-fold cross validation on the (amphiphile) test data and \
assess performance;  as determined in earlier work \
(2023.07.18_pH_spectroscopy.nb), EMD is the best when we have limited data \
\>", "Text",
 CellChangeTimes->{{3.899889912265513*^9, 3.899889940385206*^9}, {
  3.899889995026517*^9, 3.89989001248042*^9}, {3.8998900674614573`*^9, 
  3.89989009302756*^9}},ExpressionUUID->"78e62385-d6d2-4abb-abf8-\
74a4af0233d2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"validation", "[", 
    RowBox[{"model_NearestFunction", ",", "validationData_List"}], "]"}], ":=", 
   RowBox[{"With", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"obs", "=", 
        RowBox[{"validationData", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"predicted", " ", "=", " ", 
        RowBox[{
         RowBox[{"model", "/@", 
          RowBox[{"validationData", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "//", "Flatten"}]}]}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Mean", "@", 
        RowBox[{"Abs", "[", 
         RowBox[{"obs", "-", "predicted"}], "]"}]}], ",", " ", 
       RowBox[{
        RowBox[{"Correlation", "[", 
         RowBox[{"obs", ",", "predicted"}], "]"}], "^", "2"}]}], "}"}]}], 
    "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"perform", " ", "5"}], "-", 
    RowBox[{
    "fold", " ", "cross", " ", "validation", " ", "of", " ", "the", " ", 
     "EMD", " ", "model"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"cvEMDSummary", "=", 
    RowBox[{
     RowBox[{"ResourceFunction", "[", "\"\<CrossValidateModel\>\"", "]"}], 
     "[", "\[IndentingNewLine]", 
     RowBox[{"testData", ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Nearest", "[", 
        RowBox[{"#", ",", 
         RowBox[{"DistanceFunction", "->", "emd"}]}], "]"}], "&"}], ",", " ", 
      
      RowBox[{"(*", 
       RowBox[{"model", " ", "definition"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"\"\<ValidationFunction\>\"", "->", "validation"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<ParallelQ\>\"", "->", "True"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"collect", " ", "summary", " ", "statistics"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Around", "/@", 
  RowBox[{"Transpose", "@", 
   RowBox[{"%", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "\"\<ValidationResult\>\""}], "]"}], 
    "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.899889867545816*^9, 3.899889868755147*^9}, {
  3.899889975222336*^9, 3.8998899757486067`*^9}, {3.899890263565057*^9, 
  3.899890264076404*^9}},
 CellLabel->
  "In[649]:=",ExpressionUUID->"f134e282-52ac-4e4b-ab15-c6ae14d45298"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    TemplateBox[{"0.38", "0.04"},
     "Around"],
    Around[0.38394285714285703`, 0.03865039535663884]], ",", 
   InterpretationBox[
    TemplateBox[{"0.48", "0.18"},
     "Around"],
    Around[0.4801435397359679, 0.18097768877997708`]]}], "}"}]], "Output",
 CellChangeTimes->{3.89988997304556*^9, 3.899890109153446*^9, 
  3.8998904233225307`*^9},
 CellLabel->
  "Out[651]=",ExpressionUUID->"583ed719-ae32-4c0b-9f2a-9db92237b31d"]
}, Open  ]],

Cell[TextData[{
 "Indeed:  ",
 StyleBox["We can reduce the error to around MAE = 0.38 pH units if we use \
this new data for model construction",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.899890121214796*^9, 3.8998901583255253`*^9}, {
  3.899890232551362*^9, 3.899890236467882*^9}, {3.899890436793103*^9, 
  3.899890451777357*^9}},ExpressionUUID->"d7f9d826-4e7d-4014-9ad7-\
b3f60ba83c0d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Conclusions/Next-Steps", "Section",
 CellChangeTimes->{
  3.8998879156924667`*^9, {3.899889264394228*^9, 
   3.899889268032382*^9}},ExpressionUUID->"4a16edd7-2a4f-4353-bc88-\
bdab082759c9"],

Cell[CellGroupData[{

Cell["\<\
All of the methods (GBT, NN, OT) that did well on our previous datasets seem \
to have poor descriptive power for this system. \
\>", "Item",
 CellChangeTimes->{{3.89988930948986*^9, 3.89988931877918*^9}, {
  3.899889474116637*^9, 
  3.899889474118022*^9}},ExpressionUUID->"c59eb4ee-1b56-4c4d-b1d7-\
12525faeec00"],

Cell["\<\
MAE is about 0.7 pH units for all methods\[LongDash]about 3x what we saw \
before.\
\>", "Subitem",
 CellChangeTimes->{{3.89988930948986*^9, 3.89988931877918*^9}, {
  3.899889479065165*^9, 
  3.8998895023613443`*^9}},ExpressionUUID->"0c2106d6-0aa0-4bf7-bd41-\
bc1c5991e72e"],

Cell["\<\
This can be reduced by half (0.38 pH units) if we build a OT model on these \
new data\[LongDash]which is evidence of a domain shift (i.e., a small amount \
of data from the new domain is better than a larger pool of data from the old \
domain)\
\>", "Subitem",
 CellChangeTimes->{{3.89988930948986*^9, 3.89988931877918*^9}, {
   3.899889479065165*^9, 3.899889502016931*^9}, {3.8998901632314663`*^9, 
   3.899890207475041*^9}, {3.899890456992146*^9, 3.899890460734638*^9}, 
   3.8998910734358*^9, {3.899897432535578*^9, 
   3.89989743576193*^9}},ExpressionUUID->"b53ece11-eca2-48fe-9a04-\
2e04805dd1f7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["What might be causing a distribution shift in the data? ", "Item",
 CellChangeTimes->{{3.89988930948986*^9, 
  3.899889323806343*^9}},ExpressionUUID->"53c94c6a-b214-446d-b888-\
6e3f2b9a5673"],

Cell["Effect of amphiphiles on spectra?", "Subitem",
 CellChangeTimes->{{3.89988930948986*^9, 
  3.899889336240608*^9}},ExpressionUUID->"36d51d4c-b64f-47d8-9fac-\
65eeaa419097"],

Cell["Measurement differences?", "Subitem",
 CellChangeTimes->{{3.89988930948986*^9, 3.89988933490382*^9}, {
  3.899890210613122*^9, 
  3.8998902106161222`*^9}},ExpressionUUID->"4224fa63-2b35-4d8b-8723-\
bc191515d045"],

Cell["Do we care?", "Subitem",
 CellChangeTimes->{{3.89988930948986*^9, 3.89988933490382*^9}, {
  3.8998902108282127`*^9, 
  3.899890212477186*^9}},ExpressionUUID->"a073d0a5-6fad-4619-8579-\
ba1af9d8938a"]
}, Open  ]],

Cell["\<\
Housekeeping:  Data-formatting differences\[LongDash]which require some \
manual wrangling\[LongDash]work towards standardizing format\
\>", "Item",
 CellChangeTimes->{{3.89988930948986*^9, 3.89988931877918*^9}, {
  3.899889442619185*^9, 3.8998894634525423`*^9}, {3.899890223713849*^9, 
  3.899890225557625*^9}},ExpressionUUID->"035c6cbf-a2f1-4528-886b-\
1bd18aa363e4"]
}, Open  ]]
},
WindowSize->{808, 747},
WindowMargins->{{Automatic, 144}, {13, Automatic}},
SpellingDictionaries->{"CorrectWords"->{
 "Fordham", "Lipinski's", "Schrier", "Norquist", "amphiphiles"}},
FrontEndVersion->"13.2 for Mac OS X x86 (64-bit) (January 30, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"e667a104-eb64-471c-933b-b9636b9a0b2c"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 156, 3, 67, "Section",ExpressionUUID->"072c0052-866e-40f7-aebf-ffcc8ee53163"],
Cell[CellGroupData[{
Cell[761, 29, 1879, 42, 326, "Input",ExpressionUUID->"16750c00-72a1-4f18-888d-fc1bca90244a"],
Cell[2643, 73, 201, 4, 34, "Output",ExpressionUUID->"aead2989-49f1-4c10-8b16-f93340d09d1c"]
}, Open  ]],
Cell[2859, 80, 440, 10, 35, "Text",ExpressionUUID->"8cfaebc4-bfa1-4453-810b-d361e8923303"],
Cell[CellGroupData[{
Cell[3324, 94, 2214, 51, 241, "Input",ExpressionUUID->"ba05a7ba-82a7-4af6-a267-9255541e98db"],
Cell[5541, 147, 177, 3, 34, "Output",ExpressionUUID->"37f64380-c374-4346-bf7b-eac31ed71826"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[5767, 156, 255, 4, 67, "Section",ExpressionUUID->"cf0c2d03-5026-49ff-accc-5606d8625b1a"],
Cell[CellGroupData[{
Cell[6047, 164, 154, 3, 54, "Subsection",ExpressionUUID->"0b942686-0080-44b5-901c-3e831df8b1a9"],
Cell[6204, 169, 381, 8, 58, "Text",ExpressionUUID->"1b4e6334-8797-4736-8056-9f13cf0af188"],
Cell[CellGroupData[{
Cell[6610, 181, 762, 15, 73, "Input",ExpressionUUID->"066b0399-2fc8-413b-969e-3f3fb57e38c3"],
Cell[7375, 198, 305823, 5561, 530, "Output",ExpressionUUID->"03a2f0a9-c2e5-4b8d-9897-d367da2b3673"]
}, Open  ]],
Cell[CellGroupData[{
Cell[313235, 5764, 433, 8, 30, "Input",ExpressionUUID->"b3bbb082-392e-4ad4-8b13-7cc1d526a6e9"],
Cell[313671, 5774, 361056, 6310, 511, "Output",ExpressionUUID->"bf4d0a9a-1087-49d3-9daf-b56eb6a8fc2e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[674764, 12089, 330, 6, 30, "Input",ExpressionUUID->"4c627350-d412-469a-97df-cd5802f0998d"],
Cell[675097, 12097, 12525, 236, 254, "Output",ExpressionUUID->"b0faa5ee-080b-49d3-9783-d9f3aca81c3f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[687659, 12338, 233, 4, 30, "Input",ExpressionUUID->"9d65e4f5-20d6-490a-9512-71d4b6053fe3"],
Cell[687895, 12344, 170, 3, 34, "Output",ExpressionUUID->"e303aa33-a25c-4353-aab3-b485a430976a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[688114, 12353, 167, 3, 54, "Subsection",ExpressionUUID->"7c7104f5-6b09-4049-8e20-6638d19130f1"],
Cell[CellGroupData[{
Cell[688306, 12360, 551, 12, 73, "Input",ExpressionUUID->"3d32ead7-069f-4887-9c39-789683493322"],
Cell[688860, 12374, 374636, 6240, 62, "Output",ExpressionUUID->"b233200d-f4fb-4320-91dd-90f5e40b801c"],
Cell[1063499, 18616, 423421, 7287, 529, "Output",ExpressionUUID->"e71b0006-2c00-4292-a65d-bc3f8638d492"],
Cell[1486923, 25905, 525769, 8937, 511, "Output",ExpressionUUID->"328f9211-a24c-4fe8-8002-08afdfb3e051"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2012729, 34847, 230, 4, 30, "Input",ExpressionUUID->"25376930-10f4-44a5-a9b6-dac8ad8af51f"],
Cell[2012962, 34853, 195, 3, 34, "Output",ExpressionUUID->"fe65a43f-a6aa-4992-8831-4c97268e1444"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2013206, 34862, 176, 3, 54, "Subsection",ExpressionUUID->"1803d7d1-a605-4725-acfb-b28e74ea9597"],
Cell[CellGroupData[{
Cell[2013407, 34869, 325, 7, 30, "Input",ExpressionUUID->"9866a7d8-3fe2-44f4-960b-a8ca7c7e4b0a"],
Cell[2013735, 34878, 441444, 8043, 61, "Output",ExpressionUUID->"56ab5c0d-f102-4803-905c-abbca172714a"]
}, Open  ]],
Cell[2455194, 42924, 192, 3, 35, "Text",ExpressionUUID->"80ed21d5-ad72-4e9c-97de-775e7026163d"],
Cell[2455389, 42929, 523, 12, 30, "Input",ExpressionUUID->"912eb1c9-abff-4725-a19d-940aa94978c5"],
Cell[CellGroupData[{
Cell[2455937, 42945, 1168, 32, 178, "Input",ExpressionUUID->"1e085ae8-889e-457a-92fb-9653de14757f"],
Cell[2457108, 42979, 315, 8, 34, "Output",ExpressionUUID->"abac8f41-4a0a-477c-8523-7bf6bcbc4bf3"],
Cell[2457426, 42989, 223, 4, 34, "Output",ExpressionUUID->"36db9efd-a9a8-4355-b228-79f71b3b9786"],
Cell[2457652, 42995, 4537, 112, 376, "Output",ExpressionUUID->"713cfbaa-2e5d-43f9-ad7f-ae45c532030a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2462250, 43114, 280, 6, 105, "Section",ExpressionUUID->"1090f013-d2df-4339-bd6f-b1130abf8668"],
Cell[2462533, 43122, 448, 8, 58, "Text",ExpressionUUID->"78e62385-d6d2-4abb-abf8-74a4af0233d2"],
Cell[CellGroupData[{
Cell[2463006, 43134, 2547, 67, 304, "Input",ExpressionUUID->"f134e282-52ac-4e4b-ab15-c6ae14d45298"],
Cell[2465556, 43203, 493, 14, 34, "Output",ExpressionUUID->"583ed719-ae32-4c0b-9f2a-9db92237b31d"]
}, Open  ]],
Cell[2466064, 43220, 402, 9, 58, "Text",ExpressionUUID->"d7f9d826-4e7d-4014-9ad7-b3f60ba83c0d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2466503, 43234, 195, 4, 67, "Section",ExpressionUUID->"4a16edd7-2a4f-4353-bc88-bdab082759c9"],
Cell[CellGroupData[{
Cell[2466723, 43242, 324, 7, 53, "Item",ExpressionUUID->"c59eb4ee-1b56-4c4d-b1d7-12525faeec00"],
Cell[2467050, 43251, 284, 7, 27, "Subitem",ExpressionUUID->"0c2106d6-0aa0-4bf7-bd41-bc1c5991e72e"],
Cell[2467337, 43260, 613, 11, 64, "Subitem",ExpressionUUID->"b53ece11-eca2-48fe-9a04-2e04805dd1f7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2467987, 43276, 197, 3, 32, "Item",ExpressionUUID->"53c94c6a-b214-446d-b888-6e3f2b9a5673"],
Cell[2468187, 43281, 177, 3, 27, "Subitem",ExpressionUUID->"36d51d4c-b64f-47d8-9fac-65eeaa419097"],
Cell[2468367, 43286, 218, 4, 27, "Subitem",ExpressionUUID->"4224fa63-2b35-4d8b-8723-bc191515d045"],
Cell[2468588, 43292, 205, 4, 27, "Subitem",ExpressionUUID->"a073d0a5-6fad-4619-8579-ba1af9d8938a"]
}, Open  ]],
Cell[2468808, 43299, 379, 7, 53, "Item",ExpressionUUID->"035c6cbf-a2f1-4528-886b-1bd18aa363e4"]
}, Open  ]]
}
]
*)

