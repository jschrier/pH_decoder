(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    309277,       6186]
NotebookOptionsPosition[    304745,       6106]
NotebookOutlinePosition[    305251,       6124]
CellTagsIndexPosition[    305208,       6121]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Goals", "Section",
 CellChangeTimes->{{3.930230346269793*^9, 
  3.930230346693571*^9}},ExpressionUUID->"60323bd3-1594-4dee-9beb-\
cffb45293032"],

Cell[TextData[{
 ButtonBox["Summarized from Slack Thread 15-17 July 2024",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://schrierlab.slack.com/archives/C05E91Z8QA3/p1721069493576919"]\
, None},
  ButtonNote->
   "https://schrierlab.slack.com/archives/C05E91Z8QA3/p1721069493576919"],
 "\n\nThis is comprised of small amount of data  5x (vesicles + same volume), \
10x (no vesicles + same volume)\[LongDash]\[OpenCurlyDoubleQuote]a set of \
duplicates\[CloseCurlyDoubleQuote], and  5x (no vesicles + variable volume).  \
The 5 examples are at some discrete pHs."
}], "Text",
 CellChangeTimes->{{3.9302303680701447`*^9, 3.9302304821387997`*^9}, {
  3.9302347360219393`*^9, 
  3.930234736734064*^9}},ExpressionUUID->"9f38764e-3d73-48bc-9721-\
4d4825bddaaf"],

Cell[TextData[{
 StyleBox["Modeling goals: ",
  FontWeight->"Bold"],
 "Derisk the question of whether pH prediction (from spectra) is useful in \
realistic cases "
}], "Text",
 CellChangeTimes->{{3.930230431169553*^9, 3.9302304592179623`*^9}, {
  3.930234742910268*^9, 
  3.930234757678316*^9}},ExpressionUUID->"1540b13d-34f2-4d23-ba88-\
3c4a0acdcc89"],

Cell["\<\
Can pH (with vesicles + same volume) be predicted with training data from \
non-vesicle cases (no vesicles + same volume)?\
\>", "Item",
 CellChangeTimes->{{3.9302304683216753`*^9, 
  3.9302304694117613`*^9}},ExpressionUUID->"82acde01-3de0-4038-8c3f-\
437146b3569f"],

Cell["\<\
Can pH (no vesicles +  variable volume) be predicted with training data from \
(no vesicles + same volume)?\
\>", "Item",
 CellChangeTimes->{{3.9302304683216753`*^9, 
  3.930230473441341*^9}},ExpressionUUID->"921707c9-7887-4469-acbd-\
95aafcb44045"],

Cell[TextData[StyleBox["Potential problems",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.930230487314377*^9, 
  3.930230489514126*^9}},ExpressionUUID->"bccc13a6-eb80-4bdf-bf53-\
a432339c9cf9"],

Cell["\<\
Data is in a different format than attempts conducted last year, and needs to \
be split into the various treatments. \[LongDash] requires some custom coding\
\
\>", "Item",
 CellChangeTimes->{{3.9302347604226637`*^9, 3.930234773430488*^9}, {
  3.930235085605751*^9, 
  3.930235105367157*^9}},ExpressionUUID->"01cd2c21-fa5a-4f4a-bdfd-\
636468e2098b"],

Cell["Small data\[LongDash]just stick to earth mover distance as a model", \
"Item",
 CellChangeTimes->{{3.9302347604226637`*^9, 3.930234773430488*^9}, {
  3.930235085605751*^9, 
  3.93023511966984*^9}},ExpressionUUID->"cff8cbbb-9dc3-4bad-8ec9-\
18899427fbcb"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Import Data", "Section",
 CellChangeTimes->{{3.899629319501137*^9, 
  3.899629320646085*^9}},ExpressionUUID->"072c0052-866e-40f7-aebf-\
ffcc8ee53163"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"set", " ", "a", " ", "random", " ", "seed", " ", "for", " ", 
    RowBox[{"training", "/", "test"}], " ", "set", " ", "generation", " ", 
    "for", " ", "replicability"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SeedRandom", "[", "1841", "]"}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SetDirectory", "@", 
     RowBox[{"NotebookDirectory", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Helper", " ", "functions"}], " ", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"<<", "\"\<src/emd.wl\>\""}], "\[IndentingNewLine]", 
   RowBox[{"<<", "\"\<src/platereader.wl\>\""}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"load", " ", "training", " ", "data"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d", " ", "=", " ", 
     RowBox[{"Import", "[", 
      RowBox[{"\"\<./data/2024.07.15_pH_data.xlsx\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"\"\<Data\>\"", ",", "1"}], "}"}], ",", 
       RowBox[{"\"\<SkipLines\>\"", "->", "2"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"format", "[", "row_List", "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Rest", "[", "row", "]"}], "->", 
      RowBox[{"First", "[", "row", "]"}]}], ")"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"nn", ",", "np1", ",", "np2", ",", "pp"}], "}"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"Partition", "[", 
        RowBox[{"#", ",", "6"}], "]"}], "&"}], "@", 
      RowBox[{
       RowBox[{"Map", "[", "format", "]"}], "@", 
       RowBox[{"Rest", "@", 
        RowBox[{"Transpose", "[", "d", "]"}]}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Length", "/@", "%"}]}]}]], "Input",
 CellChangeTimes->{{3.899627518703934*^9, 3.899627518875863*^9}, {
  3.899629323236268*^9, 3.8996294370703893`*^9}, {3.899629483257566*^9, 
  3.8996295881609178`*^9}, {3.899629711018282*^9, 3.899629715278859*^9}, {
  3.899885895525643*^9, 3.8998859011537023`*^9}, {3.899885933980297*^9, 
  3.899885934380231*^9}, {3.899886929404688*^9, 3.8998869333008122`*^9}, {
  3.899889852487116*^9, 3.899889857045327*^9}, {3.930235082126052*^9, 
  3.930235082542622*^9}, {3.9302351269024677`*^9, 3.930235417574177*^9}, {
  3.9302354594623137`*^9, 3.930235561804717*^9}, {3.930235687181099*^9, 
  3.930235687332432*^9}, {3.930235726788762*^9, 3.930235748907173*^9}, {
  3.930236482097744*^9, 3.930236489537909*^9}, {3.930241395697145*^9, 
  3.9302414240024652`*^9}, {3.930241569559944*^9, 3.930241578348072*^9}, {
  3.9302416370488987`*^9, 3.930241639303743*^9}},
 CellLabel->
  "In[418]:=",ExpressionUUID->"16750c00-72a1-4f18-888d-fc1bca90244a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"6", ",", "6", ",", "6", ",", "6"}], "}"}]], "Output",
 CellChangeTimes->{{3.930241635756064*^9, 3.930241639906289*^9}},
 CellLabel->
  "Out[425]=",ExpressionUUID->"e3bd2abb-5817-40a1-9f08-613d554da42d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Visualize the data", "Section",
 CellChangeTimes->{{3.930235926074328*^9, 
  3.93023592779456*^9}},ExpressionUUID->"1671225f-8c42-4495-9831-\
c9a828775bbb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"With", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"spectra", "=", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"np1", "[", 
           RowBox[{"[", 
            RowBox[{"sample", ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{"np2", "[", 
           RowBox[{"[", 
            RowBox[{"sample", ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{"nn", "[", 
           RowBox[{"[", 
            RowBox[{"sample", ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{"pp", "[", 
           RowBox[{"[", 
            RowBox[{"sample", ",", "1"}], "]"}], "]"}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"pH", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"np1", "[", 
           RowBox[{"[", 
            RowBox[{"sample", ",", "2"}], "]"}], "]"}], ",", 
          RowBox[{"np2", "[", 
           RowBox[{"[", 
            RowBox[{"sample", ",", "2"}], "]"}], "]"}], ",", 
          RowBox[{"nn", "[", 
           RowBox[{"[", 
            RowBox[{"sample", ",", "2"}], "]"}], "]"}], ",", 
          RowBox[{"pp", "[", 
           RowBox[{"[", 
            RowBox[{"sample", ",", "2"}], "]"}], "]"}]}], "}"}]}]}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"ListLinePlot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{"normalizeQ", ",", "\[IndentingNewLine]", 
         RowBox[{"normalizeSpectrum", "/@", "spectra"}], ",", 
         "\[IndentingNewLine]", "spectra"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotStyle", "->", 
        RowBox[{"{", 
         RowBox[{"Gray", ",", "Gray", ",", "Red", ",", "Blue"}], "}"}]}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"PlotLegends", "->", 
        RowBox[{"{", 
         RowBox[{
         "None", ",", "\"\<No vesicles and Constant Volume (x2)\>\"", ",", 
          "\"\<Variable Volume\>\"", ",", "\"\<Vesicles\>\""}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotLabel", "->", 
        RowBox[{
         RowBox[{"StringTemplate", "[", "\"\<pH = ``\>\"", "]"}], "[", "pH", 
         "]"}]}]}], "]"}]}], "]"}], "\[IndentingNewLine]", ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"sample", ",", 
     RowBox[{"Range", "[", "6", "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"normalizeQ", ",", "False"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"SaveDefinitions", "->", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.930235933043089*^9, 3.9302362490897217`*^9}, {
   3.930236310114188*^9, 3.930236322994543*^9}, 3.9302363565139236`*^9, {
   3.9302364668896646`*^9, 3.930236530920909*^9}, {3.930236573632414*^9, 
   3.930236586254541*^9}, {3.9302366612888813`*^9, 3.930236661352702*^9}, {
   3.930236742920886*^9, 3.930236743016017*^9}, {3.93023693259347*^9, 
   3.930236942350868*^9}, {3.9302369974629593`*^9, 3.930237001006831*^9}, {
   3.9302370534794617`*^9, 3.930237054886793*^9}, {3.93024127503617*^9, 
   3.93024127772888*^9}, {3.9302413982917128`*^9, 3.930241483453064*^9}, {
   3.9302415138866873`*^9, 3.93024163356802*^9}},
 CellLabel->
  "In[426]:=",ExpressionUUID->"fb36c18d-3a76-4585-b002-179aff0e6917"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`normalizeQ$$ = True, $CellContext`sample$$ =
     3, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`sample$$], {1, 2, 3, 4, 5, 6}, ControlType -> 
      PopupMenu}, {{
       Hold[$CellContext`normalizeQ$$], False}, {True, False}, ControlType -> 
      Checkbox}}, Typeset`size$$ = {625., {117., 122.}}, Typeset`update$$ = 0,
     Typeset`initDone$$, Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`normalizeQ$$ = 
        False, $CellContext`sample$$ = 1}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> With[{$CellContext`spectra$ = {
           Part[$CellContext`np1, $CellContext`sample$$, 1], 
           Part[$CellContext`np2, $CellContext`sample$$, 1], 
           Part[$CellContext`nn, $CellContext`sample$$, 1], 
           Part[$CellContext`pp, $CellContext`sample$$, 1]}, $CellContext`pH$ = {
           Part[$CellContext`np1, $CellContext`sample$$, 2], 
           Part[$CellContext`np2, $CellContext`sample$$, 2], 
           Part[$CellContext`nn, $CellContext`sample$$, 2], 
           Part[$CellContext`pp, $CellContext`sample$$, 2]}}, 
        ListLinePlot[
         If[$CellContext`normalizeQ$$, 
          
          Map[$CellContext`normalizeSpectrum, $CellContext`spectra$], \
$CellContext`spectra$], PlotStyle -> {Gray, Gray, Red, Blue}, 
         PlotLegends -> {
          None, "No vesicles and Constant Volume (x2)", "Variable Volume", 
           "Vesicles"}, PlotLabel -> 
         StringTemplate["pH = ``"][$CellContext`pH$]]], 
      "Specifications" :> {{$CellContext`sample$$, {1, 2, 3, 4, 5, 
         6}}, {{$CellContext`normalizeQ$$, False}, {True, False}}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{669., {173., 178.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`np1 = {CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAACk374OnDPyPw3gLZCg+Os/GCZTBaOS6j+/
DpwzorTpP1uxv+yePOg/0LNZ9bna5j/l8h/Sb1/lP7mNBvAWSOQ/ryXkg57N
5D/BqKROQBPnP86qz9VW7Ok//7J78rBQ7T+TOgFNhA3wPyntDb4wmfE/mG4S
g8DK8j+t+lxtxf7zP3ZPHhZqTfU/dCSX/5B+9j/hehSuR+H3PzhnRGlv8Pg/
63O1FfvL+T8sZRniWBf6Pybkg57Nqvk/odY07zhF+D+iRbbz/dT2PyGwcmiR
7fQ/WvW52or98T8BTYQNT6/qP5tVn6ut2OE/vAUSFD/G2D+n6Egu/yHRP8iY
u5aQD8o/7MA5I0p7wz+oxks3iUHAP8SxLm6jAbw/eAskKH6MuT/DZKpgVFK3
P3/ZPXlYqLU/MEymCkYltT/5MeauJeSzP2aIY13cRrM/xNStRQ==
          "] -> 2.53, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAAAlBoGVQ4vzP+JYF7fRAO4/sVBrmnec7D+Y
bhKDwMrrP8pUwaikTuo/DAIrhxbZ6D+lvcEXJlPnP+f7qfHSTeY/LGUZ4lgX
5z+Hp1fKMsTpP5oIG55eKe0/4L4OnDOi8D8nMQisHFryP0HxY8xdS/Q/RGlv
8IXJ9T+1pnnHKTr3P0GC4seYu/g/UwWjkjoB+j+V1AloImz7P1R0JJf/kPw/
ApoIG55e/T9xPQrXo3D9P/VKWYY41vw/rthfdk8e+z/b+X5qvHT5PzvfT42X
bvc/NBE2PL1S9D8OT6+UZYjtP4/C9Shcj+I/iGNd3EYD2D8EVg4tsp3PP86q
z9VW7Mc/coqO5PIfwj/arPpcbcW+P1fsL7snD7s/Gw3gLZCguD+6SQwCK4e2
P8dLN4lBYLU/4L4OnDOitD9hMlUwKqmzP1kXt9EA3rI/qsuh7g==
          "] -> 2.95, CompressedData["
1:eJxTTMoPSmVkYGDQBGLvVywmgmaf7EMPrlji5/DaPn6Gj2iP1yt7u8qIFaZn
X9qf/x78eOnsF/ZKf7+VPpjz3H61XXj0xv3P7DMmvq2xN31mf8royEa9vOf2
6oYca2SiXtkLf3I8n3b1rX1rzYXNkV8/QPV9sk8o85cTy/piH2G55UTZvq/2
pxe6bvv895u9NaNvC6//D/tHL6du4in8ae8d2WZx7egve67riwtsuf7YL1be
+af9yx97NiER+2N3/thfcLnx4YvXH/sU6/v+vdN/2Ud93Xmr6+8Pe11F+S85
Yd/tf59+d/Kw0xeo/a/tn/9e+fGS7z37c6vOXw17c96+V+Mt7z6Dg/ZTr3Bm
KOXssK//bVVwrmOTfVmhNO8D3Q32bVGX9zwWWWsvUGUG9Opq+93q/Nxbl620
B8lOWLACqm+Ffc2nDQHZs5bbW147mmvSsNweAF3JrOM=
          "] -> 4.07, CompressedData["
1:eJxTTMoPSmVkYGDQBOKorztvdf39YL9S+ILLjQ+v7C/7JglEWL6yn9ugdqht
+Uv7iXW/rQrOvbDnur64wJbrpf2S+/v45hi/sj9ldGSjXt5r+2gnuxc317yz
355Uf9O28qN906PjM3ZP+2xfyjSLQ3reV/vunOe/V378Zr9Yeeef9i/f7X+f
fnfysNMP++0XGe4xcf6wNwaD7/aFa7pvZzB8s7f4cShlVcIX++eyy1946H22
V1/QueHhy4/2QWDGB/swPt1Nc9+/t1+3DWThW/tpin2lhdKv7U+W7Zsvpf/S
/tyq81fD3jy1/5ITVrtu2z171qP9huW6F+1TYu+4MVcctte5MuuZ7PId9vsM
ZmpJTN1i3xzoCfTqJvvHZlIHohU22i9m3MMqJLLevi3q8p7HImvtubcuqzyu
ucr+8GXtVMlHK6D+XGHv6l70k//lcvsrIOGI5fYAuyirdw==
          "] -> 5.06, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAACrPldbsb/wPzAqqRPQROw/H4XrUbge6z99
rrZif9npP4Za07zjFOk/W7G/7J486j9+jLlrCfnsPzy9UpYhju8//tR46SYx
8j/ek4eFWtP0P40o7Q2+MPc/gEi/fR04+T+8dJMYBFb6P/8h/fZ14Po/FR3J
5T+k+j9rK/aX3ZP5PxBYObTIdvc/KcsQx7q49D9FR3L5D+nwP0Ck374OnOs/
+8vuycNC5T8lBoGVQ4vgP9zXgXNGlNo/VFInoImw1T9N845TdCTTP02EDU+v
lNE/dEaU9gZf0D9iodY07zjNP/rt68A5I8o/4QuTqYJRyT89CtejcD3KP0LP
ZtXnass/hxbZzvdTyz9rmnecoiPJPzBMpgpGJcU/HThnRGlvwD89m1Wfq624
P9Pe4AuTqbI/m1Wfq63Yrz8xCKwcWmSrPxNhw9MrZak/FyqqEw==
          "] -> 6.06, CompressedData["
1:eJxTTMoPSmVkYGDQBOLmA6cWum77Yh96cMUSP4dP9gqX8uPZz723P+K0NvNe
4Sv7GT6iPV6vXthPrPttVXDulf3hy9qpko/e2X/84hXZZvHR3jRulycP0xf7
D60nQw6u+Gb/qy5rT8nkH/aHxNWCWRf/tH9XA1Ly0/77k8SF10x+2s/cPW0C
f9UPe9cbH4AmfLfX+6/491vpV/vFjHtYhUQ+22t/m353cvt7++iN+9/Ms3ll
D3aO5FP7pX4OwomHH9pbKXtVN+s/sJ9gWK6rKP8AKv/QnmONTFSK9WN796Kf
/C+3P7X3Me90THj6wr5LPvldlNMb+899wSUq09/b626a+375sY/2J2aAHPLZ
/lrYG/3d6p/tX9xc8ysm96N92YM5gkv3vra32Rs0TbHvsb251IFoBceb9r4t
vP7rp5y1Dwcp5z9sP1NLYuoVzh32SkDXP5iz0R4AKhOpbQ==
          "] -> 7.21}, $CellContext`np2 = {CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAADWVuwvuyfzP61p3nGKjuw/8KfGSzeJ6z9g
5dAi2/nqP8UgsHJokek/YcPTK2UZ6D82zTtO0ZHmP9Xnaiv2l+U/mbuWkA96
5j9N845TdCTpPz/G3LWEfOw/GXPXEvJB8D8U0ETY8PTxP73jFB3J5fM/A3gL
JCh+9T/tDb4wmSr3P6foSC7/Ifk/NV66SQwC+z80ETY8vVL9P9ZW7C+7J/8/
XwfOGVFaAEApyxDHurgAQDlFR3L5jwBAVcGopE5A/z8Mk6mCUUn9P4nS3uAL
k/o/2T15WKg19j+h+DHmriXuP7MMcayL2+A/WRe30QDe0j/HSzeJQWDFPxkE
Vg4tsr0/Gy/dJAaBtT8rGJXUCWiyP1TjpZvEILA/93XgnBGlrT8+eVioNc2r
P+kmMQisHKo/uycPC7WmqT9fKcsQx7qoP5XUCWgibKg/hIGg4w==
          "] -> 2.61, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAACqglFJnYDyPyZTBaOSOus/gSbChqdX6j/b
iv1l9+TpP9zXgXNGlOg/3SQGgZVD5z90tRX7y+7lP+wvuycPC+U/3nGKjuTy
5T8HX5hMFYzoP7n8h/Tb1+s/LbKd76fG7z9/+zpwzojxPxNhw9MrZfM/MZkq
GJXU9D80ETY8vVL2P13cRgN4C/g/EhQ/xty1+T/G3LWEfND7P7snDwu1pv0/
kQ96Nqs+/z9nRGlv8AUAQCGwcmiR7f8/odY07zhF/j97FK5H4Xr8P8pUwaik
Tvo/wFsgQfFj9j9SuB6F61HuP5MYBFYOLeA/54wo7Q2+0D+amZmZmZnBP2N/
2T15WLg/DeAtkKD4sT8qOpLLf0ivP6MjufyH9Ks/1QloImx4qj8ofoy5awmp
P8x/SL99Hag/AiuHFtnOpz+/DpwzorSnPyxlGeJYF6c/Z9Gl8A==
          "] -> 3.06, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAADByqFFtvPxP3npJjEIrOo/nRGlvcEX6j+K
juTyH9LpP4C3QILix+g/F9nO91Pj5z/0/dR46SbnPyfChqdXyuY/IGPuWkI+
6D83GsBbIEHrP9qs+lxtxe4/dEaU9gZf8T8noImw4enyPzLmriXkg/Q/SnuD
L0ym9T/0bFZ9rrb2PwMJih9j7vc/a5p3nKIj+T8Z4lgXt9H6P3sUrkfhevw/
7zhFR3L5/T+At0CC4sf+P/VKWYY41v4/ejarPldb/T+8BRIUP8b7P3h6pSxD
HPo/nYAmwoan9j9BguLHmLvuPy2yne+nxt8/TfOOU3Qkzz8MAiuHFtm+Px+F
61G4HrU/uY0G8BZIsD9CPujZrPqsP55eKcsQx6o/0ETY8PRKqT/Mf0i/fR2o
PwIrhxbZzqc/qvHSTWIQqD9aZDvfT42nP+CcEaW9wac/Wk2s+g==
          "] -> 4.08, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAABnRGlv8IXxPxiV1AloIuw/tFn1udqK6z8K
16NwPQrrP8ZtNIC3QOo/+n5qvHST6j+jI7n8h/TrP0LPZtXnau0/cRsN4C2Q
8D/Qs1n1udryPzY8vVKWIfU/KjqSy39I9z8IPZtVn6v4P8X+snvysPk/Tx4W
ak3z+T+gibDh6ZX5P/Cnxks3ifg/liGOdXEb9z9vgQTFjzH1PzSitDf4wvM/
LSEf9GxW8j+HFtnO91PxP3sUrkfhevA/eVioNc077j8/NV66SQzsP2HD0ytl
Geo/fdCzWfW55j82qz5XW7HfP4enV8oyxNE/bHh6pSxDxD/2l92Th4W6P1af
q63YX7Y/sb/snjwstD8Spb3BFyazP7n8h/Tb17E/k6mCUUmdsD+KH2PuWkKu
Pylcj8L1KKw/jgbwFkhQrD9fB84ZUdqrP3Qkl/+Qfqs/kaWr8w==
          "] -> 5.09, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAADMf0i/fR3yP7bz/dR46e4/Nqs+V1ux7T/N
O07RkVzsP28Sg8DKoes/i2zn+6nx7D++wRcmUwXwP8E5I0p7g/E/TtGRXP5D
9D8cfGEyVTD3P3rHKTqSy/k/rfpcbcX++z/nHafoSC79P/5D+u3rwP0/ak3z
jlN0/T83GsBbIEH8P8PTK2UZ4vk/N4lBYOXQ9j+J0t7gC5PyPz0K16NwPe4/
MzMzMzMz5z/vOEVHcvnhP5F++zpwztw/0gDeAgmK1z9VMCqpE9DUP5EPejar
PtM/nRGlvcEX0j9xGw3gLZDQP4j029eBc84/I0p7gy9Mzj9pAG+BBMXPPzbN
O07RkdA/Lv8h/fZ10D+6SQwCK4fOPyL99nXgnMk/T0ATYcPTwz8ZBFYOLbK9
PzQRNjy9UrY/WRe30QDesj+X/5B++zqwP+/Jw0Ktaa4/IjKm1w==
          "] -> 6.14, CompressedData["
1:eJxTTMoPSmVkYGDQBOL7D7gnr2z6ar+My021lOmzfda9wq6+Jx/su3Oe/175
8Y29nFiW7+e+1/ZzG9QOtS1/a59yJtb7BPtHewYw+GyfuiohJEj9m/26G/Fl
/nI/7Q9EKzh+TP5trw5UHX7qD1T8r33DdoemR8f/2Fu6uhf95P9jzyk9L07z
9C97ljA+3U1zf9gfu7O1pebCV6j9H+25MpRyKqre2i/de1BcLfi5PdARwSUq
j+19zDsdE54+sD+WawI08oF92vcniQuvPbAvlOZ9oDvhkX3thc2RX3c+sd9Q
lDHxbc1z+5m7p03gr3plf04y8JZ0zVv7/kNfNWL6P9gHeYJ89NFe+JPj+bSr
H+275JPfRTl9sJ8U88/519uXUH88sj9T77G/VvaG/X/Fv99KH5yxB3oGGCKH
7cHeXrDT/kWW9rfpdzfbAwA0Xqjj
          "] -> 7.12}, $CellContext`nn = {CompressedData["
1:eJxTTMoPSmVkYGDQBGLewjXdtzM+2Sv9/Vb6YM5b+wkLfhg+W/fa/v3Jw05r
M1/ZP6wSWef+8IU9W+NU5+6c5/Z7H4vInnz61H5W+ZxFyjuf2IO1Mzy1X/sr
Jvfov2f22t+m353c/tK+Byia3/jG/vBl7VTJR+/s/zn/evv6wAd7ICdCfPtH
+7fzbHSuzPpk38hytN+w/LO9fOvrwB1yX+zPvANZ/MV+jvGiLeY/vtjP1JKY
eoXzq/29ye2tUZe/2As1Hzi10PWL/Ypj3uadjp/tI1aYnrX2+2T//Uniwmsm
H+1Fga6zX/LeXqDKbLVd+Gv718VbRX+ffma/QEr/rgrbY/vtFxnuMXHes9+4
/w3QBTfsHy+dfURhwyX7Bo/9tbIW5+17p+eBrLDPBLqe5ehxe98WXv/1U47a
g63ddhgqf8je9L2Fq3vRQXtp3ge6ExYcsAcAhx+vDg==
          "] -> 2.58, CompressedData["
1:eJxTTMoPSmVkYGDQBGLb2aHzV6/9ZK/Bz711WeVb+4OWyl7Vza/t2yyuHc01
eWW/NvNeYVffC/tzHZfuPeB+DlX31P5UyMEVS/ye2B8SVwtmXfzE/rdVAVDJ
M/t17g+rRNa9tO90THh6Qemt/QIp/bsqbB/sLwN1T1750f7UYSegkZ/sNzA/
79F4+9m+AGzwF3tVtsapzt1f7aXnxWmeFvhm3/039fuTxG/2F5Vu/6zL+ga1
/5v9j0MpqxJCvtqfmLF72gT+L/YdrVGX9zz+ZF/zaUNA9qyP9r9jco/+2/Te
HuytGy/tj93Z2lJz4bE9xxqZqBTr+/a+oj1er1hu2D/9JH8pP/6yvYmgmc3e
oHP2M/KEmg+cOmm/Zu2N+DL/Y/ba7WI3z30/bN8c6Dm3Qe2QvV+SQITllgP2
oNB48mm/vSRLGJ/upr32B6IVHD8m77EHAPbtrvw=
          "] -> 2.94, CompressedData["
1:eJxTTMoPSmVkYGDQBOKciqqlOs6f7Ht2ZnP+XPDafvr/CXW/rV7Zm763cHUv
emn/zH7J/X18L+yBimReP3pmbzhTS2Lqlaf2oj1er1hMntrPfia7/IXHM/vo
y3sei8i+tJf/khNWu+6NfWJIkPqCzg/2U69wZijlfLK32Rs0TbHvi/2Zeo/9
tbLf7K3v+/dOz/tu3/To+Izd037YC1SZrbYL/2l/fNeOXrYPP+2POK3NvFf4
y/7pBaXbP+t+2c8qn7NIeedP+1KmWRzS837Y21VGrDA9+82+AWScxVf7E+y2
s0Pnf7YvnSzBEsb30f6JiOzJp/Yv7MHS6Xeg+i/YqxtyrJGJOmLfV1oozftg
rz2f7qa575dvs28Xu3nue/Bme7Vg1sWTrDbag1wTvXG9vZPdi5trfq2xDwa6
vrRwtX00WGCV/d2tLTUXNq+0f5q48JrJ+xX2AJw5pdI=
          "] -> 3.98, CompressedData["
1:eJxTTMoPSmVkYGDQBOKpVzgzlHI+2KuWMs3ikH5lf0U7VfJRxEt7Rt8WXv/1
L+x3/mn/cvv6c/uXaoYca2Re2Mf0H/qqEfPSXvMt7z6Dma/sN+nlLWbc89b+
XmFX35NPH+zllr/w0Pv/yZ6Zs0s++d0X+5Nl++ZL6X+zj76857GI7Hd7sHDU
d3uNup6d2Zzf7Z1lXj8yk/pm/yP48dLZR77YP01ceM3k/Sd7VbbGqc7dH+1X
fbzkmyTwwf5djb1p3K639iDXiW9/bZ89q3zOIuWX9s9lQRY+t98bNE2xr/Sp
PVh45yN757WZQCfdgtLnoO46aH+m3mN/rewO+wf7+OYYL9pif0hcLZh18Sb7
zPwPrSdDNtrnhtWu25a0HurutfZOCU8vKN1eCdW3wl7cI+CPRPFy+7D5q9fe
iF9mfz7t6vMs7WX2AIN1piA=
          "] -> 5.15, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAABkzF1LyAfxPzMzMzMzM+0/BOeMKO0N7D+4
HoXrUbjqPx6n6Egu/+k/3SQGgZVD6z92cRsN4C3uP1Z9rrZif/A/OUVHcvkP
8z/uWkI+6Nn1P3o2qz5XW/g/ak3zjlN0+j+gibDh6ZX7PxiV1AloIvw/6Gor
9pfd+z86kst/SL/6P9/gC5Opgvg/BFYOLbKd9T++MJkqGJXxP0p7gy9Mpuw/
dLUV+8vu5T/2KFyPwvXgP2iz6nO1Fds/PzVeukkM1j90JJf/kH7TP/Mf0m9f
B9I/KH6MuWsJ0T87AU2EDU/PP6foSC7/Ic0/Qj7o2az6zD/tnjws1JrOPyKO
dXEbDdA/escpOpLLzz9Pr5RliGPNP0HxY8xdS8g/orQ3+MJkwj/Qs1n1udq6
PyJseHqlLLM/FR3J5T+krz9CYOXQItupP78OnDOitKc/sUClgw==
          "] -> 6.12, CompressedData["
1:eJxTTMoPSmVkYGDQBGI+//VTUjs+2WvU9ezM5vxgv4H5eY/G29f2E/mrzFbb
PbdXuJQfz37uqT1YWfJz+5Z5Z1edv/rKvn15+CmjI2/t+ecYL9pi/tFe77/i
32+ln+3lW18H7pD7an+14qWaIcc3+5DHS2cfUfhm33zg1ELXbV/twcZJfrUX
Wrr3oLjaF/sKbhWg1Z/s/7Z/uX298YP9BZcbH754vbZ3bHp0fMbuZ/ZCYI2P
7MV+n3538vA9e+12sZvnvt+2v764wJbr+m37nwvSN78qvmsP0hXZ9sD+X+r3
J4kLH9mX+cuJZfk+tV93Ix7IfGEPduaPV/YGWiuFL7i8s09aeM3kvcUH+/+b
qj9tCPgAdd9be6Cnw6M3Prd/XbxV9PfpB/Y7/4AcdtW+BMR9d9Lei4cJ6ISD
UHO32Us+ihDffnGDPQD7ubLe
          "] -> 7.28}, $CellContext`pp = {CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAACq8dJNYhDzPwWjkjoBTew/HVpkO99P6z/W
xW00gLfqP799HThnROk/XwfOGVHa5z8Jih9j7lrmPyQofoy5a+U/taZ5xyk6
5j8wuycPC7XoP0tZhjjWxes/U5YhjnVx7z83GsBbIEHxP4hjXdxGA/M/ppvE
ILBy9D+Cc0aU9gb2Pz9XW7G/7Pc/fa62Yn/Z+T80ETY8vVL8P+/Jw0Ktaf4/
V1uxv+weAECWIY51cZsAQILix5i7lgBAmbuWkA96/z++MJkqGJX9P36MuWsJ
+fo/FD/G3LWE9j8jSnuDL0zuP2wJ+aBns+A/bjSAt0CC0j/mriXkg57FPzJV
MCqpE8A/0ETY8PRKuT/HuriNBvC2PwpoImx4erU/SL99HThntD/b+X5qvHSz
P4ts5/up8bI/nDOitDf4sj9dbcX+snuyPy9uowG8BbI/eumimA==
          "] -> 2.61, CompressedData["
1:eJxTTMoPSmVkYGDQBOIXWdrfpt/9bH+J4R4TZ9db+6ZHx2fsnvbG/shGvbzF
jG/s9xnM1JKY+sp+9fmrYW/0X9qvMD1r7Xfxub3K9P8T6n4/s+f8uSB986vn
9tUi69wfVr2yNwZrfGvPYTs7dP7qD/Y1iUahBlqf7NO+P0lceO2zvYHPMi43
1a/2hdK8D3QnfLPPzP/QejLkh/1z2eUvPPR+2eeADfxjf6Ox2G3Kt3/2eSYN
2x2aGBzWZt4r7OJjdFhSYMt1XZnRQaDKbLVdOIMDxP5/9rUXNkd+3fnH3gzk
vIk/7IGWrhS+8MH+KmeGUk7FI/vXj8ykDkRfsT8VcnDFEr8T9mDltw7Zuxf9
5H+5fb99Qpm/nFjWXvuCcx2X7j3Ybe+mWso0i2O3Pci1pUy77MNq121Lqt9p
3wmU5Z68037e++XHvM132j8F+srk/Q57AGVjp+M=
          "] -> 3.07, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAAAQWDm0yHb1P7ByaJHtfPA/mSoYldQJ8D+s
i9toAG/vP+Y/pN++Du4/at5xio7k7D+IY13cRgPsP3L5D+m3r+s/0ETY8PRK
7T/nHafoSC7wPw3gLZCg+PE/zqrP1Vbs8z9+HThnRGn1P2fV52or9vY/Hqfo
SC7/9z9xrIvbaAD5P3ZxGw3gLfo/2/l+arx0+z9O0ZFc/kP9P50Rpb3BF/8/
rBxaZDtfAECOBvAWSNAAQPJBz2bV5wBAofgx5q4lAEAAb4EExY/+PxIUP8bc
tfw/TRWMSuoE+T/LEMe6uI3xP6MjufyH9OM//7J78rBQ1z+4HoXrUbjOP6g1
zTtO0ck/gEi/fR04xz8jSnuDL0zGP02EDU+vlMU/yXa+nxovxT/whclUwajE
P0aU9gZfmMQ/SL99HThnxD99PzVeuknEP0vqBDQRNsQ/XJ2orA==
          "] -> 4.05, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAABEaW/whcn0P1ioNc07TvE/9ihcj8L18D/t
njws1JrwP8x/SL99HfA/+8vuycNC8D/sL7snDwvxPyuHFtnO9/E/vp8aL90k
9D9sCfmgZ7P2PyJseHqlLPk/8rBQa5p3+z9wzojS3uD8PzeJQWDl0P0/sAPn
jCjt/T8+6Nms+lz9P4JzRpT2Bvw/m+Ydp+hI+j+IY13cRgP4P5T2Bl+YTPY/
ayv2l92T9D8Jih9j7lrzP5jdk4eFWvI/JLn8h/Tb8D/u68A5I0rvPwfwFkhQ
/Ow/Qs9m1edq6T8wuycPC7XiPxHHuriNBtg/mnecoiO50D/CFyZTBaPKP2FU
Uiegicg/j+TyH9Jvxz8wuycPC7XGPwYSFD/G3MU/utqK/WX3xD/mP6Tfvg7E
P9v5fmq8dMM/dk8eFmpNwz96pSxDHOvCP68l5IOezcI/gqCvFA==
          "] -> 5.2, CompressedData["
1:eJxTTMoPSmVkYGDQBGKeySubAj2/2U+9wpmhlPPZPl7ztMDxXZ/sv2nE9B/6
+tG+RGX6/wl1H+1/vX19wFL5k73M60dmUgc+22+u/rQhIPur/c8F6ZtfFf+w
j/M+wW47+7d9tcg694dV/+wXbTH/cSiFwaH1deAOOVZGhz2sQiL2bowONnuD
pinyMTqAjYlmcPgsfyk/nv2ffaJRqIHWyl/2+nmLGfewfrNnXTzJitH3kz3Y
+t9v7I97m3c6Jjy3l9a/q8LW+Nje7Ky138WJD+zllr/w0Pt/154T7JDb9mHz
V6+9EX/L3vFj8plY7xv2EmrBQKOu2Z+YsXvaBP5r9ofEQQLX7Cuqluo4y1y3
fwnUrfj3mn3ZgzmCS/detTfkWCMTlXLZfivI+asu2Fe+VAMKnbE/uGKJn4Pw
SfsGj/21shbH7T1B2r4dtbd7cXPNr5ij9gClLKB9
          "] -> 6.17, CompressedData["
1:eJxTTMoPSmVkYGDQBOItJ8r2zZf6br+88rim1aQv9jv/tH+5ff2T/VevyDaL
ax/ss2eVz1mk/MG+tebC5sivH+zFb577Hvz4k/1+vjnGi7Z8sX9XY28at+u7
/ayZIPDLPuteYVffkz/2/uunpHYk/7MH6dp56589t5tqKdOsf/ZsQiL2x+78
tX96Qen2z7o/UPN/2QMtO5pr8t3+UNvy8FNGn+2nOXfnPP/9HmruS/uTIGfq
P4Wa88ierXEqUMVDe7dtn/9eqXhor/df8e+30kf2s0Pnr15747H93a0tQBc/
tf/n/Ovt6wPP7U0atjs0PXppz1zBraJR98aeH+R883f2fhcnxvxzfgd112v7
lcIXXG58eGbPNItDel7cQ6i9N+0TD1/WTpW8ZJ9yJtb7BPtZ+zUyUSnW94/b
xyg4fkw+c9QeAI84sZg=
          "] -> 7.06}, $CellContext`normalizeSpectrum[
         PatternTest[
          Pattern[$CellContext`l, 
           Blank[]], VectorQ]] := (Normalize[#, Total]& )[
         $CellContext`zeroBaselineSpectrum[$CellContext`l]], 
       TagSet[$CellContext`normalizeSpectrum, 
        MessageName[$CellContext`normalizeSpectrum, "usage"], 
        "normalizeSpectrum[v] reads a vector of spectra values, sets the \
minimum value to zero and normalizes the entries so they total to one"], \
$CellContext`zeroBaselineSpectrum[
         PatternTest[
          Pattern[$CellContext`l, 
           Blank[]], VectorQ]] := $CellContext`l - Min[$CellContext`l], 
       TagSet[$CellContext`zeroBaselineSpectrum, 
        MessageName[$CellContext`zeroBaselineSpectrum, "usage"], 
        "zeroBaselineSpectrum[v] shifts a spectrum so that its minimum value \
is zero"]}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.930241461192238*^9, 3.9302415029611683`*^9}, {
  3.930241641564033*^9, 3.93024164310812*^9}},
 CellLabel->
  "Out[426]=",ExpressionUUID->"83cf019c-7f13-450d-b524-0d74875c8699"]
}, Open  ]],

Cell[TextData[StyleBox["Observations:",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.930237064773532*^9, 3.930237070334207*^9}, {
  3.9302374479686003`*^9, 
  3.9302374489929028`*^9}},ExpressionUUID->"41512e34-af4d-4f1d-bae0-\
9b37075ae05a"],

Cell["\<\
If you don\[CloseCurlyQuote]t normalize the spectra (so that the lowest value \
is zero and the total entries sum to one) then there is not good agreement \
even between the two replicas of that are notionally the same\
\>", "Item",
 CellChangeTimes->{{3.930237144023477*^9, 3.9302372105439453`*^9}, {
  3.930237388784292*^9, 
  3.9302373936910152`*^9}},ExpressionUUID->"0bf0ed1e-5b86-4e30-a809-\
d46600cb4a88"],

Cell["\<\
If you do normalize the spectra, then there are pretty reasonable agreements \
between the different examples, independent of volume or the presence of \
vesicles\
\>", "Item",
 CellChangeTimes->{{3.930237144023477*^9, 3.9302372105439453`*^9}, {
  3.930237388784292*^9, 
  3.930237443424746*^9}},ExpressionUUID->"0425a42b-d40c-4819-a280-\
e22940a7aff8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Model Testing", "Section",
 CellChangeTimes->{{3.899307435805265*^9, 3.899307437237192*^9}, {
  3.899887080755357*^9, 3.8998870811035957`*^9}, {3.899887933607667*^9, 
  3.899887935230361*^9}},ExpressionUUID->"cf0c2d03-5026-49ff-accc-\
5606d8625b1a"],

Cell[TextData[{
 StyleBox["NORMALIZE THE DATA.",
  FontWeight->"Bold"],
 "  Then build some models."
}], "Text",
 CellChangeTimes->{{3.930237490952579*^9, 3.930237493816737*^9}, {
  3.9302412685626373`*^9, 3.9302412723949213`*^9}, {3.9302417244387608`*^9, 
  3.930241735870811*^9}},ExpressionUUID->"30ce9661-f34c-495b-88f4-\
637b87438f3a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"format", "[", "row_List", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"normalizeSpectrum", "@", 
      RowBox[{"Rest", "[", "row", "]"}]}], "->", 
     RowBox[{"First", "[", "row", "]"}]}], ")"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "noVescVariableVol", ",", "noVescSameVol1", ",", "noVescSameVol2", ",", 
      "vescSameVol"}], "}"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Partition", "[", 
       RowBox[{"#", ",", "6"}], "]"}], "&"}], "@", 
     RowBox[{
      RowBox[{"Map", "[", "format", "]"}], "@", 
      RowBox[{"Rest", "@", 
       RowBox[{"Transpose", "[", "d", "]"}]}]}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trainingData", " ", "=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{"noVescSameVol1", ",", "noVescSameVol2"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.9302373296172323`*^9, 3.9302373310397377`*^9}, {
  3.930237465311708*^9, 3.930237481961383*^9}, {3.930237665306427*^9, 
  3.9302376819213247`*^9}},
 CellLabel->
  "In[427]:=",ExpressionUUID->"869e95e1-5d4d-4d38-8bbd-7646278a3ad1"],

Cell[CellGroupData[{

Cell["Nearest Neighbor ", "Subsection",
 CellChangeTimes->{{3.8998879967420387`*^9, 
  3.899887999560256*^9}},ExpressionUUID->"7c7104f5-6b09-4049-8e20-\
6638d19130f1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"net", " ", "=", " ", 
  RowBox[{"Predict", "[", 
   RowBox[{"trainingData", ",", 
    RowBox[{"Method", "->", "\"\<NearestNeighbors\>\""}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"PredictorMeasurements", "[", 
  RowBox[{"net", ",", "noVescVariableVol"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"%", "[", "\"\<MeanDeviation\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.899888003136924*^9, 3.899888052816372*^9}, {
  3.930237498441476*^9, 3.930237508044426*^9}, {3.930237685332158*^9, 
  3.93023772184177*^9}, {3.930237758009903*^9, 3.9302377728338737`*^9}, {
  3.9302416636891813`*^9, 3.930241666466444*^9}},
 CellLabel->
  "In[430]:=",ExpressionUUID->"3d32ead7-069f-4887-9c39-789683493322"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["PredictorFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{}, {{}, {
                PointSize[0.125], 
                GrayLevel[0.55], 
                
                PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                  4, 4.}}]}, {
                GrayLevel[0.7], 
                AbsoluteThickness[1.5], 
                
                BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {5, 
                 4}}]}}, {}}, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
             BaseStyle -> {FontFamily -> "Arial", 
               AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, LabelStyle -> {FontFamily -> "Arial"},
              Method -> {"ScalingFunctions" -> None}, PlotRange -> {All, All},
              PlotRangeClipping -> True, PlotRangePadding -> {{1, 1}, {1, 1}},
              Ticks -> {None, None}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    TemplateBox[{"\" (\"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "41"}, 
                    "RowWithSeparators"], "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{}, {{}, {
                PointSize[0.125], 
                GrayLevel[0.55], 
                
                PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                  4, 4.}}]}, {
                GrayLevel[0.7], 
                AbsoluteThickness[1.5], 
                
                BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {5, 
                 4}}]}}, {}}, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
             BaseStyle -> {FontFamily -> "Arial", 
               AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, LabelStyle -> {FontFamily -> "Arial"},
              Method -> {"ScalingFunctions" -> None}, PlotRange -> {All, All},
              PlotRangeClipping -> True, PlotRangePadding -> {{1, 1}, {1, 1}},
              Ticks -> {None, None}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    TemplateBox[{"\" (\"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "41"}, 
                    "RowWithSeparators"], "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Number of training examples: \"", 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["12", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  PredictorFunction[<|
   "ExampleNumber" -> 12, 
    "Input" -> <|
     "Preprocessor" -> 
      MachineLearning`MLProcessor[
       "ToMLDataset", <|
        "Input" -> <|
          "f1" -> <|"Type" -> "NumericalVector", "Length" -> 41|>|>, 
         "Output" -> <|
          "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
         "Preprocessor" -> 
         MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor[
              "WrapMLDataset", <|
               "FeatureTypes" -> {"NumericalVector"}, "FeatureKeys" -> {"f1"},
                 "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic,
                 "RawExample" -> Missing["KeyAbsent", "RawExample"], 
                "StructurePreserving" -> False|>]}|>], "ScalarFeature" -> 
         True, "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"|>], "Processor" -> 
      MachineLearning`MLProcessor[
       "Sequence", <|
        "Input" -> <|"f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>,
          "Output" -> <|
          "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
         "Processors" -> {
           MachineLearning`MLProcessor[
           "SynthesizeMissingValues", <|
            "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Distribution" -> 
             LearnedDistribution[<|
               "ExampleNumber" -> 12, "Preprocessor" -> 
                MachineLearning`MLProcessor[
                 "ToMLDataset", <|
                  "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Length" -> 41|>|>,
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                   "Preprocessor" -> MachineLearning`MLProcessor["Identity"], 
                   "ScalarFeature" -> True, "Invertibility" -> "Perfect", 
                   "StructurePreserving" -> False, "Missing" -> "Allowed"|>], 
                "Processor" -> 
                MachineLearning`MLProcessor[
                 "Sequence", <|
                  "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                   "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                   "Processors" -> {
                    MachineLearning`MLProcessor[
                    "LogRescaleNumericalVector", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Indices" -> {15, 16, 17, 32}, 
                    "Centers" -> {0.03625678532293497, 0.03893004833386193, 
                    0.04183140443514308, 0.0011303567934577352`}, 
                    "Cutoffs" -> {0.00023978316291586171`, 
                    0.0000633741823163822, 0.00013285814593134992`, 
                    0.00008048651715511089}, "Version" -> {14., 0}, "ID" -> 
                    8482204006555573411, 
                    "Output" -> <|
                    "f1" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 1|>|>|>], 
                    MachineLearning`MLProcessor[
                    "Standardize", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAAB67zjkQHmhP+h60V5zkps/ItkYx2URmj9g
XPPfi7CYP9XeB787jpc/srwuSo+Klz+dA89ayFyYP+pMPs1JTZk/fYiv3oc+
nD/yubg1XhqgP0zdKFAIEaI/DRs4/qT0oz9TgR6SQjalPxRqQ1C7R6Y/RiR4
Fg9uBEB85hO5jjkJQICg9HNA6vU/HibAw6BNpj+gyZ8UxHulP18KPMSC4aQ/
KAGezHUlpD/0Uk3cm2mjPwae0FLToKI/PN0ZPX1XoT/mvNYFCkqgP9T/kzPG
dJ4/RUb4x83Pmj9y0iN00+WTPxJLBGGyO4o/FgGUzzAVgz8GE6Ses+l/P+Rp
3kfKyAVAeFU0tr8cfD951AZSAcJ4PyqPAU03HnM/CLC4hZ4Haj9yqhEWGChf
P9Ub4asQL08/yWogQfZXQD+gmctzVLQkP9Sa0fXzFbA+t5GWCg==
                    "], "StandardDeviation" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAAB2Tg5dOt5ePxaXsDaLLmk/lvyRvOEHZT8u
ocBBj9xjP16vGDZKGGU/DIK703Hxaj92kFxB64t0P0FSa+7UWHs/Yrqx1Sfl
gT/iSdr9teeEP/NKets7sYY/pzyzba8qhz/4hFKPIoaGPx/ZNuP2tYQ/YkDv
A62J/D/jD/wULUMBQASlOb1q5QVAD+Q9M34Zcz+9Eiwzlqd/P0V+/TUFL4c/
HDblwHOajj8by63I3KaRP7p20rmMnpI/2hbrJm76kT+MsxLB88qQP96ngMad
/I0/p9CeUfblhz8pA0yZKGh8P/Y+qEg/ZnU/nHqZ9xLkfD/zl3VgYbOCPx7W
Gbj+rwBAY2tD8ie8hT+4POIZC9SDPwf7cisAH38/QhFeuEsedT99DZiQwWtp
P5ptv4/jMlk/UQIlgviDSD9vhwyfG0UuPwPFUDrarMo+6fmaLA==
                    "], 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Version" -> {14., 0}, "ID" -> 4831699382257594162|>]}, 
                   "Invertibility" -> "Perfect", "StructurePreserving" -> 
                   True, "Missing" -> "Allowed"|>], "PerformanceGoal" -> 
                "DirectTraining", "BatchProcessing" -> Automatic, 
                "Model" -> <|"RotationMatrix" -> CompressedData["
1:eJwBoQJe/SFib1JlAgAAACkAAAACAAAASIle9MW4wz+OvE5KJR67v2lSCL3y
gsg/6xi+ua4Ik7+ypG2t6DrGPx1pC4Bl6r2/osbf251guT886ZI4lSPOv1Yi
A2x2Prk/nooNqfGUzr/qiTd/HizDP73W+anPRce/BBoQG/fXxj9LA+eELn29
v0cWseomwcc/+2wZp7gztr+M0a8s/AzIP9B9Er3HE7O/kzXdFVEByD8fUfWN
MN6zv5CKjDo6yMc/TunbLJ9Mtr/qtTkaRg/HP2HiXYmtXLu/fF1m/jFIxj9z
mP1e/E7Av6tqBTJS3sQ/VnFuKuK/w78NZrhzwWvEP81Iq+Oa97q/OgC0JaNn
wT9SYUHxTIXCv+1GfoBzS3+/03aZ0Wsf0b/f2p1ip962v/FS8GIVaM+/ZPiV
lf/Nxr/PT/KfxAi9vxu5kcHfdci/QwYQxqeXrb+uStrYK+nIv1TtRvs8EJ2/
ZKtiVuUjyb+N8Hfjd6uKvz5FjDlAJMm/jWCI/Mncar9nCotP0RTJv7Z0NckA
HYI/Q8+TjQIbyb/3qFlNaIeUP3FgRx3v18i/Sm9Gim8aoj+YgQMFb2/Iv0we
VCtrXLA/1NbOTbmwxL8XJA9m8DXEP2K0a/eyoXO/RG7qmH/L0T9WyKFVcs+3
P/EjNoe0Zs8/417BpEmlvz/AJXNKX+HLP+zu5OTg4L8/GLfQZlpNwT+GCblX
HYPBP9Y33F+S1ck/EAUqdienwT/Wi3dVKpLJP8FasOdl0ME/TWG/V5N7yT9i
+1O37LzBP4IJ0VQsbMk/fFs+PNKQwT9dmzREV7jJP/vrr50NnME/s/S5lDm6
yT8hbe+hUHfBP3cky6Nkxsk/4j8ngGVVwT8xmLSFhhnKP2YG8x+HFLC//rAj
7ZpUjD8RrVpN
                   "], 
                  "Precisions" -> {0.038597928967835204`, 0.0792836842612413},
                   "NoisePrecision" -> 15.621569178847462`, "Processor" -> 
                  MachineLearning`MLProcessor[
                   "Center", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAADqEQ+/uGJEvwC26QqrsTQ/AJ3J+2zOVL8V
dJDta2JUPyoaVMkoRkI/qgiQzhNbTb9Ve+WmW0M8PwDQvEhINgY/KiA3xKtD
YT8qNWoakRhev2r19Xb9v2K/quFtZ+ZHRD8Ahs1ScG5avyqLQe77gmY/AApb
9gkWV79qmwkrijJaPxXEe7Yn7Vk/oMtHm9mbY7/V0z5cCgddP0DPcQx6KXE/
VZmoixMCTb8AXll9wnVFP0Dp0O5aSWW/VVVmA8M9Fr9V5iSI/hpKv1XH2VzD
+06/KqVbsQ+XXj/VvgRb72NYP1W0gR4H7UQ/oHV2hdkLOD+AV5IWZNZUv0DZ
BM9p0Fq/Vb+m2Z85M79qt2pRrjFiP8Cn0TC4FVE/VfAoQZq9SL9AKcLCQHdS
PwDceS9sChC/ANCAsPO1G7/VbmZ/bfpEvwCcGRcvSEY/64GUYA==
                    "], 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Version" -> {14., 0}, "ID" -> 5996981336037487093|>], 
                  "PostProcessor" -> 
                  MachineLearning`MLProcessor[
                   "FirstValues", <|
                    "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, 
                    "Key" -> "f1", "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
                   "Method" -> "Multinormal", 
                  "Options" -> <|
                   "CovarianceType" -> <|
                    "Value" -> "Full", "Options" -> <||>|>, 
                    "IntrinsicDimension" -> <|
                    "Value" -> 2, "Options" -> <||>|>|>|>, 
                "TrainingInformation" -> <|
                 "Configurations" -> 
                  Dataset[<|<|
                    "Value" -> "Multinormal", 
                    "Options" -> <|
                    "CovarianceType" -> <|"Value" -> "Full"|>, 
                    "IntrinsicDimension" -> <|"Value" -> "Heuristic"|>|>, 
                    "NaiveImputer" -> 
                    MachineLearning`MLProcessor[
                    "ImputeMissing", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAAAgEg+/uGJEv6qy6QqrsTQ/wJ3J+2zOVL+q
c5Dta2JUP6oaVMkoRkI/VAiQzhNbTb9VeeWmW0M8PwDQvEhINgY/qh83xKtD
YT8qNWoakRhev9X19Xb9v2K/VeNtZ+ZHRD8Ah81ScG5avyqLQe77gmY/Kgpb
9gkWV78AmwkrijJaP1XDe7Yn7Vk/qstHm9mbY79V1D5cCgddPxXPcQx6KXE/
qpioixMCTb8AXFl9wnVFP1Xp0O5aSWW/qlpmA8M9Fr9V5SSI/hpKv6rI2VzD
+06/VaVbsQ+XXj9KvwRb72NYP6q0gR4H7UQ/qnZ2hdkLOD+qWJIWZNZUv6rZ
BM9p0Fq/qr6m2Z85M79Vt2pRrjFiPwCo0TC4FVE/AO4oQZq9SL+qKMLCQHdS
PwDgeS9sChC/qtqAsPO1G7+qbmZ/bfpEv9WaGRcvSEY/exSYTg==
                    "], "StandardDeviation" -> CompressedData["
1:eJxTTMoPSmVkYGDQBGKTte339jB8sGfLqWX24v5g3/g85BUD0wf7O/9mSZz9
897e6xDT3KS37+23Lro2/zTrB/tTajkLGIHizVMEvGL+vrdnCp/x14nxg/2k
SLVbghwf7P8dnmyhDjSHNYrrzOX/7+21d16ZtJblg/2uH2/nGgHVV5vVz9sA
VH883jwvESh+UrRubwpQ32+RWY2r77639zD8UHX433v75W/CPLd9em//+POs
i7kf3tv7vTzOex2ojjF0VvguoPuufn/sb/r1vX2lY+aVE2wf7CM7hBSVXr63
f+7dmX0U6M5lzxdGBfMB1b84eG8LUL1fZdGZ70DzTj9znif8+b39pu6gVRpA
+yfe+pcYBPT/1KX9iZa/gPLTvGZJc36wr/Fr3G3+/b297qGCM+FAd3+vmMI/
CWiOW+9d0dNAe2ZrLSu0ZAeFm1OTK1A9AEVDrJk=
                    "], "Method" -> "NaiveSampler", "VectorLength" -> 41, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Type" -> "NumericalVector", "Version" -> {14., 0}, "ID" -> 
                    9048412143032033467|>], "EMIterations" -> 1|> -> <||>|>, 
                    TypeSystem`Assoc[
                    
                    TypeSystem`Struct[{
                    "Value", "Options", "NaiveImputer", "EMIterations"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Struct[{"Value"}, {
                    TypeSystem`Atom[String]}], 2], TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer]}], 
                    TypeSystem`Assoc[
                    TypeSystem`UnknownType, TypeSystem`UnknownType, 
                    TypeSystem`AnyLength], 1], <||>], "BestModelInformation" -> 
                  Dataset[<|
                    "Configuration" -> {
                    "Multinormal", "CovarianceType" -> "Full", 
                    "IntrinsicDimension" -> "Heuristic"}, "ModelUtility" -> 
                    Missing[]|>, 
                    TypeSystem`Struct[{"Configuration", "ModelUtility"}, {
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[String], TypeSystem`AnyType, 
                    TypeSystem`AnyType}], TypeSystem`UnknownType}], <||>]|>, 
                "NaiveImputer" -> 
                MachineLearning`MLProcessor[
                 "ImputeMissing", <|
                  "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                   "StructurePreserving" -> True, 
                   "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                   "Mean" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAAAgEg+/uGJEv6qy6QqrsTQ/wJ3J+2zOVL+q
c5Dta2JUP6oaVMkoRkI/VAiQzhNbTb9VeeWmW0M8PwDQvEhINgY/qh83xKtD
YT8qNWoakRhev9X19Xb9v2K/VeNtZ+ZHRD8Ah81ScG5avyqLQe77gmY/Kgpb
9gkWV78AmwkrijJaP1XDe7Yn7Vk/qstHm9mbY79V1D5cCgddPxXPcQx6KXE/
qpioixMCTb8AXFl9wnVFP1Xp0O5aSWW/qlpmA8M9Fr9V5SSI/hpKv6rI2VzD
+06/VaVbsQ+XXj9KvwRb72NYP6q0gR4H7UQ/qnZ2hdkLOD+qWJIWZNZUv6rZ
BM9p0Fq/qr6m2Z85M79Vt2pRrjFiPwCo0TC4FVE/AO4oQZq9SL+qKMLCQHdS
PwDgeS9sChC/qtqAsPO1G7+qbmZ/bfpEv9WaGRcvSEY/exSYTg==
                    "], "StandardDeviation" -> CompressedData["
1:eJxTTMoPSmVkYGDQBGKTte339jB8sGfLqWX24v5g3/g85BUD0wf7O/9mSZz9
897e6xDT3KS37+23Lro2/zTrB/tTajkLGIHizVMEvGL+vrdnCp/x14nxg/2k
SLVbghwf7P8dnmyhDjSHNYrrzOX/7+21d16ZtJblg/2uH2/nGgHVV5vVz9sA
VH883jwvESh+UrRubwpQ32+RWY2r77639zD8UHX433v75W/CPLd9em//+POs
i7kf3tv7vTzOex2ojjF0VvguoPuufn/sb/r1vX2lY+aVE2wf7CM7hBSVXr63
f+7dmX0U6M5lzxdGBfMB1b84eG8LUL1fZdGZ70DzTj9znif8+b39pu6gVRpA
+yfe+pcYBPT/1KX9iZa/gPLTvGZJc36wr/Fr3G3+/b297qGCM+FAd3+vmMI/
CWiOW+9d0dNAe2ZrLSu0ZAeFm1OTK1A9AEVDrJk=
                    "], "Method" -> "NaiveSampler", "VectorLength" -> 41, 
                   "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                   "Type" -> "NumericalVector", "Version" -> {14., 0}, "ID" -> 
                   9048412143032033467|>], "InputDimension" -> 0, 
                "OutputDimension" -> 41, 
                "Log" -> <|
                 "Example" -> 
                  MachineLearning`MLDataset[<|
                    "f1" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 1, 
                    "Values" -> CompressedData["
1:eJwBWQGm/iFib1JlAgAAAAEAAAApAAAAIdiKkQKIoT/JYaUCi7yePysOALke
E5s/n15PJRLjlj/oFzDYQ7CVP9u5ZPJegJc/UuwqWQ5Qmz/rgROqSrieP9Gj
oShuFqI/8hef6uimpD+36AyG/J2mP1SXmRX706c/Ip1VqZscqD9kp1Dp2tGn
PzWE/qHIMqc/tqRWGtcZpj9QC7aHqjekPxeGkLZSy6E/w1BbGPjNnD8Kiytx
ZlmXP0rEio7XBpI/puDUDIPRjD/FPn4Xsu6IP2SnUOna0Yc/iv8SBDDViD9q
yHOCA9GLP2sr2iL8jo8/MrNif/oqkj8pfxawxcCUP/8qXDnRWpc/oBI/Zb1/
mj+REmFAc5KcP43B16DAs5w/qVZk44f6mT/UEtnTm0eUP7sKMkh9hIs/o39N
uAOQgD8CgTmyqmJwP2GCJaxRNWA/i2XJK5/tQz8AAAAAAAAAAPILmiQ=
                    "], "ID" -> 3469183340482081255|>|>, <|
                    "ExampleNumber" -> 1, "ExampleWeights" -> 1, 
                    "LogDensityRatios" -> 0, "RawExample" -> False|>], 
                  "TrainingTime" -> 0.070594, "MaxTrainingMemory" -> 200712, 
                  "DataMemory" -> 6032, "FunctionMemory" -> 45688, 
                  "LanguageVersion" -> {14., 0}, "Date" -> 
                  DateObject[{
                    2024, 7, 17, 17, 47, 47.363965`8.428023027858265}, 
                    "Instant", "Gregorian", -4.], "ProcessorCount" -> 4, 
                  "ProcessorType" -> "x86-64", "OperatingSystem" -> "MacOSX", 
                  "SystemWordLength" -> 64, "Evaluations" -> {}|>, 
                "LogPDFDistribution" -> 
                MachineLearning`TailedQuantileDistribution[<|
                  "Quantiles" -> {4.819219430300041, 4.819219430300041, 
                    4.898266099931775, 5.257524063478136, 5.264493014456535, 
                    5.290291463059036, 5.31084904597749, 5.321849271928228, 
                    5.331408181042344, 5.410829920648876, 5.494674970353918}, 
                   "LeftBoundary" -> 4.898266099931775, "LeftScale" -> 
                   0.039523334815867006`, "LeftTailNorm" -> 0.2|>], "Entropy" -> 
                Around[-214.83756239082317`, 2.771979686510119], 
                "EntropySampleSize" -> 10|>], 
             "Output" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "EvaluationStrategy" -> "ModeFinding", "Version" -> {14., 0}, 
             "ID" -> 4270897793735380344|>], 
           MachineLearning`MLProcessor[
           "LogRescaleNumericalVector", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Indices" -> {15, 16, 17, 32}, 
             "Centers" -> {0.03625678532293497, 0.03893004833386193, 
              0.04183140443514308, 0.0011303567934577352`}, 
             "Cutoffs" -> {0.00023978316291586171`, 0.0000633741823163822, 
              0.00013285814593134992`, 0.00008048651715511089}, 
             "Version" -> {14., 0}, "ID" -> 8287105230391160006, 
             "Output" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>|>], 
           MachineLearning`MLProcessor[
           "Standardize", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Mean" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAAB67zjkQHmhP+h60V5zkps/ItkYx2URmj9g
XPPfi7CYP9XeB787jpc/srwuSo+Klz+dA89ayFyYP+pMPs1JTZk/fYiv3oc+
nD/yubg1XhqgP0zdKFAIEaI/DRs4/qT0oz9TgR6SQjalPxRqQ1C7R6Y/RiR4
Fg9uBEB85hO5jjkJQICg9HNA6vU/HibAw6BNpj+gyZ8UxHulP18KPMSC4aQ/
KAGezHUlpD/0Uk3cm2mjPwae0FLToKI/PN0ZPX1XoT/mvNYFCkqgP9T/kzPG
dJ4/RUb4x83Pmj9y0iN00+WTPxJLBGGyO4o/FgGUzzAVgz8GE6Ses+l/P+Rp
3kfKyAVAeFU0tr8cfD951AZSAcJ4PyqPAU03HnM/CLC4hZ4Haj9yqhEWGChf
P9Ub4asQL08/yWogQfZXQD+gmctzVLQkP9Sa0fXzFbA+t5GWCg==
              "], "StandardDeviation" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAAB2Tg5dOt5ePxaXsDaLLmk/lvyRvOEHZT8u
ocBBj9xjP16vGDZKGGU/DIK703Hxaj92kFxB64t0P0FSa+7UWHs/Yrqx1Sfl
gT/iSdr9teeEP/NKets7sYY/pzyzba8qhz/4hFKPIoaGPx/ZNuP2tYQ/YkDv
A62J/D/jD/wULUMBQASlOb1q5QVAD+Q9M34Zcz+9Eiwzlqd/P0V+/TUFL4c/
HDblwHOajj8by63I3KaRP7p20rmMnpI/2hbrJm76kT+MsxLB88qQP96ngMad
/I0/p9CeUfblhz8pA0yZKGh8P/Y+qEg/ZnU/nHqZ9xLkfD/zl3VgYbOCPx7W
Gbj+rwBAY2tD8ie8hT+4POIZC9SDPwf7cisAH38/QhFeuEsedT99DZiQwWtp
P5ptv4/jMlk/UQIlgviDSD9vhwyfG0UuPwPFUDrarMo+6fmaLA==
              "], 
             "Output" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Version" -> {14., 0}, "ID" -> 4646170885319460202|>]}, 
         "Invertibility" -> "Perfect", "StructurePreserving" -> True, 
         "Missing" -> "Imputed"|>]|>, 
    "Output" -> <|
     "Preprocessor" -> 
      MachineLearning`MLProcessor[
       "ToMLDataset", <|
        "Input" -> <|"f1" -> <|"Type" -> "Numerical"|>|>, 
         "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
         "Preprocessor" -> 
         MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor[
              "WrapMLDataset", <|
               "FeatureTypes" -> {"Numerical"}, "FeatureKeys" -> {"f1"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"], 
                "StructurePreserving" -> False|>]}|>], "ScalarFeature" -> 
         True, "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"|>], "Processor" -> 
      MachineLearning`MLProcessor[
       "Sequence", <|
        "Input" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
         "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
         "Processors" -> {
           MachineLearning`MLProcessor[
           "ToVector", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
             "Output" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Version" -> {14., 0}, "ID" -> 137422882915779582|>], 
           MachineLearning`MLProcessor[
           "Standardize", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Mean" -> {4.664999999999999}, 
             "StandardDeviation" -> {1.631898179013222}, 
             "Output" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Version" -> {14., 0}, "ID" -> 5276422737451164747|>], 
           MachineLearning`MLProcessor[
           "FromVector", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>,
              "Version" -> {14., 0}, "ID" -> 9189645664226701459|>], 
           MachineLearning`MLProcessor[
           "FirstValues", <|
            "Info" -> <|"Type" -> "Numerical", "Weight" -> 1|>, "Key" -> "f1",
              "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
             "Missing" -> "Allowed"|>]}, "Invertibility" -> "Perfect", 
         "StructurePreserving" -> False, "Missing" -> "Allowed"|>], 
      "ProbabilityPostprocessor" -> Identity, 
      "InverseProcessorFunction" -> (4.664999999999999 + 
       1.631898179013222 #& ), 
      "ProcessorFunction" -> (-2.8586342334304438` + 0.6127833297814457 #& ), 
      "Name" -> "value", 
      "Quantiles" -> {-1.308292409083386, 1.5595335742937797`}, "Mean" -> 
      4.665|>, "LabelSplitter" -> 
    MachineLearning`MLProcessor[
     "FeatureLabelSplit", <|
      "Processor" -> MachineLearning`MLProcessor["ListSplit"], 
       "PreferLabeled" -> True, "KeepLabelsFormat" -> False|>], 
    "RecalibrationFunction" -> None, "ImputationStrategy" -> Automatic, 
    "Prior" -> Automatic, "Utility" -> (DiracDelta[#2 - #]& ), "Threshold" -> 
    0, "PerformanceGoal" -> Automatic, "BatchProcessing" -> Automatic, 
    "Model" -> <|
     "NeighborsFunction" -> 
      MachineLearning`PackageScope`NeighborsFunction[
       "BruteForce", {CompressedData["
1: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

         "], {9.902508979245525, 30.05816442184498, 31.405409410745172`, 
         17.384425729233083`, 20.640583483284605`, 48.39045253910146, 
         8.515532383069935, 9.464272440254005, 17.816444291684356`, 
         36.402878410532274`, 7.497956620157149, 8.527769255348657}}], 
      "NeighborsNumber" -> 1, 
      "DistributionData" -> {NormalDistribution, 0.3125144917486837}, 
      "TrainingOutput" -> 
      RawArray["Real32",{-0.3646060824394226, 0.9038553833961487, 
        0.8548327684402466, -1.2592697143554688`, -0.35847824811935425`, 
        1.5595335960388184`, 
        0.2604329288005829, -1.3082923889160156`, -0.9835172295570374, 
        1.5043830871582031`, 0.2420494109392166, -1.050923466682434}], 
      "DistributionSmoothing" -> 0.5, "Processor" -> 
      MachineLearning`MLProcessor[
       "FirstValues", <|
        "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, "Key" -> 
         "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"|>], "Calibrator" -> None, "Method" -> 
      "NearestNeighbors", "PostProcessor" -> 
      MachineLearning`MLProcessor["Identity"], 
      "Options" -> <|
       "NeighborsNumber" -> <|"Value" -> 1, "Options" -> <||>|>, 
        "DistributionSmoothing" -> <|"Value" -> 0.5, "Options" -> <||>|>, 
        "NearestMethod" -> <|"Value" -> "Scan", "Options" -> <||>|>|>|>, 
    "TrainingInformation" -> <|
     "Configurations" -> 
      Dataset[<|<|
          "Value" -> "NearestNeighbors", 
           "Options" -> <|
            "NeighborsNumber" -> <|"Value" -> Automatic|>, 
             "DistributionSmoothing" -> <|"Value" -> 0.5|>, 
             "NearestMethod" -> <|"Value" -> Automatic|>|>, "NaiveImputer" -> 
           Missing["KeyAbsent", "NaiveImputer"], "EMIterations" -> 
           Missing["KeyAbsent", "EMIterations"]|> -> <||>|>, 
        TypeSystem`Assoc[
         TypeSystem`Struct[{
          "Value", "Options", "NaiveImputer", "EMIterations"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Assoc[
            TypeSystem`Atom[String], 
            TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 3], 
           TypeSystem`UnknownType, TypeSystem`UnknownType}], 
         TypeSystem`Assoc[
         TypeSystem`UnknownType, TypeSystem`UnknownType, 
          TypeSystem`AnyLength], 1], <||>], "BestModelInformation" -> 
      Dataset[<|"Configuration" -> {
          "NearestNeighbors", "NeighborsNumber" -> Automatic, 
           "DistributionSmoothing" -> 0.5, "NearestMethod" -> Automatic}, 
         "ModelUtility" -> Missing[]|>, 
        TypeSystem`Struct[{"Configuration", "ModelUtility"}, {
          TypeSystem`Tuple[{
            TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`AnyType}], TypeSystem`UnknownType}], <||>], 
      "InputDimension" -> 41, "OutputDimension" -> 1|>, "AnomalyDetector" -> 
    None, "Log" -> <|
     "Example" -> 
      MachineLearning`MLDataset[<|
        "f1" -> <|
          "Type" -> "NumericalVector", "Weight" -> 1, 
           "Values" -> CompressedData["
1:eJwBWQGm/iFib1JlAgAAAAEAAAApAAAAIdiKkQKIoT/JYaUCi7yePysOALke
E5s/n15PJRLjlj/oFzDYQ7CVP9u5ZPJegJc/UuwqWQ5Qmz/rgROqSrieP9Gj
oShuFqI/8hef6uimpD+36AyG/J2mP1SXmRX706c/Ip1VqZscqD9kp1Dp2tGn
PzWE/qHIMqc/tqRWGtcZpj9QC7aHqjekPxeGkLZSy6E/w1BbGPjNnD8Kiytx
ZlmXP0rEio7XBpI/puDUDIPRjD/FPn4Xsu6IP2SnUOna0Yc/iv8SBDDViD9q
yHOCA9GLP2sr2iL8jo8/MrNif/oqkj8pfxawxcCUP/8qXDnRWpc/oBI/Zb1/
mj+REmFAc5KcP43B16DAs5w/qVZk44f6mT/UEtnTm0eUP7sKMkh9hIs/o39N
uAOQgD8CgTmyqmJwP2GCJaxRNWA/i2XJK5/tQz8AAAAAAAAAAPILmiQ=
            "], "ID" -> 692740363108450636|>|>, <|
        "ExampleNumber" -> 1, "ExampleWeights" -> 1, "LogDensityRatios" -> 0, 
         "RawExample" -> False|>], "TrainingTime" -> 0.117503, 
      "MaxTrainingMemory" -> 306608, "DataMemory" -> 6856, "FunctionMemory" -> 
      113592, "LanguageVersion" -> {14., 0}, "Date" -> 
      DateObject[{2024, 7, 17, 17, 47, 47.407646`8.42842336754664}, "Instant",
         "Gregorian", -4.], "ProcessorCount" -> 4, "ProcessorType" -> 
      "x86-64", "OperatingSystem" -> "MacOSX", "SystemWordLength" -> 64, 
      "Evaluations" -> {}|>|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.899888018758743*^9, 3.899888054388913*^9, 
  3.930237508924018*^9, 3.9302376875861053`*^9, 3.930237773539298*^9, 
  3.9302413016721573`*^9, 3.930241667422584*^9},
 CellLabel->
  "Out[430]=",ExpressionUUID->"82943afc-b1c0-4d78-9e67-3af51c67e753"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   StyleBox[
    FrameBox[GridBox[{
       {
        ItemBox[
         FrameBox[
          StyleBox["\<\"Predictor Measurements\"\>", "SuggestionsBarText",
           StripOnInput->False,
           FontSize->12],
          FrameMargins->{{10, 5}, {-4, 2}},
          FrameStyle->None,
          StripOnInput->False],
         Alignment->{Left, Bottom},
         Background->RGBColor[0.96, 0.96, 0.96],
         Frame->{{False, False}, {True, False}},
         FrameStyle->Opacity[0.1],
         ItemSize->{Automatic, 1},
         StripOnInput->False]},
       {
        ItemBox[
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Predictor method"], 
                   TextCell["Predictor method"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               
               InterpretationBox[Cell[
                "NearestNeighbors",ExpressionUUID->
                 "d948f409-e179-4ccf-a89b-67382071be52"],
                TextCell["NearestNeighbors"]]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Number of test examples"], 
                   TextCell["Number of test examples"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], "6"},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Standard deviation"], 
                   TextCell["Standard deviation"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 TemplateBox[{"0.4555034125028843417`3.", 
                   StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.2151797475249717095`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                  "RowDefault"],
                 
                 TemplateBox[{
                  "\"95% confidence interval: [\"", 
                   "0.0251439174529409226`3.", "\", \"", 
                   "0.8858629075528277053`3.", "\"]\""}, "RowDefault"],
                 TooltipStyle->{}],
                Annotation[#, 
                 
                 Row[{"95% confidence interval: [", 0.0251439174529409226`3., 
                   ", ", 0.8858629075528277053`3., "]"}], "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  TagBox[
                   TooltipBox[
                    InterpretationBox[
                    Cell["Standard deviation baseline"], 
                    TextCell["Standard deviation baseline"]], 
                    "\"Standard deviation of testset values\"", TooltipStyle -> 
                    "TextStyling"], 
                   Annotation[#, "Standard deviation of testset values", 
                    "Tooltip"]& ], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 TemplateBox[{"1.6823569775764002365`3.", 
                   StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.30705172828955829`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                  "RowDefault"],
                 
                 TemplateBox[{
                  "\"95% confidence interval: [\"", 
                   "1.0682535209972836565`3.", "\", \"", 
                   "2.2964604341555165945`3.", "\"]\""}, "RowDefault"],
                 TooltipStyle->{}],
                Annotation[#, 
                 
                 Row[{"95% confidence interval: [", 1.0682535209972836565`3., 
                   ", ", 2.2964604341555165945`3., "]"}], "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["R-squared"], 
                   TextCell["R-squared"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 TemplateBox[{"0.9266927441895285167`3.", 
                   StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0745874321439473631`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                  "RowDefault"],
                 
                 TemplateBox[{
                  "\"95% confidence interval: [\"", 
                   "0.7775178799016337905`3.", "\", \"", 
                   "1.0758676084774232429`3.", "\"]\""}, "RowDefault"],
                 TooltipStyle->{}],
                Annotation[#, 
                 
                 Row[{"95% confidence interval: [", 0.7775178799016337905`3., 
                   ", ", 1.0758676084774232429`3., "]"}], "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Mean cross entropy"], 
                   TextCell["Mean cross entropy"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 TemplateBox[{"0.6444437936641519427`3.", 
                   StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.3321482175394651071`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                  "RowDefault"],
                 TemplateBox[{"\"95% confidence interval: [\"", 
                   RowBox[{"-", "0.0198526414147782715`3."}], "\", \"", 
                   "1.3087402287430820458`3.", "\"]\""}, "RowDefault"],
                 TooltipStyle->{}],
                Annotation[#, 
                 
                 Row[{"95% confidence interval: [", -0.0198526414147782715`3.,
                    ", ", 1.3087402287430820458`3., "]"}], "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Single evaluation time"], 
                   TextCell["Single evaluation time"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{"1.7`", 
                 
                 RowBox[{
                  "\"ms\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]",
                    "\"example\""}], "milliseconds per example", 
                 FractionBox["\"Milliseconds\"", "\"Examples\""]},
                "Quantity"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Batch evaluation speed"], 
                   TextCell["Batch evaluation speed"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{"347.`", 
                 
                 RowBox[{
                  "\"examples\"", "\[InvisibleSpace]", "\"/\"", 
                   "\[InvisibleSpace]", "\"s\""}], "examples per second", 
                 FractionBox["\"Examples\"", "\"Seconds\""]},
                "Quantity"]},
              {
               ItemBox[
                GraphicsBox[{{{}, {
                    TagBox[
                    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
                    0.012833333333333334`], AbsoluteThickness[2], 
                    GeometricTransformationBox[InsetBox[
                    FormBox[
                    StyleBox[
                    GraphicsBox[
                    {RGBColor[0.34398, 0.49112, 0.89936], AbsoluteThickness[
                    1.], CircleBox[{0, 0}, Offset[{1.8, 1.8}, {0., 0.}]]}],
                    StripOnInput->False,
                    GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]]}],
                    TraditionalForm], {0., 0.}], {{{2.530000032911095, 
                    2.58}}, {{2.530000032911095, 2.94}}, {{
                    2.9499999084386723`, 3.98}}, {{5.05999999294293, 
                    5.15}}, {{6.139999954255472, 6.12}}, {{7.210000035485688, 
                    7.28}}}]},
                    Annotation[#, "Charting`Private`Tag#1"]& ], {
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{2.530000032911095, 2.58}}]},
                    RowBox[{"{", 
                    RowBox[{"2.530000032911095`", ",", "2.58`"}], "}"}]],
                    Annotation[#, {2.530000032911095, 2.58}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{2.530000032911095, 2.94}}]},
                    RowBox[{"{", 
                    RowBox[{"2.530000032911095`", ",", "2.94`"}], "}"}]],
                    Annotation[#, {2.530000032911095, 2.94}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{2.9499999084386723`, 3.98}}]},
                    RowBox[{"{", 
                    RowBox[{"2.9499999084386723`", ",", "3.98`"}], "}"}]],
                    Annotation[#, {2.9499999084386723`, 3.98}, "Tooltip"]& ], 
                    
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.05999999294293, 5.15}}]},
                    RowBox[{"{", 
                    RowBox[{"5.05999999294293`", ",", "5.15`"}], "}"}]],
                    Annotation[#, {5.05999999294293, 5.15}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.139999954255472, 6.12}}]},
                    RowBox[{"{", 
                    RowBox[{"6.139999954255472`", ",", "6.12`"}], "}"}]],
                    Annotation[#, {6.139999954255472, 6.12}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{7.210000035485688, 7.28}}]},
                    RowBox[{"{", 
                    RowBox[{"7.210000035485688`", ",", "7.28`"}], "}"}]],
                    
                    Annotation[#, {7.210000035485688, 7.28}, 
                    "Tooltip"]& ]}}, {{}, {}}}, 
                  InterpretationBox[{
                    TagBox[{{{}, {}, 
                    TagBox[
                    {GrayLevel[0.2], AbsoluteThickness[1.], Opacity[0.5], 
                    AbsoluteDashing[{2, 4}], LineBox[CompressedData["
1:eJxFxXsw0wEcAPD1MxO2PDbzmg2ju3Upm67dsSGnbi4KJ6+VK41MwmpK113+
0KHkkcPUddSdlMfRTWGsm3ZSqdC5FcKFpk53HZoKtR5/9P3+8bmPV2pObBpB
IpGi/vr3U35WtE0CEfr/rSuZsrhk/JJanl9/BA8LOHFLIMO1u1KXkhW4WphY
2VqK14vDRyP7cWUEK7qCZwFvpIwUPKeRYVZZzez8HF6bJ+eMdlrCi9LQMkUt
BR5P3ub3VW4FNyQ4/+Id3Azrtjg2C/yt4fMznGJ3wgamtfnXaIx4UFWcQdhr
C+sFRcvFV6gw93WvuCyLBrNLCO3pkC3wiigqk+ZjB9u/iV0XEfaw6XpJ4nwm
PjClOyCbwmdbSSmH9jnAn9fCLL00uLfv1RsGniPcNDUjWa/CmfSAijUyHR4z
VH7JyMEf5a0GPX6LV1dLvUwSBtwT8oKjUuPP5KIuhq8TbKl4EHihBq8g7x6P
MeMUZw3NIpcJDz3ce9hnEu/jT9TtCHOG67Znn6J34vpOqjSD5QJPaNreq8px
cWR8gXANH+6jUPuPucL7W3r8uWO4k68y+5vIDX7J5oc3duD3V01WQZ7u8Gyi
/sOey7g58FoSdwPPaJZ/VKax4N8myfGOV3ihjnduINgDjmMyGiPu4T+4sSOe
LfhNfuX691bcGEmNaerAzxaSzUQ3rloyJWif4JNDBtud8/jFcbqQYsS9F2JS
pxfwk5uGe0oX8Z/CwbRPy7jHnS7dbRIb1qtNi/kEnt4vYEaT8fZ37VlmKzzY
8a6r1A6f4xjDBQ54kR8315qOj0gaBruZuDJ+erncBXeRuXuku+FaRZJEzMKP
FqjOMNj4H/WJ7v4=
                    "]]},
                    Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
                    {
                    "WolframDynamicHighlight", <|
                    "Label" -> {"XYLabel"}, 
                    "Ball" -> {"InterpolatedBall"}|>}], 
                    StyleBox[
                    
                    DynamicBox[(Charting`HighlightActionBox[
                    "DynamicHighlight", {}, 
                    Slot["HighlightElements"], 
                    Slot["LayoutOptions"], 
                    Slot["Meta"], 
                    Charting`HighlightActionFunction[
                    "DynamicHighlight", {{{{}, {}, 
                    Annotation[{
                    Directive[
                    GrayLevel[0.2], 
                    Opacity[0.5], 
                    AbsoluteThickness[1.], 
                    AbsoluteDashing[{2, 4}]], 
                    Line[CompressedData["
1:eJxFxXsw0wEcAPD1MxO2PDbzmg2ju3Upm67dsSGnbi4KJ6+VK41MwmpK113+
0KHkkcPUddSdlMfRTWGsm3ZSqdC5FcKFpk53HZoKtR5/9P3+8bmPV2pObBpB
IpGi/vr3U35WtE0CEfr/rSuZsrhk/JJanl9/BA8LOHFLIMO1u1KXkhW4WphY
2VqK14vDRyP7cWUEK7qCZwFvpIwUPKeRYVZZzez8HF6bJ+eMdlrCi9LQMkUt
BR5P3ub3VW4FNyQ4/+Id3Azrtjg2C/yt4fMznGJ3wgamtfnXaIx4UFWcQdhr
C+sFRcvFV6gw93WvuCyLBrNLCO3pkC3wiigqk+ZjB9u/iV0XEfaw6XpJ4nwm
PjClOyCbwmdbSSmH9jnAn9fCLL00uLfv1RsGniPcNDUjWa/CmfSAijUyHR4z
VH7JyMEf5a0GPX6LV1dLvUwSBtwT8oKjUuPP5KIuhq8TbKl4EHihBq8g7x6P
MeMUZw3NIpcJDz3ce9hnEu/jT9TtCHOG67Znn6J34vpOqjSD5QJPaNreq8px
cWR8gXANH+6jUPuPucL7W3r8uWO4k68y+5vIDX7J5oc3duD3V01WQZ7u8Gyi
/sOey7g58FoSdwPPaJZ/VKax4N8myfGOV3ihjnduINgDjmMyGiPu4T+4sSOe
LfhNfuX691bcGEmNaerAzxaSzUQ3rloyJWif4JNDBtud8/jFcbqQYsS9F2JS
pxfwk5uGe0oX8Z/CwbRPy7jHnS7dbRIb1qtNi/kEnt4vYEaT8fZ37VlmKzzY
8a6r1A6f4xjDBQ54kR8315qOj0gaBruZuDJ+erncBXeRuXuku+FaRZJEzMKP
FqjOMNj4H/WJ7v4=
                    "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
                    "HighlightElements" -> <|
                    "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
                    "LayoutOptions" -> <|
                    "PanelPlotLayout" -> <||>, 
                    "PlotRange" -> {{2.2925000345566495`, 
                    7.529374998272168}, {2.2925001414316486`, 
                    7.529374891397168}}, 
                    "Frame" -> {{False, False}, {False, False}}, 
                    "AxesOrigin" -> {2.2925000345566544`, 
                    2.2925001414316535`}, 
                    "ImageSize" -> {360, 360/GoldenRatio}, 
                    "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
                    GoldenRatio^(-1), "DefaultStyle" -> {
                    Directive[
                    GrayLevel[0.2], 
                    Opacity[0.5], 
                    AbsoluteThickness[1.], 
                    AbsoluteDashing[{2, 4}]]}, 
                    "HighlightLabelingFunctions" -> <|
                    "CoordinatesToolOptions" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), 
                    "ScalingFunctions" -> {{Identity, Identity}, {
                    Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
                    False|>, 
                    "Meta" -> <|
                    "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
                    "Function" -> Plot, "GroupHighlight" -> False|>|>]]& )[<|
                    "HighlightElements" -> <|
                    "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
                    "LayoutOptions" -> <|
                    "PanelPlotLayout" -> <||>, 
                    "PlotRange" -> {{2.2925000345566495`, 
                    7.529374998272168}, {2.2925001414316486`, 
                    7.529374891397168}}, 
                    "Frame" -> {{False, False}, {False, False}}, 
                    "AxesOrigin" -> {2.2925000345566544`, 
                    2.2925001414316535`}, 
                    "ImageSize" -> {360, 360/GoldenRatio}, 
                    "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
                    GoldenRatio^(-1), "DefaultStyle" -> {
                    Directive[
                    GrayLevel[0.2], 
                    Opacity[0.5], 
                    AbsoluteThickness[1.], 
                    AbsoluteDashing[{2, 4}]]}, 
                    "HighlightLabelingFunctions" -> <|
                    "CoordinatesToolOptions" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), 
                    "ScalingFunctions" -> {{Identity, Identity}, {
                    Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
                    False|>, 
                    "Meta" -> <|
                    "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
                    "Function" -> Plot, "GroupHighlight" -> False|>|>],
                    
                    ImageSizeCache->{{
                    4.503599627370496*^15, -4.503599627370496*^15}, {
                    4.503599627370496*^15, -4.503599627370496*^15}}],
                    Selectable->False]},
                   Annotation[{{{{}, {}, 
                    Annotation[{
                    Directive[
                    GrayLevel[0.2], 
                    Opacity[0.5], 
                    AbsoluteThickness[1.], 
                    AbsoluteDashing[{2, 4}]], 
                    Line[CompressedData["
1:eJxFxXsw0wEcAPD1MxO2PDbzmg2ju3Upm67dsSGnbi4KJ6+VK41MwmpK113+
0KHkkcPUddSdlMfRTWGsm3ZSqdC5FcKFpk53HZoKtR5/9P3+8bmPV2pObBpB
IpGi/vr3U35WtE0CEfr/rSuZsrhk/JJanl9/BA8LOHFLIMO1u1KXkhW4WphY
2VqK14vDRyP7cWUEK7qCZwFvpIwUPKeRYVZZzez8HF6bJ+eMdlrCi9LQMkUt
BR5P3ub3VW4FNyQ4/+Id3Azrtjg2C/yt4fMznGJ3wgamtfnXaIx4UFWcQdhr
C+sFRcvFV6gw93WvuCyLBrNLCO3pkC3wiigqk+ZjB9u/iV0XEfaw6XpJ4nwm
PjClOyCbwmdbSSmH9jnAn9fCLL00uLfv1RsGniPcNDUjWa/CmfSAijUyHR4z
VH7JyMEf5a0GPX6LV1dLvUwSBtwT8oKjUuPP5KIuhq8TbKl4EHihBq8g7x6P
MeMUZw3NIpcJDz3ce9hnEu/jT9TtCHOG67Znn6J34vpOqjSD5QJPaNreq8px
cWR8gXANH+6jUPuPucL7W3r8uWO4k68y+5vIDX7J5oc3duD3V01WQZ7u8Gyi
/sOey7g58FoSdwPPaJZ/VKax4N8myfGOV3ihjnduINgDjmMyGiPu4T+4sSOe
LfhNfuX691bcGEmNaerAzxaSzUQ3rloyJWif4JNDBtud8/jFcbqQYsS9F2JS
pxfwk5uGe0oX8Z/CwbRPy7jHnS7dbRIb1qtNi/kEnt4vYEaT8fZ37VlmKzzY
8a6r1A6f4xjDBQ54kR8315qOj0gaBruZuDJ+erncBXeRuXuku+FaRZJEzMKP
FqjOMNj4H/WJ7v4=
                    "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
                    "HighlightElements" -> <|
                    "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
                    "LayoutOptions" -> <|
                    "PanelPlotLayout" -> <||>, 
                    "PlotRange" -> {{2.2925000345566495`, 
                    7.529374998272168}, {2.2925001414316486`, 
                    7.529374891397168}}, 
                    "Frame" -> {{False, False}, {False, False}}, 
                    "AxesOrigin" -> {2.2925000345566544`, 
                    2.2925001414316535`}, 
                    "ImageSize" -> {360, 360/GoldenRatio}, 
                    "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
                    GoldenRatio^(-1), "DefaultStyle" -> {
                    Directive[
                    GrayLevel[0.2], 
                    Opacity[0.5], 
                    AbsoluteThickness[1.], 
                    AbsoluteDashing[{2, 4}]]}, 
                    "HighlightLabelingFunctions" -> <|
                    "CoordinatesToolOptions" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), 
                    "ScalingFunctions" -> {{Identity, Identity}, {
                    Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
                    False|>, 
                    "Meta" -> <|
                    "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
                    "Function" -> Plot, "GroupHighlight" -> False|>|>, 
                    "DynamicHighlight"]]},
                 Axes->{False, False},
                 AxesLabel->{None, None},
                 AxesOrigin->{2.2925000345566544`, 2.2925000345566544`},
                 DisplayFunction->Identity,
                 Frame->{{True, False}, {True, False}},
                 FrameLabel->{{
                    FormBox[
                    TagBox["\"actual value\"", HoldForm], TraditionalForm], 
                    None}, {
                    FormBox[
                    TagBox["\"predicted value\"", HoldForm], TraditionalForm],
                     None}},
                 FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
                 
                 GridLines->{Automatic, Automatic},
                 GridLinesStyle->Directive[
                   GrayLevel[0.5, 0.5], 
                   AbsoluteThickness[1], 
                   AbsoluteDashing[{1, 2}]],
                 ImageSize->250,
                 
                 Method->{
                  "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                   Automatic, 
                   "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                   "DefaultMeshStyle" -> AbsolutePointSize[6], 
                   "DefaultPlotStyle" -> {
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
                   "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
                   Scaled[0.05], "OptimizePlotMarkers" -> True, 
                   "IncludeHighlighting" -> "CurrentPoint", "HighlightStyle" -> 
                   Automatic, "OptimizePlotMarkers" -> True, 
                   "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}},
                 
                 PlotRange->{{2.2925000345566495`, 7.529374998272168}, {
                  2.2925000345566495`, 7.529374998272168}},
                 PlotRangeClipping->True,
                 PlotRangePadding->{{0, 0}, {0, 0}},
                 Ticks->{Automatic, Automatic}],
                Alignment->Center,
                StripOnInput->False], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             ColumnsEqual->False,
             
             GridBoxAlignment->{
              "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
             GridBoxDividers->{"Columns" -> {False, {
                  Opacity[0.15]}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {Automatic, {Automatic}}, "Rows" -> {{1.}}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], 
                 Offset[1.1199999999999999`], {
                  Offset[1.75]}, 
                 Offset[0.27999999999999997`]}, "Rows" -> {
                 Offset[0.2], {
                  Offset[0.8]}, 
                 Offset[0.2]}}],
            "Grid"],
           FrameMargins->{{10, 10}, {10, 5}},
           FrameStyle->None,
           StripOnInput->False],
          Deploy,
          DefaultBaseStyle->"Deploy"],
         Alignment->Center,
         BaseStyle->{
          FontWeight -> "Light", FontSize -> 11, FontFamily -> 
           ".AppleSystemUIFont", NumberMarks -> False, Deployed -> False},
         StripOnInput->False]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], 
          Offset[0.8], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[0.85],
     RoundingRadius->5,
     StripOnInput->False],
    StripOnInput->False,
    LineBreakWithin->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  PredictorMeasurementsObject[<|
   "Model" -> PredictorFunction[<|
      "ExampleNumber" -> 12, 
       "Input" -> <|
        "Preprocessor" -> 
         MachineLearning`MLProcessor[
          "ToMLDataset", <|
           "Input" -> <|
             "f1" -> <|"Type" -> "NumericalVector", "Length" -> 41|>|>, 
            "Output" -> <|
             "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
            "Preprocessor" -> 
            MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
                 MachineLearning`MLProcessor["List"], 
                 MachineLearning`MLProcessor[
                 "WrapMLDataset", <|
                  "FeatureTypes" -> {"NumericalVector"}, 
                   "FeatureKeys" -> {"f1"}, "FeatureWeights" -> Automatic, 
                   "ExampleWeights" -> Automatic, "RawExample" -> 
                   Missing["KeyAbsent", "RawExample"], "StructurePreserving" -> 
                   False|>]}|>], "ScalarFeature" -> True, "Invertibility" -> 
            "Perfect", "StructurePreserving" -> False, "Missing" -> 
            "Allowed"|>], "Processor" -> 
         MachineLearning`MLProcessor[
          "Sequence", <|
           "Input" -> <|
             "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
            "Output" -> <|
             "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
            "Processors" -> {
              MachineLearning`MLProcessor[
              "SynthesizeMissingValues", <|
               "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Distribution" -> 
                LearnedDistribution[<|
                  "ExampleNumber" -> 12, "Preprocessor" -> 
                   MachineLearning`MLProcessor[
                    "ToMLDataset", <|
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Length" -> 41|>|>,
                     "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Preprocessor" -> MachineLearning`MLProcessor["Identity"],
                     "ScalarFeature" -> True, "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
                    "Processor" -> 
                   MachineLearning`MLProcessor[
                    "Sequence", <|
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Processors" -> {
                    MachineLearning`MLProcessor[
                    "LogRescaleNumericalVector", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Indices" -> {15, 16, 17, 32}, 
                    "Centers" -> {0.03625678532293497, 0.03893004833386193, 
                    0.04183140443514308, 0.0011303567934577352`}, 
                    "Cutoffs" -> {0.00023978316291586171`, 
                    0.0000633741823163822, 0.00013285814593134992`, 
                    0.00008048651715511089}, "Version" -> {14., 0}, "ID" -> 
                    8482204006555573411, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 
                    1|>|>|>], 
                    MachineLearning`MLProcessor[
                    "Standardize", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAAB67zjkQHmhP+h60V5zkps/ItkYx2URmj9g
XPPfi7CYP9XeB787jpc/srwuSo+Klz+dA89ayFyYP+pMPs1JTZk/fYiv3oc+
nD/yubg1XhqgP0zdKFAIEaI/DRs4/qT0oz9TgR6SQjalPxRqQ1C7R6Y/RiR4
Fg9uBEB85hO5jjkJQICg9HNA6vU/HibAw6BNpj+gyZ8UxHulP18KPMSC4aQ/
KAGezHUlpD/0Uk3cm2mjPwae0FLToKI/PN0ZPX1XoT/mvNYFCkqgP9T/kzPG
dJ4/RUb4x83Pmj9y0iN00+WTPxJLBGGyO4o/FgGUzzAVgz8GE6Ses+l/P+Rp
3kfKyAVAeFU0tr8cfD951AZSAcJ4PyqPAU03HnM/CLC4hZ4Haj9yqhEWGChf
P9Ub4asQL08/yWogQfZXQD+gmctzVLQkP9Sa0fXzFbA+t5GWCg==
                    "], "StandardDeviation" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAAB2Tg5dOt5ePxaXsDaLLmk/lvyRvOEHZT8u
ocBBj9xjP16vGDZKGGU/DIK703Hxaj92kFxB64t0P0FSa+7UWHs/Yrqx1Sfl
gT/iSdr9teeEP/NKets7sYY/pzyzba8qhz/4hFKPIoaGPx/ZNuP2tYQ/YkDv
A62J/D/jD/wULUMBQASlOb1q5QVAD+Q9M34Zcz+9Eiwzlqd/P0V+/TUFL4c/
HDblwHOajj8by63I3KaRP7p20rmMnpI/2hbrJm76kT+MsxLB88qQP96ngMad
/I0/p9CeUfblhz8pA0yZKGh8P/Y+qEg/ZnU/nHqZ9xLkfD/zl3VgYbOCPx7W
Gbj+rwBAY2tD8ie8hT+4POIZC9SDPwf7cisAH38/QhFeuEsedT99DZiQwWtp
P5ptv4/jMlk/UQIlgviDSD9vhwyfG0UuPwPFUDrarMo+6fmaLA==
                    "], 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Version" -> {14., 0}, "ID" -> 4831699382257594162|>]}, 
                    "Invertibility" -> "Perfect", "StructurePreserving" -> 
                    True, "Missing" -> "Allowed"|>], "PerformanceGoal" -> 
                   "DirectTraining", "BatchProcessing" -> Automatic, 
                   "Model" -> <|"RotationMatrix" -> CompressedData["
1:eJwBoQJe/SFib1JlAgAAACkAAAACAAAASIle9MW4wz+OvE5KJR67v2lSCL3y
gsg/6xi+ua4Ik7+ypG2t6DrGPx1pC4Bl6r2/osbf251guT886ZI4lSPOv1Yi
A2x2Prk/nooNqfGUzr/qiTd/HizDP73W+anPRce/BBoQG/fXxj9LA+eELn29
v0cWseomwcc/+2wZp7gztr+M0a8s/AzIP9B9Er3HE7O/kzXdFVEByD8fUfWN
MN6zv5CKjDo6yMc/TunbLJ9Mtr/qtTkaRg/HP2HiXYmtXLu/fF1m/jFIxj9z
mP1e/E7Av6tqBTJS3sQ/VnFuKuK/w78NZrhzwWvEP81Iq+Oa97q/OgC0JaNn
wT9SYUHxTIXCv+1GfoBzS3+/03aZ0Wsf0b/f2p1ip962v/FS8GIVaM+/ZPiV
lf/Nxr/PT/KfxAi9vxu5kcHfdci/QwYQxqeXrb+uStrYK+nIv1TtRvs8EJ2/
ZKtiVuUjyb+N8Hfjd6uKvz5FjDlAJMm/jWCI/Mncar9nCotP0RTJv7Z0NckA
HYI/Q8+TjQIbyb/3qFlNaIeUP3FgRx3v18i/Sm9Gim8aoj+YgQMFb2/Iv0we
VCtrXLA/1NbOTbmwxL8XJA9m8DXEP2K0a/eyoXO/RG7qmH/L0T9WyKFVcs+3
P/EjNoe0Zs8/417BpEmlvz/AJXNKX+HLP+zu5OTg4L8/GLfQZlpNwT+GCblX
HYPBP9Y33F+S1ck/EAUqdienwT/Wi3dVKpLJP8FasOdl0ME/TWG/V5N7yT9i
+1O37LzBP4IJ0VQsbMk/fFs+PNKQwT9dmzREV7jJP/vrr50NnME/s/S5lDm6
yT8hbe+hUHfBP3cky6Nkxsk/4j8ngGVVwT8xmLSFhhnKP2YG8x+HFLC//rAj
7ZpUjD8RrVpN
                    "], 
                    "Precisions" -> {0.038597928967835204`, 
                    0.0792836842612413}, "NoisePrecision" -> 
                    15.621569178847462`, "Processor" -> 
                    MachineLearning`MLProcessor[
                    "Center", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAADqEQ+/uGJEvwC26QqrsTQ/AJ3J+2zOVL8V
dJDta2JUPyoaVMkoRkI/qgiQzhNbTb9Ve+WmW0M8PwDQvEhINgY/KiA3xKtD
YT8qNWoakRhev2r19Xb9v2K/quFtZ+ZHRD8Ahs1ScG5avyqLQe77gmY/AApb
9gkWV79qmwkrijJaPxXEe7Yn7Vk/oMtHm9mbY7/V0z5cCgddP0DPcQx6KXE/
VZmoixMCTb8AXll9wnVFP0Dp0O5aSWW/VVVmA8M9Fr9V5iSI/hpKv1XH2VzD
+06/KqVbsQ+XXj/VvgRb72NYP1W0gR4H7UQ/oHV2hdkLOD+AV5IWZNZUv0DZ
BM9p0Fq/Vb+m2Z85M79qt2pRrjFiP8Cn0TC4FVE/VfAoQZq9SL9AKcLCQHdS
PwDceS9sChC/ANCAsPO1G7/VbmZ/bfpEvwCcGRcvSEY/64GUYA==
                    "], 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Version" -> {14., 0}, "ID" -> 5996981336037487093|>], 
                    "PostProcessor" -> 
                    MachineLearning`MLProcessor[
                    "FirstValues", <|
                    "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, 
                    "Key" -> "f1", "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
                     "Method" -> "Multinormal", 
                    "Options" -> <|
                    "CovarianceType" -> <|
                    "Value" -> "Full", "Options" -> <||>|>, 
                    "IntrinsicDimension" -> <|
                    "Value" -> 2, "Options" -> <||>|>|>|>, 
                   "TrainingInformation" -> <|
                    "Configurations" -> 
                    Dataset[<|<|
                    "Value" -> "Multinormal", 
                    "Options" -> <|
                    "CovarianceType" -> <|"Value" -> "Full"|>, 
                    "IntrinsicDimension" -> <|"Value" -> "Heuristic"|>|>, 
                    "NaiveImputer" -> 
                    MachineLearning`MLProcessor[
                    "ImputeMissing", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAAAgEg+/uGJEv6qy6QqrsTQ/wJ3J+2zOVL+q
c5Dta2JUP6oaVMkoRkI/VAiQzhNbTb9VeeWmW0M8PwDQvEhINgY/qh83xKtD
YT8qNWoakRhev9X19Xb9v2K/VeNtZ+ZHRD8Ah81ScG5avyqLQe77gmY/Kgpb
9gkWV78AmwkrijJaP1XDe7Yn7Vk/qstHm9mbY79V1D5cCgddPxXPcQx6KXE/
qpioixMCTb8AXFl9wnVFP1Xp0O5aSWW/qlpmA8M9Fr9V5SSI/hpKv6rI2VzD
+06/VaVbsQ+XXj9KvwRb72NYP6q0gR4H7UQ/qnZ2hdkLOD+qWJIWZNZUv6rZ
BM9p0Fq/qr6m2Z85M79Vt2pRrjFiPwCo0TC4FVE/AO4oQZq9SL+qKMLCQHdS
PwDgeS9sChC/qtqAsPO1G7+qbmZ/bfpEv9WaGRcvSEY/exSYTg==
                    "], "StandardDeviation" -> CompressedData["
1:eJxTTMoPSmVkYGDQBGKTte339jB8sGfLqWX24v5g3/g85BUD0wf7O/9mSZz9
897e6xDT3KS37+23Lro2/zTrB/tTajkLGIHizVMEvGL+vrdnCp/x14nxg/2k
SLVbghwf7P8dnmyhDjSHNYrrzOX/7+21d16ZtJblg/2uH2/nGgHVV5vVz9sA
VH883jwvESh+UrRubwpQ32+RWY2r77639zD8UHX433v75W/CPLd9em//+POs
i7kf3tv7vTzOex2ojjF0VvguoPuufn/sb/r1vX2lY+aVE2wf7CM7hBSVXr63
f+7dmX0U6M5lzxdGBfMB1b84eG8LUL1fZdGZ70DzTj9znif8+b39pu6gVRpA
+yfe+pcYBPT/1KX9iZa/gPLTvGZJc36wr/Fr3G3+/b297qGCM+FAd3+vmMI/
CWiOW+9d0dNAe2ZrLSu0ZAeFm1OTK1A9AEVDrJk=
                    "], "Method" -> "NaiveSampler", "VectorLength" -> 41, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Type" -> "NumericalVector", "Version" -> {14., 0}, "ID" -> 
                    9048412143032033467|>], "EMIterations" -> 1|> -> <||>|>, 
                    TypeSystem`Assoc[
                    
                    TypeSystem`Struct[{
                    "Value", "Options", "NaiveImputer", "EMIterations"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Struct[{"Value"}, {
                    TypeSystem`Atom[String]}], 2], TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer]}], 
                    TypeSystem`Assoc[
                    TypeSystem`UnknownType, TypeSystem`UnknownType, 
                    TypeSystem`AnyLength], 1], <||>], "BestModelInformation" -> 
                    Dataset[<|
                    "Configuration" -> {
                    "Multinormal", "CovarianceType" -> "Full", 
                    "IntrinsicDimension" -> "Heuristic"}, "ModelUtility" -> 
                    Missing[]|>, 
                    TypeSystem`Struct[{"Configuration", "ModelUtility"}, {
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[String], TypeSystem`AnyType, 
                    TypeSystem`AnyType}], TypeSystem`UnknownType}], <||>]|>, 
                   "NaiveImputer" -> 
                   MachineLearning`MLProcessor[
                    "ImputeMissing", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAAAgEg+/uGJEv6qy6QqrsTQ/wJ3J+2zOVL+q
c5Dta2JUP6oaVMkoRkI/VAiQzhNbTb9VeeWmW0M8PwDQvEhINgY/qh83xKtD
YT8qNWoakRhev9X19Xb9v2K/VeNtZ+ZHRD8Ah81ScG5avyqLQe77gmY/Kgpb
9gkWV78AmwkrijJaP1XDe7Yn7Vk/qstHm9mbY79V1D5cCgddPxXPcQx6KXE/
qpioixMCTb8AXFl9wnVFP1Xp0O5aSWW/qlpmA8M9Fr9V5SSI/hpKv6rI2VzD
+06/VaVbsQ+XXj9KvwRb72NYP6q0gR4H7UQ/qnZ2hdkLOD+qWJIWZNZUv6rZ
BM9p0Fq/qr6m2Z85M79Vt2pRrjFiPwCo0TC4FVE/AO4oQZq9SL+qKMLCQHdS
PwDgeS9sChC/qtqAsPO1G7+qbmZ/bfpEv9WaGRcvSEY/exSYTg==
                    "], "StandardDeviation" -> CompressedData["
1:eJxTTMoPSmVkYGDQBGKTte339jB8sGfLqWX24v5g3/g85BUD0wf7O/9mSZz9
897e6xDT3KS37+23Lro2/zTrB/tTajkLGIHizVMEvGL+vrdnCp/x14nxg/2k
SLVbghwf7P8dnmyhDjSHNYrrzOX/7+21d16ZtJblg/2uH2/nGgHVV5vVz9sA
VH883jwvESh+UrRubwpQ32+RWY2r77639zD8UHX433v75W/CPLd9em//+POs
i7kf3tv7vTzOex2ojjF0VvguoPuufn/sb/r1vX2lY+aVE2wf7CM7hBSVXr63
f+7dmX0U6M5lzxdGBfMB1b84eG8LUL1fZdGZ70DzTj9znif8+b39pu6gVRpA
+yfe+pcYBPT/1KX9iZa/gPLTvGZJc36wr/Fr3G3+/b297qGCM+FAd3+vmMI/
CWiOW+9d0dNAe2ZrLSu0ZAeFm1OTK1A9AEVDrJk=
                    "], "Method" -> "NaiveSampler", "VectorLength" -> 41, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Type" -> "NumericalVector", "Version" -> {14., 0}, "ID" -> 
                    9048412143032033467|>], "InputDimension" -> 0, 
                   "OutputDimension" -> 41, 
                   "Log" -> <|
                    "Example" -> 
                    MachineLearning`MLDataset[<|
                    "f1" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 1, 
                    "Values" -> CompressedData["
1:eJwBWQGm/iFib1JlAgAAAAEAAAApAAAAIdiKkQKIoT/JYaUCi7yePysOALke
E5s/n15PJRLjlj/oFzDYQ7CVP9u5ZPJegJc/UuwqWQ5Qmz/rgROqSrieP9Gj
oShuFqI/8hef6uimpD+36AyG/J2mP1SXmRX706c/Ip1VqZscqD9kp1Dp2tGn
PzWE/qHIMqc/tqRWGtcZpj9QC7aHqjekPxeGkLZSy6E/w1BbGPjNnD8Kiytx
ZlmXP0rEio7XBpI/puDUDIPRjD/FPn4Xsu6IP2SnUOna0Yc/iv8SBDDViD9q
yHOCA9GLP2sr2iL8jo8/MrNif/oqkj8pfxawxcCUP/8qXDnRWpc/oBI/Zb1/
mj+REmFAc5KcP43B16DAs5w/qVZk44f6mT/UEtnTm0eUP7sKMkh9hIs/o39N
uAOQgD8CgTmyqmJwP2GCJaxRNWA/i2XJK5/tQz8AAAAAAAAAAPILmiQ=
                    "], "ID" -> 3469183340482081255|>|>, <|
                    "ExampleNumber" -> 1, "ExampleWeights" -> 1, 
                    "LogDensityRatios" -> 0, "RawExample" -> False|>], 
                    "TrainingTime" -> 0.070594, "MaxTrainingMemory" -> 200712,
                     "DataMemory" -> 6032, "FunctionMemory" -> 45688, 
                    "LanguageVersion" -> {14., 0}, "Date" -> 
                    DateObject[{
                    2024, 7, 17, 17, 47, 47.363965`8.428023027858265}, 
                    "Instant", "Gregorian", -4.], "ProcessorCount" -> 4, 
                    "ProcessorType" -> "x86-64", "OperatingSystem" -> 
                    "MacOSX", "SystemWordLength" -> 64, "Evaluations" -> {}|>,
                    "LogPDFDistribution" -> 
                   MachineLearning`TailedQuantileDistribution[<|
                    "Quantiles" -> {4.819219430300041, 4.819219430300041, 
                    4.898266099931775, 5.257524063478136, 5.264493014456535, 
                    5.290291463059036, 5.31084904597749, 5.321849271928228, 
                    5.331408181042344, 5.410829920648876, 5.494674970353918}, 
                    "LeftBoundary" -> 4.898266099931775, "LeftScale" -> 
                    0.039523334815867006`, "LeftTailNorm" -> 0.2|>], 
                   "Entropy" -> 
                   Around[-214.83756239082317`, 2.771979686510119], 
                   "EntropySampleSize" -> 10|>], 
                "Output" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "EvaluationStrategy" -> "ModeFinding", "Version" -> {14., 0}, 
                "ID" -> 4270897793735380344|>], 
              MachineLearning`MLProcessor[
              "LogRescaleNumericalVector", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Indices" -> {15, 16, 17, 32}, 
                "Centers" -> {0.03625678532293497, 0.03893004833386193, 
                 0.04183140443514308, 0.0011303567934577352`}, 
                "Cutoffs" -> {0.00023978316291586171`, 0.0000633741823163822, 
                 0.00013285814593134992`, 0.00008048651715511089}, 
                "Version" -> {14., 0}, "ID" -> 8287105230391160006, 
                "Output" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>|>], 
              
              MachineLearning`MLProcessor[
              "Standardize", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Mean" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAAB67zjkQHmhP+h60V5zkps/ItkYx2URmj9g
XPPfi7CYP9XeB787jpc/srwuSo+Klz+dA89ayFyYP+pMPs1JTZk/fYiv3oc+
nD/yubg1XhqgP0zdKFAIEaI/DRs4/qT0oz9TgR6SQjalPxRqQ1C7R6Y/RiR4
Fg9uBEB85hO5jjkJQICg9HNA6vU/HibAw6BNpj+gyZ8UxHulP18KPMSC4aQ/
KAGezHUlpD/0Uk3cm2mjPwae0FLToKI/PN0ZPX1XoT/mvNYFCkqgP9T/kzPG
dJ4/RUb4x83Pmj9y0iN00+WTPxJLBGGyO4o/FgGUzzAVgz8GE6Ses+l/P+Rp
3kfKyAVAeFU0tr8cfD951AZSAcJ4PyqPAU03HnM/CLC4hZ4Haj9yqhEWGChf
P9Ub4asQL08/yWogQfZXQD+gmctzVLQkP9Sa0fXzFbA+t5GWCg==
                 "], "StandardDeviation" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAAB2Tg5dOt5ePxaXsDaLLmk/lvyRvOEHZT8u
ocBBj9xjP16vGDZKGGU/DIK703Hxaj92kFxB64t0P0FSa+7UWHs/Yrqx1Sfl
gT/iSdr9teeEP/NKets7sYY/pzyzba8qhz/4hFKPIoaGPx/ZNuP2tYQ/YkDv
A62J/D/jD/wULUMBQASlOb1q5QVAD+Q9M34Zcz+9Eiwzlqd/P0V+/TUFL4c/
HDblwHOajj8by63I3KaRP7p20rmMnpI/2hbrJm76kT+MsxLB88qQP96ngMad
/I0/p9CeUfblhz8pA0yZKGh8P/Y+qEg/ZnU/nHqZ9xLkfD/zl3VgYbOCPx7W
Gbj+rwBAY2tD8ie8hT+4POIZC9SDPwf7cisAH38/QhFeuEsedT99DZiQwWtp
P5ptv4/jMlk/UQIlgviDSD9vhwyfG0UuPwPFUDrarMo+6fmaLA==
                 "], 
                "Output" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Version" -> {14., 0}, "ID" -> 4646170885319460202|>]}, 
            "Invertibility" -> "Perfect", "StructurePreserving" -> True, 
            "Missing" -> "Imputed"|>]|>, 
       "Output" -> <|
        "Preprocessor" -> 
         MachineLearning`MLProcessor[
          "ToMLDataset", <|
           "Input" -> <|"f1" -> <|"Type" -> "Numerical"|>|>, 
            "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
            "Preprocessor" -> 
            MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
                 MachineLearning`MLProcessor["List"], 
                 MachineLearning`MLProcessor[
                 "WrapMLDataset", <|
                  "FeatureTypes" -> {"Numerical"}, "FeatureKeys" -> {"f1"}, 
                   "FeatureWeights" -> Automatic, "ExampleWeights" -> 
                   Automatic, "RawExample" -> 
                   Missing["KeyAbsent", "RawExample"], "StructurePreserving" -> 
                   False|>]}|>], "ScalarFeature" -> True, "Invertibility" -> 
            "Perfect", "StructurePreserving" -> False, "Missing" -> 
            "Allowed"|>], "Processor" -> 
         MachineLearning`MLProcessor[
          "Sequence", <|
           "Input" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
            "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
            "Processors" -> {
              MachineLearning`MLProcessor[
              "ToVector", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                "Output" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Version" -> {14., 0}, "ID" -> 137422882915779582|>], 
              MachineLearning`MLProcessor[
              "Standardize", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Mean" -> {4.664999999999999}, 
                "StandardDeviation" -> {1.631898179013222}, 
                "Output" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Version" -> {14., 0}, "ID" -> 5276422737451164747|>], 
              MachineLearning`MLProcessor[
              "FromVector", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Output" -> <|
                 "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                "Version" -> {14., 0}, "ID" -> 9189645664226701459|>], 
              MachineLearning`MLProcessor[
              "FirstValues", <|
               "Info" -> <|"Type" -> "Numerical", "Weight" -> 1|>, "Key" -> 
                "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> 
                False, "Missing" -> "Allowed"|>]}, "Invertibility" -> 
            "Perfect", "StructurePreserving" -> False, "Missing" -> 
            "Allowed"|>], "ProbabilityPostprocessor" -> Identity, 
         "InverseProcessorFunction" -> (4.664999999999999 + 
          1.631898179013222 #& ), 
         "ProcessorFunction" -> (-2.8586342334304438` + 
          0.6127833297814457 #& ), "Name" -> "value", 
         "Quantiles" -> {-1.308292409083386, 1.5595335742937797`}, "Mean" -> 
         4.665|>, "LabelSplitter" -> 
       MachineLearning`MLProcessor[
        "FeatureLabelSplit", <|
         "Processor" -> MachineLearning`MLProcessor["ListSplit"], 
          "PreferLabeled" -> True, "KeepLabelsFormat" -> False|>], 
       "RecalibrationFunction" -> None, "ImputationStrategy" -> Automatic, 
       "Prior" -> Automatic, "Utility" -> (DiracDelta[#2 - #]& ), "Threshold" -> 
       0, "PerformanceGoal" -> Automatic, "BatchProcessing" -> Automatic, 
       "Model" -> <|
        "NeighborsFunction" -> 
         MachineLearning`PackageScope`NeighborsFunction[
          "BruteForce", {CompressedData["
1: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

            "], {9.902508979245525, 30.05816442184498, 31.405409410745172`, 
            17.384425729233083`, 20.640583483284605`, 48.39045253910146, 
            8.515532383069935, 9.464272440254005, 17.816444291684356`, 
            36.402878410532274`, 7.497956620157149, 8.527769255348657}}], 
         "NeighborsNumber" -> 1, 
         "DistributionData" -> {NormalDistribution, 0.3125144917486837}, 
         "TrainingOutput" -> 
         RawArray["Real32",{-0.3646060824394226, 0.9038553833961487, 
           0.8548327684402466, -1.2592697143554688`, -0.35847824811935425`, 
           1.5595335960388184`, 
           0.2604329288005829, -1.3082923889160156`, -0.9835172295570374, 
           1.5043830871582031`, 0.2420494109392166, -1.050923466682434}], 
         "DistributionSmoothing" -> 0.5, "Processor" -> 
         MachineLearning`MLProcessor[
          "FirstValues", <|
           "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, "Key" -> 
            "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> 
            False, "Missing" -> "Allowed"|>], "Calibrator" -> None, "Method" -> 
         "NearestNeighbors", "PostProcessor" -> 
         MachineLearning`MLProcessor["Identity"], 
         "Options" -> <|
          "NeighborsNumber" -> <|"Value" -> 1, "Options" -> <||>|>, 
           "DistributionSmoothing" -> <|"Value" -> 0.5, "Options" -> <||>|>, 
           "NearestMethod" -> <|"Value" -> "Scan", "Options" -> <||>|>|>|>, 
       "TrainingInformation" -> <|
        "Configurations" -> 
         Dataset[<|<|
             "Value" -> "NearestNeighbors", 
              "Options" -> <|
               "NeighborsNumber" -> <|"Value" -> Automatic|>, 
                "DistributionSmoothing" -> <|"Value" -> 0.5|>, 
                "NearestMethod" -> <|"Value" -> Automatic|>|>, "NaiveImputer" -> 
              Missing["KeyAbsent", "NaiveImputer"], "EMIterations" -> 
              Missing["KeyAbsent", "EMIterations"]|> -> <||>|>, 
           TypeSystem`Assoc[
            
            TypeSystem`Struct[{
             "Value", "Options", "NaiveImputer", "EMIterations"}, {
              TypeSystem`Atom[String], 
              TypeSystem`Assoc[
               TypeSystem`Atom[String], 
               TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 3], 
              TypeSystem`UnknownType, TypeSystem`UnknownType}], 
            TypeSystem`Assoc[
            TypeSystem`UnknownType, TypeSystem`UnknownType, 
             TypeSystem`AnyLength], 1], <||>], "BestModelInformation" -> 
         Dataset[<|
           "Configuration" -> {
             "NearestNeighbors", "NeighborsNumber" -> Automatic, 
              "DistributionSmoothing" -> 0.5, "NearestMethod" -> Automatic}, 
            "ModelUtility" -> Missing[]|>, 
           TypeSystem`Struct[{"Configuration", "ModelUtility"}, {
             TypeSystem`Tuple[{
               TypeSystem`Atom[String], TypeSystem`AnyType, 
               TypeSystem`AnyType, TypeSystem`AnyType}], 
             TypeSystem`UnknownType}], <||>], "InputDimension" -> 41, 
         "OutputDimension" -> 1|>, "AnomalyDetector" -> None, 
       "Log" -> <|
        "Example" -> 
         MachineLearning`MLDataset[<|
           "f1" -> <|
             "Type" -> "NumericalVector", "Weight" -> 1, 
              "Values" -> CompressedData["
1:eJwBWQGm/iFib1JlAgAAAAEAAAApAAAAIdiKkQKIoT/JYaUCi7yePysOALke
E5s/n15PJRLjlj/oFzDYQ7CVP9u5ZPJegJc/UuwqWQ5Qmz/rgROqSrieP9Gj
oShuFqI/8hef6uimpD+36AyG/J2mP1SXmRX706c/Ip1VqZscqD9kp1Dp2tGn
PzWE/qHIMqc/tqRWGtcZpj9QC7aHqjekPxeGkLZSy6E/w1BbGPjNnD8Kiytx
ZlmXP0rEio7XBpI/puDUDIPRjD/FPn4Xsu6IP2SnUOna0Yc/iv8SBDDViD9q
yHOCA9GLP2sr2iL8jo8/MrNif/oqkj8pfxawxcCUP/8qXDnRWpc/oBI/Zb1/
mj+REmFAc5KcP43B16DAs5w/qVZk44f6mT/UEtnTm0eUP7sKMkh9hIs/o39N
uAOQgD8CgTmyqmJwP2GCJaxRNWA/i2XJK5/tQz8AAAAAAAAAAPILmiQ=
               "], "ID" -> 692740363108450636|>|>, <|
           "ExampleNumber" -> 1, "ExampleWeights" -> 1, "LogDensityRatios" -> 
            0, "RawExample" -> False|>], "TrainingTime" -> 0.117503, 
         "MaxTrainingMemory" -> 306608, "DataMemory" -> 6856, 
         "FunctionMemory" -> 113592, "LanguageVersion" -> {14., 0}, "Date" -> 
         DateObject[{2024, 7, 17, 17, 47, 47.407646`8.42842336754664}, 
           "Instant", "Gregorian", -4.], "ProcessorCount" -> 4, 
         "ProcessorType" -> "x86-64", "OperatingSystem" -> "MacOSX", 
         "SystemWordLength" -> 64, "Evaluations" -> {}|>|>], 
    "TestSet" -> <|"Input" -> CompressedData["
1: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
bGk23xz/AwuRnXs=
       "], "Output" -> {2.58, 2.94, 3.98, 5.15, 6.12, 7.28}|>, 
    "Predictions" -> {2.530000032911095, 2.530000032911095, 
     2.9499999084386723`, 5.05999999294293, 6.139999954255472, 
     7.210000035485688}, "Distributions" -> {
      NormalDistribution[2.530000032911095, 0.5099918299999194], 
      NormalDistribution[2.530000032911095, 0.5099918299999194], 
      NormalDistribution[2.9499999084386723`, 0.5099918299999194], 
      NormalDistribution[5.05999999294293, 0.5099918299999194], 
      NormalDistribution[6.139999954255472, 0.5099918299999194], 
      NormalDistribution[7.210000035485688, 0.5099918299999194]}, 
    "Modes" -> {2.530000032911095, 2.530000032911095, 2.9499999084386723`, 
     5.05999999294293, 6.139999954255472, 7.210000035485688}, "Weights" -> 
    SparseArray[Automatic, {6}, 1., {1, {{0, 0}, {}}, {}}], 
    "BatchEvaluationTime" -> 0.002884333333333333, "SingleEvaluationTime" -> 
    0.001702171875, "Version" -> {14., 0}|>]]], "Output",
 CellChangeTimes->{3.899888018758743*^9, 3.899888054388913*^9, 
  3.930237508924018*^9, 3.9302376875861053`*^9, 3.930237773539298*^9, 
  3.9302413016721573`*^9, 3.9302416677228193`*^9},
 CellLabel->
  "Out[431]=",ExpressionUUID->"2e0961e9-516f-417d-abcd-62577305cb01"],

Cell[BoxData["0.27833332526099874`"], "Output",
 CellChangeTimes->{3.899888018758743*^9, 3.899888054388913*^9, 
  3.930237508924018*^9, 3.9302376875861053`*^9, 3.930237773539298*^9, 
  3.9302413016721573`*^9, 3.930241667765621*^9},
 CellLabel->
  "Out[432]=",ExpressionUUID->"8d1941ab-791c-4c96-b859-7c10030bd5fa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PredictorMeasurements", "[", 
  RowBox[{"net", ",", "vescSameVol"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"%", "[", "\"\<MeanDeviation\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.930237552970069*^9, 3.930237561717201*^9}, {
  3.9302377888428793`*^9, 3.930237794198409*^9}, {3.9302416816885843`*^9, 
  3.930241681966074*^9}},
 CellLabel->
  "In[433]:=",ExpressionUUID->"99d0669b-ad7b-42ce-b334-19759648c19a"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   StyleBox[
    FrameBox[GridBox[{
       {
        ItemBox[
         FrameBox[
          StyleBox["\<\"Predictor Measurements\"\>", "SuggestionsBarText",
           StripOnInput->False,
           FontSize->12],
          FrameMargins->{{10, 5}, {-4, 2}},
          FrameStyle->None,
          StripOnInput->False],
         Alignment->{Left, Bottom},
         Background->RGBColor[0.96, 0.96, 0.96],
         Frame->{{False, False}, {True, False}},
         FrameStyle->Opacity[0.1],
         ItemSize->{Automatic, 1},
         StripOnInput->False]},
       {
        ItemBox[
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Predictor method"], 
                   TextCell["Predictor method"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               
               InterpretationBox[Cell[
                "NearestNeighbors",ExpressionUUID->
                 "b3020d05-3dcd-497c-bed1-69d5db4aa12f"],
                TextCell["NearestNeighbors"]]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Number of test examples"], 
                   TextCell["Number of test examples"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], "6"},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Standard deviation"], 
                   TextCell["Standard deviation"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 TemplateBox[{"0.4505552074144772989`3.", 
                   StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.1953553473773585458`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                  "RowDefault"],
                 
                 TemplateBox[{
                  "\"95% confidence interval: [\"", 
                   "0.0598445126597602073`3.", "\", \"", 
                   "0.8412659021691943906`3.", "\"]\""}, "RowDefault"],
                 TooltipStyle->{}],
                Annotation[#, 
                 
                 Row[{"95% confidence interval: [", 0.0598445126597602073`3., 
                   ", ", 0.8412659021691943906`3., "]"}], "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  TagBox[
                   TooltipBox[
                    InterpretationBox[
                    Cell["Standard deviation baseline"], 
                    TextCell["Standard deviation baseline"]], 
                    "\"Standard deviation of testset values\"", TooltipStyle -> 
                    "TextStyling"], 
                   Annotation[#, "Standard deviation of testset values", 
                    "Tooltip"]& ], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 TemplateBox[{"1.6035238971991931933`3.", 
                   StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.2739304204027700473`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                  "RowDefault"],
                 
                 TemplateBox[{
                  "\"95% confidence interval: [\"", 
                   "1.0556630563936530987`3.", "\", \"", 
                   "2.151384738004733066`3.", "\"]\""}, "RowDefault"],
                 TooltipStyle->{}],
                Annotation[#, 
                 
                 Row[{"95% confidence interval: [", 1.0556630563936530987`3., 
                   ", ", 2.151384738004733066`3., "]"}], "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["R-squared"], 
                   TextCell["R-squared"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 TemplateBox[{"0.9210512689548377985`3.", 
                   StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0738856250982393159`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                  "RowDefault"],
                 
                 TemplateBox[{
                  "\"95% confidence interval: [\"", 
                   "0.7732800187583591667`3.", "\", \"", 
                   "1.0688225191513165413`3.", "\"]\""}, "RowDefault"],
                 TooltipStyle->{}],
                Annotation[#, 
                 
                 Row[{"95% confidence interval: [", 0.7732800187583591667`3., 
                   ", ", 1.0688225191513165413`3., "]"}], "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Mean cross entropy"], 
                   TextCell["Mean cross entropy"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 TemplateBox[{"0.6358249787460714675`3.", 
                   StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.3049476370407954162`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                  "RowDefault"],
                 
                 TemplateBox[{
                  "\"95% confidence interval: [\"", "0.025929704664480635`3.",
                    "\", \"", "1.2457202528276622999`3.", "\"]\""}, 
                  "RowDefault"],
                 TooltipStyle->{}],
                Annotation[#, 
                 
                 Row[{"95% confidence interval: [", 0.025929704664480635`3., 
                   ", ", 1.2457202528276622999`3., "]"}], "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Single evaluation time"], 
                   TextCell["Single evaluation time"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{"1.79`", 
                 
                 RowBox[{
                  "\"ms\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]",
                    "\"example\""}], "milliseconds per example", 
                 FractionBox["\"Milliseconds\"", "\"Examples\""]},
                "Quantity"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Batch evaluation speed"], 
                   TextCell["Batch evaluation speed"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{"354.`", 
                 
                 RowBox[{
                  "\"examples\"", "\[InvisibleSpace]", "\"/\"", 
                   "\[InvisibleSpace]", "\"s\""}], "examples per second", 
                 FractionBox["\"Examples\"", "\"Seconds\""]},
                "Quantity"]},
              {
               ItemBox[
                GraphicsBox[{{{}, {
                    TagBox[
                    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
                    0.012833333333333334`], AbsoluteThickness[2], 
                    GeometricTransformationBox[InsetBox[
                    FormBox[
                    StyleBox[
                    GraphicsBox[
                    {RGBColor[0.34398, 0.49112, 0.89936], AbsoluteThickness[
                    1.], CircleBox[{0, 0}, Offset[{1.8, 1.8}, {0., 0.}]]}],
                    StripOnInput->False,
                    GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]]}],
                    TraditionalForm], {0., 0.}], {{{3.0600000240577407`, 
                    2.61}}, {{3.0600000240577407`, 3.07}}, {{
                    3.0600000240577407`, 4.05}}, {{5.05999999294293, 5.2}}, {{
                    6.060000038178469, 6.17}}, {{7.12000002047176, 7.06}}}]},
                    Annotation[#, "Charting`Private`Tag#1"]& ], {
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{3.0600000240577407`, 2.61}}]},
                    RowBox[{"{", 
                    RowBox[{"3.0600000240577407`", ",", "2.61`"}], "}"}]],
                    Annotation[#, {3.0600000240577407`, 2.61}, "Tooltip"]& ], 
                    
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{3.0600000240577407`, 3.07}}]},
                    RowBox[{"{", 
                    RowBox[{"3.0600000240577407`", ",", "3.07`"}], "}"}]],
                    Annotation[#, {3.0600000240577407`, 3.07}, "Tooltip"]& ], 
                    
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{3.0600000240577407`, 4.05}}]},
                    RowBox[{"{", 
                    RowBox[{"3.0600000240577407`", ",", "4.05`"}], "}"}]],
                    Annotation[#, {3.0600000240577407`, 4.05}, "Tooltip"]& ], 
                    
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.05999999294293, 5.2}}]},
                    RowBox[{"{", 
                    RowBox[{"5.05999999294293`", ",", "5.2`"}], "}"}]],
                    Annotation[#, {5.05999999294293, 5.2}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.060000038178469, 6.17}}]},
                    RowBox[{"{", 
                    RowBox[{"6.060000038178469`", ",", "6.17`"}], "}"}]],
                    Annotation[#, {6.060000038178469, 6.17}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{7.12000002047176, 7.06}}]},
                    RowBox[{"{", 
                    RowBox[{"7.12000002047176`", ",", "7.06`"}], "}"}]],
                    
                    Annotation[#, {7.12000002047176, 7.06}, 
                    "Tooltip"]& ]}}, {{}, {}}}, 
                  InterpretationBox[{
                    TagBox[{{{}, {}, 
                    TagBox[
                    {GrayLevel[0.2], AbsoluteThickness[1.], Opacity[0.5], 
                    AbsoluteDashing[{2, 4}], LineBox[CompressedData["
1:eJxFxW0wEwAYAODRMt+yiY2hKOSjurTj5DJt1Q6pscStW7azNaSyOB1uUu7G
ccksbtVF6c7udqJabFnu6i6VpK87a3blR77GnXCcs7tZ9aP3/fHcs1N0KUvs
TCAQTvz172Xb9Psyyhbm/0Myx7kqfzztwbD5GQ1/eLzbuhKK81RSt9JYXB+3
wCk5isvzl96KK3DPYdubHAvedaxmxlVHhPsqzWaBfCvM0CcPGtkucILW59V8
EAnu5erVxin8Uc/nNsGQK+xLWal1VbnBqzHWlBy+O8yznQwri/eAo6ubTAw7
fpX0tdLx2hNmcRRH1GovuC6Z/GNc6A2nznjem0rygY0Z9bvspG0wmVA+lVeM
R9xU94eY8LW1KNnzQ77w9cSlFJ0GH3UMEgcoZPhL58rTxgpcRRdeefcLJ8uS
gk0cCpyRQR2yanG2097SggA/eL35sdeTKrxwQ2IUz+Hts+GikOzt8LXe9GVN
Px6ZpVXeDfOHG8bKg/MVePcndkfUPF6nTY/POx0A04Uv+/gGXLYsYQ7vpsI3
+FUG50b8VJpqD2sRt1CmtQt5NDhsoDNAMoRHMlS3OTGB8FxCk/u+NrzA77d0
dgO//6HBTJIEwa1nm+NtIzhbpq5biqPDOpFlNlONT8bWH6yx40Qpr+WwA4/q
2rFoJwTDl2mG7moi7uwyH1jpgUdMpjuV0/CLLT5jRQxcOWqJjk7AB0gahTUR
J8iZqdJkXFlUqhOz8H7Wtzv5XHxC3rEemo07DMW8SR7O2U/0FuTiE3RGLf8c
vnnG6WegEA9v/Zg0IcIvuElWcyX4LfYBLlWK62o2e0yF+PcXI+7txbh9re18
Tgn+B/yX9y4=
                    "]]},
                    Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
                    {
                    "WolframDynamicHighlight", <|
                    "Label" -> {"XYLabel"}, 
                    "Ball" -> {"InterpolatedBall"}|>}], 
                    StyleBox[
                    
                    DynamicBox[(Charting`HighlightActionBox[
                    "DynamicHighlight", {}, 
                    Slot["HighlightElements"], 
                    Slot["LayoutOptions"], 
                    Slot["Meta"], 
                    Charting`HighlightActionFunction[
                    "DynamicHighlight", {{{{}, {}, 
                    Annotation[{
                    Directive[
                    GrayLevel[0.2], 
                    Opacity[0.5], 
                    AbsoluteThickness[1.], 
                    AbsoluteDashing[{2, 4}]], 
                    Line[CompressedData["
1:eJxFxW0wEwAYAODRMt+yiY2hKOSjurTj5DJt1Q6pscStW7azNaSyOB1uUu7G
ccksbtVF6c7udqJabFnu6i6VpK87a3blR77GnXCcs7tZ9aP3/fHcs1N0KUvs
TCAQTvz172Xb9Psyyhbm/0Myx7kqfzztwbD5GQ1/eLzbuhKK81RSt9JYXB+3
wCk5isvzl96KK3DPYdubHAvedaxmxlVHhPsqzWaBfCvM0CcPGtkucILW59V8
EAnu5erVxin8Uc/nNsGQK+xLWal1VbnBqzHWlBy+O8yznQwri/eAo6ubTAw7
fpX0tdLx2hNmcRRH1GovuC6Z/GNc6A2nznjem0rygY0Z9bvspG0wmVA+lVeM
R9xU94eY8LW1KNnzQ77w9cSlFJ0GH3UMEgcoZPhL58rTxgpcRRdeefcLJ8uS
gk0cCpyRQR2yanG2097SggA/eL35sdeTKrxwQ2IUz+Hts+GikOzt8LXe9GVN
Px6ZpVXeDfOHG8bKg/MVePcndkfUPF6nTY/POx0A04Uv+/gGXLYsYQ7vpsI3
+FUG50b8VJpqD2sRt1CmtQt5NDhsoDNAMoRHMlS3OTGB8FxCk/u+NrzA77d0
dgO//6HBTJIEwa1nm+NtIzhbpq5biqPDOpFlNlONT8bWH6yx40Qpr+WwA4/q
2rFoJwTDl2mG7moi7uwyH1jpgUdMpjuV0/CLLT5jRQxcOWqJjk7AB0gahTUR
J8iZqdJkXFlUqhOz8H7Wtzv5XHxC3rEemo07DMW8SR7O2U/0FuTiE3RGLf8c
vnnG6WegEA9v/Zg0IcIvuElWcyX4LfYBLlWK62o2e0yF+PcXI+7txbh9re18
Tgn+B/yX9y4=
                    "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
                    "HighlightElements" -> <|
                    "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
                    "LayoutOptions" -> <|
                    "PanelPlotLayout" -> <||>, 
                    "PlotRange" -> {{2.3844999989764117`, 
                    7.356775021546528}, {2.384500100451412, 
                    7.356774920071527}}, 
                    "Frame" -> {{False, False}, {False, False}}, 
                    "AxesOrigin" -> {2.384499998976417, 2.3845001004514175`}, 
                    "ImageSize" -> {360, 360/GoldenRatio}, 
                    "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
                    GoldenRatio^(-1), "DefaultStyle" -> {
                    Directive[
                    GrayLevel[0.2], 
                    Opacity[0.5], 
                    AbsoluteThickness[1.], 
                    AbsoluteDashing[{2, 4}]]}, 
                    "HighlightLabelingFunctions" -> <|
                    "CoordinatesToolOptions" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), 
                    "ScalingFunctions" -> {{Identity, Identity}, {
                    Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
                    False|>, 
                    "Meta" -> <|
                    "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
                    "Function" -> Plot, "GroupHighlight" -> False|>|>]]& )[<|
                    "HighlightElements" -> <|
                    "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
                    "LayoutOptions" -> <|
                    "PanelPlotLayout" -> <||>, 
                    "PlotRange" -> {{2.3844999989764117`, 
                    7.356775021546528}, {2.384500100451412, 
                    7.356774920071527}}, 
                    "Frame" -> {{False, False}, {False, False}}, 
                    "AxesOrigin" -> {2.384499998976417, 2.3845001004514175`}, 
                    "ImageSize" -> {360, 360/GoldenRatio}, 
                    "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
                    GoldenRatio^(-1), "DefaultStyle" -> {
                    Directive[
                    GrayLevel[0.2], 
                    Opacity[0.5], 
                    AbsoluteThickness[1.], 
                    AbsoluteDashing[{2, 4}]]}, 
                    "HighlightLabelingFunctions" -> <|
                    "CoordinatesToolOptions" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), 
                    "ScalingFunctions" -> {{Identity, Identity}, {
                    Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
                    False|>, 
                    "Meta" -> <|
                    "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
                    "Function" -> Plot, "GroupHighlight" -> False|>|>],
                    
                    ImageSizeCache->{{
                    4.503599627370496*^15, -4.503599627370496*^15}, {
                    4.503599627370496*^15, -4.503599627370496*^15}}],
                    Selectable->False]},
                   Annotation[{{{{}, {}, 
                    Annotation[{
                    Directive[
                    GrayLevel[0.2], 
                    Opacity[0.5], 
                    AbsoluteThickness[1.], 
                    AbsoluteDashing[{2, 4}]], 
                    Line[CompressedData["
1:eJxFxW0wEwAYAODRMt+yiY2hKOSjurTj5DJt1Q6pscStW7azNaSyOB1uUu7G
ccksbtVF6c7udqJabFnu6i6VpK87a3blR77GnXCcs7tZ9aP3/fHcs1N0KUvs
TCAQTvz172Xb9Psyyhbm/0Myx7kqfzztwbD5GQ1/eLzbuhKK81RSt9JYXB+3
wCk5isvzl96KK3DPYdubHAvedaxmxlVHhPsqzWaBfCvM0CcPGtkucILW59V8
EAnu5erVxin8Uc/nNsGQK+xLWal1VbnBqzHWlBy+O8yznQwri/eAo6ubTAw7
fpX0tdLx2hNmcRRH1GovuC6Z/GNc6A2nznjem0rygY0Z9bvspG0wmVA+lVeM
R9xU94eY8LW1KNnzQ77w9cSlFJ0GH3UMEgcoZPhL58rTxgpcRRdeefcLJ8uS
gk0cCpyRQR2yanG2097SggA/eL35sdeTKrxwQ2IUz+Hts+GikOzt8LXe9GVN
Px6ZpVXeDfOHG8bKg/MVePcndkfUPF6nTY/POx0A04Uv+/gGXLYsYQ7vpsI3
+FUG50b8VJpqD2sRt1CmtQt5NDhsoDNAMoRHMlS3OTGB8FxCk/u+NrzA77d0
dgO//6HBTJIEwa1nm+NtIzhbpq5biqPDOpFlNlONT8bWH6yx40Qpr+WwA4/q
2rFoJwTDl2mG7moi7uwyH1jpgUdMpjuV0/CLLT5jRQxcOWqJjk7AB0gahTUR
J8iZqdJkXFlUqhOz8H7Wtzv5XHxC3rEemo07DMW8SR7O2U/0FuTiE3RGLf8c
vnnG6WegEA9v/Zg0IcIvuElWcyX4LfYBLlWK62o2e0yF+PcXI+7txbh9re18
Tgn+B/yX9y4=
                    "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
                    "HighlightElements" -> <|
                    "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
                    "LayoutOptions" -> <|
                    "PanelPlotLayout" -> <||>, 
                    "PlotRange" -> {{2.3844999989764117`, 
                    7.356775021546528}, {2.384500100451412, 
                    7.356774920071527}}, 
                    "Frame" -> {{False, False}, {False, False}}, 
                    "AxesOrigin" -> {2.384499998976417, 2.3845001004514175`}, 
                    "ImageSize" -> {360, 360/GoldenRatio}, 
                    "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
                    GoldenRatio^(-1), "DefaultStyle" -> {
                    Directive[
                    GrayLevel[0.2], 
                    Opacity[0.5], 
                    AbsoluteThickness[1.], 
                    AbsoluteDashing[{2, 4}]]}, 
                    "HighlightLabelingFunctions" -> <|
                    "CoordinatesToolOptions" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), 
                    "ScalingFunctions" -> {{Identity, Identity}, {
                    Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
                    False|>, 
                    "Meta" -> <|
                    "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
                    "Function" -> Plot, "GroupHighlight" -> False|>|>, 
                    "DynamicHighlight"]]},
                 Axes->{False, False},
                 AxesLabel->{None, None},
                 AxesOrigin->{2.384499998976417, 2.384499998976417},
                 DisplayFunction->Identity,
                 Frame->{{True, False}, {True, False}},
                 FrameLabel->{{
                    FormBox[
                    TagBox["\"actual value\"", HoldForm], TraditionalForm], 
                    None}, {
                    FormBox[
                    TagBox["\"predicted value\"", HoldForm], TraditionalForm],
                     None}},
                 FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
                 
                 GridLines->{Automatic, Automatic},
                 GridLinesStyle->Directive[
                   GrayLevel[0.5, 0.5], 
                   AbsoluteThickness[1], 
                   AbsoluteDashing[{1, 2}]],
                 ImageSize->250,
                 
                 Method->{
                  "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                   Automatic, 
                   "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                   "DefaultMeshStyle" -> AbsolutePointSize[6], 
                   "DefaultPlotStyle" -> {
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
                   "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
                   Scaled[0.05], "OptimizePlotMarkers" -> True, 
                   "IncludeHighlighting" -> "CurrentPoint", "HighlightStyle" -> 
                   Automatic, "OptimizePlotMarkers" -> True, 
                   "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}},
                 
                 PlotRange->{{2.3844999989764117`, 7.356775021546528}, {
                  2.3844999989764117`, 7.356775021546528}},
                 PlotRangeClipping->True,
                 PlotRangePadding->{{0, 0}, {0, 0}},
                 Ticks->{Automatic, Automatic}],
                Alignment->Center,
                StripOnInput->False], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             ColumnsEqual->False,
             
             GridBoxAlignment->{
              "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
             GridBoxDividers->{"Columns" -> {False, {
                  Opacity[0.15]}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {Automatic, {Automatic}}, "Rows" -> {{1.}}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], 
                 Offset[1.1199999999999999`], {
                  Offset[1.75]}, 
                 Offset[0.27999999999999997`]}, "Rows" -> {
                 Offset[0.2], {
                  Offset[0.8]}, 
                 Offset[0.2]}}],
            "Grid"],
           FrameMargins->{{10, 10}, {10, 5}},
           FrameStyle->None,
           StripOnInput->False],
          Deploy,
          DefaultBaseStyle->"Deploy"],
         Alignment->Center,
         BaseStyle->{
          FontWeight -> "Light", FontSize -> 11, FontFamily -> 
           ".AppleSystemUIFont", NumberMarks -> False, Deployed -> False},
         StripOnInput->False]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], 
          Offset[0.8], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[0.85],
     RoundingRadius->5,
     StripOnInput->False],
    StripOnInput->False,
    LineBreakWithin->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  PredictorMeasurementsObject[<|
   "Model" -> PredictorFunction[<|
      "ExampleNumber" -> 12, 
       "Input" -> <|
        "Preprocessor" -> 
         MachineLearning`MLProcessor[
          "ToMLDataset", <|
           "Input" -> <|
             "f1" -> <|"Type" -> "NumericalVector", "Length" -> 41|>|>, 
            "Output" -> <|
             "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
            "Preprocessor" -> 
            MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
                 MachineLearning`MLProcessor["List"], 
                 MachineLearning`MLProcessor[
                 "WrapMLDataset", <|
                  "FeatureTypes" -> {"NumericalVector"}, 
                   "FeatureKeys" -> {"f1"}, "FeatureWeights" -> Automatic, 
                   "ExampleWeights" -> Automatic, "RawExample" -> 
                   Missing["KeyAbsent", "RawExample"], "StructurePreserving" -> 
                   False|>]}|>], "ScalarFeature" -> True, "Invertibility" -> 
            "Perfect", "StructurePreserving" -> False, "Missing" -> 
            "Allowed"|>], "Processor" -> 
         MachineLearning`MLProcessor[
          "Sequence", <|
           "Input" -> <|
             "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
            "Output" -> <|
             "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
            "Processors" -> {
              MachineLearning`MLProcessor[
              "SynthesizeMissingValues", <|
               "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Distribution" -> 
                LearnedDistribution[<|
                  "ExampleNumber" -> 12, "Preprocessor" -> 
                   MachineLearning`MLProcessor[
                    "ToMLDataset", <|
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Length" -> 41|>|>,
                     "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Preprocessor" -> MachineLearning`MLProcessor["Identity"],
                     "ScalarFeature" -> True, "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
                    "Processor" -> 
                   MachineLearning`MLProcessor[
                    "Sequence", <|
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Processors" -> {
                    MachineLearning`MLProcessor[
                    "LogRescaleNumericalVector", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Indices" -> {15, 16, 17, 32}, 
                    "Centers" -> {0.03625678532293497, 0.03893004833386193, 
                    0.04183140443514308, 0.0011303567934577352`}, 
                    "Cutoffs" -> {0.00023978316291586171`, 
                    0.0000633741823163822, 0.00013285814593134992`, 
                    0.00008048651715511089}, "Version" -> {14., 0}, "ID" -> 
                    8482204006555573411, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 
                    1|>|>|>], 
                    MachineLearning`MLProcessor[
                    "Standardize", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAAB67zjkQHmhP+h60V5zkps/ItkYx2URmj9g
XPPfi7CYP9XeB787jpc/srwuSo+Klz+dA89ayFyYP+pMPs1JTZk/fYiv3oc+
nD/yubg1XhqgP0zdKFAIEaI/DRs4/qT0oz9TgR6SQjalPxRqQ1C7R6Y/RiR4
Fg9uBEB85hO5jjkJQICg9HNA6vU/HibAw6BNpj+gyZ8UxHulP18KPMSC4aQ/
KAGezHUlpD/0Uk3cm2mjPwae0FLToKI/PN0ZPX1XoT/mvNYFCkqgP9T/kzPG
dJ4/RUb4x83Pmj9y0iN00+WTPxJLBGGyO4o/FgGUzzAVgz8GE6Ses+l/P+Rp
3kfKyAVAeFU0tr8cfD951AZSAcJ4PyqPAU03HnM/CLC4hZ4Haj9yqhEWGChf
P9Ub4asQL08/yWogQfZXQD+gmctzVLQkP9Sa0fXzFbA+t5GWCg==
                    "], "StandardDeviation" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAAB2Tg5dOt5ePxaXsDaLLmk/lvyRvOEHZT8u
ocBBj9xjP16vGDZKGGU/DIK703Hxaj92kFxB64t0P0FSa+7UWHs/Yrqx1Sfl
gT/iSdr9teeEP/NKets7sYY/pzyzba8qhz/4hFKPIoaGPx/ZNuP2tYQ/YkDv
A62J/D/jD/wULUMBQASlOb1q5QVAD+Q9M34Zcz+9Eiwzlqd/P0V+/TUFL4c/
HDblwHOajj8by63I3KaRP7p20rmMnpI/2hbrJm76kT+MsxLB88qQP96ngMad
/I0/p9CeUfblhz8pA0yZKGh8P/Y+qEg/ZnU/nHqZ9xLkfD/zl3VgYbOCPx7W
Gbj+rwBAY2tD8ie8hT+4POIZC9SDPwf7cisAH38/QhFeuEsedT99DZiQwWtp
P5ptv4/jMlk/UQIlgviDSD9vhwyfG0UuPwPFUDrarMo+6fmaLA==
                    "], 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Version" -> {14., 0}, "ID" -> 4831699382257594162|>]}, 
                    "Invertibility" -> "Perfect", "StructurePreserving" -> 
                    True, "Missing" -> "Allowed"|>], "PerformanceGoal" -> 
                   "DirectTraining", "BatchProcessing" -> Automatic, 
                   "Model" -> <|"RotationMatrix" -> CompressedData["
1:eJwBoQJe/SFib1JlAgAAACkAAAACAAAASIle9MW4wz+OvE5KJR67v2lSCL3y
gsg/6xi+ua4Ik7+ypG2t6DrGPx1pC4Bl6r2/osbf251guT886ZI4lSPOv1Yi
A2x2Prk/nooNqfGUzr/qiTd/HizDP73W+anPRce/BBoQG/fXxj9LA+eELn29
v0cWseomwcc/+2wZp7gztr+M0a8s/AzIP9B9Er3HE7O/kzXdFVEByD8fUfWN
MN6zv5CKjDo6yMc/TunbLJ9Mtr/qtTkaRg/HP2HiXYmtXLu/fF1m/jFIxj9z
mP1e/E7Av6tqBTJS3sQ/VnFuKuK/w78NZrhzwWvEP81Iq+Oa97q/OgC0JaNn
wT9SYUHxTIXCv+1GfoBzS3+/03aZ0Wsf0b/f2p1ip962v/FS8GIVaM+/ZPiV
lf/Nxr/PT/KfxAi9vxu5kcHfdci/QwYQxqeXrb+uStrYK+nIv1TtRvs8EJ2/
ZKtiVuUjyb+N8Hfjd6uKvz5FjDlAJMm/jWCI/Mncar9nCotP0RTJv7Z0NckA
HYI/Q8+TjQIbyb/3qFlNaIeUP3FgRx3v18i/Sm9Gim8aoj+YgQMFb2/Iv0we
VCtrXLA/1NbOTbmwxL8XJA9m8DXEP2K0a/eyoXO/RG7qmH/L0T9WyKFVcs+3
P/EjNoe0Zs8/417BpEmlvz/AJXNKX+HLP+zu5OTg4L8/GLfQZlpNwT+GCblX
HYPBP9Y33F+S1ck/EAUqdienwT/Wi3dVKpLJP8FasOdl0ME/TWG/V5N7yT9i
+1O37LzBP4IJ0VQsbMk/fFs+PNKQwT9dmzREV7jJP/vrr50NnME/s/S5lDm6
yT8hbe+hUHfBP3cky6Nkxsk/4j8ngGVVwT8xmLSFhhnKP2YG8x+HFLC//rAj
7ZpUjD8RrVpN
                    "], 
                    "Precisions" -> {0.038597928967835204`, 
                    0.0792836842612413}, "NoisePrecision" -> 
                    15.621569178847462`, "Processor" -> 
                    MachineLearning`MLProcessor[
                    "Center", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAADqEQ+/uGJEvwC26QqrsTQ/AJ3J+2zOVL8V
dJDta2JUPyoaVMkoRkI/qgiQzhNbTb9Ve+WmW0M8PwDQvEhINgY/KiA3xKtD
YT8qNWoakRhev2r19Xb9v2K/quFtZ+ZHRD8Ahs1ScG5avyqLQe77gmY/AApb
9gkWV79qmwkrijJaPxXEe7Yn7Vk/oMtHm9mbY7/V0z5cCgddP0DPcQx6KXE/
VZmoixMCTb8AXll9wnVFP0Dp0O5aSWW/VVVmA8M9Fr9V5iSI/hpKv1XH2VzD
+06/KqVbsQ+XXj/VvgRb72NYP1W0gR4H7UQ/oHV2hdkLOD+AV5IWZNZUv0DZ
BM9p0Fq/Vb+m2Z85M79qt2pRrjFiP8Cn0TC4FVE/VfAoQZq9SL9AKcLCQHdS
PwDceS9sChC/ANCAsPO1G7/VbmZ/bfpEvwCcGRcvSEY/64GUYA==
                    "], 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Version" -> {14., 0}, "ID" -> 5996981336037487093|>], 
                    "PostProcessor" -> 
                    MachineLearning`MLProcessor[
                    "FirstValues", <|
                    "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, 
                    "Key" -> "f1", "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
                     "Method" -> "Multinormal", 
                    "Options" -> <|
                    "CovarianceType" -> <|
                    "Value" -> "Full", "Options" -> <||>|>, 
                    "IntrinsicDimension" -> <|
                    "Value" -> 2, "Options" -> <||>|>|>|>, 
                   "TrainingInformation" -> <|
                    "Configurations" -> 
                    Dataset[<|<|
                    "Value" -> "Multinormal", 
                    "Options" -> <|
                    "CovarianceType" -> <|"Value" -> "Full"|>, 
                    "IntrinsicDimension" -> <|"Value" -> "Heuristic"|>|>, 
                    "NaiveImputer" -> 
                    MachineLearning`MLProcessor[
                    "ImputeMissing", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAAAgEg+/uGJEv6qy6QqrsTQ/wJ3J+2zOVL+q
c5Dta2JUP6oaVMkoRkI/VAiQzhNbTb9VeeWmW0M8PwDQvEhINgY/qh83xKtD
YT8qNWoakRhev9X19Xb9v2K/VeNtZ+ZHRD8Ah81ScG5avyqLQe77gmY/Kgpb
9gkWV78AmwkrijJaP1XDe7Yn7Vk/qstHm9mbY79V1D5cCgddPxXPcQx6KXE/
qpioixMCTb8AXFl9wnVFP1Xp0O5aSWW/qlpmA8M9Fr9V5SSI/hpKv6rI2VzD
+06/VaVbsQ+XXj9KvwRb72NYP6q0gR4H7UQ/qnZ2hdkLOD+qWJIWZNZUv6rZ
BM9p0Fq/qr6m2Z85M79Vt2pRrjFiPwCo0TC4FVE/AO4oQZq9SL+qKMLCQHdS
PwDgeS9sChC/qtqAsPO1G7+qbmZ/bfpEv9WaGRcvSEY/exSYTg==
                    "], "StandardDeviation" -> CompressedData["
1:eJxTTMoPSmVkYGDQBGKTte339jB8sGfLqWX24v5g3/g85BUD0wf7O/9mSZz9
897e6xDT3KS37+23Lro2/zTrB/tTajkLGIHizVMEvGL+vrdnCp/x14nxg/2k
SLVbghwf7P8dnmyhDjSHNYrrzOX/7+21d16ZtJblg/2uH2/nGgHVV5vVz9sA
VH883jwvESh+UrRubwpQ32+RWY2r77639zD8UHX433v75W/CPLd9em//+POs
i7kf3tv7vTzOex2ojjF0VvguoPuufn/sb/r1vX2lY+aVE2wf7CM7hBSVXr63
f+7dmX0U6M5lzxdGBfMB1b84eG8LUL1fZdGZ70DzTj9znif8+b39pu6gVRpA
+yfe+pcYBPT/1KX9iZa/gPLTvGZJc36wr/Fr3G3+/b297qGCM+FAd3+vmMI/
CWiOW+9d0dNAe2ZrLSu0ZAeFm1OTK1A9AEVDrJk=
                    "], "Method" -> "NaiveSampler", "VectorLength" -> 41, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Type" -> "NumericalVector", "Version" -> {14., 0}, "ID" -> 
                    9048412143032033467|>], "EMIterations" -> 1|> -> <||>|>, 
                    TypeSystem`Assoc[
                    
                    TypeSystem`Struct[{
                    "Value", "Options", "NaiveImputer", "EMIterations"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Struct[{"Value"}, {
                    TypeSystem`Atom[String]}], 2], TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer]}], 
                    TypeSystem`Assoc[
                    TypeSystem`UnknownType, TypeSystem`UnknownType, 
                    TypeSystem`AnyLength], 1], <||>], "BestModelInformation" -> 
                    Dataset[<|
                    "Configuration" -> {
                    "Multinormal", "CovarianceType" -> "Full", 
                    "IntrinsicDimension" -> "Heuristic"}, "ModelUtility" -> 
                    Missing[]|>, 
                    TypeSystem`Struct[{"Configuration", "ModelUtility"}, {
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[String], TypeSystem`AnyType, 
                    TypeSystem`AnyType}], TypeSystem`UnknownType}], <||>]|>, 
                   "NaiveImputer" -> 
                   MachineLearning`MLProcessor[
                    "ImputeMissing", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAAAgEg+/uGJEv6qy6QqrsTQ/wJ3J+2zOVL+q
c5Dta2JUP6oaVMkoRkI/VAiQzhNbTb9VeeWmW0M8PwDQvEhINgY/qh83xKtD
YT8qNWoakRhev9X19Xb9v2K/VeNtZ+ZHRD8Ah81ScG5avyqLQe77gmY/Kgpb
9gkWV78AmwkrijJaP1XDe7Yn7Vk/qstHm9mbY79V1D5cCgddPxXPcQx6KXE/
qpioixMCTb8AXFl9wnVFP1Xp0O5aSWW/qlpmA8M9Fr9V5SSI/hpKv6rI2VzD
+06/VaVbsQ+XXj9KvwRb72NYP6q0gR4H7UQ/qnZ2hdkLOD+qWJIWZNZUv6rZ
BM9p0Fq/qr6m2Z85M79Vt2pRrjFiPwCo0TC4FVE/AO4oQZq9SL+qKMLCQHdS
PwDgeS9sChC/qtqAsPO1G7+qbmZ/bfpEv9WaGRcvSEY/exSYTg==
                    "], "StandardDeviation" -> CompressedData["
1:eJxTTMoPSmVkYGDQBGKTte339jB8sGfLqWX24v5g3/g85BUD0wf7O/9mSZz9
897e6xDT3KS37+23Lro2/zTrB/tTajkLGIHizVMEvGL+vrdnCp/x14nxg/2k
SLVbghwf7P8dnmyhDjSHNYrrzOX/7+21d16ZtJblg/2uH2/nGgHVV5vVz9sA
VH883jwvESh+UrRubwpQ32+RWY2r77639zD8UHX433v75W/CPLd9em//+POs
i7kf3tv7vTzOex2ojjF0VvguoPuufn/sb/r1vX2lY+aVE2wf7CM7hBSVXr63
f+7dmX0U6M5lzxdGBfMB1b84eG8LUL1fZdGZ70DzTj9znif8+b39pu6gVRpA
+yfe+pcYBPT/1KX9iZa/gPLTvGZJc36wr/Fr3G3+/b297qGCM+FAd3+vmMI/
CWiOW+9d0dNAe2ZrLSu0ZAeFm1OTK1A9AEVDrJk=
                    "], "Method" -> "NaiveSampler", "VectorLength" -> 41, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Type" -> "NumericalVector", "Version" -> {14., 0}, "ID" -> 
                    9048412143032033467|>], "InputDimension" -> 0, 
                   "OutputDimension" -> 41, 
                   "Log" -> <|
                    "Example" -> 
                    MachineLearning`MLDataset[<|
                    "f1" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 1, 
                    "Values" -> CompressedData["
1:eJwBWQGm/iFib1JlAgAAAAEAAAApAAAAIdiKkQKIoT/JYaUCi7yePysOALke
E5s/n15PJRLjlj/oFzDYQ7CVP9u5ZPJegJc/UuwqWQ5Qmz/rgROqSrieP9Gj
oShuFqI/8hef6uimpD+36AyG/J2mP1SXmRX706c/Ip1VqZscqD9kp1Dp2tGn
PzWE/qHIMqc/tqRWGtcZpj9QC7aHqjekPxeGkLZSy6E/w1BbGPjNnD8Kiytx
ZlmXP0rEio7XBpI/puDUDIPRjD/FPn4Xsu6IP2SnUOna0Yc/iv8SBDDViD9q
yHOCA9GLP2sr2iL8jo8/MrNif/oqkj8pfxawxcCUP/8qXDnRWpc/oBI/Zb1/
mj+REmFAc5KcP43B16DAs5w/qVZk44f6mT/UEtnTm0eUP7sKMkh9hIs/o39N
uAOQgD8CgTmyqmJwP2GCJaxRNWA/i2XJK5/tQz8AAAAAAAAAAPILmiQ=
                    "], "ID" -> 3469183340482081255|>|>, <|
                    "ExampleNumber" -> 1, "ExampleWeights" -> 1, 
                    "LogDensityRatios" -> 0, "RawExample" -> False|>], 
                    "TrainingTime" -> 0.070594, "MaxTrainingMemory" -> 200712,
                     "DataMemory" -> 6032, "FunctionMemory" -> 45688, 
                    "LanguageVersion" -> {14., 0}, "Date" -> 
                    DateObject[{
                    2024, 7, 17, 17, 47, 47.363965`8.428023027858265}, 
                    "Instant", "Gregorian", -4.], "ProcessorCount" -> 4, 
                    "ProcessorType" -> "x86-64", "OperatingSystem" -> 
                    "MacOSX", "SystemWordLength" -> 64, "Evaluations" -> {}|>,
                    "LogPDFDistribution" -> 
                   MachineLearning`TailedQuantileDistribution[<|
                    "Quantiles" -> {4.819219430300041, 4.819219430300041, 
                    4.898266099931775, 5.257524063478136, 5.264493014456535, 
                    5.290291463059036, 5.31084904597749, 5.321849271928228, 
                    5.331408181042344, 5.410829920648876, 5.494674970353918}, 
                    "LeftBoundary" -> 4.898266099931775, "LeftScale" -> 
                    0.039523334815867006`, "LeftTailNorm" -> 0.2|>], 
                   "Entropy" -> 
                   Around[-214.83756239082317`, 2.771979686510119], 
                   "EntropySampleSize" -> 10|>], 
                "Output" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "EvaluationStrategy" -> "ModeFinding", "Version" -> {14., 0}, 
                "ID" -> 4270897793735380344|>], 
              MachineLearning`MLProcessor[
              "LogRescaleNumericalVector", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Indices" -> {15, 16, 17, 32}, 
                "Centers" -> {0.03625678532293497, 0.03893004833386193, 
                 0.04183140443514308, 0.0011303567934577352`}, 
                "Cutoffs" -> {0.00023978316291586171`, 0.0000633741823163822, 
                 0.00013285814593134992`, 0.00008048651715511089}, 
                "Version" -> {14., 0}, "ID" -> 8287105230391160006, 
                "Output" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>|>], 
              
              MachineLearning`MLProcessor[
              "Standardize", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Mean" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAAB67zjkQHmhP+h60V5zkps/ItkYx2URmj9g
XPPfi7CYP9XeB787jpc/srwuSo+Klz+dA89ayFyYP+pMPs1JTZk/fYiv3oc+
nD/yubg1XhqgP0zdKFAIEaI/DRs4/qT0oz9TgR6SQjalPxRqQ1C7R6Y/RiR4
Fg9uBEB85hO5jjkJQICg9HNA6vU/HibAw6BNpj+gyZ8UxHulP18KPMSC4aQ/
KAGezHUlpD/0Uk3cm2mjPwae0FLToKI/PN0ZPX1XoT/mvNYFCkqgP9T/kzPG
dJ4/RUb4x83Pmj9y0iN00+WTPxJLBGGyO4o/FgGUzzAVgz8GE6Ses+l/P+Rp
3kfKyAVAeFU0tr8cfD951AZSAcJ4PyqPAU03HnM/CLC4hZ4Haj9yqhEWGChf
P9Ub4asQL08/yWogQfZXQD+gmctzVLQkP9Sa0fXzFbA+t5GWCg==
                 "], "StandardDeviation" -> CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAAB2Tg5dOt5ePxaXsDaLLmk/lvyRvOEHZT8u
ocBBj9xjP16vGDZKGGU/DIK703Hxaj92kFxB64t0P0FSa+7UWHs/Yrqx1Sfl
gT/iSdr9teeEP/NKets7sYY/pzyzba8qhz/4hFKPIoaGPx/ZNuP2tYQ/YkDv
A62J/D/jD/wULUMBQASlOb1q5QVAD+Q9M34Zcz+9Eiwzlqd/P0V+/TUFL4c/
HDblwHOajj8by63I3KaRP7p20rmMnpI/2hbrJm76kT+MsxLB88qQP96ngMad
/I0/p9CeUfblhz8pA0yZKGh8P/Y+qEg/ZnU/nHqZ9xLkfD/zl3VgYbOCPx7W
Gbj+rwBAY2tD8ie8hT+4POIZC9SDPwf7cisAH38/QhFeuEsedT99DZiQwWtp
P5ptv4/jMlk/UQIlgviDSD9vhwyfG0UuPwPFUDrarMo+6fmaLA==
                 "], 
                "Output" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Version" -> {14., 0}, "ID" -> 4646170885319460202|>]}, 
            "Invertibility" -> "Perfect", "StructurePreserving" -> True, 
            "Missing" -> "Imputed"|>]|>, 
       "Output" -> <|
        "Preprocessor" -> 
         MachineLearning`MLProcessor[
          "ToMLDataset", <|
           "Input" -> <|"f1" -> <|"Type" -> "Numerical"|>|>, 
            "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
            "Preprocessor" -> 
            MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
                 MachineLearning`MLProcessor["List"], 
                 MachineLearning`MLProcessor[
                 "WrapMLDataset", <|
                  "FeatureTypes" -> {"Numerical"}, "FeatureKeys" -> {"f1"}, 
                   "FeatureWeights" -> Automatic, "ExampleWeights" -> 
                   Automatic, "RawExample" -> 
                   Missing["KeyAbsent", "RawExample"], "StructurePreserving" -> 
                   False|>]}|>], "ScalarFeature" -> True, "Invertibility" -> 
            "Perfect", "StructurePreserving" -> False, "Missing" -> 
            "Allowed"|>], "Processor" -> 
         MachineLearning`MLProcessor[
          "Sequence", <|
           "Input" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
            "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
            "Processors" -> {
              MachineLearning`MLProcessor[
              "ToVector", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                "Output" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Version" -> {14., 0}, "ID" -> 137422882915779582|>], 
              MachineLearning`MLProcessor[
              "Standardize", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Mean" -> {4.664999999999999}, 
                "StandardDeviation" -> {1.631898179013222}, 
                "Output" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Version" -> {14., 0}, "ID" -> 5276422737451164747|>], 
              MachineLearning`MLProcessor[
              "FromVector", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Output" -> <|
                 "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                "Version" -> {14., 0}, "ID" -> 9189645664226701459|>], 
              MachineLearning`MLProcessor[
              "FirstValues", <|
               "Info" -> <|"Type" -> "Numerical", "Weight" -> 1|>, "Key" -> 
                "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> 
                False, "Missing" -> "Allowed"|>]}, "Invertibility" -> 
            "Perfect", "StructurePreserving" -> False, "Missing" -> 
            "Allowed"|>], "ProbabilityPostprocessor" -> Identity, 
         "InverseProcessorFunction" -> (4.664999999999999 + 
          1.631898179013222 #& ), 
         "ProcessorFunction" -> (-2.8586342334304438` + 
          0.6127833297814457 #& ), "Name" -> "value", 
         "Quantiles" -> {-1.308292409083386, 1.5595335742937797`}, "Mean" -> 
         4.665|>, "LabelSplitter" -> 
       MachineLearning`MLProcessor[
        "FeatureLabelSplit", <|
         "Processor" -> MachineLearning`MLProcessor["ListSplit"], 
          "PreferLabeled" -> True, "KeepLabelsFormat" -> False|>], 
       "RecalibrationFunction" -> None, "ImputationStrategy" -> Automatic, 
       "Prior" -> Automatic, "Utility" -> (DiracDelta[#2 - #]& ), "Threshold" -> 
       0, "PerformanceGoal" -> Automatic, "BatchProcessing" -> Automatic, 
       "Model" -> <|
        "NeighborsFunction" -> 
         MachineLearning`PackageScope`NeighborsFunction[
          "BruteForce", {CompressedData["
1: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

            "], {9.902508979245525, 30.05816442184498, 31.405409410745172`, 
            17.384425729233083`, 20.640583483284605`, 48.39045253910146, 
            8.515532383069935, 9.464272440254005, 17.816444291684356`, 
            36.402878410532274`, 7.497956620157149, 8.527769255348657}}], 
         "NeighborsNumber" -> 1, 
         "DistributionData" -> {NormalDistribution, 0.3125144917486837}, 
         "TrainingOutput" -> 
         RawArray["Real32",{-0.3646060824394226, 0.9038553833961487, 
           0.8548327684402466, -1.2592697143554688`, -0.35847824811935425`, 
           1.5595335960388184`, 
           0.2604329288005829, -1.3082923889160156`, -0.9835172295570374, 
           1.5043830871582031`, 0.2420494109392166, -1.050923466682434}], 
         "DistributionSmoothing" -> 0.5, "Processor" -> 
         MachineLearning`MLProcessor[
          "FirstValues", <|
           "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, "Key" -> 
            "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> 
            False, "Missing" -> "Allowed"|>], "Calibrator" -> None, "Method" -> 
         "NearestNeighbors", "PostProcessor" -> 
         MachineLearning`MLProcessor["Identity"], 
         "Options" -> <|
          "NeighborsNumber" -> <|"Value" -> 1, "Options" -> <||>|>, 
           "DistributionSmoothing" -> <|"Value" -> 0.5, "Options" -> <||>|>, 
           "NearestMethod" -> <|"Value" -> "Scan", "Options" -> <||>|>|>|>, 
       "TrainingInformation" -> <|
        "Configurations" -> 
         Dataset[<|<|
             "Value" -> "NearestNeighbors", 
              "Options" -> <|
               "NeighborsNumber" -> <|"Value" -> Automatic|>, 
                "DistributionSmoothing" -> <|"Value" -> 0.5|>, 
                "NearestMethod" -> <|"Value" -> Automatic|>|>, "NaiveImputer" -> 
              Missing["KeyAbsent", "NaiveImputer"], "EMIterations" -> 
              Missing["KeyAbsent", "EMIterations"]|> -> <||>|>, 
           TypeSystem`Assoc[
            
            TypeSystem`Struct[{
             "Value", "Options", "NaiveImputer", "EMIterations"}, {
              TypeSystem`Atom[String], 
              TypeSystem`Assoc[
               TypeSystem`Atom[String], 
               TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 3], 
              TypeSystem`UnknownType, TypeSystem`UnknownType}], 
            TypeSystem`Assoc[
            TypeSystem`UnknownType, TypeSystem`UnknownType, 
             TypeSystem`AnyLength], 1], <||>], "BestModelInformation" -> 
         Dataset[<|
           "Configuration" -> {
             "NearestNeighbors", "NeighborsNumber" -> Automatic, 
              "DistributionSmoothing" -> 0.5, "NearestMethod" -> Automatic}, 
            "ModelUtility" -> Missing[]|>, 
           TypeSystem`Struct[{"Configuration", "ModelUtility"}, {
             TypeSystem`Tuple[{
               TypeSystem`Atom[String], TypeSystem`AnyType, 
               TypeSystem`AnyType, TypeSystem`AnyType}], 
             TypeSystem`UnknownType}], <||>], "InputDimension" -> 41, 
         "OutputDimension" -> 1|>, "AnomalyDetector" -> None, 
       "Log" -> <|
        "Example" -> 
         MachineLearning`MLDataset[<|
           "f1" -> <|
             "Type" -> "NumericalVector", "Weight" -> 1, 
              "Values" -> CompressedData["
1:eJwBWQGm/iFib1JlAgAAAAEAAAApAAAAIdiKkQKIoT/JYaUCi7yePysOALke
E5s/n15PJRLjlj/oFzDYQ7CVP9u5ZPJegJc/UuwqWQ5Qmz/rgROqSrieP9Gj
oShuFqI/8hef6uimpD+36AyG/J2mP1SXmRX706c/Ip1VqZscqD9kp1Dp2tGn
PzWE/qHIMqc/tqRWGtcZpj9QC7aHqjekPxeGkLZSy6E/w1BbGPjNnD8Kiytx
ZlmXP0rEio7XBpI/puDUDIPRjD/FPn4Xsu6IP2SnUOna0Yc/iv8SBDDViD9q
yHOCA9GLP2sr2iL8jo8/MrNif/oqkj8pfxawxcCUP/8qXDnRWpc/oBI/Zb1/
mj+REmFAc5KcP43B16DAs5w/qVZk44f6mT/UEtnTm0eUP7sKMkh9hIs/o39N
uAOQgD8CgTmyqmJwP2GCJaxRNWA/i2XJK5/tQz8AAAAAAAAAAPILmiQ=
               "], "ID" -> 692740363108450636|>|>, <|
           "ExampleNumber" -> 1, "ExampleWeights" -> 1, "LogDensityRatios" -> 
            0, "RawExample" -> False|>], "TrainingTime" -> 0.117503, 
         "MaxTrainingMemory" -> 306608, "DataMemory" -> 6856, 
         "FunctionMemory" -> 113592, "LanguageVersion" -> {14., 0}, "Date" -> 
         DateObject[{2024, 7, 17, 17, 47, 47.407646`8.42842336754664}, 
           "Instant", "Gregorian", -4.], "ProcessorCount" -> 4, 
         "ProcessorType" -> "x86-64", "OperatingSystem" -> "MacOSX", 
         "SystemWordLength" -> 64, "Evaluations" -> {}|>|>], 
    "TestSet" -> <|"Input" -> CompressedData["
1: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

       "], "Output" -> {2.61, 3.07, 4.05, 5.2, 6.17, 7.06}|>, 
    "Predictions" -> {3.0600000240577407`, 3.0600000240577407`, 
     3.0600000240577407`, 5.05999999294293, 6.060000038178469, 
     7.12000002047176}, "Distributions" -> {
      NormalDistribution[3.0600000240577407`, 0.5099918299999194], 
      NormalDistribution[3.0600000240577407`, 0.5099918299999194], 
      NormalDistribution[3.0600000240577407`, 0.5099918299999194], 
      NormalDistribution[5.05999999294293, 0.5099918299999194], 
      NormalDistribution[6.060000038178469, 0.5099918299999194], 
      NormalDistribution[7.12000002047176, 0.5099918299999194]}, 
    "Modes" -> {3.0600000240577407`, 3.0600000240577407`, 3.0600000240577407`,
      5.05999999294293, 6.060000038178469, 7.12000002047176}, "Weights" -> 
    SparseArray[Automatic, {6}, 1., {1, {{0, 0}, {}}, {}}], 
    "BatchEvaluationTime" -> 0.0028226666666666665`, "SingleEvaluationTime" -> 
    0.00179565625, "Version" -> {14., 0}|>]]], "Output",
 CellChangeTimes->{3.930237562610615*^9, 3.9302377952389812`*^9, 
  3.930241305673411*^9, 3.93024168272344*^9},
 CellLabel->
  "Out[433]=",ExpressionUUID->"1d0caa56-e31e-4a26-bcf9-9e1b658053a0"],

Cell[BoxData["0.2933333275487702`"], "Output",
 CellChangeTimes->{3.930237562610615*^9, 3.9302377952389812`*^9, 
  3.930241305673411*^9, 3.9302416827618628`*^9},
 CellLabel->
  "Out[434]=",ExpressionUUID->"0c975455-1ae8-4119-afd9-115fb8a668ea"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Observation:  ",
  FontWeight->"Bold"],
 "A simple nearest-neighbor classifier is decent for pH>5 even if the volume \
varies or vesicles are present. "
}], "Text",
 CellChangeTimes->{{3.9302378003220663`*^9, 3.930237811106263*^9}, {
  3.930240867362665*^9, 3.9302409014513397`*^9}, {3.930241703710476*^9, 
  3.9302417480948133`*^9}},ExpressionUUID->"6f281de6-1c4d-4e3d-8ba5-\
931f599bd34f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Optimal Transport Classifier", "Subsection",
 CellChangeTimes->{{3.899888079996306*^9, 
  3.899888085351427*^9}},ExpressionUUID->"1803d7d1-a605-4725-acfb-\
b28e74ea9597"],

Cell["Try an optimal transport classifier (my favorite):", "Text",
 CellChangeTimes->{{3.930241749990674*^9, 
  3.9302417592223377`*^9}},ExpressionUUID->"55eafebb-38a9-4ec4-b04d-\
7aeeb75a285f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ot", " ", "=", " ", 
  RowBox[{"Nearest", "[", 
   RowBox[{"trainingData", ",", 
    RowBox[{"DistanceFunction", "->", "emd"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.899888086774347*^9, 3.899888095562267*^9}},
 CellLabel->
  "In[397]:=",ExpressionUUID->"9866a7d8-3fe2-44f4-960b-a8ca7c7e4b0a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["NearestFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{
                Directive[
                 PointSize[0.125], 
                 RGBColor[1, 0, 0]], 
                PointBox[{0.5, 0.5}]}, {
                Directive[
                 PointSize[0.125], 
                 GrayLevel[0.5]], 
                
                PointBox[{{0.1795528351379172, 0.0994714438781299}, {
                 0.7056740672325248, 0.6072610584092579}, {0.8751907147676556,
                  0.43365086554091525`}, {0.5311259379568558, 
                 0.7402341039205544}, {0.024850489769640216`, 
                 0.2680094271842395}, {0.8535001476389303, 
                 0.09037709159382268}, {0.18825996468471073`, 
                 0.11580607373374763`}, {0.37580999850411323`, 
                 0.7473443767647248}, {0.7179416455907517, 
                 0.31385476481358254`}, {0.6087567739228883, 
                 0.045415361402344034`}}]}}, {
               Directive[
                PointSize[0.125], 
                GrayLevel[0]], 
               PointBox[{0.7056740672325248, 0.6072610584092579}], 
               AbsoluteDashing[{1, 2}], 
               
               CircleBox[{0.7056740672325248, 0.6072610584092579}, 
                0.23196283448656893`]}}, {
             Background -> GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
              ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], Frame -> True, FrameTicks -> None, 
              FrameStyle -> Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], PlotRangePadding -> 0.1}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["12", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Input dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["41", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{
                Directive[
                 PointSize[0.125], 
                 RGBColor[1, 0, 0]], 
                PointBox[{0.5, 0.5}]}, {
                Directive[
                 PointSize[0.125], 
                 GrayLevel[0.5]], 
                
                PointBox[{{0.1795528351379172, 0.0994714438781299}, {
                 0.7056740672325248, 0.6072610584092579}, {0.8751907147676556,
                  0.43365086554091525`}, {0.5311259379568558, 
                 0.7402341039205544}, {0.024850489769640216`, 
                 0.2680094271842395}, {0.8535001476389303, 
                 0.09037709159382268}, {0.18825996468471073`, 
                 0.11580607373374763`}, {0.37580999850411323`, 
                 0.7473443767647248}, {0.7179416455907517, 
                 0.31385476481358254`}, {0.6087567739228883, 
                 0.045415361402344034`}}]}}, {
               Directive[
                PointSize[0.125], 
                GrayLevel[0]], 
               PointBox[{0.7056740672325248, 0.6072610584092579}], 
               AbsoluteDashing[{1, 2}], 
               
               CircleBox[{0.7056740672325248, 0.6072610584092579}, 
                0.23196283448656893`]}}, {
             Background -> GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
              ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], Frame -> True, FrameTicks -> None, 
              FrameStyle -> Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], PlotRangePadding -> 0.1}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["12", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Input dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["41", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"scalar\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Distance function: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["emd", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  NearestFunction[
   Hold[
    Nearest[{CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAAC1m+o8Fw+iP0DbBWKyKJs/n1LXz1WsmT+F
V9hydcCYPxUoctPyMJc/6XOKW/C4lT+Emutz8iWUPwkBDack/ZI/Fw8SZgSL
kz/M51v5/vSVP+ugmz6l+5g/iJFDAUOWnD/PTYSBPo2fPyFSfJEFa6E/Uzsg
oK2voj/+o+4k8vajP6BxiVSAWqU/k0Um+riepj89JBxEmheoP88UbdyzN6k/
cJBBw/cgqj+f1VhAC3GqP4zXA4i3/ak/KWTcXsqBqD9kyPyKjPqmPykGEFSq
9KQ/S6dDFaXVoT/PIceHzMqZP0Wx8DrGZpA/xA4T0cQzhT/WY93Jiip6P4zQ
+/PacnE/gx1t5KfqZD+7/rxp4x9cP6yX6c3cjFI/jkrV8eCnSj82M8eXtDBB
P0LrW8mTPDQ/P+0OBfPELz+UyftTseMUPwAAAAAAAAAAFZ6gkQ==
       "] -> 2.53, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAAC2SpHprEuhP8XockoLCZo/Q0SEVXC5mD+h
7mLj7vOXP2yDhkT0jZY/4iI7sSUulT+pJwUB6b6TP/SdzbPMyJI/P6Z5F5eG
kz/kgS7QkQuWP8ypMk4jPpk/97kvDfsbnT+cyf8OSiygP6bTnPyXAKI/MpIW
X4Booz+5KrXprcOkP5tu91GsLqY/EjGu0Fhhpz9B4C3RH7eoP1dtDxbwyqk/
TBz2AJaMqj+p+cQgj52qPxtuO1AhDKo/e4HTx9RtqD803LiYCN2mPyGAPUYO
9aQ/qf+fiYkHoj+ZxOn1oZeZPyyJYjBGhI4/DS9NDi8sgj/Gom4mFeR0P0I1
WyXDSms/BVGzrdJeYD+zyOgEAmxWP09hNdU53E4/aYjpqdiyRT9btSew05Q7
PwKyMGzj5jI/WAp+4fGdKj+LXgnSrOoXPwAAAAAAAAAAVquXvA==
       "] -> 2.95, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAACVUENoLKSgPy7725nCjJg/eYFnvb+ilz9J
vpw9ZyuXP2EqFgtzCJY/cBnlmNsVlT8b3xVsP0OUPx768uNrv5M/CSErS2Xp
lD+cKVDXkbGXP9cjuQ5AAps/M6st6JPlnj+umbZxEQahP+++U6c6vaI/nWwE
qFUBpD9upGiTjDGlP6lJA9KIcqY/bjWh6qqGpz8qpJTDKcuoP6foGdIOAKo/
ykRBBybfqj+HhyEIh8iqP4gPTUuuPao/0WwdThefqD+XixixrhinP4+IuwvL
haU/illLjsmXoj8CTh39JTmZP8qQAuzgDoo/gSol1YDNeD+FWipobIxlP8lZ
aSLlIVg/tPh1RrfWST/1rR1HSd5AP7uPGTaKQTU/hzaPjltALT/1W6zzemEg
P694LnkrKRE/UgtMxtIUDD8umEOwEPbYPgAAAAAAAAAA4cGO5g==
       "] -> 4.07, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAAAfK6zo5hqiP99d/MwnX5w/WDppmNeSmz/4
BKJufPCaP6dgb7DG/pk/X52RQVxBmj88ocQWdYybP21w5XC16pw/xQlyr8tD
oD/uER2MoaSiP+mLQaeJ/6Q/VLcPPNFBpz+kIVld47uoP3shhKcd3Kk/V0ru
/Tgzqj9NRGIt6/KpP3n3H3DbBKk/E/g5WEWvpz+VmxyhX+ClPx6nVEk+i6Q/
c9Fi7Asioz9xQ7Hg4/uhP7verl1796A/fMy99fbunj9DzzDZlY6cP6d1Icxn
apo/LGX2XPbIlj/6I672nPKOP0FzuSvAwH8/FPW3zzNbbj/uGPVvD+dcP0m8
2xql1lM/+LozbHfYTD+pXcY/9khIP9TZHG5UN0E/7HBkkgaKOT8ugVl0RhUp
P80vkAoHXRs/KDThKQURFD8WNOEpBREEPwAAAAAAAAAA84aa4w==
       "] -> 5.06, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAACFI36CSCujP/6TQ4IuB6A/Rd4S9Qetnj+e
LnJ6TCadP0TTPncWOpw/nJtkcWOdnT+IyGXucXOgP7lTxyOTAKI/Hy7XvSnn
pD+IOSZ+KxGoP5B+Vr2A6Ko/oUsgW35YrT81HB3V+6+uP0Vos8xQVq8/snq4
2/kNrz/M/vOxucatP+hjei6nPKs/0+9h2C7xpz/f4H9o/FyjP081HZedQ58/
XoZSJ/Cilz+P+VR+NfiRP3nmiaGHHow/tP7TN6c+hj/GIOFXOC+DP41vtKbs
ToE/vOVTw8i1fz9Z2P2JJnt7P6ttzadexnc/Sh0OT2nKdj+3V+VS3eV3P0Nb
eAIOUHk/eG7DLH80eT+0Q6SjS5N2P9yb/5L/xnE/VxtnqXk8aD8b79tjyMlc
PxEFxLhJqkw/9WOKa7AAPz9on5JCMDEjPwAAAAAAAAAAwTWaeg==
       "] -> 6.06, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAADopAzIJ+GhP6Wmj1WiRZ8/fkMX6Dz9mj8r
7NWqPRqWP5RbCG09tZQ/O0E38qJulj9izgogJCaaP6pZV12nZJ0/j5IfaNg8
oT+Q2n9An6ejPz81dln+ZqU/tTYPNZRepj+ix4VT3XOmPyDXhTAg+qU/wE/R
PNdPpT8Vu0w9kkikPw/Elurrj6I/4cjkoeFjoD9pGXfzAb2aP0tVIdqx6ZU/
/T3xafo6kT8zCHqO/1+MPyfwsiiXf4k/AKfNRbdhiT/aH+juyyqLP3u9IYye
DY8/WyUddx/LkT/OwzI+wrCUP7pyrnS2wZc/XM9wsjLLmj/gzULH0GeeP2yo
SwzGX6A/+Sc7Xc51oD/JmEfM/8SdP9pwJ4S4SJc/ggiOX3ykjz+W2RmukAKD
P396w/Kj8HI/rC0VY+exYj/s+j6Sz25HPwAAAAAAAAAAH0Wd1g==
       "] -> 7.21, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAACmss6aeFygP2Q+gPq4C5g/bRKjnUAjlz83
3pLEuKOWP/RaEsASY5U/OAX1G5QUlD8F3TrYPLiSPwaCSk/42ZE/kQc+oRqj
kj+smchiJgKVP27Rea2w+5c/0xWYny6Rmz8NuZ9rHJeeP0NetVKKBaE/LSbB
DNJwoj/OW6t59O2jP4d5qg/FraU/jVs+ttBYpz+XZjo+EGipP2MRc1hFCas/
UwiSPllqrD+x5sMfUxKtP5xilX3Qyaw/VhqTHiIfqz9cliXQrl+pP4eZHPMR
9qY/zTWOSw8Uoz8QOdfd6HWZP/+QkZfZRos/flEYc+4ifD8Q7FdYKCtrP79V
pi6+G18/TV6gbo+IUD8S09XoaQtGP6bPcQLj3zs/GTWhAUKVMj/lcaOJcwwo
P95xo4lzDBg/vPXTTGt9ET/Y9dNMa33xPgAAAAAAAAAAwQKRyw==
       "] -> 2.61, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAACNn2PDRGGgP1OLOP0MwZc/SfUBiQLwlj8E
fsyEW4aWP7QhyTQxUJU/Y8XF5AYalD8/gMCdFuCSPwoiI/hKDpI/E2nClNzj
kj8KUMVGpUiVPzyrTgryUZg/gp+9NGzxmz+MMuDG9/meP+zFZ5rRM6E/eHT5
pkiGoj8BNsUsVeajP23fxf5WfKU/8Nk/8CMFpz8587pRVPWoP6HCLxaBpqo/
ZyUhMFMerD8JAzQHXtusP+MUWeNxv6w/yg5g7Yc4qz/MlT11TJKpP/GsoG3i
kac/f6EzOi72oz/i2w9nDZqaP3a67+joJIs/Yj/rKFuHeT+izNN3csplP7Ax
78tHlVc/ADfI+G2tRz//pUYPuC8+P5DyEUlV7DE/J3zNP17nKD/hULZBVa0c
PwemRg+4Lw4/X6fkPWchBT8x/cOioRwCPwAAAAAAAAAA0dmW3A==
       "] -> 3.06, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAACj13CHQLGfP86xobvnMZc/bxPIeW2plj9J
pMABVmmWPxW/K5FHdJU/1+WgduihlD8Jqm7Ie/STP8iXNIBHn5M/cez7r5r1
lD//1eoEI7uXP/FXrvDN95o/ExVO/Iqfnj9NAiF+NbugP9clqoeYNKI/4/aY
U+U/oz/IR/J7mzqkP0qwNAmDWaU/UYcogCd2pj+S+d2/AwKoP+BI9tJZiak/
Q2lnY3rpqj85JS+1faerPyrLTrevtKs//YRTyPNXqj9ohGfrFuOoP0ev39D/
Wqc/AxxjcqgspD8KEnSXwe6aP3UFFLO3iYo/1JQJOrk+dz91nmMc9Y1hP2/j
HKB5M1E/ySeAlaOWQD91XloLRfszP8Z+9zhqwCc/7w7Gz/yiGT/XJ4CVo5YA
P4oC6WwpKe4+igLpbCkp/j4AAAAAAAAAAD9ouvDtIOg+AXOedw==
       "] -> 4.08, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAADKywvRgLWhP9trczGSEpw/Q1xl6INxmz/e
07/h1eiaP5RU4L6sEpo/kM60QJpqmj90XaKs0eGbPwezXp+rb50/m/705FSw
oD/RNvg9qR+jP+B94bASi6U/5pqUWYjUpz9uWgLw7E2pP4DMTVKjY6o/V8Eg
gCeqqj8D5OS66EaqP6CPZYxcKak/v2yQsqakpz/kkvyVDJylP8OPWt53FqQ/
RL04URCToj8ZXDr3ZYChP+s3Jl6ymaA/ohRyjqpNnj/pxNfMEPubPzpIdijj
6Jk/Dvny9k1Tlj/LH59gJgeOPzeAdYvXdH4/7mjiGPJ0bD8iBpJlpSZbP0Rr
M6sfVlI/exL8+25QSz8syZr7GfZGP0glhQFUaUE/MjSHaEJgOD9W8qabZIEn
P4Owxs6GogY/ujsInLnbCz8qNIdoQmD4PgAAAAAAAAAARVCdTw==
       "] -> 5.09, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAABBrTPs4bSiP+mN9hz2nZ8/kjMBu89Jnj9I
/XYFatacP3RkgR/cCpw/CXXjhOZ4nT8lnG2EjmygP8sPnxwKDaI/VSzE/dQM
pT8WmaRpYzyoP7GX7iqPE6s/LniRy1h5rT+IkEBhH8SuP271mDjuY68/2Kl8
l3QQrz82da+FqcGtP4JEUVocLKs/9bxDFWHUpz8OM0kp/zSjPzJmeSd64p4/
oWSjWFs2lz9JTp+gcYSRP+fR58YyQIs/3mk34a2ChT+Zf/JqB4qCP0V4ztiQ
1IA/z0PLHlQmfz/3yyM71NB7P0FGn5p25ng/mhheGZy7eD9oY7kaSlZ6Pxzl
k3Bm1Hs/xDki5LCXez8T3T/b4/t4P1EoGrOToHM/boxbstqkaj8ST16XCJVf
P5Jh2j0wBk8/Xargmb3qPz/ar30wC9shPwAAAAAAAAAA9kOXoQ==
       "] -> 6.14, CompressedData["
1:eJwBVQGq/iFib1JlAQAAACkAAAAh2IqRAoihP8lhpQKLvJ4/Kw4AuR4Tmz+f
Xk8lEuOWP+gXMNhDsJU/27lk8l6Alz9S7CpZDlCbP+uBE6pKuJ4/0aOhKG4W
oj/yF5/q6KakP7foDIb8naY/VJeZFfvTpz8inVWpmxyoP2SnUOna0ac/NYT+
ocgypz+2pFYa1xmmP1ALtoeqN6Q/F4aQtlLLoT/DUFsY+M2cPwqLK3FmWZc/
SsSKjtcGkj+m4NQMg9GMP8U+fhey7og/ZKdQ6drRhz+K/xIEMNWIP2rIc4ID
0Ys/ayvaIvyOjz8ys2J/+iqSPyl/FrDFwJQ//ypcOdFalz+gEj9lvX+aP5ES
YUBzkpw/jcHXoMCznD+pVmTjh/qZP9QS2dObR5Q/uwoySH2Eiz+jf024A5CA
PwKBObKqYnA/YYIlrFE1YD+LZckrn+1DPwAAAAAAAAAA6LuaIg==
       "] -> 7.12}, DistanceFunction -> $CellContext`emd]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.899888098093453*^9, 3.930240905064025*^9, 
  3.930241058799086*^9, 3.930241310714542*^9},
 CellLabel->
  "Out[397]=",ExpressionUUID->"4a8a7f75-9348-4e76-97c5-42840b3be4d5"]
}, Open  ]],

Cell["This is fast with this limited amount of data:", "Text",
 CellChangeTimes->{{3.899888655135714*^9, 3.899888662302687*^9}, {
  3.930240959803131*^9, 3.9302409676031*^9}, {3.930241767142768*^9, 
  3.930241771710512*^9}},ExpressionUUID->"80ed21d5-ad72-4e9c-97de-\
775e7026163d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pred", "=", 
      RowBox[{"Flatten", "@", 
       RowBox[{"ParallelMap", "[", 
        RowBox[{"ot", ",", 
         RowBox[{"noVescVariableVol", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"obs", " ", "=", " ", 
      RowBox[{"noVescVariableVol", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PredictorMeasurements", "[", 
    RowBox[{"pred", ",", "obs"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.899888109284885*^9, 3.899888118921826*^9}, {
  3.899888171515312*^9, 3.899888171954126*^9}, {3.899888207267848*^9, 
  3.89988821097955*^9}, {3.8998882760503693`*^9, 3.89988833628459*^9}, {
  3.9302409254478617`*^9, 3.930240927444294*^9}, {3.93024099416354*^9, 
  3.930241075050851*^9}},
 CellLabel->
  "In[398]:=",ExpressionUUID->"912eb1c9-abff-4725-a19d-940aa94978c5"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   StyleBox[
    FrameBox[GridBox[{
       {
        ItemBox[
         FrameBox[
          StyleBox["\<\"Predictor Measurements\"\>", "SuggestionsBarText",
           StripOnInput->False,
           FontSize->12],
          FrameMargins->{{10, 5}, {-4, 2}},
          FrameStyle->None,
          StripOnInput->False],
         Alignment->{Left, Bottom},
         Background->RGBColor[0.96, 0.96, 0.96],
         Frame->{{False, False}, {True, False}},
         FrameStyle->Opacity[0.1],
         ItemSize->{Automatic, 1},
         StripOnInput->False]},
       {
        ItemBox[
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Number of test examples"], 
                   TextCell["Number of test examples"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], "6"},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Standard deviation"], 
                   TextCell["Standard deviation"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 TemplateBox[{"0.176823829464998028`3.", 
                   StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0899476985523349482`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                  "RowDefault"],
                 TemplateBox[{"\"95% confidence interval: [\"", 
                   RowBox[{"-", "0.0030715676396718683`3."}], "\", \"", 
                   "0.3567192265696679243`3.", "\"]\""}, "RowDefault"],
                 TooltipStyle->{}],
                Annotation[#, 
                 
                 Row[{"95% confidence interval: [", -0.0030715676396718683`3.,
                    ", ", 0.3567192265696679243`3., "]"}], "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  TagBox[
                   TooltipBox[
                    InterpretationBox[
                    Cell["Standard deviation baseline"], 
                    TextCell["Standard deviation baseline"]], 
                    "\"Standard deviation of testset values\"", TooltipStyle -> 
                    "TextStyling"], 
                   Annotation[#, "Standard deviation of testset values", 
                    "Tooltip"]& ], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 TemplateBox[{"1.6823569775764002365`3.", 
                   StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.30705172828955829`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                  "RowDefault"],
                 
                 TemplateBox[{
                  "\"95% confidence interval: [\"", 
                   "1.0682535209972836565`3.", "\", \"", 
                   "2.2964604341555165945`3.", "\"]\""}, "RowDefault"],
                 TooltipStyle->{}],
                Annotation[#, 
                 
                 Row[{"95% confidence interval: [", 1.0682535209972836565`3., 
                   ", ", 2.2964604341555165945`3., "]"}], "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["R-squared"], 
                   TextCell["R-squared"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 TemplateBox[{"0.9889529765427409469`3.", 
                   StyleBox[
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.011988072267856531`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                  "RowDefault"],
                 
                 TemplateBox[{
                  "\"95% confidence interval: [\"", 
                   "0.9649768320070278849`3.", "\", \"", 
                   "1.01292912107845412`3.", "\"]\""}, "RowDefault"],
                 TooltipStyle->{}],
                Annotation[#, 
                 
                 Row[{"95% confidence interval: [", 0.9649768320070278849`3., 
                   ", ", 1.01292912107845412`3., "]"}], "Tooltip"]& ]},
              {
               ItemBox[
                GraphicsBox[{{{}, {
                    TagBox[
                    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
                    0.012833333333333334`], AbsoluteThickness[2], 
                    GeometricTransformationBox[InsetBox[
                    FormBox[
                    StyleBox[
                    GraphicsBox[
                    {RGBColor[0.34398, 0.49112, 0.89936], AbsoluteThickness[
                    1.], CircleBox[{0, 0}, Offset[{1.8, 1.8}, {0., 0.}]]}],
                    StripOnInput->False,
                    GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]]}],
                    TraditionalForm], {0., 0.}], {{{2.53, 2.58}}, {{2.53, 
                    2.94}}, {{4.07, 3.98}}, {{5.09, 5.15}}, {{6.14, 6.12}}, {{
                    7.21, 7.28}}}]},
                    Annotation[#, "Charting`Private`Tag#1"]& ], {
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{2.53, 2.58}}]},
                    RowBox[{"{", 
                    RowBox[{"2.53`", ",", "2.58`"}], "}"}]],
                    Annotation[#, {2.53, 2.58}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{2.53, 2.94}}]},
                    RowBox[{"{", 
                    RowBox[{"2.53`", ",", "2.94`"}], "}"}]],
                    Annotation[#, {2.53, 2.94}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{4.07, 3.98}}]},
                    RowBox[{"{", 
                    RowBox[{"4.07`", ",", "3.98`"}], "}"}]],
                    Annotation[#, {4.07, 3.98}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.09, 5.15}}]},
                    RowBox[{"{", 
                    RowBox[{"5.09`", ",", "5.15`"}], "}"}]],
                    Annotation[#, {5.09, 5.15}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.14, 6.12}}]},
                    RowBox[{"{", 
                    RowBox[{"6.14`", ",", "6.12`"}], "}"}]],
                    Annotation[#, {6.14, 6.12}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{7.21, 7.28}}]},
                    RowBox[{"{", 
                    RowBox[{"7.21`", ",", "7.28`"}], "}"}]],
                    Annotation[#, {7.21, 7.28}, "Tooltip"]& ]}}, {{}, {}}}, 
                  InterpretationBox[{
                    TagBox[{{{}, {}, 
                    TagBox[
                    {GrayLevel[0.2], AbsoluteThickness[1.], Opacity[0.5], 
                    AbsoluteDashing[{2, 4}], LineBox[CompressedData["
1:eJxFxWswEwAcAPC1yWtmYRb2uDnj2g4tH5q8U41ujdSE0WnLs1wmFaV0Vx9q
dnFIFOdw0zl060geuYsiHKFTuRMqWnb0sHKxrXPVh/7/D7/7uSuyj6QSCQSC
5K9/R74dFtvGEcP+X7QxlCyV4aNuQ7m1x/Go5MFqvxRcqu9fkeXgclOPukWN
X2I/GD3Uh7eklYpLeCR4lpRcMEKxgG+vB88tLuBhPD5jsn0r3JPOUOXcsYSf
/GbxfmZawapaTyMv2hoWFwY0+gls4IpHJ64ziLZw67q6tFuHi0uHXwl7yPB8
huO3G0V2cIhEHnAriwJ73ezvOhtqD7+b8EqncKnws+axjSDiNnimyj5u8RSe
QDkqSZnFGT51SbEiB3j/1HeSezee7iK6+4bnCI9bN0aYyvDqq5bFRgsnuLVe
+TUjG+9UfAzon8Z5zVLOWiQNfl8zya5sw83O0R00T2fYwff1noIK/LRBPh2z
iXsH/rAjKenwLoE6kTuDCwb4Vb7h2+GK+bEsp3Y8RJMny2C6wFGr3A+VxXjD
0kyh0IivXqkk98ldYc29YwKPKbxGwT7zK8gNNj/U79NocWltt1UghwEbdpd/
2qvC12KzEzzMeCBHunQulQlfVoWe1L7EuRd98gZCWDCVxtUcbMLz4xUTnGZ8
oabOtN6CP/ZkxdzX4klC+iaxE2+SWcf3DuLh9V/IOxfxVh1faKnDnfmZirnP
uL5N16VexksG5lP1Bnx2afJpPYENi7ypK/lEXKuU0A9b4NeMI1mbVvgO8nPX
RCpeFr3lgJ8Dbi4PVdo44ePM3heddNxfbjIUu+ANjf6sNDfcbvlCZDATP+/b
kUtj438AOn7xmA==
                    "]]},
                    Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
                    {
                    "WolframDynamicHighlight", <|
                    "Label" -> {"XYLabel"}, 
                    "Ball" -> {"InterpolatedBall"}|>}], 
                    StyleBox[
                    
                    DynamicBox[(Charting`HighlightActionBox[
                    "DynamicHighlight", {}, 
                    Slot["HighlightElements"], 
                    Slot["LayoutOptions"], 
                    Slot["Meta"], 
                    Charting`HighlightActionFunction[
                    "DynamicHighlight", {{{{}, {}, 
                    Annotation[{
                    Directive[
                    GrayLevel[0.2], 
                    Opacity[0.5], 
                    AbsoluteThickness[1.], 
                    AbsoluteDashing[{2, 4}]], 
                    Line[CompressedData["
1:eJxFxWswEwAcAPC1yWtmYRb2uDnj2g4tH5q8U41ujdSE0WnLs1wmFaV0Vx9q
dnFIFOdw0zl060geuYsiHKFTuRMqWnb0sHKxrXPVh/7/D7/7uSuyj6QSCQSC
5K9/R74dFtvGEcP+X7QxlCyV4aNuQ7m1x/Go5MFqvxRcqu9fkeXgclOPukWN
X2I/GD3Uh7eklYpLeCR4lpRcMEKxgG+vB88tLuBhPD5jsn0r3JPOUOXcsYSf
/GbxfmZawapaTyMv2hoWFwY0+gls4IpHJ64ziLZw67q6tFuHi0uHXwl7yPB8
huO3G0V2cIhEHnAriwJ73ezvOhtqD7+b8EqncKnws+axjSDiNnimyj5u8RSe
QDkqSZnFGT51SbEiB3j/1HeSezee7iK6+4bnCI9bN0aYyvDqq5bFRgsnuLVe
+TUjG+9UfAzon8Z5zVLOWiQNfl8zya5sw83O0R00T2fYwff1noIK/LRBPh2z
iXsH/rAjKenwLoE6kTuDCwb4Vb7h2+GK+bEsp3Y8RJMny2C6wFGr3A+VxXjD
0kyh0IivXqkk98ldYc29YwKPKbxGwT7zK8gNNj/U79NocWltt1UghwEbdpd/
2qvC12KzEzzMeCBHunQulQlfVoWe1L7EuRd98gZCWDCVxtUcbMLz4xUTnGZ8
oabOtN6CP/ZkxdzX4klC+iaxE2+SWcf3DuLh9V/IOxfxVh1faKnDnfmZirnP
uL5N16VexksG5lP1Bnx2afJpPYENi7ypK/lEXKuU0A9b4NeMI1mbVvgO8nPX
RCpeFr3lgJ8Dbi4PVdo44ePM3heddNxfbjIUu+ANjf6sNDfcbvlCZDATP+/b
kUtj438AOn7xmA==
                    "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
                    "HighlightElements" -> <|
                    "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
                    "LayoutOptions" -> <|
                    "PanelPlotLayout" -> <||>, 
                    "PlotRange" -> {{2.2925, 7.529375}, {2.292500106875, 
                    7.5293748931249995`}}, 
                    "Frame" -> {{False, False}, {False, False}}, 
                    "AxesOrigin" -> {2.292500000000005, 2.292500106875005}, 
                    "ImageSize" -> {360, 360/GoldenRatio}, 
                    "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
                    GoldenRatio^(-1), "DefaultStyle" -> {
                    Directive[
                    GrayLevel[0.2], 
                    Opacity[0.5], 
                    AbsoluteThickness[1.], 
                    AbsoluteDashing[{2, 4}]]}, 
                    "HighlightLabelingFunctions" -> <|
                    "CoordinatesToolOptions" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), 
                    "ScalingFunctions" -> {{Identity, Identity}, {
                    Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
                    False|>, 
                    "Meta" -> <|
                    "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
                    "Function" -> Plot, "GroupHighlight" -> False|>|>]]& )[<|
                    "HighlightElements" -> <|
                    "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
                    "LayoutOptions" -> <|
                    "PanelPlotLayout" -> <||>, 
                    "PlotRange" -> {{2.2925, 7.529375}, {2.292500106875, 
                    7.5293748931249995`}}, 
                    "Frame" -> {{False, False}, {False, False}}, 
                    "AxesOrigin" -> {2.292500000000005, 2.292500106875005}, 
                    "ImageSize" -> {360, 360/GoldenRatio}, 
                    "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
                    GoldenRatio^(-1), "DefaultStyle" -> {
                    Directive[
                    GrayLevel[0.2], 
                    Opacity[0.5], 
                    AbsoluteThickness[1.], 
                    AbsoluteDashing[{2, 4}]]}, 
                    "HighlightLabelingFunctions" -> <|
                    "CoordinatesToolOptions" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), 
                    "ScalingFunctions" -> {{Identity, Identity}, {
                    Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
                    False|>, 
                    "Meta" -> <|
                    "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
                    "Function" -> Plot, "GroupHighlight" -> False|>|>],
                    
                    ImageSizeCache->{{
                    4.503599627370496*^15, -4.503599627370496*^15}, {
                    4.503599627370496*^15, -4.503599627370496*^15}}],
                    Selectable->False]},
                   Annotation[{{{{}, {}, 
                    Annotation[{
                    Directive[
                    GrayLevel[0.2], 
                    Opacity[0.5], 
                    AbsoluteThickness[1.], 
                    AbsoluteDashing[{2, 4}]], 
                    Line[CompressedData["
1:eJxFxWswEwAcAPC1yWtmYRb2uDnj2g4tH5q8U41ujdSE0WnLs1wmFaV0Vx9q
dnFIFOdw0zl060geuYsiHKFTuRMqWnb0sHKxrXPVh/7/D7/7uSuyj6QSCQSC
5K9/R74dFtvGEcP+X7QxlCyV4aNuQ7m1x/Go5MFqvxRcqu9fkeXgclOPukWN
X2I/GD3Uh7eklYpLeCR4lpRcMEKxgG+vB88tLuBhPD5jsn0r3JPOUOXcsYSf
/GbxfmZawapaTyMv2hoWFwY0+gls4IpHJ64ziLZw67q6tFuHi0uHXwl7yPB8
huO3G0V2cIhEHnAriwJ73ezvOhtqD7+b8EqncKnws+axjSDiNnimyj5u8RSe
QDkqSZnFGT51SbEiB3j/1HeSezee7iK6+4bnCI9bN0aYyvDqq5bFRgsnuLVe
+TUjG+9UfAzon8Z5zVLOWiQNfl8zya5sw83O0R00T2fYwff1noIK/LRBPh2z
iXsH/rAjKenwLoE6kTuDCwb4Vb7h2+GK+bEsp3Y8RJMny2C6wFGr3A+VxXjD
0kyh0IivXqkk98ldYc29YwKPKbxGwT7zK8gNNj/U79NocWltt1UghwEbdpd/
2qvC12KzEzzMeCBHunQulQlfVoWe1L7EuRd98gZCWDCVxtUcbMLz4xUTnGZ8
oabOtN6CP/ZkxdzX4klC+iaxE2+SWcf3DuLh9V/IOxfxVh1faKnDnfmZirnP
uL5N16VexksG5lP1Bnx2afJpPYENi7ypK/lEXKuU0A9b4NeMI1mbVvgO8nPX
RCpeFr3lgJ8Dbi4PVdo44ePM3heddNxfbjIUu+ANjf6sNDfcbvlCZDATP+/b
kUtj438AOn7xmA==
                    "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
                    "HighlightElements" -> <|
                    "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
                    "LayoutOptions" -> <|
                    "PanelPlotLayout" -> <||>, 
                    "PlotRange" -> {{2.2925, 7.529375}, {2.292500106875, 
                    7.5293748931249995`}}, 
                    "Frame" -> {{False, False}, {False, False}}, 
                    "AxesOrigin" -> {2.292500000000005, 2.292500106875005}, 
                    "ImageSize" -> {360, 360/GoldenRatio}, 
                    "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
                    GoldenRatio^(-1), "DefaultStyle" -> {
                    Directive[
                    GrayLevel[0.2], 
                    Opacity[0.5], 
                    AbsoluteThickness[1.], 
                    AbsoluteDashing[{2, 4}]]}, 
                    "HighlightLabelingFunctions" -> <|
                    "CoordinatesToolOptions" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), 
                    "ScalingFunctions" -> {{Identity, Identity}, {
                    Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
                    False|>, 
                    "Meta" -> <|
                    "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
                    "Function" -> Plot, "GroupHighlight" -> False|>|>, 
                    "DynamicHighlight"]]},
                 Axes->{False, False},
                 AxesLabel->{None, None},
                 AxesOrigin->{2.292500000000005, 2.292500000000005},
                 DisplayFunction->Identity,
                 Frame->{{True, False}, {True, False}},
                 FrameLabel->{{
                    FormBox[
                    TagBox["\"actual value\"", HoldForm], TraditionalForm], 
                    None}, {
                    FormBox[
                    TagBox["\"predicted value\"", HoldForm], TraditionalForm],
                     None}},
                 FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
                 
                 GridLines->{Automatic, Automatic},
                 GridLinesStyle->Directive[
                   GrayLevel[0.5, 0.5], 
                   AbsoluteThickness[1], 
                   AbsoluteDashing[{1, 2}]],
                 ImageSize->250,
                 Method->{
                  "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                   Automatic, 
                   "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                   "DefaultMeshStyle" -> AbsolutePointSize[6], 
                   "DefaultPlotStyle" -> {
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
                   "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
                   Scaled[0.05], "OptimizePlotMarkers" -> True, 
                   "IncludeHighlighting" -> "CurrentPoint", "HighlightStyle" -> 
                   Automatic, "OptimizePlotMarkers" -> True, 
                   "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}},
                 PlotRange->{{2.2925, 7.529375}, {2.2925, 7.529375}},
                 PlotRangeClipping->True,
                 PlotRangePadding->{{0, 0}, {0, 0}},
                 Ticks->{Automatic, Automatic}],
                Alignment->Center,
                StripOnInput->False], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             ColumnsEqual->False,
             
             GridBoxAlignment->{
              "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
             GridBoxDividers->{"Columns" -> {False, {
                  Opacity[0.15]}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {Automatic, {Automatic}}, "Rows" -> {{1.}}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], 
                 Offset[1.1199999999999999`], {
                  Offset[1.75]}, 
                 Offset[0.27999999999999997`]}, "Rows" -> {
                 Offset[0.2], {
                  Offset[0.8]}, 
                 Offset[0.2]}}],
            "Grid"],
           FrameMargins->{{10, 10}, {10, 5}},
           FrameStyle->None,
           StripOnInput->False],
          Deploy,
          DefaultBaseStyle->"Deploy"],
         Alignment->Center,
         BaseStyle->{
          FontWeight -> "Light", FontSize -> 11, FontFamily -> 
           ".AppleSystemUIFont", NumberMarks -> False, Deployed -> False},
         StripOnInput->False]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], 
          Offset[0.8], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[0.85],
     RoundingRadius->5,
     StripOnInput->False],
    StripOnInput->False,
    LineBreakWithin->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  PredictorMeasurementsObject[<|
   "Model" -> PredictorFunction[<|
      "ExampleNumber" -> 4, 
       "Input" -> <|
        "Preprocessor" -> 
         MachineLearning`MLProcessor[
          "ToMLDataset", <|
           "Input" -> <|"f1" -> <|"Type" -> "Numerical"|>|>, 
            "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
            "Preprocessor" -> 
            MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
                 MachineLearning`MLProcessor["List"], 
                 MachineLearning`MLProcessor[
                 "WrapMLDataset", <|
                  "FeatureTypes" -> {"Numerical"}, "FeatureKeys" -> {"f1"}, 
                   "FeatureWeights" -> Automatic, "ExampleWeights" -> 
                   Automatic, "RawExample" -> 
                   Missing["KeyAbsent", "RawExample"], "StructurePreserving" -> 
                   False|>]}|>], "ScalarFeature" -> True, "Invertibility" -> 
            "Perfect", "StructurePreserving" -> False, "Missing" -> 
            "Allowed"|>], "Processor" -> 
         MachineLearning`MLProcessor[
          "Sequence", <|
           "Input" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
            "Output" -> <|
             "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
            "Processors" -> {
              MachineLearning`MLProcessor[
              "SynthesizeMissingValues", <|
               "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                "Distribution" -> 
                LearnedDistribution[<|
                  "ExampleNumber" -> 4, "Preprocessor" -> 
                   MachineLearning`MLProcessor[
                    "ToMLDataset", <|
                    "Input" -> <|"f1" -> <|"Type" -> "Numerical"|>|>, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                    "Preprocessor" -> MachineLearning`MLProcessor["Identity"],
                     "ScalarFeature" -> True, "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
                    "Processor" -> 
                   MachineLearning`MLProcessor[
                    "Sequence", <|
                    "Input" -> <|
                    "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Processors" -> {
                    MachineLearning`MLProcessor[
                    "ToVector", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Version" -> {14., 0}, "ID" -> 4463274533565020503|>], 
                    MachineLearning`MLProcessor[
                    "Standardize", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> {2.5}, 
                    "StandardDeviation" -> {1.118033988749895}, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Version" -> {14., 0}, "ID" -> 2523344124640608097|>]}, 
                    "Invertibility" -> "Perfect", "StructurePreserving" -> 
                    True, "Missing" -> "Allowed"|>], "PerformanceGoal" -> 
                   "DirectTraining", "BatchProcessing" -> Automatic, 
                   "Model" -> <|
                    "RotationMatrix" -> {{1.}}, 
                    "Precisions" -> {1.0048959123451486`}, "NoisePrecision" -> 
                    None, "Processor" -> 
                    MachineLearning`MLProcessor[
                    "Center", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> {0.002643573458630255}, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Version" -> {14., 0}, "ID" -> 2408014394271495081|>], 
                    "PostProcessor" -> 
                    MachineLearning`MLProcessor[
                    "FirstValues", <|
                    "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, 
                    "Key" -> "f1", "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
                     "Method" -> "Multinormal", 
                    "Options" -> <|
                    "CovarianceType" -> <|
                    "Value" -> "Full", "Options" -> <||>|>, 
                    "IntrinsicDimension" -> <|
                    "Value" -> 1, "Options" -> <||>|>|>|>, 
                   "TrainingInformation" -> <|
                    "Configurations" -> 
                    Dataset[<|<|
                    "Value" -> "Multinormal", 
                    "Options" -> <|
                    "CovarianceType" -> <|"Value" -> "Full"|>, 
                    "IntrinsicDimension" -> <|"Value" -> "Heuristic"|>|>, 
                    "NaiveImputer" -> 
                    MachineLearning`MLProcessor[
                    "ImputeMissing", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> {0.002643573458630255}, 
                    "StandardDeviation" -> {0.997560996044598}, "Method" -> 
                    "NaiveSampler", "VectorLength" -> 1, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Type" -> "NumericalVector", "Version" -> {14., 0}, "ID" -> 
                    787979534263831810|>], "EMIterations" -> 1|> -> <||>|>, 
                    TypeSystem`Assoc[
                    
                    TypeSystem`Struct[{
                    "Value", "Options", "NaiveImputer", "EMIterations"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Struct[{"Value"}, {
                    TypeSystem`Atom[String]}], 2], TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer]}], 
                    TypeSystem`Assoc[
                    TypeSystem`UnknownType, TypeSystem`UnknownType, 
                    TypeSystem`AnyLength], 1], <||>], "BestModelInformation" -> 
                    Dataset[<|
                    "Configuration" -> {
                    "Multinormal", "CovarianceType" -> "Full", 
                    "IntrinsicDimension" -> "Heuristic"}, "ModelUtility" -> 
                    Missing[]|>, 
                    TypeSystem`Struct[{"Configuration", "ModelUtility"}, {
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[String], TypeSystem`AnyType, 
                    TypeSystem`AnyType}], TypeSystem`UnknownType}], <||>]|>, 
                   "NaiveImputer" -> 
                   MachineLearning`MLProcessor[
                    "ImputeMissing", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> {0.002643573458630255}, 
                    "StandardDeviation" -> {0.997560996044598}, "Method" -> 
                    "NaiveSampler", "VectorLength" -> 1, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Type" -> "NumericalVector", "Version" -> {14., 0}, "ID" -> 
                    787979534263831810|>], "InputDimension" -> 0, 
                   "OutputDimension" -> 1, 
                   "Log" -> <|
                    "Example" -> 
                    MachineLearning`MLDataset[<|
                    "f1" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {4}, 
                    "ID" -> 3637528386836378296|>|>, <|
                    "ExampleNumber" -> 1, "ExampleWeights" -> 1, 
                    "LogDensityRatios" -> 0, "RawExample" -> False|>], 
                    "TrainingTime" -> 0.052935, "MaxTrainingMemory" -> 184344,
                     "DataMemory" -> 1872, "FunctionMemory" -> 38648, 
                    "LanguageVersion" -> {14., 0}, "Date" -> 
                    DateObject[{
                    2024, 7, 17, 17, 41, 53.005029`8.476892051160242}, 
                    "Instant", "Gregorian", -4.], "ProcessorCount" -> 4, 
                    "ProcessorType" -> "x86-64", "OperatingSystem" -> 
                    "MacOSX", "SystemWordLength" -> 64, "Evaluations" -> {}|>,
                    "LogPDFDistribution" -> 
                   MachineLearning`TailedQuantileDistribution[<|
                    "Quantiles" -> {-2.7600695574620775`, \
-2.7600695574620775`, -1.4451024185321373`, -1.3768509532247681`, \
-1.2353512664044353`, -1.157337999209882, -1.1475569503411294`, \
-1.119329771018423, -1.0763201585123596`, -1.0752975699647624`, \
-1.0483487241522298`}, "LeftBoundary" -> -1.4451024185321373`, "LeftScale" -> 
                    0.6574835694649701, "LeftTailNorm" -> 0.2|>], "Entropy" -> 
                   Around[1.3441565368822206`, 0.16273805245276252`], 
                   "EntropySampleSize" -> 10|>], 
                "Output" -> <|
                 "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                "EvaluationStrategy" -> "ModeFinding", "Version" -> {14., 0}, 
                "ID" -> 4270897793735380344|>], 
              MachineLearning`MLProcessor[
              "ToVector", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                "Output" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Version" -> {14., 0}, "ID" -> 2344087184081217960|>], 
              MachineLearning`MLProcessor[
              "Standardize", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Mean" -> {2.5}, "StandardDeviation" -> {1.118033988749895}, 
                "Output" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Version" -> {14., 0}, "ID" -> 2994853854525481099|>]}, 
            "Invertibility" -> "Perfect", "StructurePreserving" -> True, 
            "Missing" -> "Imputed"|>]|>, 
       "Output" -> <|
        "Preprocessor" -> 
         MachineLearning`MLProcessor[
          "ToMLDataset", <|
           "Input" -> <|"f1" -> <|"Type" -> "Numerical"|>|>, 
            "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
            "Preprocessor" -> 
            MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
                 MachineLearning`MLProcessor["List"], 
                 MachineLearning`MLProcessor[
                 "WrapMLDataset", <|
                  "FeatureTypes" -> {"Numerical"}, "FeatureKeys" -> {"f1"}, 
                   "FeatureWeights" -> Automatic, "ExampleWeights" -> 
                   Automatic, "RawExample" -> 
                   Missing["KeyAbsent", "RawExample"], "StructurePreserving" -> 
                   False|>]}|>], "ScalarFeature" -> True, "Invertibility" -> 
            "Perfect", "StructurePreserving" -> False, "Missing" -> 
            "Allowed"|>], "Processor" -> 
         MachineLearning`MLProcessor[
          "Sequence", <|
           "Input" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
            "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
            "Processors" -> {
              MachineLearning`MLProcessor[
              "ToVector", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                "Output" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Version" -> {14., 0}, "ID" -> 8402677316518108578|>], 
              MachineLearning`MLProcessor[
              "Standardize", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Mean" -> {2.5}, "StandardDeviation" -> {1.118033988749895}, 
                "Output" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Version" -> {14., 0}, "ID" -> 5451795065252059807|>], 
              MachineLearning`MLProcessor[
              "FromVector", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Output" -> <|
                 "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                "Version" -> {14., 0}, "ID" -> 3893065336475588220|>], 
              MachineLearning`MLProcessor[
              "FirstValues", <|
               "Info" -> <|"Type" -> "Numerical", "Weight" -> 1|>, "Key" -> 
                "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> 
                False, "Missing" -> "Allowed"|>]}, "Invertibility" -> 
            "Perfect", "StructurePreserving" -> False, "Missing" -> 
            "Allowed"|>], "ProbabilityPostprocessor" -> Identity, 
         "InverseProcessorFunction" -> (2.5 + 1.118033988749895 #& ), 
         "ProcessorFunction" -> (-2.23606797749979 + 0.8944271909999159 #& ), 
         "Name" -> "value", 
         "Quantiles" -> {-1.3416407864998738`, 1.3416407864998738`}, "Mean" -> 
         2.5|>, "LabelSplitter" -> 
       MachineLearning`MLProcessor[
        "FeatureLabelSplit", <|
         "Processor" -> MachineLearning`MLProcessor["RuleSplit"], 
          "PreferLabeled" -> True, "KeepLabelsFormat" -> False|>], 
       "RecalibrationFunction" -> None, "ImputationStrategy" -> Automatic, 
       "Prior" -> Automatic, "Utility" -> (DiracDelta[#2 - #]& ), "Threshold" -> 
       0, "PerformanceGoal" -> "DirectTraining", "BatchProcessing" -> 
       Automatic, 
       "Model" -> <|
        "MeanFunction" -> 
         LinearLayer[<|
           "Type" -> "Linear", 
            "Arrays" -> <|
             "Weights" -> RawArray["Real32",{{1.}}], "Biases" -> 
              RawArray["Real32",{-3.828254951818963*^-25}]|>, 
            "Parameters" -> <|
             "OutputDimensions" -> {1}, "$OutputSize" -> 1, "$InputSize" -> 1,
               "$InputDimensions" -> {1}|>, 
            "Inputs" -> <|
             "Input" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`AtomT]|>, 
            "Outputs" -> <|
             "Output" -> 
              NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]|>|>, <|
           "Version" -> "14.0.2", "Unstable" -> False|>], 
         "DistributionData" -> {NormalDistribution, 0.0003321775653277312}, 
         "Processor" -> 
         MachineLearning`MLProcessor[
          "Sequence", <|
           "Input" -> <|
             "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
            "Output" -> <|
             "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
            "Processors" -> {
              MachineLearning`MLProcessor[
              "Standardize", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Mean" -> {-0.002251717730228156}, 
                "StandardDeviation" -> {1.0049488949624505`}, 
                "Output" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Version" -> {14., 0}, "ID" -> 2249444823268621028|>], 
              MachineLearning`MLProcessor[
              "FirstValues", <|
               "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, 
                "Key" -> "f1", "Invertibility" -> "Perfect", 
                "StructurePreserving" -> False, "Missing" -> "Allowed"|>]}, 
            "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
            "Missing" -> "Allowed"|>], "Calibrator" -> None, "Method" -> 
         Missing[], "PostProcessor" -> 
         MachineLearning`MLProcessor["Identity"], 
         "Options" -> <|
          "L1Regularization" -> <|"Value" -> 0, "Options" -> <||>|>, 
           "L2Regularization" -> <|"Value" -> 0, "Options" -> <||>|>, 
           "OptimizationMethod" -> <|
            "Value" -> "NormalEquation", "Options" -> <||>|>, 
           MaxIterations -> <|"Value" -> 30, "Options" -> <||>|>|>|>, 
       "TrainingInformation" -> <|
        "Configurations" -> 
         Dataset[<|<|
             "Value" -> "LinearRegression", 
              "Options" -> <|
               "L1Regularization" -> <|"Value" -> 0|>, 
                "L2Regularization" -> <|"Value" -> 0|>, 
                "OptimizationMethod" -> <|"Value" -> Automatic|>, 
                MaxIterations -> <|"Value" -> 30|>|>, "NaiveImputer" -> 
              Missing["KeyAbsent", "NaiveImputer"], "EMIterations" -> 
              Missing["KeyAbsent", "EMIterations"]|> -> <||>|>, 
           TypeSystem`Assoc[
            
            TypeSystem`Struct[{
             "Value", "Options", "NaiveImputer", "EMIterations"}, {
              TypeSystem`Atom[String], 
              TypeSystem`Assoc[TypeSystem`AnyType, 
               TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 4], 
              TypeSystem`UnknownType, TypeSystem`UnknownType}], 
            TypeSystem`Assoc[
            TypeSystem`UnknownType, TypeSystem`UnknownType, 
             TypeSystem`AnyLength], 1], <||>], "BestModelInformation" -> 
         Dataset[<|
           "Configuration" -> {
             "LinearRegression", "L1Regularization" -> 0, "L2Regularization" -> 
              0, "OptimizationMethod" -> Automatic, MaxIterations -> 30}, 
            "ModelUtility" -> Missing[]|>, 
           TypeSystem`Struct[{"Configuration", "ModelUtility"}, {
             TypeSystem`Tuple[{
               TypeSystem`Atom[String], TypeSystem`AnyType, 
               TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType}], 
             TypeSystem`UnknownType}], <||>], "InputDimension" -> 1, 
         "OutputDimension" -> 1|>, "AnomalyDetector" -> None, 
       "Log" -> <|
        "Example" -> 
         MachineLearning`MLDataset[<|
           "f1" -> <|
             "Type" -> "Numerical", "Weight" -> 1, "Values" -> {4}, "ID" -> 
              1712230442995451803|>|>, <|
           "ExampleNumber" -> 1, "ExampleWeights" -> 1, "LogDensityRatios" -> 
            0, "RawExample" -> False|>], "TrainingTime" -> 0.09785, 
         "MaxTrainingMemory" -> 281768, "DataMemory" -> 392, "FunctionMemory" -> 
         111160, "LanguageVersion" -> {14., 0}, "Date" -> 
         DateObject[{2024, 7, 17, 17, 41, 53.047021`8.477235974636255}, 
           "Instant", "Gregorian", -4.], "ProcessorCount" -> 4, 
         "ProcessorType" -> "x86-64", "OperatingSystem" -> "MacOSX", 
         "SystemWordLength" -> 64, "Evaluations" -> {}|>|>], 
    "TestSet" -> <|"Input" -> {
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[]}, "Output" -> {2.58, 2.94, 3.98, 5.15, 6.12, 7.28}|>, 
    "Predictions" -> {2.53, 2.53, 4.07, 5.09, 6.14, 7.21}, "Distributions" -> {
      Missing[], 
      Missing[], 
      Missing[], 
      Missing[], 
      Missing[], 
      Missing[]}, "Modes" -> {2.53, 2.53, 4.07, 5.09, 6.14, 7.21}, "Weights" -> 
    SparseArray[Automatic, {6}, 1., {1, {{0, 0}, {}}, {}}], 
    "BatchEvaluationTime" -> Missing[], "SingleEvaluationTime" -> Missing[], 
    "Version" -> {14., 0}|>]]], "Output",
 CellChangeTimes->{{3.9302410482448473`*^9, 3.9302410761394787`*^9}, 
   3.930241313398191*^9},
 CellLabel->
  "Out[398]=",ExpressionUUID->"5a6b7d40-7cfb-4fed-b095-9f89aed51998"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pred", "=", 
      RowBox[{"Flatten", "@", 
       RowBox[{"ParallelMap", "[", 
        RowBox[{"ot", ",", 
         RowBox[{"vescSameVol", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"obs", " ", "=", " ", 
      RowBox[{"vescSameVol", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PredictorMeasurements", "[", 
    RowBox[{"pred", ",", "obs"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.93024108890836*^9, 3.930241092567573*^9}},
 CellLabel->
  "In[399]:=",ExpressionUUID->"7a29fbf3-9158-4cfa-9d16-3f736a0a030e"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   StyleBox[
    FrameBox[GridBox[{
       {
        ItemBox[
         FrameBox[
          StyleBox["\<\"Predictor Measurements\"\>", "SuggestionsBarText",
           StripOnInput->False,
           FontSize->12],
          FrameMargins->{{10, 5}, {-4, 2}},
          FrameStyle->None,
          StripOnInput->False],
         Alignment->{Left, Bottom},
         Background->RGBColor[0.96, 0.96, 0.96],
         Frame->{{False, False}, {True, False}},
         FrameStyle->Opacity[0.1],
         ItemSize->{Automatic, 1},
         StripOnInput->False]},
       {
        ItemBox[
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Number of test examples"], 
                   TextCell["Number of test examples"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], "6"},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Standard deviation"], 
                   TextCell["Standard deviation"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 TemplateBox[{"0.069282032302755342`3.", 
                   StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0176821150190555818`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                  "RowDefault"],
                 
                 TemplateBox[{
                  "\"95% confidence interval: [\"", 
                   "0.0339178022646441785`3.", "\", \"", 
                   "0.1046462623408665055`3.", "\"]\""}, "RowDefault"],
                 TooltipStyle->{}],
                Annotation[#, 
                 
                 Row[{"95% confidence interval: [", 0.0339178022646441785`3., 
                   ", ", 0.1046462623408665055`3., "]"}], "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  TagBox[
                   TooltipBox[
                    InterpretationBox[
                    Cell["Standard deviation baseline"], 
                    TextCell["Standard deviation baseline"]], 
                    "\"Standard deviation of testset values\"", TooltipStyle -> 
                    "TextStyling"], 
                   Annotation[#, "Standard deviation of testset values", 
                    "Tooltip"]& ], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 TemplateBox[{"1.6035238971991931933`3.", 
                   StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.2739304204027700473`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                  "RowDefault"],
                 
                 TemplateBox[{
                  "\"95% confidence interval: [\"", 
                   "1.0556630563936530987`3.", "\", \"", 
                   "2.151384738004733066`3.", "\"]\""}, "RowDefault"],
                 TooltipStyle->{}],
                Annotation[#, 
                 
                 Row[{"95% confidence interval: [", 1.0556630563936530987`3., 
                   ", ", 2.151384738004733066`3., "]"}], "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["R-squared"], 
                   TextCell["R-squared"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 TemplateBox[{"0.9981332319286480015`3.", 
                   StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0011574007836546163`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                  "RowDefault"],
                 
                 TemplateBox[{
                  "\"95% confidence interval: [\"", 
                   "0.9958184303613387689`3.", "\", \"", 
                   "1.0004480334959571231`3.", "\"]\""}, "RowDefault"],
                 TooltipStyle->{}],
                Annotation[#, 
                 
                 Row[{"95% confidence interval: [", 0.9958184303613387689`3., 
                   ", ", 1.0004480334959571231`3., "]"}], "Tooltip"]& ]},
              {
               ItemBox[
                GraphicsBox[{{{}, {
                    TagBox[
                    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
                    0.012833333333333334`], AbsoluteThickness[2], 
                    GeometricTransformationBox[InsetBox[
                    FormBox[
                    StyleBox[
                    GraphicsBox[
                    {RGBColor[0.34398, 0.49112, 0.89936], AbsoluteThickness[
                    1.], CircleBox[{0, 0}, Offset[{1.8, 1.8}, {0., 0.}]]}],
                    StripOnInput->False,
                    GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]]}],
                    TraditionalForm], {0., 0.}], {{{2.61, 2.61}}, {{3.06, 
                    3.07}}, {{4.08, 4.05}}, {{5.09, 5.2}}, {{6.06, 6.17}}, {{
                    7.12, 7.06}}}]},
                    Annotation[#, "Charting`Private`Tag#1"]& ], {
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{2.61, 2.61}}]},
                    RowBox[{"{", 
                    RowBox[{"2.61`", ",", "2.61`"}], "}"}]],
                    Annotation[#, {2.61, 2.61}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{3.06, 3.07}}]},
                    RowBox[{"{", 
                    RowBox[{"3.06`", ",", "3.07`"}], "}"}]],
                    Annotation[#, {3.06, 3.07}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{4.08, 4.05}}]},
                    RowBox[{"{", 
                    RowBox[{"4.08`", ",", "4.05`"}], "}"}]],
                    Annotation[#, {4.08, 4.05}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.09, 5.2}}]},
                    RowBox[{"{", 
                    RowBox[{"5.09`", ",", "5.2`"}], "}"}]],
                    Annotation[#, {5.09, 5.2}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.06, 6.17}}]},
                    RowBox[{"{", 
                    RowBox[{"6.06`", ",", "6.17`"}], "}"}]],
                    Annotation[#, {6.06, 6.17}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{7.12, 7.06}}]},
                    RowBox[{"{", 
                    RowBox[{"7.12`", ",", "7.06`"}], "}"}]],
                    Annotation[#, {7.12, 7.06}, "Tooltip"]& ]}}, {{}, {}}}, 
                  InterpretationBox[{
                    TagBox[{{{}, {}, 
                    TagBox[
                    {GrayLevel[0.2], AbsoluteThickness[1.], Opacity[0.5], 
                    AbsoluteDashing[{2, 4}], LineBox[CompressedData["
1:eJxFxW0wE3AcAOA1q5mhRJvZmtSSlNMRITVanTkxs9ptTWPYLNppncsh1gu6
Wqcc6TZ3Ohdula6zeZksJ7ol8cW5tkVXnaW2nJwrpdqt+tD/9+G5JySvJEuK
xWAw6X/9uyaUMF7q75H0/8nEVW4TCSbxHDYDBdapXjiWg+EJ61WCcjccoPZK
VRyBO74Qx6RlsNnoa+bPwCbjpXnPHhyaXjNpE1evRQs7QwZNh9eh2bH2YScV
j77bUKUx2WH9idpm8ZAnWlvRfNGziYBelFYz+SIv9MrQdEhpNBFdNLfGEuOC
+8VxFe4Rb/RAyptkjcYHHfpbMPtK4otm01kt9oT16LY0KsOF34CeVmDswmL4
vZnWR7fA7bXtyt79fujkynxmjw5Oo+3A9ftvRBO38fXqMrgj13R2bA7+5lFP
s7D90d1ZBU8cD+AUq/JMATkA3Tjq9O6uhAc+aAeln+CjBo6EztuEvjVfsqTr
g42ZzxtatpLQDVuu0XKvwJYWbmuYE/6enhklPE5GT0ofPxINwFU9IqZ5eyB6
Ti43YtVw71h5GGsRluSM3P8spKBHRedIsiHYXS9pYu8KQusUXEJkM4zXdxV+
XIWTIphWvIyKjvQ9EPVzHFZrmZeXImjopyfL5zM08MM6erTKBQ/fcd446Ian
jH0LLsxm9A9nRud5HHyIo6JUEGEr+Z27lALj7rVNFMXA5BHFzvB9cPhMfJ0j
Dub4TDHlibBWiTVIWfCehHxNLhdm8SJXgnkw//SvrLfH4MrWRm+xADZjn6lE
ObCNenM2SAIv7M2Of50H+xV+XRbIYMaFYU6gHI7VXO+ynIJT9QLC7WI4+yVD
xlfAfwAHTvim
                    "]]},
                    Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
                    {
                    "WolframDynamicHighlight", <|
                    "Label" -> {"XYLabel"}, 
                    "Ball" -> {"InterpolatedBall"}|>}], 
                    StyleBox[
                    
                    DynamicBox[(Charting`HighlightActionBox[
                    "DynamicHighlight", {}, 
                    Slot["HighlightElements"], 
                    Slot["LayoutOptions"], 
                    Slot["Meta"], 
                    Charting`HighlightActionFunction[
                    "DynamicHighlight", {{{{}, {}, 
                    Annotation[{
                    Directive[
                    GrayLevel[0.2], 
                    Opacity[0.5], 
                    AbsoluteThickness[1.], 
                    AbsoluteDashing[{2, 4}]], 
                    Line[CompressedData["
1:eJxFxW0wE3AcAOA1q5mhRJvZmtSSlNMRITVanTkxs9ptTWPYLNppncsh1gu6
Wqcc6TZ3Ohdula6zeZksJ7ol8cW5tkVXnaW2nJwrpdqt+tD/9+G5JySvJEuK
xWAw6X/9uyaUMF7q75H0/8nEVW4TCSbxHDYDBdapXjiWg+EJ61WCcjccoPZK
VRyBO74Qx6RlsNnoa+bPwCbjpXnPHhyaXjNpE1evRQs7QwZNh9eh2bH2YScV
j77bUKUx2WH9idpm8ZAnWlvRfNGziYBelFYz+SIv9MrQdEhpNBFdNLfGEuOC
+8VxFe4Rb/RAyptkjcYHHfpbMPtK4otm01kt9oT16LY0KsOF34CeVmDswmL4
vZnWR7fA7bXtyt79fujkynxmjw5Oo+3A9ftvRBO38fXqMrgj13R2bA7+5lFP
s7D90d1ZBU8cD+AUq/JMATkA3Tjq9O6uhAc+aAeln+CjBo6EztuEvjVfsqTr
g42ZzxtatpLQDVuu0XKvwJYWbmuYE/6enhklPE5GT0ofPxINwFU9IqZ5eyB6
Ti43YtVw71h5GGsRluSM3P8spKBHRedIsiHYXS9pYu8KQusUXEJkM4zXdxV+
XIWTIphWvIyKjvQ9EPVzHFZrmZeXImjopyfL5zM08MM6erTKBQ/fcd446Ian
jH0LLsxm9A9nRud5HHyIo6JUEGEr+Z27lALj7rVNFMXA5BHFzvB9cPhMfJ0j
Dub4TDHlibBWiTVIWfCehHxNLhdm8SJXgnkw//SvrLfH4MrWRm+xADZjn6lE
ObCNenM2SAIv7M2Of50H+xV+XRbIYMaFYU6gHI7VXO+ynIJT9QLC7WI4+yVD
xlfAfwAHTvim
                    "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
                    "HighlightElements" -> <|
                    "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
                    "LayoutOptions" -> <|
                    "PanelPlotLayout" -> <||>, 
                    "PlotRange" -> {{2.3845, 7.356775}, {2.384500101475, 
                    7.356774898525}}, 
                    "Frame" -> {{False, False}, {False, False}}, 
                    "AxesOrigin" -> {2.3845000000000054`, 
                    2.3845001014750054`}, 
                    "ImageSize" -> {360, 360/GoldenRatio}, 
                    "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
                    GoldenRatio^(-1), "DefaultStyle" -> {
                    Directive[
                    GrayLevel[0.2], 
                    Opacity[0.5], 
                    AbsoluteThickness[1.], 
                    AbsoluteDashing[{2, 4}]]}, 
                    "HighlightLabelingFunctions" -> <|
                    "CoordinatesToolOptions" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), 
                    "ScalingFunctions" -> {{Identity, Identity}, {
                    Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
                    False|>, 
                    "Meta" -> <|
                    "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
                    "Function" -> Plot, "GroupHighlight" -> False|>|>]]& )[<|
                    "HighlightElements" -> <|
                    "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
                    "LayoutOptions" -> <|
                    "PanelPlotLayout" -> <||>, 
                    "PlotRange" -> {{2.3845, 7.356775}, {2.384500101475, 
                    7.356774898525}}, 
                    "Frame" -> {{False, False}, {False, False}}, 
                    "AxesOrigin" -> {2.3845000000000054`, 
                    2.3845001014750054`}, 
                    "ImageSize" -> {360, 360/GoldenRatio}, 
                    "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
                    GoldenRatio^(-1), "DefaultStyle" -> {
                    Directive[
                    GrayLevel[0.2], 
                    Opacity[0.5], 
                    AbsoluteThickness[1.], 
                    AbsoluteDashing[{2, 4}]]}, 
                    "HighlightLabelingFunctions" -> <|
                    "CoordinatesToolOptions" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), 
                    "ScalingFunctions" -> {{Identity, Identity}, {
                    Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
                    False|>, 
                    "Meta" -> <|
                    "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
                    "Function" -> Plot, "GroupHighlight" -> False|>|>],
                    
                    ImageSizeCache->{{
                    4.503599627370496*^15, -4.503599627370496*^15}, {
                    4.503599627370496*^15, -4.503599627370496*^15}}],
                    Selectable->False]},
                   Annotation[{{{{}, {}, 
                    Annotation[{
                    Directive[
                    GrayLevel[0.2], 
                    Opacity[0.5], 
                    AbsoluteThickness[1.], 
                    AbsoluteDashing[{2, 4}]], 
                    Line[CompressedData["
1:eJxFxW0wE3AcAOA1q5mhRJvZmtSSlNMRITVanTkxs9ptTWPYLNppncsh1gu6
Wqcc6TZ3Ohdula6zeZksJ7ol8cW5tkVXnaW2nJwrpdqt+tD/9+G5JySvJEuK
xWAw6X/9uyaUMF7q75H0/8nEVW4TCSbxHDYDBdapXjiWg+EJ61WCcjccoPZK
VRyBO74Qx6RlsNnoa+bPwCbjpXnPHhyaXjNpE1evRQs7QwZNh9eh2bH2YScV
j77bUKUx2WH9idpm8ZAnWlvRfNGziYBelFYz+SIv9MrQdEhpNBFdNLfGEuOC
+8VxFe4Rb/RAyptkjcYHHfpbMPtK4otm01kt9oT16LY0KsOF34CeVmDswmL4
vZnWR7fA7bXtyt79fujkynxmjw5Oo+3A9ftvRBO38fXqMrgj13R2bA7+5lFP
s7D90d1ZBU8cD+AUq/JMATkA3Tjq9O6uhAc+aAeln+CjBo6EztuEvjVfsqTr
g42ZzxtatpLQDVuu0XKvwJYWbmuYE/6enhklPE5GT0ofPxINwFU9IqZ5eyB6
Ti43YtVw71h5GGsRluSM3P8spKBHRedIsiHYXS9pYu8KQusUXEJkM4zXdxV+
XIWTIphWvIyKjvQ9EPVzHFZrmZeXImjopyfL5zM08MM6erTKBQ/fcd446Ian
jH0LLsxm9A9nRud5HHyIo6JUEGEr+Z27lALj7rVNFMXA5BHFzvB9cPhMfJ0j
Dub4TDHlibBWiTVIWfCehHxNLhdm8SJXgnkw//SvrLfH4MrWRm+xADZjn6lE
ObCNenM2SAIv7M2Of50H+xV+XRbIYMaFYU6gHI7VXO+ynIJT9QLC7WI4+yVD
xlfAfwAHTvim
                    "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
                    "HighlightElements" -> <|
                    "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
                    "LayoutOptions" -> <|
                    "PanelPlotLayout" -> <||>, 
                    "PlotRange" -> {{2.3845, 7.356775}, {2.384500101475, 
                    7.356774898525}}, 
                    "Frame" -> {{False, False}, {False, False}}, 
                    "AxesOrigin" -> {2.3845000000000054`, 
                    2.3845001014750054`}, 
                    "ImageSize" -> {360, 360/GoldenRatio}, 
                    "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
                    GoldenRatio^(-1), "DefaultStyle" -> {
                    Directive[
                    GrayLevel[0.2], 
                    Opacity[0.5], 
                    AbsoluteThickness[1.], 
                    AbsoluteDashing[{2, 4}]]}, 
                    "HighlightLabelingFunctions" -> <|
                    "CoordinatesToolOptions" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), 
                    "ScalingFunctions" -> {{Identity, Identity}, {
                    Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
                    False|>, 
                    "Meta" -> <|
                    "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
                    "Function" -> Plot, "GroupHighlight" -> False|>|>, 
                    "DynamicHighlight"]]},
                 Axes->{False, False},
                 AxesLabel->{None, None},
                 AxesOrigin->{2.3845000000000054`, 2.3845000000000054`},
                 DisplayFunction->Identity,
                 Frame->{{True, False}, {True, False}},
                 FrameLabel->{{
                    FormBox[
                    TagBox["\"actual value\"", HoldForm], TraditionalForm], 
                    None}, {
                    FormBox[
                    TagBox["\"predicted value\"", HoldForm], TraditionalForm],
                     None}},
                 FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
                 
                 GridLines->{Automatic, Automatic},
                 GridLinesStyle->Directive[
                   GrayLevel[0.5, 0.5], 
                   AbsoluteThickness[1], 
                   AbsoluteDashing[{1, 2}]],
                 ImageSize->250,
                 Method->{
                  "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                   Automatic, 
                   "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                   "DefaultMeshStyle" -> AbsolutePointSize[6], 
                   "DefaultPlotStyle" -> {
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[2]], 
                    Directive[
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
                   "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
                   Scaled[0.05], "OptimizePlotMarkers" -> True, 
                   "IncludeHighlighting" -> "CurrentPoint", "HighlightStyle" -> 
                   Automatic, "OptimizePlotMarkers" -> True, 
                   "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}},
                 PlotRange->{{2.3845, 7.356775}, {2.3845, 7.356775}},
                 PlotRangeClipping->True,
                 PlotRangePadding->{{0, 0}, {0, 0}},
                 Ticks->{Automatic, Automatic}],
                Alignment->Center,
                StripOnInput->False], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             ColumnsEqual->False,
             
             GridBoxAlignment->{
              "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
             GridBoxDividers->{"Columns" -> {False, {
                  Opacity[0.15]}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {Automatic, {Automatic}}, "Rows" -> {{1.}}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], 
                 Offset[1.1199999999999999`], {
                  Offset[1.75]}, 
                 Offset[0.27999999999999997`]}, "Rows" -> {
                 Offset[0.2], {
                  Offset[0.8]}, 
                 Offset[0.2]}}],
            "Grid"],
           FrameMargins->{{10, 10}, {10, 5}},
           FrameStyle->None,
           StripOnInput->False],
          Deploy,
          DefaultBaseStyle->"Deploy"],
         Alignment->Center,
         BaseStyle->{
          FontWeight -> "Light", FontSize -> 11, FontFamily -> 
           ".AppleSystemUIFont", NumberMarks -> False, Deployed -> False},
         StripOnInput->False]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], 
          Offset[0.8], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[0.85],
     RoundingRadius->5,
     StripOnInput->False],
    StripOnInput->False,
    LineBreakWithin->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  PredictorMeasurementsObject[<|
   "Model" -> PredictorFunction[<|
      "ExampleNumber" -> 4, 
       "Input" -> <|
        "Preprocessor" -> 
         MachineLearning`MLProcessor[
          "ToMLDataset", <|
           "Input" -> <|"f1" -> <|"Type" -> "Numerical"|>|>, 
            "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
            "Preprocessor" -> 
            MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
                 MachineLearning`MLProcessor["List"], 
                 MachineLearning`MLProcessor[
                 "WrapMLDataset", <|
                  "FeatureTypes" -> {"Numerical"}, "FeatureKeys" -> {"f1"}, 
                   "FeatureWeights" -> Automatic, "ExampleWeights" -> 
                   Automatic, "RawExample" -> 
                   Missing["KeyAbsent", "RawExample"], "StructurePreserving" -> 
                   False|>]}|>], "ScalarFeature" -> True, "Invertibility" -> 
            "Perfect", "StructurePreserving" -> False, "Missing" -> 
            "Allowed"|>], "Processor" -> 
         MachineLearning`MLProcessor[
          "Sequence", <|
           "Input" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
            "Output" -> <|
             "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
            "Processors" -> {
              MachineLearning`MLProcessor[
              "SynthesizeMissingValues", <|
               "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                "Distribution" -> 
                LearnedDistribution[<|
                  "ExampleNumber" -> 4, "Preprocessor" -> 
                   MachineLearning`MLProcessor[
                    "ToMLDataset", <|
                    "Input" -> <|"f1" -> <|"Type" -> "Numerical"|>|>, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                    "Preprocessor" -> MachineLearning`MLProcessor["Identity"],
                     "ScalarFeature" -> True, "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
                    "Processor" -> 
                   MachineLearning`MLProcessor[
                    "Sequence", <|
                    "Input" -> <|
                    "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Processors" -> {
                    MachineLearning`MLProcessor[
                    "ToVector", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Version" -> {14., 0}, "ID" -> 4463274533565020503|>], 
                    MachineLearning`MLProcessor[
                    "Standardize", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> {2.5}, 
                    "StandardDeviation" -> {1.118033988749895}, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Version" -> {14., 0}, "ID" -> 2523344124640608097|>]}, 
                    "Invertibility" -> "Perfect", "StructurePreserving" -> 
                    True, "Missing" -> "Allowed"|>], "PerformanceGoal" -> 
                   "DirectTraining", "BatchProcessing" -> Automatic, 
                   "Model" -> <|
                    "RotationMatrix" -> {{1.}}, 
                    "Precisions" -> {1.0048959123451486`}, "NoisePrecision" -> 
                    None, "Processor" -> 
                    MachineLearning`MLProcessor[
                    "Center", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> {0.002643573458630255}, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Version" -> {14., 0}, "ID" -> 2408014394271495081|>], 
                    "PostProcessor" -> 
                    MachineLearning`MLProcessor[
                    "FirstValues", <|
                    "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, 
                    "Key" -> "f1", "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
                     "Method" -> "Multinormal", 
                    "Options" -> <|
                    "CovarianceType" -> <|
                    "Value" -> "Full", "Options" -> <||>|>, 
                    "IntrinsicDimension" -> <|
                    "Value" -> 1, "Options" -> <||>|>|>|>, 
                   "TrainingInformation" -> <|
                    "Configurations" -> 
                    Dataset[<|<|
                    "Value" -> "Multinormal", 
                    "Options" -> <|
                    "CovarianceType" -> <|"Value" -> "Full"|>, 
                    "IntrinsicDimension" -> <|"Value" -> "Heuristic"|>|>, 
                    "NaiveImputer" -> 
                    MachineLearning`MLProcessor[
                    "ImputeMissing", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> {0.002643573458630255}, 
                    "StandardDeviation" -> {0.997560996044598}, "Method" -> 
                    "NaiveSampler", "VectorLength" -> 1, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Type" -> "NumericalVector", "Version" -> {14., 0}, "ID" -> 
                    787979534263831810|>], "EMIterations" -> 1|> -> <||>|>, 
                    TypeSystem`Assoc[
                    
                    TypeSystem`Struct[{
                    "Value", "Options", "NaiveImputer", "EMIterations"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Struct[{"Value"}, {
                    TypeSystem`Atom[String]}], 2], TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer]}], 
                    TypeSystem`Assoc[
                    TypeSystem`UnknownType, TypeSystem`UnknownType, 
                    TypeSystem`AnyLength], 1], <||>], "BestModelInformation" -> 
                    Dataset[<|
                    "Configuration" -> {
                    "Multinormal", "CovarianceType" -> "Full", 
                    "IntrinsicDimension" -> "Heuristic"}, "ModelUtility" -> 
                    Missing[]|>, 
                    TypeSystem`Struct[{"Configuration", "ModelUtility"}, {
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[String], TypeSystem`AnyType, 
                    TypeSystem`AnyType}], TypeSystem`UnknownType}], <||>]|>, 
                   "NaiveImputer" -> 
                   MachineLearning`MLProcessor[
                    "ImputeMissing", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> {0.002643573458630255}, 
                    "StandardDeviation" -> {0.997560996044598}, "Method" -> 
                    "NaiveSampler", "VectorLength" -> 1, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Type" -> "NumericalVector", "Version" -> {14., 0}, "ID" -> 
                    787979534263831810|>], "InputDimension" -> 0, 
                   "OutputDimension" -> 1, 
                   "Log" -> <|
                    "Example" -> 
                    MachineLearning`MLDataset[<|
                    "f1" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {4}, 
                    "ID" -> 3637528386836378296|>|>, <|
                    "ExampleNumber" -> 1, "ExampleWeights" -> 1, 
                    "LogDensityRatios" -> 0, "RawExample" -> False|>], 
                    "TrainingTime" -> 0.05384, "MaxTrainingMemory" -> 184288, 
                    "DataMemory" -> 1872, "FunctionMemory" -> 38648, 
                    "LanguageVersion" -> {14., 0}, "Date" -> 
                    DateObject[{
                    2024, 7, 17, 17, 41, 56.593554`8.505341941793958}, 
                    "Instant", "Gregorian", -4.], "ProcessorCount" -> 4, 
                    "ProcessorType" -> "x86-64", "OperatingSystem" -> 
                    "MacOSX", "SystemWordLength" -> 64, "Evaluations" -> {}|>,
                    "LogPDFDistribution" -> 
                   MachineLearning`TailedQuantileDistribution[<|
                    "Quantiles" -> {-2.7600695574620775`, \
-2.7600695574620775`, -1.4451024185321373`, -1.3768509532247681`, \
-1.2353512664044353`, -1.157337999209882, -1.1475569503411294`, \
-1.119329771018423, -1.0763201585123596`, -1.0752975699647624`, \
-1.0483487241522298`}, "LeftBoundary" -> -1.4451024185321373`, "LeftScale" -> 
                    0.6574835694649701, "LeftTailNorm" -> 0.2|>], "Entropy" -> 
                   Around[1.3441565368822206`, 0.16273805245276252`], 
                   "EntropySampleSize" -> 10|>], 
                "Output" -> <|
                 "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                "EvaluationStrategy" -> "ModeFinding", "Version" -> {14., 0}, 
                "ID" -> 4270897793735380344|>], 
              MachineLearning`MLProcessor[
              "ToVector", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                "Output" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Version" -> {14., 0}, "ID" -> 2344087184081217960|>], 
              MachineLearning`MLProcessor[
              "Standardize", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Mean" -> {2.5}, "StandardDeviation" -> {1.118033988749895}, 
                "Output" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Version" -> {14., 0}, "ID" -> 2994853854525481099|>]}, 
            "Invertibility" -> "Perfect", "StructurePreserving" -> True, 
            "Missing" -> "Imputed"|>]|>, 
       "Output" -> <|
        "Preprocessor" -> 
         MachineLearning`MLProcessor[
          "ToMLDataset", <|
           "Input" -> <|"f1" -> <|"Type" -> "Numerical"|>|>, 
            "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
            "Preprocessor" -> 
            MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
                 MachineLearning`MLProcessor["List"], 
                 MachineLearning`MLProcessor[
                 "WrapMLDataset", <|
                  "FeatureTypes" -> {"Numerical"}, "FeatureKeys" -> {"f1"}, 
                   "FeatureWeights" -> Automatic, "ExampleWeights" -> 
                   Automatic, "RawExample" -> 
                   Missing["KeyAbsent", "RawExample"], "StructurePreserving" -> 
                   False|>]}|>], "ScalarFeature" -> True, "Invertibility" -> 
            "Perfect", "StructurePreserving" -> False, "Missing" -> 
            "Allowed"|>], "Processor" -> 
         MachineLearning`MLProcessor[
          "Sequence", <|
           "Input" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
            "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
            "Processors" -> {
              MachineLearning`MLProcessor[
              "ToVector", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                "Output" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Version" -> {14., 0}, "ID" -> 8402677316518108578|>], 
              MachineLearning`MLProcessor[
              "Standardize", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Mean" -> {2.5}, "StandardDeviation" -> {1.118033988749895}, 
                "Output" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Version" -> {14., 0}, "ID" -> 5451795065252059807|>], 
              MachineLearning`MLProcessor[
              "FromVector", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Output" -> <|
                 "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                "Version" -> {14., 0}, "ID" -> 3893065336475588220|>], 
              MachineLearning`MLProcessor[
              "FirstValues", <|
               "Info" -> <|"Type" -> "Numerical", "Weight" -> 1|>, "Key" -> 
                "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> 
                False, "Missing" -> "Allowed"|>]}, "Invertibility" -> 
            "Perfect", "StructurePreserving" -> False, "Missing" -> 
            "Allowed"|>], "ProbabilityPostprocessor" -> Identity, 
         "InverseProcessorFunction" -> (2.5 + 1.118033988749895 #& ), 
         "ProcessorFunction" -> (-2.23606797749979 + 0.8944271909999159 #& ), 
         "Name" -> "value", 
         "Quantiles" -> {-1.3416407864998738`, 1.3416407864998738`}, "Mean" -> 
         2.5|>, "LabelSplitter" -> 
       MachineLearning`MLProcessor[
        "FeatureLabelSplit", <|
         "Processor" -> MachineLearning`MLProcessor["RuleSplit"], 
          "PreferLabeled" -> True, "KeepLabelsFormat" -> False|>], 
       "RecalibrationFunction" -> None, "ImputationStrategy" -> Automatic, 
       "Prior" -> Automatic, "Utility" -> (DiracDelta[#2 - #]& ), "Threshold" -> 
       0, "PerformanceGoal" -> "DirectTraining", "BatchProcessing" -> 
       Automatic, 
       "Model" -> <|
        "MeanFunction" -> 
         LinearLayer[<|
           "Type" -> "Linear", 
            "Arrays" -> <|
             "Weights" -> RawArray["Real32",{{1.}}], "Biases" -> 
              RawArray["Real32",{-3.828254951818963*^-25}]|>, 
            "Parameters" -> <|
             "OutputDimensions" -> {1}, "$OutputSize" -> 1, "$InputSize" -> 1,
               "$InputDimensions" -> {1}|>, 
            "Inputs" -> <|
             "Input" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`AtomT]|>, 
            "Outputs" -> <|
             "Output" -> 
              NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]|>|>, <|
           "Version" -> "14.0.2", "Unstable" -> False|>], 
         "DistributionData" -> {NormalDistribution, 0.0003321775653277312}, 
         "Processor" -> 
         MachineLearning`MLProcessor[
          "Sequence", <|
           "Input" -> <|
             "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
            "Output" -> <|
             "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
            "Processors" -> {
              MachineLearning`MLProcessor[
              "Standardize", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Mean" -> {-0.002251717730228156}, 
                "StandardDeviation" -> {1.0049488949624505`}, 
                "Output" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Version" -> {14., 0}, "ID" -> 2249444823268621028|>], 
              MachineLearning`MLProcessor[
              "FirstValues", <|
               "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, 
                "Key" -> "f1", "Invertibility" -> "Perfect", 
                "StructurePreserving" -> False, "Missing" -> "Allowed"|>]}, 
            "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
            "Missing" -> "Allowed"|>], "Calibrator" -> None, "Method" -> 
         Missing[], "PostProcessor" -> 
         MachineLearning`MLProcessor["Identity"], 
         "Options" -> <|
          "L1Regularization" -> <|"Value" -> 0, "Options" -> <||>|>, 
           "L2Regularization" -> <|"Value" -> 0, "Options" -> <||>|>, 
           "OptimizationMethod" -> <|
            "Value" -> "NormalEquation", "Options" -> <||>|>, 
           MaxIterations -> <|"Value" -> 30, "Options" -> <||>|>|>|>, 
       "TrainingInformation" -> <|
        "Configurations" -> 
         Dataset[<|<|
             "Value" -> "LinearRegression", 
              "Options" -> <|
               "L1Regularization" -> <|"Value" -> 0|>, 
                "L2Regularization" -> <|"Value" -> 0|>, 
                "OptimizationMethod" -> <|"Value" -> Automatic|>, 
                MaxIterations -> <|"Value" -> 30|>|>, "NaiveImputer" -> 
              Missing["KeyAbsent", "NaiveImputer"], "EMIterations" -> 
              Missing["KeyAbsent", "EMIterations"]|> -> <||>|>, 
           TypeSystem`Assoc[
            
            TypeSystem`Struct[{
             "Value", "Options", "NaiveImputer", "EMIterations"}, {
              TypeSystem`Atom[String], 
              TypeSystem`Assoc[TypeSystem`AnyType, 
               TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 4], 
              TypeSystem`UnknownType, TypeSystem`UnknownType}], 
            TypeSystem`Assoc[
            TypeSystem`UnknownType, TypeSystem`UnknownType, 
             TypeSystem`AnyLength], 1], <||>], "BestModelInformation" -> 
         Dataset[<|
           "Configuration" -> {
             "LinearRegression", "L1Regularization" -> 0, "L2Regularization" -> 
              0, "OptimizationMethod" -> Automatic, MaxIterations -> 30}, 
            "ModelUtility" -> Missing[]|>, 
           TypeSystem`Struct[{"Configuration", "ModelUtility"}, {
             TypeSystem`Tuple[{
               TypeSystem`Atom[String], TypeSystem`AnyType, 
               TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType}], 
             TypeSystem`UnknownType}], <||>], "InputDimension" -> 1, 
         "OutputDimension" -> 1|>, "AnomalyDetector" -> None, 
       "Log" -> <|
        "Example" -> 
         MachineLearning`MLDataset[<|
           "f1" -> <|
             "Type" -> "Numerical", "Weight" -> 1, "Values" -> {4}, "ID" -> 
              1712230442995451803|>|>, <|
           "ExampleNumber" -> 1, "ExampleWeights" -> 1, "LogDensityRatios" -> 
            0, "RawExample" -> False|>], "TrainingTime" -> 0.098701, 
         "MaxTrainingMemory" -> 281832, "DataMemory" -> 392, "FunctionMemory" -> 
         111160, "LanguageVersion" -> {14., 0}, "Date" -> 
         DateObject[{2024, 7, 17, 17, 41, 56.635452`8.505663344792644}, 
           "Instant", "Gregorian", -4.], "ProcessorCount" -> 4, 
         "ProcessorType" -> "x86-64", "OperatingSystem" -> "MacOSX", 
         "SystemWordLength" -> 64, "Evaluations" -> {}|>|>], 
    "TestSet" -> <|"Input" -> {
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[], 
        Missing[]}, "Output" -> {2.61, 3.07, 4.05, 5.2, 6.17, 7.06}|>, 
    "Predictions" -> {2.61, 3.06, 4.08, 5.09, 6.06, 7.12}, "Distributions" -> {
      Missing[], 
      Missing[], 
      Missing[], 
      Missing[], 
      Missing[], 
      Missing[]}, "Modes" -> {2.61, 3.06, 4.08, 5.09, 6.06, 7.12}, "Weights" -> 
    SparseArray[Automatic, {6}, 1., {1, {{0, 0}, {}}, {}}], 
    "BatchEvaluationTime" -> Missing[], "SingleEvaluationTime" -> Missing[], 
    "Version" -> {14., 0}|>]]], "Output",
 CellChangeTimes->{3.930241094409189*^9, 3.930241316969523*^9},
 CellLabel->
  "Out[399]=",ExpressionUUID->"544e0c2e-b40c-4e4e-8964-f74f663dfd85"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Observation:  ",
  FontWeight->"Bold"],
 "The optimal transport (Earth Mover Distance) predictor is even better than \
nearest neighbors.  We can essentially get everything right with or without \
vesicles or constant volume.  Performance for the lowest pHs (<3) gets bad \
for variable volume, but this is because the spectra are hard to distinguish. \
Performance is perfect for all pHs in the presence of vesicles."
}], "Text",
 CellChangeTimes->{{3.9302411158988323`*^9, 3.93024121338701*^9}, {
  3.9302413530664797`*^9, 3.93024137557055*^9}, {3.9302417810707006`*^9, 
  3.930241807678653*^9}},ExpressionUUID->"e6ee1d78-51a8-4188-95c3-\
ebe11720381a"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{808, 747},
WindowMargins->{{Automatic, 450}, {Automatic, 254}},
SpellingDictionaries->{"CorrectWords"->{
 "Fordham", "Lipinski's", "Schrier", "Norquist", "amphiphiles"}},
FrontEndVersion->"14.0 for Mac OS X x86 (64-bit) (December 12, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"255cb9c0-d508-4dca-873d-ff4f44e06eaf"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 150, 3, 67, "Section",ExpressionUUID->"60323bd3-1594-4dee-9beb-cffb45293032"],
Cell[733, 27, 766, 16, 104, "Text",ExpressionUUID->"9f38764e-3d73-48bc-9721-4d4825bddaaf"],
Cell[1502, 45, 352, 9, 35, "Text",ExpressionUUID->"1540b13d-34f2-4d23-ba88-3c4a0acdcc89"],
Cell[1857, 56, 276, 6, 53, "Item",ExpressionUUID->"82acde01-3de0-4038-8c3f-437146b3569f"],
Cell[2136, 64, 259, 6, 32, "Item",ExpressionUUID->"921707c9-7887-4469-acbd-95aafcb44045"],
Cell[2398, 72, 201, 4, 35, "Text",ExpressionUUID->"bccc13a6-eb80-4bdf-bf53-a432339c9cf9"],
Cell[2602, 78, 360, 8, 53, "Item",ExpressionUUID->"01cd2c21-fa5a-4f4a-bdfd-636468e2098b"],
Cell[2965, 88, 260, 5, 32, "Item",ExpressionUUID->"cff8cbbb-9dc3-4bad-8ec9-18899427fbcb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3262, 98, 156, 3, 67, "Section",ExpressionUUID->"072c0052-866e-40f7-aebf-ffcc8ee53163"],
Cell[CellGroupData[{
Cell[3443, 105, 2872, 64, 325, "Input",ExpressionUUID->"16750c00-72a1-4f18-888d-fc1bca90244a"],
Cell[6318, 171, 242, 5, 34, "Output",ExpressionUUID->"e3bd2abb-5817-40a1-9f08-613d554da42d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[6609, 182, 162, 3, 67, "Section",ExpressionUUID->"1671225f-8c42-4495-9831-c9a828775bbb"],
Cell[CellGroupData[{
Cell[6796, 189, 3440, 82, 346, "Input",ExpressionUUID->"fb36c18d-3a76-4585-b002-179aff0e6917"],
Cell[10239, 273, 16161, 288, 370, "Output",ExpressionUUID->"83cf019c-7f13-450d-b524-0d74875c8699"]
}, Open  ]],
Cell[26415, 564, 249, 5, 35, "Text",ExpressionUUID->"41512e34-af4d-4f1d-bae0-9b37075ae05a"],
Cell[26667, 571, 421, 8, 53, "Item",ExpressionUUID->"0bf0ed1e-5b86-4e30-a809-d46600cb4a88"],
Cell[27091, 581, 363, 8, 53, "Item",ExpressionUUID->"0425a42b-d40c-4819-a280-e22940a7aff8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27491, 594, 255, 4, 67, "Section",ExpressionUUID->"cf0c2d03-5026-49ff-accc-5606d8625b1a"],
Cell[27749, 600, 339, 8, 35, "Text",ExpressionUUID->"30ce9661-f34c-495b-88f4-637b87438f3a"],
Cell[28091, 610, 1220, 35, 136, "Input",ExpressionUUID->"869e95e1-5d4d-4d38-8bbd-7646278a3ad1"],
Cell[CellGroupData[{
Cell[29336, 649, 167, 3, 54, "Subsection",ExpressionUUID->"7c7104f5-6b09-4049-8e20-6638d19130f1"],
Cell[CellGroupData[{
Cell[29528, 656, 726, 14, 73, "Input",ExpressionUUID->"3d32ead7-069f-4887-9c39-789683493322"],
Cell[30257, 672, 39511, 732, 62, "Output",ExpressionUUID->"82943afc-b1c0-4d78-9e67-3af51c67e753"],
Cell[69771, 1406, 63288, 1230, 511, "Output",ExpressionUUID->"2e0961e9-516f-417d-abcd-62577305cb01"],
Cell[133062, 2638, 314, 5, 34, "Output",ExpressionUUID->"8d1941ab-791c-4c96-b859-7c10030bd5fa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[133413, 2648, 437, 8, 52, "Input",ExpressionUUID->"99d0669b-ad7b-42ce-b334-19759648c19a"],
Cell[133853, 2658, 63162, 1229, 511, "Output",ExpressionUUID->"1d0caa56-e31e-4a26-bcf9-9e1b658053a0"],
Cell[197018, 3889, 244, 4, 34, "Output",ExpressionUUID->"0c975455-1ae8-4119-afd9-115fb8a668ea"]
}, Open  ]],
Cell[197277, 3896, 418, 9, 58, "Text",ExpressionUUID->"6f281de6-1c4d-4e3d-8ba5-931f599bd34f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[197732, 3910, 176, 3, 54, "Subsection",ExpressionUUID->"1803d7d1-a605-4725-acfb-b28e74ea9597"],
Cell[197911, 3915, 194, 3, 35, "Text",ExpressionUUID->"55eafebb-38a9-4ec4-b04d-7aeeb75a285f"],
Cell[CellGroupData[{
Cell[198130, 3922, 321, 7, 30, "Input",ExpressionUUID->"9866a7d8-3fe2-44f4-960b-a8ca7c7e4b0a"],
Cell[198454, 3931, 13980, 275, 61, "Output",ExpressionUUID->"4a8a7f75-9348-4e76-97c5-42840b3be4d5"]
}, Open  ]],
Cell[212449, 4209, 281, 4, 35, "Text",ExpressionUUID->"80ed21d5-ad72-4e9c-97de-775e7026163d"],
Cell[CellGroupData[{
Cell[212755, 4217, 1075, 26, 94, "Input",ExpressionUUID->"912eb1c9-abff-4725-a19d-940aa94978c5"],
Cell[213833, 4245, 44633, 904, 415, "Output",ExpressionUUID->"5a6b7d40-7cfb-4fed-b095-9f89aed51998"]
}, Open  ]],
Cell[CellGroupData[{
Cell[258503, 5154, 819, 22, 94, "Input",ExpressionUUID->"7a29fbf3-9158-4cfa-9d16-3f736a0a030e"],
Cell[259325, 5178, 44695, 909, 415, "Output",ExpressionUUID->"544e0c2e-b40c-4e4e-8964-f74f663dfd85"]
}, Open  ]],
Cell[304035, 6090, 682, 12, 104, "Text",ExpressionUUID->"e6ee1d78-51a8-4188-95c3-ebe11720381a"]
}, Open  ]]
}, Open  ]]
}
]
*)

